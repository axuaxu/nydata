/*1.0*/
/*
    json2.js
    2012-10-08
    This is a reference implementation. You are free to copy, modify, or
    redistribute.
*/
/*jslint evil: true, regexp: true */
/*members "", "\b", "\t", "\n", "\f", "\r", "\"", JSON, "\\", apply,
    call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,
    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,
    lastIndex, length, parse, prototype, push, replace, slice, stringify,
    test, toJSON, toString, valueOf
*/
// Create a JSON object only if one does not already exist. We create the
// methods in a closure to avoid creating global variables.
if(typeof JSON!=="object"){JSON={}}(function(){"use strict";function f(e){return e<10?"0"+e:e}function quote(e){escapable.lastIndex=0;return escapable.test(e)?'"'+e.replace(escapable,function(e){var t=meta[e];return typeof t==="string"?t:"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+e+'"'}function str(e,t){var n,r,i,s,o=gap,u,a=t[e];if(a&&typeof a==="object"&&typeof a.toJSON==="function"){a=a.toJSON(e)}if(typeof rep==="function"){a=rep.call(t,e,a)}switch(typeof a){case"string":return quote(a);case"number":return isFinite(a)?String(a):"null";case"boolean":case"null":return String(a);case"object":if(!a){return"null"}gap+=indent;u=[];if(Object.prototype.toString.apply(a)==="[object Array]"){s=a.length;for(n=0;n<s;n+=1){u[n]=str(n,a)||"null"}i=u.length===0?"[]":gap?"[\n"+gap+u.join(",\n"+gap)+"\n"+o+"]":"["+u.join(",")+"]";gap=o;return i}if(rep&&typeof rep==="object"){s=rep.length;for(n=0;n<s;n+=1){if(typeof rep[n]==="string"){r=rep[n];i=str(r,a);if(i){u.push(quote(r)+(gap?": ":":")+i)}}}}else{for(r in a){if(Object.prototype.hasOwnProperty.call(a,r)){i=str(r,a);if(i){u.push(quote(r)+(gap?": ":":")+i)}}}}i=u.length===0?"{}":gap?"{\n"+gap+u.join(",\n"+gap)+"\n"+o+"}":"{"+u.join(",")+"}";gap=o;return i}}if(typeof Date.prototype.toJSON!=="function"){Date.prototype.toJSON=function(e){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(e){return this.valueOf()}}var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={"\b":"\\b","   ":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},rep;if(typeof JSON.stringify!=="function"){JSON.stringify=function(e,t,n){var r;gap="";indent="";if(typeof n==="number"){for(r=0;r<n;r+=1){indent+=" "}}else if(typeof n==="string"){indent=n}rep=t;if(t&&typeof t!=="function"&&(typeof t!=="object"||typeof t.length!=="number")){throw new Error("JSON.stringify")}return str("",{"":e})}}if(typeof JSON.parse!=="function"){JSON.parse=function(text,reviver){function walk(e,t){var n,r,i=e[t];if(i&&typeof i==="object"){for(n in i){if(Object.prototype.hasOwnProperty.call(i,n)){r=walk(i,n);if(r!==undefined){i[n]=r}else{delete i[n]}}}}return reviver.call(e,t,i)}var j;text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(e){return"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)})}if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,""))){j=eval("("+text+")");return typeof reviver==="function"?walk({"":j},""):j}throw new SyntaxError("JSON.parse")}}})()
;
/*1.0*/
/*! jQuery v1.7.2 jquery.com | jquery.org/license */

(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ck||(ck=c.createElement("iframe"),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?"<!doctype html>":"")+"<html><body>"),cl.close();d=cl.createElement(a),cl.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ck)}cj[a]=e}return cj[a]}function ct(a,b){var c={};f.each(cp.concat.apply([],cp.slice(0,b)),function(){c[this]=a});return c}function cs(){cq=b}function cr(){setTimeout(cs,0);return cq=f.now()}function ci(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ch(){try{return new a.XMLHttpRequest}catch(b){}}function cb(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function ca(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function b_(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bD.test(a)?d(a,e):b_(a+"["+(typeof e=="object"?b:"")+"]",e,c,d)});else if(!c&&f.type(b)==="object")for(var e in b)b_(a+"["+e+"]",b[e],c,d);else d(a,b)}function b$(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function bZ(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bS,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bZ(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=bZ(a,c,d,e,"*",g));return l}function bY(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bO),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=/^\+/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bB(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?1:0,g=4;if(d>0){if(c!=="border")for(;e<g;e+=2)c||(d-=parseFloat(f.css(a,"padding"+bx[e]))||0),c==="margin"?d+=parseFloat(f.css(a,c+bx[e]))||0:d-=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0;return d+"px"}d=by(a,b);if(d<0||d==null)d=a.style[b];if(bt.test(d))return d;d=parseFloat(d)||0;if(c)for(;e<g;e+=2)d+=parseFloat(f.css(a,"padding"+bx[e]))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+bx[e]+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+bx[e]))||0);return d+"px"}function bo(a){var b=c.createElement("div");bh.appendChild(b),b.innerHTML=a.outerHTML;return b.firstChild}function bn(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bm(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bm)}function bm(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bl(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bk(a,b){var c;b.nodeType===1&&(b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase(),c==="object"?b.outerHTML=a.outerHTML:c!=="input"||a.type!=="checkbox"&&a.type!=="radio"?c==="option"?b.selected=a.defaultSelected:c==="input"||c==="textarea"?b.defaultValue=a.defaultValue:c==="script"&&b.text!==a.text&&(b.text=a.text):(a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value)),b.removeAttribute(f.expando),b.removeAttribute("_submit_attached"),b.removeAttribute("_change_attached"))}function bj(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c,i[c][d])}h.data&&(h.data=f.extend({},h.data))}}function bi(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function U(a){var b=V.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function T(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(O.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function S(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function K(){return!0}function J(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?+d:j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(/\s+/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function J(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(J,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,n=/^[\],:{}\s]*$/,o=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,p=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,q=/(?:^|:|,)(?:\s*\[)+/g,r=/(webkit)[ \/]([\w.]+)/,s=/(opera)(?:.*version)?[ \/]([\w.]+)/,t=/(msie) ([\w.]+)/,u=/(mozilla)(?:.*? rv:([\w.]+))?/,v=/-([a-z]|[0-9])/ig,w=/^-ms-/,x=function(a,b){return(b+"").toUpperCase()},y=d.userAgent,z,A,B,C=Object.prototype.toString,D=Object.prototype.hasOwnProperty,E=Array.prototype.push,F=Array.prototype.slice,G=String.prototype.trim,H=Array.prototype.indexOf,I={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=m.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7.2",length:0,size:function(){return this.length},toArray:function(){return F.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?E.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),A.add(a);return this},eq:function(a){a=+a;return a===-1?this.slice(a):this.slice(a,a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(F.apply(this,arguments),"slice",F.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:E,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;A.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").off("ready")}},bindReady:function(){if(!A){A=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",B,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",B),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&J()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a!=null&&a==a.window},isNumeric:function(a){return!isNaN(parseFloat(a))&&isFinite(a)},type:function(a){return a==null?String(a):I[C.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!D.call(a,"constructor")&&!D.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||D.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw new Error(a)},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(n.test(b.replace(o,"@").replace(p,"]").replace(q,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){if(typeof c!="string"||!c)return null;var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(w,"ms-").replace(v,x)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:G?function(a){return a==null?"":G.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?E.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(H)return H.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=F.call(arguments,2),g=function(){return a.apply(c,f.concat(F.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h,i){var j,k=d==null,l=0,m=a.length;if(d&&typeof d=="object"){for(l in d)e.access(a,c,l,d[l],1,h,f);g=1}else if(f!==b){j=i===b&&e.isFunction(f),k&&(j?(j=c,c=function(a,b,c){return j.call(e(a),c)}):(c.call(a,f),c=null));if(c)for(;l<m;l++)c(a[l],d,j?f.call(a[l],l,c(a[l],d)):f,i);g=1}return g?a:k?c.call(a):m?c(a[0],d):h},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=r.exec(a)||s.exec(a)||t.exec(a)||a.indexOf("compatible")<0&&u.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){I["[object "+b+"]"]=b.toLowerCase()}),z=e.uaMatch(y),z.browser&&(e.browser[z.browser]=!0,e.browser.version=z.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?B=function(){c.removeEventListener("DOMContentLoaded",B,!1),e.ready()}:c.attachEvent&&(B=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",B),e.ready())});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m,n=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?n(g):h==="function"&&(!a.unique||!p.has(g))&&c.push(g)},o=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,j=!0,m=k||0,k=0,l=c.length;for(;c&&m<l;m++)if(c[m].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}j=!1,c&&(a.once?e===!0?p.disable():c=[]:d&&d.length&&(e=d.shift(),p.fireWith(e[0],e[1])))},p={add:function(){if(c){var a=c.length;n(arguments),j?l=c.length:e&&e!==!0&&(k=a,o(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){j&&f<=l&&(l--,f<=m&&m--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&p.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(j?a.once||d.push([b,c]):(!a.once||!e)&&o(b,c));return this},fire:function(){p.fireWith(this,arguments);return this},fired:function(){return!!i}};return p};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){i.done.apply(i,arguments).fail.apply(i,arguments);return this},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var b,d,e,g,h,i,j,k,l,m,n,o,p=c.createElement("div"),q=c.documentElement;p.setAttribute("className","t"),p.innerHTML="   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>",d=p.getElementsByTagName("*"),e=p.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=p.getElementsByTagName("input")[0],b={leadingWhitespace:p.firstChild.nodeType===3,tbody:!p.getElementsByTagName("tbody").length,htmlSerialize:!!p.getElementsByTagName("link").length,style:/top/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="/a",opacity:/^0.55/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:p.className!=="t",enctype:!!c.createElement("form").enctype,html5Clone:c.createElement("nav").cloneNode(!0).outerHTML!=="<:nav></:nav>",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,pixelMargin:!0},f.boxModel=b.boxModel=c.compatMode==="CSS1Compat",i.checked=!0,b.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,b.optDisabled=!h.disabled;try{delete p.test}catch(r){b.deleteExpando=!1}!p.addEventListener&&p.attachEvent&&p.fireEvent&&(p.attachEvent("onclick",function(){b.noCloneEvent=!1}),p.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),b.radioValue=i.value==="t",i.setAttribute("checked","checked"),i.setAttribute("name","t"),p.appendChild(i),j=c.createDocumentFragment(),j.appendChild(p.lastChild),b.checkClone=j.cloneNode(!0).cloneNode(!0).lastChild.checked,b.appendChecked=i.checked,j.removeChild(i),j.appendChild(p);if(p.attachEvent)for(n in{submit:1,change:1,focusin:1})m="on"+n,o=m in p,o||(p.setAttribute(m,"return;"),o=typeof p[m]=="function"),b[n+"Bubbles"]=o;j.removeChild(p),j=g=h=p=i=null,f(function(){var d,e,g,h,i,j,l,m,n,q,r,s,t,u=c.getElementsByTagName("body")[0];!u||(m=1,t="padding:0;margin:0;border:",r="position:absolute;top:0;left:0;width:1px;height:1px;",s=t+"0;visibility:hidden;",n="style='"+r+t+"5px solid #000;",q="<div "+n+"display:block;'><div style='"+t+"0;display:block;overflow:hidden;'></div></div>"+"<table "+n+"' cellpadding='0' cellspacing='0'>"+"<tr><td></td></tr></table>",d=c.createElement("div"),d.style.cssText=s+"width:0;height:0;position:static;top:0;margin-top:"+m+"px",u.insertBefore(d,u.firstChild),p=c.createElement("div"),d.appendChild(p),p.innerHTML="<table><tr><td style='"+t+"0;display:none'></td><td>t</td></tr></table>",k=p.getElementsByTagName("td"),o=k[0].offsetHeight===0,k[0].style.display="",k[1].style.display="none",b.reliableHiddenOffsets=o&&k[0].offsetHeight===0,a.getComputedStyle&&(p.innerHTML="",l=c.createElement("div"),l.style.width="0",l.style.marginRight="0",p.style.width="2px",p.appendChild(l),b.reliableMarginRight=(parseInt((a.getComputedStyle(l,null)||{marginRight:0}).marginRight,10)||0)===0),typeof p.style.zoom!="undefined"&&(p.innerHTML="",p.style.width=p.style.padding="1px",p.style.border=0,p.style.overflow="hidden",p.style.display="inline",p.style.zoom=1,b.inlineBlockNeedsLayout=p.offsetWidth===3,p.style.display="block",p.style.overflow="visible",p.innerHTML="<div style='width:5px;'></div>",b.shrinkWrapBlocks=p.offsetWidth!==3),p.style.cssText=r+s,p.innerHTML=q,e=p.firstChild,g=e.firstChild,i=e.nextSibling.firstChild.firstChild,j={doesNotAddBorder:g.offsetTop!==5,doesAddBorderForTableAndCells:i.offsetTop===5},g.style.position="fixed",g.style.top="20px",j.fixedPosition=g.offsetTop===20||g.offsetTop===15,g.style.position=g.style.top="",e.style.overflow="hidden",e.style.position="relative",j.subtractsBorderForOverflowNotVisible=g.offsetTop===-5,j.doesNotIncludeMarginInBodyOffset=u.offsetTop!==m,a.getComputedStyle&&(p.style.marginTop="1%",b.pixelMargin=(a.getComputedStyle(p,null)||{marginTop:0}).marginTop!=="1%"),typeof d.style.zoom!="undefined"&&(d.style.zoom=1),u.removeChild(d),l=p=d=null,f.extend(b,j))});return b}();var j=/^(?:\{.*\}|\[.*\])$/,k=/([A-Z])/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[j]:a[j]&&j,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[j]=n=++f.uuid:n=j),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[h]:h;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)||(b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" ")));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[h]:a.removeAttribute?a.removeAttribute(h):a[h]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h,i,j=this[0],k=0,m=null;if(a===b){if(this.length){m=f.data(j);if(j.nodeType===1&&!f._data(j,"parsedAttrs")){g=j.attributes;for(i=g.length;k<i;k++)h=g[k].name,h.indexOf("data-")===0&&(h=f.camelCase(h.substring(5)),l(j,h,m[h]));f._data(j,"parsedAttrs",!0)}}return m}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split(".",2),d[1]=d[1]?"."+d[1]:"",e=d[1]+"!";return f.access(this,function(c){if(c===b){m=this.triggerHandler("getData"+e,[d[0]]),m===b&&j&&(m=f.data(j,a),m=l(j,a,m));return m===b&&d[1]?this.data(d[0]):m}d[1]=c,this.each(function(){var b=f(this);b.triggerHandler("setData"+e,d),f.data(this,a,c),b.triggerHandler("changeData"+e,d)})},null,c,arguments.length>1,null,!1)},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){var d=2;typeof a!="string"&&(c=a,a="fx",d--);if(arguments.length<d)return f.queue(this[0],a);return c===b?this:this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise(c)}});var o=/[\n\t\r]/g,p=/\s+/,q=/\r/g,r=/^(?:button|input)$/i,s=/^(?:button|input|object|select|textarea)$/i,t=/^a(?:rea)?$/i,u=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,f.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,f.prop,a,b,arguments.length>1)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];{if(!!arguments.length){e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.type]||f.valHooks[this.nodeName.toLowerCase()];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}if(g){c=f.valHooks[g.type]||f.valHooks[g.nodeName.toLowerCase()];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}}}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!!a&&j!==3&&j!==8&&j!==2){if(e&&c in f.attrFn)return f(a)[c](d);if(typeof a.getAttribute=="undefined")return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g}},removeAttr:function(a,b){var c,d,e,g,h,i=0;if(b&&a.nodeType===1){d=b.toLowerCase().split(p),g=d.length;for(;i<g;i++)e=d[i],e&&(c=f.propFix[e]||e,h=u.test(e),h||f.attr(a,e,""),a.removeAttribute(v?e:c),h&&c in a&&(a[c]=!1))}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!!a&&i!==3&&i!==8&&i!==2){h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]}},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0,coords:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=/^(?:textarea|input|select)$/i,A=/^([^\.]*)?(?:\.(.+))?$/,B=/(?:^|\s)hover(\.\S+)?\b/,C=/^key/,D=/^(?:mouse|contextmenu)|click/,E=/^(?:focusinfocus|focusoutblur)$/,F=/^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,G=function(
a){var b=F.exec(a);b&&(b[1]=(b[1]||"").toLowerCase(),b[3]=b[3]&&new RegExp("(?:^|\\s)"+b[3]+"(?:\\s|$)"));return b},H=function(a,b){var c=a.attributes||{};return(!b[1]||a.nodeName.toLowerCase()===b[1])&&(!b[2]||(c.id||{}).value===b[2])&&(!b[3]||b[3].test((c["class"]||{}).value))},I=function(a){return f.event.special.hover?a:a.replace(B,"mouseenter$1 mouseleave$1")};f.event={add:function(a,c,d,e,g){var h,i,j,k,l,m,n,o,p,q,r,s;if(!(a.nodeType===3||a.nodeType===8||!c||!d||!(h=f._data(a)))){d.handler&&(p=d,d=p.handler,g=p.selector),d.guid||(d.guid=f.guid++),j=h.events,j||(h.events=j={}),i=h.handle,i||(h.handle=i=function(a){return typeof f!="undefined"&&(!a||f.event.triggered!==a.type)?f.event.dispatch.apply(i.elem,arguments):b},i.elem=a),c=f.trim(I(c)).split(" ");for(k=0;k<c.length;k++){l=A.exec(c[k])||[],m=l[1],n=(l[2]||"").split(".").sort(),s=f.event.special[m]||{},m=(g?s.delegateType:s.bindType)||m,s=f.event.special[m]||{},o=f.extend({type:m,origType:l[1],data:e,handler:d,guid:d.guid,selector:g,quick:g&&G(g),namespace:n.join(".")},p),r=j[m];if(!r){r=j[m]=[],r.delegateCount=0;if(!s.setup||s.setup.call(a,e,n,i)===!1)a.addEventListener?a.addEventListener(m,i,!1):a.attachEvent&&a.attachEvent("on"+m,i)}s.add&&(s.add.call(a,o),o.handler.guid||(o.handler.guid=d.guid)),g?r.splice(r.delegateCount++,0,o):r.push(o),f.event.global[m]=!0}a=null}},global:{},remove:function(a,b,c,d,e){var g=f.hasData(a)&&f._data(a),h,i,j,k,l,m,n,o,p,q,r,s;if(!!g&&!!(o=g.events)){b=f.trim(I(b||"")).split(" ");for(h=0;h<b.length;h++){i=A.exec(b[h])||[],j=k=i[1],l=i[2];if(!j){for(j in o)f.event.remove(a,j+b[h],c,d,!0);continue}p=f.event.special[j]||{},j=(d?p.delegateType:p.bindType)||j,r=o[j]||[],m=r.length,l=l?new RegExp("(^|\\.)"+l.split(".").sort().join("\\.(?:.*\\.)?")+"(\\.|$)"):null;for(n=0;n<r.length;n++)s=r[n],(e||k===s.origType)&&(!c||c.guid===s.guid)&&(!l||l.test(s.namespace))&&(!d||d===s.selector||d==="**"&&s.selector)&&(r.splice(n--,1),s.selector&&r.delegateCount--,p.remove&&p.remove.call(a,s));r.length===0&&m!==r.length&&((!p.teardown||p.teardown.call(a,l)===!1)&&f.removeEvent(a,j,g.handle),delete o[j])}f.isEmptyObject(o)&&(q=g.handle,q&&(q.elem=null),f.removeData(a,["events","handle"],!0))}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){if(!e||e.nodeType!==3&&e.nodeType!==8){var h=c.type||c,i=[],j,k,l,m,n,o,p,q,r,s;if(E.test(h+f.event.triggered))return;h.indexOf("!")>=0&&(h=h.slice(0,-1),k=!0),h.indexOf(".")>=0&&(i=h.split("."),h=i.shift(),i.sort());if((!e||f.event.customEvent[h])&&!f.event.global[h])return;c=typeof c=="object"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.isTrigger=!0,c.exclusive=k,c.namespace=i.join("."),c.namespace_re=c.namespace?new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)"):null,o=h.indexOf(":")<0?"on"+h:"";if(!e){j=f.cache;for(l in j)j[l].events&&j[l].events[h]&&f.event.trigger(c,d,j[l].handle.elem,!0);return}c.result=b,c.target||(c.target=e),d=d!=null?f.makeArray(d):[],d.unshift(c),p=f.event.special[h]||{};if(p.trigger&&p.trigger.apply(e,d)===!1)return;r=[[e,p.bindType||h]];if(!g&&!p.noBubble&&!f.isWindow(e)){s=p.delegateType||h,m=E.test(s+h)?e:e.parentNode,n=null;for(;m;m=m.parentNode)r.push([m,s]),n=m;n&&n===e.ownerDocument&&r.push([n.defaultView||n.parentWindow||a,s])}for(l=0;l<r.length&&!c.isPropagationStopped();l++)m=r[l][0],c.type=r[l][1],q=(f._data(m,"events")||{})[c.type]&&f._data(m,"handle"),q&&q.apply(m,d),q=o&&m[o],q&&f.acceptData(m)&&q.apply(m,d)===!1&&c.preventDefault();c.type=h,!g&&!c.isDefaultPrevented()&&(!p._default||p._default.apply(e.ownerDocument,d)===!1)&&(h!=="click"||!f.nodeName(e,"a"))&&f.acceptData(e)&&o&&e[h]&&(h!=="focus"&&h!=="blur"||c.target.offsetWidth!==0)&&!f.isWindow(e)&&(n=e[o],n&&(e[o]=null),f.event.triggered=h,e[h](),f.event.triggered=b,n&&(e[o]=n));return c.result}},dispatch:function(c){c=f.event.fix(c||a.event);var d=(f._data(this,"events")||{})[c.type]||[],e=d.delegateCount,g=[].slice.call(arguments,0),h=!c.exclusive&&!c.namespace,i=f.event.special[c.type]||{},j=[],k,l,m,n,o,p,q,r,s,t,u;g[0]=c,c.delegateTarget=this;if(!i.preDispatch||i.preDispatch.call(this,c)!==!1){if(e&&(!c.button||c.type!=="click")){n=f(this),n.context=this.ownerDocument||this;for(m=c.target;m!=this;m=m.parentNode||this)if(m.disabled!==!0){p={},r=[],n[0]=m;for(k=0;k<e;k++)s=d[k],t=s.selector,p[t]===b&&(p[t]=s.quick?H(m,s.quick):n.is(t)),p[t]&&r.push(s);r.length&&j.push({elem:m,matches:r})}}d.length>e&&j.push({elem:this,matches:d.slice(e)});for(k=0;k<j.length&&!c.isPropagationStopped();k++){q=j[k],c.currentTarget=q.elem;for(l=0;l<q.matches.length&&!c.isImmediatePropagationStopped();l++){s=q.matches[l];if(h||!c.namespace&&!s.namespace||c.namespace_re&&c.namespace_re.test(s.namespace))c.data=s.data,c.handleObj=s,o=((f.event.special[s.origType]||{}).handle||s.handler).apply(q.elem,g),o!==b&&(c.result=o,o===!1&&(c.preventDefault(),c.stopPropagation()))}}i.postDispatch&&i.postDispatch.call(this,c);return c.result}},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode);return a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,d){var e,f,g,h=d.button,i=d.fromElement;a.pageX==null&&d.clientX!=null&&(e=a.target.ownerDocument||c,f=e.documentElement,g=e.body,a.pageX=d.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=d.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?d.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0);return a}},fix:function(a){if(a[f.expando])return a;var d,e,g=a,h=f.event.fixHooks[a.type]||{},i=h.props?this.props.concat(h.props):this.props;a=f.Event(g);for(d=i.length;d;)e=i[--d],a[e]=g[e];a.target||(a.target=g.srcElement||c),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey===b&&(a.metaKey=a.ctrlKey);return h.filter?h.filter(a,g):a},special:{ready:{setup:f.bindReady},load:{noBubble:!0},focus:{delegateType:"focusin"},blur:{delegateType:"focusout"},beforeunload:{setup:function(a,b,c){f.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=f.extend(new f.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?f.event.trigger(e,null,b):f.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},f.event.handle=f.event.dispatch,f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!(this instanceof f.Event))return new f.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?K:J):this.type=a,b&&f.extend(this,b),this.timeStamp=a&&a.timeStamp||f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=K;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=K;var a=this.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=K,this.stopPropagation()},isDefaultPrevented:J,isPropagationStopped:J,isImmediatePropagationStopped:J},f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c=this,d=a.relatedTarget,e=a.handleObj,g=e.selector,h;if(!d||d!==c&&!f.contains(c,d))a.type=e.origType,h=e.handler.apply(this,arguments),a.type=b;return h}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(){if(f.nodeName(this,"form"))return!1;f.event.add(this,"click._submit keypress._submit",function(a){var c=a.target,d=f.nodeName(c,"input")||f.nodeName(c,"button")?c.form:b;d&&!d._submit_attached&&(f.event.add(d,"submit._submit",function(a){a._submit_bubble=!0}),d._submit_attached=!0)})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&f.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){if(f.nodeName(this,"form"))return!1;f.event.remove(this,"._submit")}}),f.support.changeBubbles||(f.event.special.change={setup:function(){if(z.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")f.event.add(this,"propertychange._change",function(a){a.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),f.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1,f.event.simulate("change",this,a,!0))});return!1}f.event.add(this,"beforeactivate._change",function(a){var b=a.target;z.test(b.nodeName)&&!b._change_attached&&(f.event.add(b,"change._change",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&f.event.simulate("change",this.parentNode,a,!0)}),b._change_attached=!0)})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!=="radio"&&b.type!=="checkbox")return a.handleObj.handler.apply(this,arguments)},teardown:function(){f.event.remove(this,"._change");return z.test(this.nodeName)}}),f.support.focusinBubbles||f.each({focus:"focusin",blur:"focusout"},function(a,b){var d=0,e=function(a){f.event.simulate(b,a.target,f.event.fix(a),!0)};f.event.special[b]={setup:function(){d++===0&&c.addEventListener(a,e,!0)},teardown:function(){--d===0&&c.removeEventListener(a,e,!0)}}}),f.fn.extend({on:function(a,c,d,e,g){var h,i;if(typeof a=="object"){typeof c!="string"&&(d=d||c,c=b);for(i in a)this.on(i,c,d,a[i],g);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c=="string"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=J;else if(!e)return this;g===1&&(h=e,e=function(a){f().off(a);return h.apply(this,arguments)},e.guid=h.guid||(h.guid=f.guid++));return this.each(function(){f.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,c,d){if(a&&a.preventDefault&&a.handleObj){var e=a.handleObj;f(a.delegateTarget).off(e.namespace?e.origType+"."+e.namespace:e.origType,e.selector,e.handler);return this}if(typeof a=="object"){for(var g in a)this.off(g,c,a[g]);return this}if(c===!1||typeof c=="function")d=c,c=b;d===!1&&(d=J);return this.each(function(){f.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){f(this.context).on(a,this.selector,b,c);return this},die:function(a,b){f(this.context).off(a,this.selector||"**",b);return this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length==1?this.off(a,"**"):this.off(b,a,c)},trigger:function(a,b){return this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var e=(f._data(this,"lastToggle"+a.guid)||0)%d;f._data(this,"lastToggle"+a.guid,e+1),c.preventDefault();return b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){f.fn[b]=function(a,c){c==null&&(c=a,a=null);return arguments.length>0?this.on(b,null,a,c):this.trigger(b)},f.attrFn&&(f.attrFn[b]=!0),C.test(b)&&(f.event.fixHooks[b]=f.event.keyHooks),D.test(b)&&(f.event.fixHooks[b]=f.event.mouseHooks)}),function(){function x(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}if(j.nodeType===1){g||(j[d]=c,j.sizset=h);if(typeof b!="string"){if(j===b){k=!0;break}}else if(m.filter(b,[j]).length>0){k=j;break}}j=j[a]}e[h]=k}}}function w(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}j.nodeType===1&&!g&&(j[d]=c,j.sizset=h);if(j.nodeName.toLowerCase()===b){k=j;break}j=j[a]}e[h]=k}}}var a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d="sizcache"+(Math.random()+"").replace(".",""),e=0,g=Object.prototype.toString,h=!1,i=!0,j=/\\/g,k=/\r\n/g,l=/\W/;[0,0].sort(function(){i=!1;return 0});var m=function(b,d,e,f){e=e||[],d=d||c;var h=d;if(d.nodeType!==1&&d.nodeType!==9)return[];if(!b||typeof b!="string")return e;var i,j,k,l,n,q,r,t,u=!0,v=m.isXML(d),w=[],x=b;do{a.exec(""),i=a.exec(x);if(i){x=i[3],w.push(i[1]);if(i[2]){l=i[3];break}}}while(i);if(w.length>1&&p.exec(b))if(w.length===2&&o.relative[w[0]])j=y(w[0]+w[1],d,f);else{j=o.relative[w[0]]?[d]:m(w.shift(),d);while(w.length)b=w.shift(),o.relative[b]&&(b+=w.shift()),j=y(b,j,f)}else{!f&&w.length>1&&d.nodeType===9&&!v&&o.match.ID.test(w[0])&&!o.match.ID.test(w[w.length-1])&&(n=m.find(w.shift(),d,v),d=n.expr?m.filter(n.expr,n.set)[0]:n.set[0]);if(d){n=f?{expr:w.pop(),set:s(f)}:m.find(w.pop(),w.length===1&&(w[0]==="~"||w[0]==="+")&&d.parentNode?d.parentNode:d,v),j=n.expr?m.filter(n.expr,n.set):n.set,w.length>0?k=s(j):u=!1;while(w.length)q=w.pop(),r=q,o.relative[q]?r=w.pop():q="",r==null&&(r=d),o.relative[q](k,r,v)}else k=w=[]}k||(k=j),k||m.error(q||b);if(g.call(k)==="[object Array]")if(!u)e.push.apply(e,k);else if(d&&d.nodeType===1)for(t=0;k[t]!=null;t++)k[t]&&(k[t]===!0||k[t].nodeType===1&&m.contains(d,k[t]))&&e.push(j[t]);else for(t=0;k[t]!=null;t++)k[t]&&k[t].nodeType===1&&e.push(j[t]);else s(k,e);l&&(m(l,h,e,f),m.uniqueSort(e));return e};m.uniqueSort=function(a){if(u){h=i,a.sort(u);if(h)for(var b=1;b<a.length;b++)a[b]===a[b-1]&&a.splice(b--,1)}return a},m.matches=function(a,b){return m(a,null,null,b)},m.matchesSelector=function(a,b){return m(b,null,null,[a]).length>0},m.find=function(a,b,c){var d,e,f,g,h,i;if(!a)return[];for(e=0,f=o.order.length;e<f;e++){h=o.order[e];if(g=o.leftMatch[h].exec(a)){i=g[1],g.splice(1,1);if(i.substr(i.length-1)!=="\\"){g[1]=(g[1]||"").replace(j,""),d=o.find[h](g,b,c);if(d!=null){a=a.replace(o.match[h],"");break}}}}d||(d=typeof b.getElementsByTagName!="undefined"?b.getElementsByTagName("*"):[]);return{set:d,expr:a}},m.filter=function(a,c,d,e){var f,g,h,i,j,k,l,n,p,q=a,r=[],s=c,t=c&&c[0]&&m.isXML(c[0]);while(a&&c.length){for(h in o.filter)if((f=o.leftMatch[h].exec(a))!=null&&f[2]){k=o.filter[h],l=f[1],g=!1,f.splice(1,1);if(l.substr(l.length-1)==="\\")continue;s===r&&(r=[]);if(o.preFilter[h]){f=o.preFilter[h](f,s,d,r,e,t);if(!f)g=i=!0;else if(f===!0)continue}if(f)for(n=0;(j=s[n])!=null;n++)j&&(i=k(j,f,n,s),p=e^i,d&&i!=null?p?g=!0:s[n]=!1:p&&(r.push(j),g=!0));if(i!==b){d||(s=r),a=a.replace(o.match[h],"");if(!g)return[];break}}if(a===q)if(g==null)m.error(a);else break;q=a}return s},m.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)};var n=m.getText=function(a){var b,c,d=a.nodeType,e="";if(d){if(d===1||d===9||d===11){if(typeof a.textContent=="string")return a.textContent;if(typeof a.innerText=="string")return a.innerText.replace(k,"");for(a=a.firstChild;a;a=a.nextSibling)e+=n(a)}else if(d===3||d===4)return a.nodeValue}else for(b=0;c=a[b];b++)c.nodeType!==8&&(e+=n(c));return e},o=m.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c=typeof b=="string",d=c&&!l.test(b),e=c&&!d;d&&(b=b.toLowerCase());for(var f=0,g=a.length,h;f<g;f++)if(h=a[f]){while((h=h.previousSibling)&&h.nodeType!==1);a[f]=e||h&&h.nodeName.toLowerCase()===b?h||!1:h===b}e&&m.filter(b,a,!0)},">":function(a,b){var c,d=typeof b=="string",e=0,f=a.length;if(d&&!l.test(b)){b=b.toLowerCase();for(;e<f;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e<f;e++)c=a[e],c&&(a[e]=d?c.parentNode:c.parentNode===b);d&&m.filter(b,a,!0)}},"":function(a,b,c){var d,f=e++,g=x;typeof b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("parentNode",b,f,a,d,c)},"~":function(a,b,c){var d,f=e++,g=x;typeof b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("previousSibling",b,f,a,d,c)}},find:{ID:function(a,b,c){if(typeof b.getElementById!="undefined"&&!c){var d=b.getElementById(a[1]);return d&&d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!="undefined"){var c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e<f;e++)d[e].getAttribute("name")===a[1]&&c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof b.getElementsByTagName!="undefined")return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=" "+a[1].replace(j,"")+" ";if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&&(e^(h.className&&(" "+h.className+" ").replace(/[\t\n\r]/g," ").indexOf(a)>=0)?c||d.push(h):c&&(b[g]=!1));return!1},ID:function(a){return a[1].replace(j,"")},TAG:function(a,b){return a[1].replace(j,"").toLowerCase()},CHILD:function(a){if(a[1]==="nth"){a[2]||m.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]==="even"&&"2n"||a[2]==="odd"&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&&m.error(a[0]);a[0]=e++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(j,"");!f&&o.attrMap[g]&&(a[1]=o.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(j,""),a[2]==="~="&&(a[4]=" "+a[4]+" ");return a},PSEUDO:function(b,c,d,e,f){if(b[1]==="not")if((a.exec(b[3])||"").length>1||/^\w/.test(b[3]))b[3]=m(b[3],null,null,c);else{var g=m.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(o.match.POS.test(b[0])||o.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&&a.type!=="hidden"},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!m(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),c=a.type;return a.nodeName.toLowerCase()==="input"&&"text"===c&&(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()==="input"&&"radio"===a.type},checkbox:function(a){return a.nodeName.toLowerCase()==="input"&&"checkbox"===a.type},file:function(a){return a.nodeName.toLowerCase()==="input"&&"file"===a.type},password:function(a){return a.nodeName.toLowerCase()==="input"&&"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"submit"===a.type},image:function(a){return a.nodeName.toLowerCase()==="input"&&"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&"button"===a.type||b==="button"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b<c[3]-0},gt:function(a,b,c){return b>c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=o.filters[e];if(f)return f(a,c,b,d);if(e==="contains")return(a.textContent||a.innerText||n([a])||"").indexOf(b[3])>=0;if(e==="not"){var g=b[3];for(var h=0,i=g.length;h<i;h++)if(g[h]===a)return!1;return!0}m.error(e)},CHILD:function(a,b){var c,e,f,g,h,i,j,k=b[1],l=a;switch(k){case"only":case"first":while(l=l.previousSibling)if(l.nodeType===1)return!1;if(k==="first")return!0;l=a;case"last":while(l=l.nextSibling)if(l.nodeType===1)return!1;return!0;case"nth":c=b[2],e=b[3];if(c===1&&e===0)return!0;f=b[0],g=a.parentNode;if(g&&(g[d]!==f||!a.nodeIndex)){i=0;for(l=g.firstChild;l;l=l.nextSibling)l.nodeType===1&&(l.nodeIndex=++i);g[d]=f}j=a.nodeIndex-e;return c===0?j===0:j%c===0&&j/c>=0}},ID:function(a,b){return a.nodeType===1&&a.getAttribute("id")===b},TAG:function(a,b){return b==="*"&&a.nodeType===1||!!a.nodeName&&a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)>-1},ATTR:function(a,b){var c=b[1],d=m.attr?m.attr(a,c):o.attrHandle[c]?o.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return d==null?f==="!=":!f&&m.attr?d!=null:f==="="?e===g:f==="*="?e.indexOf(g)>=0:f==="~="?(" "+e+" ").indexOf(g)>=0:g?f==="!="?e!==g:f==="^="?e.indexOf(g)===0:f==="$="?e.substr(e.length-g.length)===g:f==="|="?e===g||e.substr(0,g.length+1)===g+"-":!1:e&&d!==!1},POS:function(a,b,c,d){var e=b[2],f=o.setFilters[e];if(f)return f(a,c,b,d)}}},p=o.match.POS,q=function(a,b){return"\\"+(b-0+1)};for(var r in o.match)o.match[r]=new RegExp(o.match[r].source+/(?![^\[]*\])(?![^\(]*\))/.source),o.leftMatch[r]=new RegExp(/(^(?:.|\r|\n)*?)/.source+o.match[r].source.replace(/\\(\d+)/g,q));o.match.globalPOS=p;var s=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(t){s=function(a,b){var c=0,d=b||[];if(g.call(a)==="[object Array]")Array.prototype.push.apply(d,a);else if(typeof a.length=="number")for(var e=a.length;c<e;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var u,v;c.documentElement.compareDocumentPosition?u=function(a,b){if(a===b){h=!0;return 0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return a.compareDocumentPosition(b)&4?-1:1}:(u=function(a,b){if(a===b){h=!0;return 0}if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,i=b.parentNode,j=g;if(g===i)return v(a,b);if(!g)return-1;if(!i)return 1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k<c&&k<d;k++)if(e[k]!==f[k])return v(e[k],f[k]);return k===c?v(a,f[k],-1):v(e[k],b,1)},v=function(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),function(){var a=c.createElement("div"),d="script"+(new Date).getTime(),e=c.documentElement;a.innerHTML="<a name='"+d+"'/>",e.insertBefore(a,e.firstChild),c.getElementById(d)&&(o.find.ID=function(a,c,d){if(typeof c.getElementById!="undefined"&&!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!="undefined"&&e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},o.filter.ID=function(a,b){var c=typeof a.getAttributeNode!="undefined"&&a.getAttributeNode("id");return a.nodeType===1&&c&&c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement("div");a.appendChild(c.createComment("")),a.getElementsByTagName("*").length>0&&(o.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]==="*"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&&d.push(c[e]);c=d}return c}),a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!="undefined"&&a.firstChild.getAttribute("href")!=="#"&&(o.attrHandle.href=function(a){return a.getAttribute("href",2)}),a=null}(),c.querySelectorAll&&function(){var a=m,b=c.createElement("div"),d="__sizzle__";b.innerHTML="<p class='TEST'></p>";if(!b.querySelectorAll||b.querySelectorAll(".TEST").length!==0){m=function(b,e,f,g){e=e||c;if(!g&&!m.isXML(e)){var h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&&(e.nodeType===1||e.nodeType===9)){if(h[1])return s(e.getElementsByTagName(b),f);if(h[2]&&o.find.CLASS&&e.getElementsByClassName)return s(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b==="body"&&e.body)return s([e.body],f);if(h&&h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return s([],f);if(i.id===h[3])return s([i],f)}try{return s(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&&e.nodeName.toLowerCase()!=="object"){var k=e,l=e.getAttribute("id"),n=l||d,p=e.parentNode,q=/^\s*[+~]/.test(b);l?n=n.replace(/'/g,"\\$&"):e.setAttribute("id",n),q&&p&&(e=e.parentNode);try{if(!q||p)return s(e.querySelectorAll("[id='"+n+"'] "+b),f)}catch(r){}finally{l||k.removeAttribute("id")}}}return a(b,e,f,g)};for(var e in a)m[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement("div"),"div"),e=!1;try{b.call(c.documentElement,"[test!='']:sizzle")}catch(f){e=!0}m.matchesSelector=function(a,c){c=c.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!m.isXML(a))try{if(e||!o.match.PSEUDO.test(c)&&!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&&a.document.nodeType!==11)return f}}catch(g){}return m(c,null,null,[a]).length>0}}}(),function(){var a=c.createElement("div");a.innerHTML="<div class='test e'></div><div class='test'></div>";if(!!a.getElementsByClassName&&a.getElementsByClassName("e").length!==0){a.lastChild.className="e";if(a.getElementsByClassName("e").length===1)return;o.order.splice(1,0,"CLASS"),o.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!="undefined"&&!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?m.contains=function(a,b){return a!==b&&(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?m.contains=function(a,b){return!!(a.compareDocumentPosition(b)&16)}:m.contains=function(){return!1},m.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!=="HTML":!1};var y=function(a,b,c){var d,e=[],f="",g=b.nodeType?[b]:b;while(d=o.match.PSEUDO.exec(a))f+=d[0],a=a.replace(o.match.PSEUDO,"");a=o.relative[a]?a+"*":a;for(var h=0,i=g.length;h<i;h++)m(a,g[h],e,c);return m.filter(f,e)};m.attr=f.attr,m.selectors.attrMap={},f.find=m,f.expr=m.selectors,f.expr[":"]=f.expr.filters,f.unique=m.uniqueSort,f.text=m.getText,f.isXMLDoc=m.isXML,f.contains=m.contains}();var L=/Until$/,M=/^(?:parents|prevUntil|prevAll)/,N=/,/,O=/^.[^:#\[\.,]*$/,P=Array.prototype.slice,Q=f.expr.match.globalPOS,R={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var b=this,c,d;if(typeof a!="string")return f(a).filter(function(){for(c=0,d=b.length;c<d;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack("","find",a),g,h,i;for(c=0,d=this.length;c<d;c++){g=e.length,f.find(a,this[c],e);if(c>0)for(h=g;h<e.length;h++)for(i=0;i<g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var a=0,c=b.length;a<c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(T(this,a,!1),"not",a)},filter:function(a){return this.pushStack(T(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?Q.test(a)?f(a,this.context).index(this[0])>=0:f.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h=1;while(g&&g.ownerDocument&&g!==b){for(d=0;d<a.length;d++)f(g).is(a[d])&&c.push({selector:a[d],elem:g,level:h});g=g.parentNode,h++}return c}var i=Q.test(a)||typeof a!="string"?f(a,b||this.context):0;for(d=0,e=this.length;d<e;d++){g=this[d];while(g){if(i?i.index(g)>-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length>1?f.unique(c):c;return this.pushStack(c,"closest",a)},index:function(a){if(!a)return this[0]&&this[0].parentNode?this.prevAll().length:-1;if(typeof a=="string")return f.inArray(this[0],f(a));return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a=="string"?f(a,b):f.makeArray(a&&a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(S(c[0])||S(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return f.dir(a,"parentNode",c)},next:function(a){return f.nth(a,2,"nextSibling")},prev:function(a){return f.nth(a,2,"previousSibling")},nextAll:function(a){return f.dir(a,"nextSibling")},prevAll:function(a){return f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return f.dir(a,"previousSibling",c)},siblings:function(a){return f.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c);L.test(a)||(d=c),d&&typeof d=="string"&&(e=f.filter(d,e)),e=this.length>1&&!R[a]?f.unique(e):e,(this.length>1||N.test(d))&&M.test(a)&&(e=e.reverse());return this.pushStack(e,a,P.call(arguments).join(","))}}),f.extend({filter:function(a,b,c){c&&(a=":not("+a+")");return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&&g.nodeType!==9&&(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&&e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&&++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var V="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",W=/ jQuery\d+="(?:\d+|null)"/g,X=/^\s+/,Y=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,Z=/<([\w:]+)/,$=/<tbody/i,_=/<|&#?\w+;/,ba=/<(?:script|style)/i,bb=/<(?:script|object|embed|option|style)/i,bc=new RegExp("<(?:"+V+")[\\s/>]","i"),bd=/checked\s*(?:[^=]|=\s*.checked.)/i,be=/\/(java|ecma)script/i,bf=/^\s*<!(?:\[CDATA\[|\-\-)/,bg={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},bh=U(c);bg.optgroup=bg.option,bg.tbody=bg.tfoot=bg.colgroup=bg.caption=bg.thead,bg.th=bg.td,f.support.htmlSerialize||(bg._default=[1,"div<div>","</div>"]),f.fn.extend({text:function(a){return f.access(this,function(a){return a===b?f.text(this):this.empty().append((this[0]&&this[0].ownerDocument||c).createTextNode(a))},null,a,arguments.length)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=f.isFunction(a);return this.each(function(c){f(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f
.clean(arguments);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,f.clean(arguments));return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&&d.nodeType===1&&(f.cleanData(d.getElementsByTagName("*")),f.cleanData([d])),d.parentNode&&d.parentNode.removeChild(d);return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&&f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){return f.access(this,function(a){var c=this[0]||{},d=0,e=this.length;if(a===b)return c.nodeType===1?c.innerHTML.replace(W,""):null;if(typeof a=="string"&&!ba.test(a)&&(f.support.leadingWhitespace||!X.test(a))&&!bg[(Z.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Y,"<$1></$2>");try{for(;d<e;d++)c=this[d]||{},c.nodeType===1&&(f.cleanData(c.getElementsByTagName("*")),c.innerHTML=a);c=0}catch(g){}}c&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!="string"&&(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&&arguments.length===3&&typeof j=="string"&&bd.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&&j.parentNode,f.support.parentNode&&i&&i.nodeType===11&&i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&&f.nodeName(g,"tr");for(var l=0,m=this.length,n=m-1;l<m;l++)d.call(c?bi(this[l],g):this[l],e.cacheable||m>1&&l<n?f.clone(h,!0,!0):h)}k.length&&f.each(k,function(a,b){b.src?f.ajax({type:"GET",global:!1,url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(bf,"/*$0*/")),b.parentNode&&b.parentNode.removeChild(b)})}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i,j=a[0];b&&b[0]&&(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&&typeof j=="string"&&j.length<512&&i===c&&j.charAt(0)==="<"&&!bb.test(j)&&(f.support.checkClone||!bd.test(j))&&(f.support.html5Clone||!bc.test(j))&&(g=!0,h=f.fragments[j],h&&h!==1&&(e=h)),e||(e=i.createDocumentFragment(),f.clean(a,i,e,d)),g&&(f.fragments[j]=h?e:1);return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&&this[0].parentNode;if(g&&g.nodeType===11&&g.childNodes.length===1&&e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h<i;h++){var j=(h>0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d,e,g,h=f.support.html5Clone||f.isXMLDoc(a)||!bc.test("<"+a.nodeName+">")?a.cloneNode(!0):bo(a);if((!f.support.noCloneEvent||!f.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!f.isXMLDoc(a)){bk(a,h),d=bl(a),e=bl(h);for(g=0;d[g];++g)e[g]&&bk(d[g],e[g])}if(b){bj(a,h);if(c){d=bl(a),e=bl(h);for(g=0;d[g];++g)bj(d[g],e[g])}}d=e=null;return h},clean:function(a,b,d,e){var g,h,i,j=[];b=b||c,typeof b.createElement=="undefined"&&(b=b.ownerDocument||b[0]&&b[0].ownerDocument||c);for(var k=0,l;(l=a[k])!=null;k++){typeof l=="number"&&(l+="");if(!l)continue;if(typeof l=="string")if(!_.test(l))l=b.createTextNode(l);else{l=l.replace(Y,"<$1></$2>");var m=(Z.exec(l)||["",""])[1].toLowerCase(),n=bg[m]||bg._default,o=n[0],p=b.createElement("div"),q=bh.childNodes,r;b===c?bh.appendChild(p):U(b).appendChild(p),p.innerHTML=n[1]+l+n[2];while(o--)p=p.lastChild;if(!f.support.tbody){var s=$.test(l),t=m==="table"&&!s?p.firstChild&&p.firstChild.childNodes:n[1]==="<table>"&&!s?p.childNodes:[];for(i=t.length-1;i>=0;--i)f.nodeName(t[i],"tbody")&&!t[i].childNodes.length&&t[i].parentNode.removeChild(t[i])}!f.support.leadingWhitespace&&X.test(l)&&p.insertBefore(b.createTextNode(X.exec(l)[0]),p.firstChild),l=p.childNodes,p&&(p.parentNode.removeChild(p),q.length>0&&(r=q[q.length-1],r&&r.parentNode&&r.parentNode.removeChild(r)))}var u;if(!f.support.appendChecked)if(l[0]&&typeof (u=l.length)=="number")for(i=0;i<u;i++)bn(l[i]);else bn(l);l.nodeType?j.push(l):j=f.merge(j,l)}if(d){g=function(a){return!a.type||be.test(a.type)};for(k=0;j[k];k++){h=j[k];if(e&&f.nodeName(h,"script")&&(!h.type||be.test(h.type)))e.push(h.parentNode?h.parentNode.removeChild(h):h);else{if(h.nodeType===1){var v=f.grep(h.getElementsByTagName("script"),g);j.splice.apply(j,[k+1,0].concat(v))}d.appendChild(h)}}}return j},cleanData:function(a){var b,c,d=f.cache,e=f.event.special,g=f.support.deleteExpando;for(var h=0,i;(i=a[h])!=null;h++){if(i.nodeName&&f.noData[i.nodeName.toLowerCase()])continue;c=i[f.expando];if(c){b=d[c];if(b&&b.events){for(var j in b.events)e[j]?f.event.remove(i,j):f.removeEvent(i,j,b.handle);b.handle&&(b.handle.elem=null)}g?delete i[f.expando]:i.removeAttribute&&i.removeAttribute(f.expando),delete d[c]}}}});var bp=/alpha\([^)]*\)/i,bq=/opacity=([^)]*)/,br=/([A-Z]|^ms)/g,bs=/^[\-+]?(?:\d*\.)?\d+$/i,bt=/^-?(?:\d*\.)?\d+(?!px)[^\d\s]+$/i,bu=/^([\-+])=([\-+.\de]+)/,bv=/^margin/,bw={position:"absolute",visibility:"hidden",display:"block"},bx=["Top","Right","Bottom","Left"],by,bz,bA;f.fn.css=function(a,c){return f.access(this,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)},a,c,arguments.length>1)},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=by(a,"opacity");return c===""?"1":c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&&a.nodeType!==3&&a.nodeType!==8&&!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&&"get"in k&&(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d,h==="string"&&(g=bu.exec(d))&&(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h="number");if(d==null||h==="number"&&isNaN(d))return;h==="number"&&!f.cssNumber[i]&&(d+="px");if(!k||!("set"in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&&(c="float");if(g&&"get"in g&&(e=g.get(a,!0,d))!==b)return e;if(by)return by(a,c)},swap:function(a,b,c){var d={},e,f;for(f in b)d[f]=a.style[f],a.style[f]=b[f];e=c.call(a);for(f in b)a.style[f]=d[f];return e}}),f.curCSS=f.css,c.defaultView&&c.defaultView.getComputedStyle&&(bz=function(a,b){var c,d,e,g,h=a.style;b=b.replace(br,"-$1").toLowerCase(),(d=a.ownerDocument.defaultView)&&(e=d.getComputedStyle(a,null))&&(c=e.getPropertyValue(b),c===""&&!f.contains(a.ownerDocument.documentElement,a)&&(c=f.style(a,b))),!f.support.pixelMargin&&e&&bv.test(b)&&bt.test(c)&&(g=h.width,h.width=c,c=e.width,h.width=g);return c}),c.documentElement.currentStyle&&(bA=function(a,b){var c,d,e,f=a.currentStyle&&a.currentStyle[b],g=a.style;f==null&&g&&(e=g[b])&&(f=e),bt.test(f)&&(c=g.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),g.left=b==="fontSize"?"1em":f,f=g.pixelLeft+"px",g.left=c,d&&(a.runtimeStyle.left=d));return f===""?"auto":f}),by=bz||bA,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){if(c)return a.offsetWidth!==0?bB(a,b,d):f.swap(a,bw,function(){return bB(a,b,d)})},set:function(a,b){return bs.test(b)?b+"px":b}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return bq.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=f.isNumeric(b)?"alpha(opacity="+b*100+")":"",g=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&f.trim(g.replace(bp,""))===""){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bp.test(g)?g.replace(bp,e):g+" "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){return f.swap(a,{display:"inline-block"},function(){return b?by(a,"margin-right"):a.style.marginRight})}})}),f.expr&&f.expr.filters&&(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&&c===0||!f.support.reliableHiddenOffsets&&(a.style&&a.style.display||f.css(a,"display"))==="none"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)}),f.each({margin:"",padding:"",border:"Width"},function(a,b){f.cssHooks[a+b]={expand:function(c){var d,e=typeof c=="string"?c.split(" "):[c],f={};for(d=0;d<4;d++)f[a+bx[d]+b]=e[d]||e[d-2]||e[0];return f}}});var bC=/%20/g,bD=/\[\]$/,bE=/\r?\n/g,bF=/#.*$/,bG=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,bH=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bI=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,bJ=/^(?:GET|HEAD)$/,bK=/^\/\//,bL=/\?/,bM=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bN=/^(?:select|textarea)/i,bO=/\s+/,bP=/([?&])_=[^&]*/,bQ=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bR=f.fn.load,bS={},bT={},bU,bV,bW=["*/"]+["*"];try{bU=e.href}catch(bX){bU=c.createElement("a"),bU.href="",bU=bU.href}bV=bQ.exec(bU.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!="string"&&bR)return bR.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e>=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h="GET";c&&(f.isFunction(c)?(d=c,c=b):typeof c=="object"&&(c=f.param(c,f.ajaxSettings.traditional),h="POST"));var i=this;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&&(a.done(function(a){c=a}),i.html(g?f("<div>").append(c.replace(bM,"")).find(g):c)),d&&i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||bN.test(this.nodeName)||bH.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bE,"\r\n")}}):{name:b.name,value:c.replace(bE,"\r\n")}}).get()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){f.fn[b]=function(a){return this.on(b,a)}}),f.each(["get","post"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&&(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,"script")},getJSON:function(a,b,c){return f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?b$(a,f.ajaxSettings):(b=a,a=f.ajaxSettings),b$(a,b);return a},ajaxSettings:{url:bU,isLocal:bI.test(bV[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded; charset=UTF-8",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":bW},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":f.parseJSON,"text xml":f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:bY(bS),ajaxTransport:bY(bT),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&&clearTimeout(q),p=b,n=m||"",v.readyState=a>0?4:0;var o,r,u,w=c,x=l?ca(d,v,l):b,y,z;if(a>=200&&a<300||a===304){if(d.ifModified){if(y=v.getResponseHeader("Last-Modified"))f.lastModified[k]=y;if(z=v.getResponseHeader("Etag"))f.etag[k]=z}if(a===304)w="notmodified",o=!0;else try{r=cb(d,x),w="success",o=!0}catch(A){w="parsererror",u=A}}else{u=w;if(!w||a)w="error",a<0&&(a=0)}v.status=a,v.statusText=""+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j),j=b,t&&g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.fireWith(e,[v,w]),t&&(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger("ajaxStop"))}}typeof a=="object"&&(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&&(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f.Callbacks("once memory"),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bG.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||"abort",p&&p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.add,v.statusCode=function(a){if(a){var b;if(s<2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+"").replace(bF,"").replace(bK,bV[1]+"//"),d.dataTypes=f.trim(d.dataType||"*").toLowerCase().split(bO),d.crossDomain==null&&(r=bQ.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bV[1]&&r[2]==bV[2]&&(r[3]||(r[1]==="http:"?80:443))==(bV[3]||(bV[1]==="http:"?80:443)))),d.data&&d.processData&&typeof d.data!="string"&&(d.data=f.param(d.data,d.traditional)),bZ(bS,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bJ.test(d.type),t&&f.active++===0&&f.event.trigger("ajaxStart");if(!d.hasContent){d.data&&(d.url+=(bL.test(d.url)?"&":"?")+d.data,delete d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bP,"$1_="+x);d.url=y+(y===d.url?(bL.test(d.url)?"&":"?")+"_="+x:"")}}(d.data&&d.hasContent&&d.contentType!==!1||c.contentType)&&v.setRequestHeader("Content-Type",d.contentType),d.ifModified&&(k=k||d.url,f.lastModified[k]&&v.setRequestHeader("If-Modified-Since",f.lastModified[k]),f.etag[k]&&v.setRequestHeader("If-None-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=="*"?", "+bW+"; q=0.01":""):d.accepts["*"]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&&(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=bZ(bT,d,c,v);if(!p)w(-1,"No Transport");else{v.readyState=1,t&&g.trigger("ajaxSend",[v,d]),d.async&&d.timeout>0&&(q=setTimeout(function(){v.abort("timeout")},d.timeout));try{s=1,p.send(l,w)}catch(z){if(s<2)w(-1,z);else throw z}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&&!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)b_(g,a[g],c,e);return d.join("&").replace(bC,"+")}}),f.extend({active:0,lastModified:{},etag:{}});var cc=f.now(),cd=/(\=)\?(&|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return f.expando+"_"+cc++}}),f.ajaxPrefilter("json jsonp",function(b,c,d){var e=typeof b.data=="string"&&/^application\/x\-www\-form\-urlencoded/.test(b.contentType);if(b.dataTypes[0]==="jsonp"||b.jsonp!==!1&&(cd.test(b.url)||e&&cd.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l="$1"+h+"$2";b.jsonp!==!1&&(j=j.replace(cd,l),b.url===j&&(e&&(k=k.replace(cd,l)),b.data===k&&(j+=(/\?/.test(j)?"&":"?")+b.jsonp+"="+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&&f.isFunction(i)&&a[h](g[0])}),b.converters["script json"]=function(){g||f.error(h+" was not called");return g[0]},b.dataTypes[0]="json";return"script"}}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),f.ajaxTransport("script",function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName("head")[0]||c.documentElement;return{send:function(f,g){d=c.createElement("script"),d.async="async",a.scriptCharset&&(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&&d.parentNode&&e.removeChild(d),d=b,c||g(200,"success")},e.insertBefore(d,e.firstChild)},abort:function(){d&&d.onload(0,1)}}}});var ce=a.ActiveXObject?function(){for(var a in cg)cg[a](0,1)}:!1,cf=0,cg;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&ch()||ci()}:ch,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(f.ajaxSettings.xhr()),f.support.ajax&&f.ajaxTransport(function(c){if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&&h.overrideMimeType&&h.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&&c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&&(e||h.readyState===4)){d=b,i&&(h.onreadystatechange=f.noop,ce&&delete cg[i]);if(e)h.readyState!==4&&h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&&n.documentElement&&(m.xml=n);try{m.text=h.responseText}catch(a){}try{k=h.statusText}catch(o){k=""}!j&&c.isLocal&&!c.crossDomain?j=m.text?200:404:j===1223&&(j=204)}}}catch(p){e||g(-1,p)}m&&g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cf,ce&&(cg||(cg={},f(a).unload(ce)),cg[i]=d),h.onreadystatechange=d)},abort:function(){d&&d(0,1)}}}});var cj={},ck,cl,cm=/^(?:toggle|show|hide)$/,cn=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,co,cp=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],cq;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(ct("show",3),a,b,c);for(var g=0,h=this.length;g<h;g++)d=this[g],d.style&&(e=d.style.display,!f._data(d,"olddisplay")&&e==="none"&&(e=d.style.display=""),(e===""&&f.css(d,"display")==="none"||!f.contains(d.ownerDocument.documentElement,d))&&f._data(d,"olddisplay",cu(d.nodeName)));for(g=0;g<h;g++){d=this[g];if(d.style){e=d.style.display;if(e===""||e==="none")d.style.display=f._data(d,"olddisplay")||""}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(ct("hide",3),a,b,c);var d,e,g=0,h=this.length;for(;g<h;g++)d=this[g],d.style&&(e=f.css(d,"display"),e!=="none"&&!f._data(d,"olddisplay")&&f._data(d,"olddisplay",e));for(g=0;g<h;g++)this[g].style&&(this[g].style.display="none");return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a=="boolean";f.isFunction(a)&&f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(ct("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){function g(){e.queue===!1&&f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&&f(this).is(":hidden"),g,h,i,j,k,l,m,n,o,p,q;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&&(a[g]=a[i],delete a[i]);if((k=f.cssHooks[g])&&"expand"in k){l=k.expand(a[g]),delete a[g];for(i in l)i in a||(a[i]=l[i])}}for(g in a){h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&&b.specialEasing[g]||b.easing||"swing";if(h==="hide"&&d||h==="show"&&!d)return b.complete.call(this);c&&(g==="height"||g==="width")&&(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,"display")==="inline"&&f.css(this,"float")==="none"&&(!f.support.inlineBlockNeedsLayout||cu(this.nodeName)==="inline"?this.style.display="inline-block":this.style.zoom=1))}b.overflow!=null&&(this.style.overflow="hidden");for(i in a)j=new f.fx(this,b,i),h=a[i],cm.test(h)?(q=f._data(this,"toggle"+i)||(h==="toggle"?d?"show":"hide":0),q?(f._data(this,"toggle"+i,q==="show"?"hide":"show"),j[q]()):j[h]()):(m=cn.exec(h),n=j.cur(),m?(o=parseFloat(m[2]),p=m[3]||(f.cssNumber[i]?"":"px"),p!=="px"&&(f.style(this,i,(o||1)+p),n=(o||1)/j.cur()*n,f.style(this,i,n+p)),m[1]&&(o=(m[1]==="-="?-1:1)*o+n),j.custom(n,o,p)):j.custom(n,h,""));return!0}var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return e.queue===!1?this.each(g):this.queue(e.queue,g)},stop:function(a,c,d){typeof a!="string"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||"fx",[]);return this.each(function(){function h(a,b,c){var e=b[c];f.removeData(a,c,!0),e.stop(d)}var b,c=!1,e=f.timers,g=f._data(this);d||f._unmark(!0,this);if(a==null)for(b in g)g[b]&&g[b].stop&&b.indexOf(".run")===b.length-4&&h(this,g,b);else g[b=a+".run"]&&g[b].stop&&h(this,g,b);for(b=e.length;b--;)e[b].elem===this&&(a==null||e[b].queue===a)&&(d?e[b](!0):e[b].saveState(),c=!0,e.splice(b,1));(!d||!c)&&f.dequeue(this,a)})}}),f.each({slideDown:ct("show",1),slideUp:ct("hide",1),slideToggle:ct("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&&typeof a=="object"?f.extend({},a):{complete:c||!c&&b||f.isFunction(a)&&a,duration:a,easing:c&&b||b&&!f.isFunction(b)&&b};d.duration=f.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue="fx";d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&&d.old.call(this),d.queue?f.dequeue(this,d.queue):a!==!1&&f._unmark(this)};return d},easing:{linear:function(a){return a},swing:function(a){return-Math.cos(a*Math.PI)/2+.5}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b==="auto"?0:b:a},custom:function(a,c,d){function h(a){return e.step(a)}var e=this,g=f.fx;this.startTime=cq||cr(),this.end=c,this.now=this.start=a,this.pos=this.state=0,this.unit=d||this.unit||(f.cssNumber[this.prop]?"":"px"),h.queue=this.options.queue,h.elem=this.elem,h.saveState=function(){f._data(e.elem,"fxshow"+e.prop)===b&&(e.options.hide?f._data(e.elem,"fxshow"+e.prop,e.start):e.options.show&&f._data(e.elem,"fxshow"+e.prop,e.end))},h()&&f.timers.push(h)&&!co&&(co=setInterval(g.tick,g.interval))},show:function(){var a=f._data(this.elem,"fxshow"+this.prop);this.options.orig[this.prop]=a||f.style(this.elem,this.prop),this.options.show=!0,a!==b?this.custom(this.cur(),a):this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f._data(this.elem,"fxshow"+this.prop)||f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b,c,d,e=cq||cr(),g=!0,h=this.elem,i=this.options;if(a||e>=i.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),i.animatedProperties[this.prop]=!0;for(b in i.animatedProperties)i.animatedProperties[b]!==!0&&(g=!1);if(g){i.overflow!=null&&!f.support.shrinkWrapBlocks&&f.each(["","X","Y"],function(a,b){h.style["overflow"+b]=i.overflow[a]}),i.hide&&f(h).hide();if(i.hide||i.show)for(b in i.animatedProperties)f.style(h,b,i.orig[b]),f.removeData(h,"fxshow"+b,!0),f.removeData(h,"toggle"+b,!0);d=i.complete,d&&(i.complete=!1,d.call(h))}return!1}i.duration==Infinity?this.now=e:(c=e-this.startTime,this.state=c/i.duration,this.pos=f.easing[i.animatedProperties[this.prop]](this.state,c,0,1,i.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){var a,b=f.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||f.fx.stop()},interval:13,stop:function(){clearInterval(co),co=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&&a.elem.style[a.prop]!=null?a.elem.style[a.prop]=a.now+a.unit:a.elem[a.prop]=a.now}}}),f.each(cp.concat.apply([],cp),function(a,b){b.indexOf("margin")&&(f.fx.step[b]=function(a){f.style(a.elem,b,Math.max(0,a.now)+a.unit)})}),f.expr&&f.expr.filters&&(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var cv,cw=/^t(?:able|d|h)$/i,cx=/^(?:body|html)$/i;"getBoundingClientRect"in c.documentElement?cv=function(a,b,c,d){try{d=a.getBoundingClientRect()}catch(e){}if(!d||!f.contains(c,a))return d?{top:d.top,left:d.left}:{top:0,left:0};var g=b.body,h=cy(b),i=c.clientTop||g.clientTop||0,j=c.clientLeft||g.clientLeft||0,k=h.pageYOffset||f.support.boxModel&&c.scrollTop||g.scrollTop,l=h.pageXOffset||f.support.boxModel&&c.scrollLeft||g.scrollLeft,m=d.top+k-i,n=d.left+l-j;return{top:m,left:n}}:cv=function(a,b,c){var d,e=a.offsetParent,g=a,h=b.body,i=b.defaultView,j=i?i.getComputedStyle(a,null):a.currentStyle,k=a.offsetTop,l=a.offsetLeft;while((a=a.parentNode)&&a!==h&&a!==c){if(f.support.fixedPosition&&j.position==="fixed")break;d=i?i.getComputedStyle(a,null):a.currentStyle,k-=a.scrollTop,l-=a.scrollLeft,a===e&&(k+=a.offsetTop,l+=a.offsetLeft,f.support.doesNotAddBorder&&(!f.support.doesAddBorderForTableAndCells||!cw.test(a.nodeName))&&(k+=parseFloat(d.borderTopWidth)||0,l+=parseFloat(d.borderLeftWidth)||0),g=e,e=a.offsetParent),f.support.subtractsBorderForOverflowNotVisible&&d.overflow!=="visible"&&(k+=parseFloat(d.borderTopWidth)||0,l+=parseFloat(d.borderLeftWidth)||0),j=d}if(j.position==="relative"||j.position==="static")k+=h.offsetTop,l+=h.offsetLeft;f.support.fixedPosition&&j.position==="fixed"&&(k+=Math.max(c.scrollTop,h.scrollTop),l+=Math.max(c.scrollLeft,h.scrollLeft));return{top:k,left:l}},f.fn.offset=function(a){if(arguments.length)return a===b?this:this.each(function(b){f.offset.setOffset(this,a,b)});var c=this[0],d=c&&c.ownerDocument;if(!d)return null;if(c===d.body)return f.offset.bodyOffset(c);return cv(c,d,d.documentElement)},f.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(f.css(a,"marginTop"))||0,c+=parseFloat(f.css(a,"marginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,"position");d==="static"&&(a.style.position="relative");var e=f(a),g=e.offset(),h=f.css(a,"top"),i=f.css(a,"left"),j=(d==="absolute"||d==="fixed")&&f.inArray("auto",[h,i])>-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&&(b=b.call(a,c,g)),b.top!=null&&(k.top=b.top-g.top+m),b.left!=null&&(k.left=b.left-g.left+n),"using"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=cx.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,"marginTop"))||0,c.left-=parseFloat(f.css(a,"marginLeft"))||0,d.top+=parseFloat(f.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(f.css(b[0],"borderLeftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&&!cx.test(a.nodeName)&&f.css(a,"position")==="static")a=a.offsetParent;return a})}}),f.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,c){var d=/Y/.test(c);f.fn[a]=function(e){return f.access(this,function(a,e,g){var h=cy(a);if(g===b)return h?c in h?h[c]:f.support.boxModel&&h.document.documentElement[e]||h.document.body[e]:a[e];h?h.scrollTo(d?f(h).scrollLeft():g,d?g:f(h).scrollTop()):a[e]=g},a,e,arguments.length,null)}}),f.each({Height:"height",Width:"width"},function(a,c){var d="client"+a,e="scroll"+a,g="offset"+a;f.fn["inner"+a]=function(){var a=this[0];return a?a.style?parseFloat(f.css(a,c,"padding")):this[c]():null},f.fn["outer"+a]=function(a){var b=this[0];return b?b.style?parseFloat(f.css(b,c,a?"margin":"border")):this[c]():null},f.fn[c]=function(a){return f.access(this,function(a,c,h){var i,j,k,l;if(f.isWindow(a)){i=a.document,j=i.documentElement[d];return f.support.boxModel&&j||i.body&&i.body[d]||j}if(a.nodeType===9){i=a.documentElement;if(i[d]>=i[e])return i[d];return Math.max(a.body[e],i[e],a.body[g],i[g])}if(h===b){k=f.css(a,c),l=parseFloat(k);return f.isNumeric(l)?l:k}f(a).css(c,h)},c,a,arguments.length,null)}}),a.jQuery=a.$=f,typeof define=="function"&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return f})})(window);
/*1.0*/
/* Modernizr 2.6.2 (Custom Build) | MIT & BSD
 * Build: http://modernizr.com/download/#-fontface-backgroundsize-borderimage-borderradius-boxshadow-flexbox-flexboxlegacy-hsla-multiplebgs-opacity-rgba-textshadow-cssanimations-csscolumns-generatedcontent-cssgradients-cssreflections-csstransforms-csstransforms3d-csstransitions-applicationcache-canvas-canvastext-draganddrop-hashchange-history-audio-video-indexeddb-input-inputtypes-localstorage-postmessage-sessionstorage-websockets-websqldatabase-webworkers-geolocation-inlinesvg-smil-svg-svgclippaths-touch-webgl-shiv-cssclasses-teststyles-testprop-testallprops-hasevent-prefixes-domprefixes-load
 */

;window.Modernizr=function(a,b,c){function C(a){j.cssText=a}function D(a,b){return C(n.join(a+";")+(b||""))}function E(a,b){return typeof a===b}function F(a,b){return!!~(""+a).indexOf(b)}function G(a,b){for(var d in a){var e=a[d];if(!F(e,"-")&&j[e]!==c)return b=="pfx"?e:!0}return!1}function H(a,b,d){for(var e in a){var f=b[a[e]];if(f!==c)return d===!1?a[e]:E(f,"function")?f.bind(d||b):f}return!1}function I(a,b,c){var d=a.charAt(0).toUpperCase()+a.slice(1),e=(a+" "+p.join(d+" ")+d).split(" ");return E(b,"string")||E(b,"undefined")?G(e,b):(e=(a+" "+q.join(d+" ")+d).split(" "),H(e,b,c))}function J(){e.input=function(c){for(var d=0,e=c.length;d<e;d++)u[c[d]]=c[d]in k;return u.list&&(u.list=!!b.createElement("datalist")&&!!a.HTMLDataListElement),u}("autocomplete autofocus list placeholder max min multiple pattern required step".split(" ")),e.inputtypes=function(a){for(var d=0,e,f,h,i=a.length;d<i;d++)k.setAttribute("type",f=a[d]),e=k.type!=="text",e&&(k.value=l,k.style.cssText="position:absolute;visibility:hidden;",/^range$/.test(f)&&k.style.WebkitAppearance!==c?(g.appendChild(k),h=b.defaultView,e=h.getComputedStyle&&h.getComputedStyle(k,null).WebkitAppearance!=="textfield"&&k.offsetHeight!==0,g.removeChild(k)):/^(search|tel)$/.test(f)||(/^(url|email)$/.test(f)?e=k.checkValidity&&k.checkValidity()===!1:e=k.value!=l)),t[a[d]]=!!e;return t}("search tel url email datetime date month week time datetime-local number range color".split(" "))}var d="2.6.2",e={},f=!0,g=b.documentElement,h="modernizr",i=b.createElement(h),j=i.style,k=b.createElement("input"),l=":)",m={}.toString,n=" -webkit- -moz- -o- -ms- ".split(" "),o="Webkit Moz O ms",p=o.split(" "),q=o.toLowerCase().split(" "),r={svg:"http://www.w3.org/2000/svg"},s={},t={},u={},v=[],w=v.slice,x,y=function(a,c,d,e){var f,i,j,k,l=b.createElement("div"),m=b.body,n=m||b.createElement("body");if(parseInt(d,10))while(d--)j=b.createElement("div"),j.id=e?e[d]:h+(d+1),l.appendChild(j);return f=["&#173;",'<style id="s',h,'">',a,"</style>"].join(""),l.id=h,(m?l:n).innerHTML+=f,n.appendChild(l),m||(n.style.background="",n.style.overflow="hidden",k=g.style.overflow,g.style.overflow="hidden",g.appendChild(n)),i=c(l,a),m?l.parentNode.removeChild(l):(n.parentNode.removeChild(n),g.style.overflow=k),!!i},z=function(){function d(d,e){e=e||b.createElement(a[d]||"div"),d="on"+d;var f=d in e;return f||(e.setAttribute||(e=b.createElement("div")),e.setAttribute&&e.removeAttribute&&(e.setAttribute(d,""),f=E(e[d],"function"),E(e[d],"undefined")||(e[d]=c),e.removeAttribute(d))),e=null,f}var a={select:"input",change:"input",submit:"form",reset:"form",error:"img",load:"img",abort:"img"};return d}(),A={}.hasOwnProperty,B;!E(A,"undefined")&&!E(A.call,"undefined")?B=function(a,b){return A.call(a,b)}:B=function(a,b){return b in a&&E(a.constructor.prototype[b],"undefined")},Function.prototype.bind||(Function.prototype.bind=function(b){var c=this;if(typeof c!="function")throw new TypeError;var d=w.call(arguments,1),e=function(){if(this instanceof e){var a=function(){};a.prototype=c.prototype;var f=new a,g=c.apply(f,d.concat(w.call(arguments)));return Object(g)===g?g:f}return c.apply(b,d.concat(w.call(arguments)))};return e}),s.flexbox=function(){return I("flexWrap")},s.flexboxlegacy=function(){return I("boxDirection")},s.canvas=function(){var a=b.createElement("canvas");return!!a.getContext&&!!a.getContext("2d")},s.canvastext=function(){return!!e.canvas&&!!E(b.createElement("canvas").getContext("2d").fillText,"function")},s.webgl=function(){return!!a.WebGLRenderingContext},s.touch=function(){var c;return"ontouchstart"in a||a.DocumentTouch&&b instanceof DocumentTouch?c=!0:y(["@media (",n.join("touch-enabled),("),h,")","{#modernizr{top:9px;position:absolute}}"].join(""),function(a){c=a.offsetTop===9}),c},s.geolocation=function(){return"geolocation"in navigator},s.postmessage=function(){return!!a.postMessage},s.websqldatabase=function(){return!!a.openDatabase},s.indexedDB=function(){return!!I("indexedDB",a)},s.hashchange=function(){return z("hashchange",a)&&(b.documentMode===c||b.documentMode>7)},s.history=function(){return!!a.history&&!!history.pushState},s.draganddrop=function(){var a=b.createElement("div");return"draggable"in a||"ondragstart"in a&&"ondrop"in a},s.websockets=function(){return"WebSocket"in a||"MozWebSocket"in a},s.rgba=function(){return C("background-color:rgba(150,255,150,.5)"),F(j.backgroundColor,"rgba")},s.hsla=function(){return C("background-color:hsla(120,40%,100%,.5)"),F(j.backgroundColor,"rgba")||F(j.backgroundColor,"hsla")},s.multiplebgs=function(){return C("background:url(https://),url(https://),red url(https://)"),/(url\s*\(.*?){3}/.test(j.background)},s.backgroundsize=function(){return I("backgroundSize")},s.borderimage=function(){return I("borderImage")},s.borderradius=function(){return I("borderRadius")},s.boxshadow=function(){return I("boxShadow")},s.textshadow=function(){return b.createElement("div").style.textShadow===""},s.opacity=function(){return D("opacity:.55"),/^0.55$/.test(j.opacity)},s.cssanimations=function(){return I("animationName")},s.csscolumns=function(){return I("columnCount")},s.cssgradients=function(){var a="background-image:",b="gradient(linear,left top,right bottom,from(#9f9),to(white));",c="linear-gradient(left top,#9f9, white);";return C((a+"-webkit- ".split(" ").join(b+a)+n.join(c+a)).slice(0,-a.length)),F(j.backgroundImage,"gradient")},s.cssreflections=function(){return I("boxReflect")},s.csstransforms=function(){return!!I("transform")},s.csstransforms3d=function(){var a=!!I("perspective");return a&&"webkitPerspective"in g.style&&y("@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}",function(b,c){a=b.offsetLeft===9&&b.offsetHeight===3}),a},s.csstransitions=function(){return I("transition")},s.fontface=function(){var a;return y('@font-face {font-family:"font";src:url("https://")}',function(c,d){var e=b.getElementById("smodernizr"),f=e.sheet||e.styleSheet,g=f?f.cssRules&&f.cssRules[0]?f.cssRules[0].cssText:f.cssText||"":"";a=/src/i.test(g)&&g.indexOf(d.split(" ")[0])===0}),a},s.generatedcontent=function(){var a;return y(["#",h,"{font:0/0 a}#",h,':after{content:"',l,'";visibility:hidden;font:3px/1 a}'].join(""),function(b){a=b.offsetHeight>=3}),a},s.video=function(){var a=b.createElement("video"),c=!1;try{if(c=!!a.canPlayType)c=new Boolean(c),c.ogg=a.canPlayType('video/ogg; codecs="theora"').replace(/^no$/,""),c.h264=a.canPlayType('video/mp4; codecs="avc1.42E01E"').replace(/^no$/,""),c.webm=a.canPlayType('video/webm; codecs="vp8, vorbis"').replace(/^no$/,"")}catch(d){}return c},s.audio=function(){var a=b.createElement("audio"),c=!1;try{if(c=!!a.canPlayType)c=new Boolean(c),c.ogg=a.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,""),c.mp3=a.canPlayType("audio/mpeg;").replace(/^no$/,""),c.wav=a.canPlayType('audio/wav; codecs="1"').replace(/^no$/,""),c.m4a=(a.canPlayType("audio/x-m4a;")||a.canPlayType("audio/aac;")).replace(/^no$/,"")}catch(d){}return c},s.localstorage=function(){try{return localStorage.setItem(h,h),localStorage.removeItem(h),!0}catch(a){return!1}},s.sessionstorage=function(){try{return sessionStorage.setItem(h,h),sessionStorage.removeItem(h),!0}catch(a){return!1}},s.webworkers=function(){return!!a.Worker},s.applicationcache=function(){return!!a.applicationCache},s.svg=function(){return!!b.createElementNS&&!!b.createElementNS(r.svg,"svg").createSVGRect},s.inlinesvg=function(){var a=b.createElement("div");return a.innerHTML="<svg/>",(a.firstChild&&a.firstChild.namespaceURI)==r.svg},s.smil=function(){return!!b.createElementNS&&/SVGAnimate/.test(m.call(b.createElementNS(r.svg,"animate")))},s.svgclippaths=function(){return!!b.createElementNS&&/SVGClipPath/.test(m.call(b.createElementNS(r.svg,"clipPath")))};for(var K in s)B(s,K)&&(x=K.toLowerCase(),e[x]=s[K](),v.push((e[x]?"":"no-")+x));return e.input||J(),e.addTest=function(a,b){if(typeof a=="object")for(var d in a)B(a,d)&&e.addTest(d,a[d]);else{a=a.toLowerCase();if(e[a]!==c)return e;b=typeof b=="function"?b():b,typeof f!="undefined"&&f&&(g.className+=" "+(b?"":"no-")+a),e[a]=b}return e},C(""),i=k=null,function(a,b){function k(a,b){var c=a.createElement("p"),d=a.getElementsByTagName("head")[0]||a.documentElement;return c.innerHTML="x<style>"+b+"</style>",d.insertBefore(c.lastChild,d.firstChild)}function l(){var a=r.elements;return typeof a=="string"?a.split(" "):a}function m(a){var b=i[a[g]];return b||(b={},h++,a[g]=h,i[h]=b),b}function n(a,c,f){c||(c=b);if(j)return c.createElement(a);f||(f=m(c));var g;return f.cache[a]?g=f.cache[a].cloneNode():e.test(a)?g=(f.cache[a]=f.createElem(a)).cloneNode():g=f.createElem(a),g.canHaveChildren&&!d.test(a)?f.frag.appendChild(g):g}function o(a,c){a||(a=b);if(j)return a.createDocumentFragment();c=c||m(a);var d=c.frag.cloneNode(),e=0,f=l(),g=f.length;for(;e<g;e++)d.createElement(f[e]);return d}function p(a,b){b.cache||(b.cache={},b.createElem=a.createElement,b.createFrag=a.createDocumentFragment,b.frag=b.createFrag()),a.createElement=function(c){return r.shivMethods?n(c,a,b):b.createElem(c)},a.createDocumentFragment=Function("h,f","return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&("+l().join().replace(/\w+/g,function(a){return b.createElem(a),b.frag.createElement(a),'c("'+a+'")'})+");return n}")(r,b.frag)}function q(a){a||(a=b);var c=m(a);return r.shivCSS&&!f&&!c.hasCSS&&(c.hasCSS=!!k(a,"article,aside,figcaption,figure,footer,header,hgroup,nav,section{display:block}mark{background:#FF0;color:#000}")),j||p(a,c),a}var c=a.html5||{},d=/^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i,e=/^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i,f,g="_html5shiv",h=0,i={},j;(function(){try{var a=b.createElement("a");a.innerHTML="<xyz></xyz>",f="hidden"in a,j=a.childNodes.length==1||function(){b.createElement("a");var a=b.createDocumentFragment();return typeof a.cloneNode=="undefined"||typeof a.createDocumentFragment=="undefined"||typeof a.createElement=="undefined"}()}catch(c){f=!0,j=!0}})();var r={elements:c.elements||"abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video",shivCSS:c.shivCSS!==!1,supportsUnknownElements:j,shivMethods:c.shivMethods!==!1,type:"default",shivDocument:q,createElement:n,createDocumentFragment:o};a.html5=r,q(b)}(this,b),e._version=d,e._prefixes=n,e._domPrefixes=q,e._cssomPrefixes=p,e.hasEvent=z,e.testProp=function(a){return G([a])},e.testAllProps=I,e.testStyles=y,g.className=g.className.replace(/(^|\s)no-js(\s|$)/,"$1$2")+(f?" js "+v.join(" "):""),e}(this,this.document),function(a,b,c){function d(a){return"[object Function]"==o.call(a)}function e(a){return"string"==typeof a}function f(){}function g(a){return!a||"loaded"==a||"complete"==a||"uninitialized"==a}function h(){var a=p.shift();q=1,a?a.t?m(function(){("c"==a.t?B.injectCss:B.injectJs)(a.s,0,a.a,a.x,a.e,1)},0):(a(),h()):q=0}function i(a,c,d,e,f,i,j){function k(b){if(!o&&g(l.readyState)&&(u.r=o=1,!q&&h(),l.onload=l.onreadystatechange=null,b)){"img"!=a&&m(function(){t.removeChild(l)},50);for(var d in y[c])y[c].hasOwnProperty(d)&&y[c][d].onload()}}var j=j||B.errorTimeout,l=b.createElement(a),o=0,r=0,u={t:d,s:c,e:f,a:i,x:j};1===y[c]&&(r=1,y[c]=[]),"object"==a?l.data=c:(l.src=c,l.type=a),l.width=l.height="0",l.onerror=l.onload=l.onreadystatechange=function(){k.call(this,r)},p.splice(e,0,u),"img"!=a&&(r||2===y[c]?(t.insertBefore(l,s?null:n),m(k,j)):y[c].push(l))}function j(a,b,c,d,f){return q=0,b=b||"j",e(a)?i("c"==b?v:u,a,b,this.i++,c,d,f):(p.splice(this.i++,0,a),1==p.length&&h()),this}function k(){var a=B;return a.loader={load:j,i:0},a}var l=b.documentElement,m=a.setTimeout,n=b.getElementsByTagName("script")[0],o={}.toString,p=[],q=0,r="MozAppearance"in l.style,s=r&&!!b.createRange().compareNode,t=s?l:n.parentNode,l=a.opera&&"[object Opera]"==o.call(a.opera),l=!!b.attachEvent&&!l,u=r?"object":l?"script":"img",v=l?"script":u,w=Array.isArray||function(a){return"[object Array]"==o.call(a)},x=[],y={},z={timeout:function(a,b){return b.length&&(a.timeout=b[0]),a}},A,B;B=function(a){function b(a){var a=a.split("!"),b=x.length,c=a.pop(),d=a.length,c={url:c,origUrl:c,prefixes:a},e,f,g;for(f=0;f<d;f++)g=a[f].split("="),(e=z[g.shift()])&&(c=e(c,g));for(f=0;f<b;f++)c=x[f](c);return c}function g(a,e,f,g,h){var i=b(a),j=i.autoCallback;i.url.split(".").pop().split("?").shift(),i.bypass||(e&&(e=d(e)?e:e[a]||e[g]||e[a.split("/").pop().split("?")[0]]),i.instead?i.instead(a,e,f,g,h):(y[i.url]?i.noexec=!0:y[i.url]=1,f.load(i.url,i.forceCSS||!i.forceJS&&"css"==i.url.split(".").pop().split("?").shift()?"c":c,i.noexec,i.attrs,i.timeout),(d(e)||d(j))&&f.load(function(){k(),e&&e(i.origUrl,h,g),j&&j(i.origUrl,h,g),y[i.url]=2})))}function h(a,b){function c(a,c){if(a){if(e(a))c||(j=function(){var a=[].slice.call(arguments);k.apply(this,a),l()}),g(a,j,b,0,h);else if(Object(a)===a)for(n in m=function(){var b=0,c;for(c in a)a.hasOwnProperty(c)&&b++;return b}(),a)a.hasOwnProperty(n)&&(!c&&!--m&&(d(j)?j=function(){var a=[].slice.call(arguments);k.apply(this,a),l()}:j[n]=function(a){return function(){var b=[].slice.call(arguments);a&&a.apply(this,b),l()}}(k[n])),g(a[n],j,b,n,h))}else!c&&l()}var h=!!a.test,i=a.load||a.both,j=a.callback||f,k=j,l=a.complete||f,m,n;c(h?a.yep:a.nope,!!i),i&&c(i)}var i,j,l=this.yepnope.loader;if(e(a))g(a,0,l,0);else if(w(a))for(i=0;i<a.length;i++)j=a[i],e(j)?g(j,0,l,0):w(j)?B(j):Object(j)===j&&h(j,l);else Object(a)===a&&h(a,l)},B.addPrefix=function(a,b){z[a]=b},B.addFilter=function(a){x.push(a)},B.errorTimeout=1e4,null==b.readyState&&b.addEventListener&&(b.readyState="loading",b.addEventListener("DOMContentLoaded",A=function(){b.removeEventListener("DOMContentLoaded",A,0),b.readyState="complete"},0)),a.yepnope=k(),a.yepnope.executeStack=h,a.yepnope.injectJs=function(a,c,d,e,i,j){var k=b.createElement("script"),l,o,e=e||B.errorTimeout;k.src=a;for(o in d)k.setAttribute(o,d[o]);c=j?h:c||f,k.onreadystatechange=k.onload=function(){!l&&g(k.readyState)&&(l=1,c(),k.onload=k.onreadystatechange=null)},m(function(){l||(l=1,c(1))},e),i?k.onload():n.parentNode.insertBefore(k,n)},a.yepnope.injectCss=function(a,c,d,e,g,i){var e=b.createElement("link"),j,c=i?h:c||f;e.href=a,e.rel="stylesheet",e.type="text/css";for(j in d)e.setAttribute(j,d[j]);g||(n.parentNode.insertBefore(e,n),m(c,0))}}(this,document),Modernizr.load=function(){yepnope.apply(window,[].slice.call(arguments,0))};
/*1.0*/
/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.core.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */

(function(a,b){function c(b,c){var e=b.nodeName.toLowerCase();if("area"===e){var f=b.parentNode,g=f.name,h;return!b.href||!g||f.nodeName.toLowerCase()!=="map"?!1:(h=a("img[usemap=#"+g+"]")[0],!!h&&d(h))}return(/input|select|textarea|button|object/.test(e)?!b.disabled:"a"==e?b.href||c:c)&&d(b)}function d(b){return!a(b).parents().andSelf().filter(function(){return a.curCSS(this,"visibility")==="hidden"||a.expr.filters.hidden(this)}).length}a.ui=a.ui||{};if(a.ui.version)return;a.extend(a.ui,{version:"1.8.20",keyCode:{ALT:18,BACKSPACE:8,CAPS_LOCK:20,COMMA:188,COMMAND:91,COMMAND_LEFT:91,COMMAND_RIGHT:93,CONTROL:17,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,INSERT:45,LEFT:37,MENU:93,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SHIFT:16,SPACE:32,TAB:9,UP:38,WINDOWS:91}}),a.fn.extend({propAttr:a.fn.prop||a.fn.attr,_focus:a.fn.focus,focus:function(b,c){return typeof b=="number"?this.each(function(){var d=this;setTimeout(function(){a(d).focus(),c&&c.call(d)},b)}):this._focus.apply(this,arguments)},scrollParent:function(){var b;return a.browser.msie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?b=this.parents().filter(function(){return/(relative|absolute|fixed)/.test(a.curCSS(this,"position",1))&&/(auto|scroll)/.test(a.curCSS(this,"overflow",1)+a.curCSS(this,"overflow-y",1)+a.curCSS(this,"overflow-x",1))}).eq(0):b=this.parents().filter(function(){return/(auto|scroll)/.test(a.curCSS(this,"overflow",1)+a.curCSS(this,"overflow-y",1)+a.curCSS(this,"overflow-x",1))}).eq(0),/fixed/.test(this.css("position"))||!b.length?a(document):b},zIndex:function(c){if(c!==b)return this.css("zIndex",c);if(this.length){var d=a(this[0]),e,f;while(d.length&&d[0]!==document){e=d.css("position");if(e==="absolute"||e==="relative"||e==="fixed"){f=parseInt(d.css("zIndex"),10);if(!isNaN(f)&&f!==0)return f}d=d.parent()}}return 0},disableSelection:function(){return this.bind((a.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(a){a.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),a.each(["Width","Height"],function(c,d){function h(b,c,d,f){return a.each(e,function(){c-=parseFloat(a.curCSS(b,"padding"+this,!0))||0,d&&(c-=parseFloat(a.curCSS(b,"border"+this+"Width",!0))||0),f&&(c-=parseFloat(a.curCSS(b,"margin"+this,!0))||0)}),c}var e=d==="Width"?["Left","Right"]:["Top","Bottom"],f=d.toLowerCase(),g={innerWidth:a.fn.innerWidth,innerHeight:a.fn.innerHeight,outerWidth:a.fn.outerWidth,outerHeight:a.fn.outerHeight};a.fn["inner"+d]=function(c){return c===b?g["inner"+d].call(this):this.each(function(){a(this).css(f,h(this,c)+"px")})},a.fn["outer"+d]=function(b,c){return typeof b!="number"?g["outer"+d].call(this,b):this.each(function(){a(this).css(f,h(this,b,!0,c)+"px")})}}),a.extend(a.expr[":"],{data:function(b,c,d){return!!a.data(b,d[3])},focusable:function(b){return c(b,!isNaN(a.attr(b,"tabindex")))},tabbable:function(b){var d=a.attr(b,"tabindex"),e=isNaN(d);return(e||d>=0)&&c(b,!e)}}),a(function(){var b=document.body,c=b.appendChild(c=document.createElement("div"));c.offsetHeight,a.extend(c.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0}),a.support.minHeight=c.offsetHeight===100,a.support.selectstart="onselectstart"in c,b.removeChild(c).style.display="none"}),a.extend(a.ui,{plugin:{add:function(b,c,d){var e=a.ui[b].prototype;for(var f in d)e.plugins[f]=e.plugins[f]||[],e.plugins[f].push([c,d[f]])},call:function(a,b,c){var d=a.plugins[b];if(!d||!a.element[0].parentNode)return;for(var e=0;e<d.length;e++)a.options[d[e][0]]&&d[e][1].apply(a.element,c)}},contains:function(a,b){return document.compareDocumentPosition?a.compareDocumentPosition(b)&16:a!==b&&a.contains(b)},hasScroll:function(b,c){if(a(b).css("overflow")==="hidden")return!1;var d=c&&c==="left"?"scrollLeft":"scrollTop",e=!1;return b[d]>0?!0:(b[d]=1,e=b[d]>0,b[d]=0,e)},isOverAxis:function(a,b,c){return a>b&&a<b+c},isOver:function(b,c,d,e,f,g){return a.ui.isOverAxis(b,d,f)&&a.ui.isOverAxis(c,e,g)}})})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.widget.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){if(a.cleanData){var c=a.cleanData;a.cleanData=function(b){for(var d=0,e;(e=b[d])!=null;d++)try{a(e).triggerHandler("remove")}catch(f){}c(b)}}else{var d=a.fn.remove;a.fn.remove=function(b,c){return this.each(function(){return c||(!b||a.filter(b,[this]).length)&&a("*",this).add([this]).each(function(){try{a(this).triggerHandler("remove")}catch(b){}}),d.call(a(this),b,c)})}}a.widget=function(b,c,d){var e=b.split(".")[0],f;b=b.split(".")[1],f=e+"-"+b,d||(d=c,c=a.Widget),a.expr[":"][f]=function(c){return!!a.data(c,b)},a[e]=a[e]||{},a[e][b]=function(a,b){arguments.length&&this._createWidget(a,b)};var g=new c;g.options=a.extend(!0,{},g.options),a[e][b].prototype=a.extend(!0,g,{namespace:e,widgetName:b,widgetEventPrefix:a[e][b].prototype.widgetEventPrefix||b,widgetBaseClass:f},d),a.widget.bridge(b,a[e][b])},a.widget.bridge=function(c,d){a.fn[c]=function(e){var f=typeof e=="string",g=Array.prototype.slice.call(arguments,1),h=this;return e=!f&&g.length?a.extend.apply(null,[!0,e].concat(g)):e,f&&e.charAt(0)==="_"?h:(f?this.each(function(){var d=a.data(this,c),f=d&&a.isFunction(d[e])?d[e].apply(d,g):d;if(f!==d&&f!==b)return h=f,!1}):this.each(function(){var b=a.data(this,c);b?b.option(e||{})._init():a.data(this,c,new d(e,this))}),h)}},a.Widget=function(a,b){arguments.length&&this._createWidget(a,b)},a.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",options:{disabled:!1},_createWidget:function(b,c){a.data(c,this.widgetName,this),this.element=a(c),this.options=a.extend(!0,{},this.options,this._getCreateOptions(),b);var d=this;this.element.bind("remove."+this.widgetName,function(){d.destroy()}),this._create(),this._trigger("create"),this._init()},_getCreateOptions:function(){return a.metadata&&a.metadata.get(this.element[0])[this.widgetName]},_create:function(){},_init:function(){},destroy:function(){this.element.unbind("."+this.widgetName).removeData(this.widgetName),this.widget().unbind("."+this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass+"-disabled "+"ui-state-disabled")},widget:function(){return this.element},option:function(c,d){var e=c;if(arguments.length===0)return a.extend({},this.options);if(typeof c=="string"){if(d===b)return this.options[c];e={},e[c]=d}return this._setOptions(e),this},_setOptions:function(b){var c=this;return a.each(b,function(a,b){c._setOption(a,b)}),this},_setOption:function(a,b){return this.options[a]=b,a==="disabled"&&this.widget()[b?"addClass":"removeClass"](this.widgetBaseClass+"-disabled"+" "+"ui-state-disabled").attr("aria-disabled",b),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_trigger:function(b,c,d){var e,f,g=this.options[b];d=d||{},c=a.Event(c),c.type=(b===this.widgetEventPrefix?b:this.widgetEventPrefix+b).toLowerCase(),c.target=this.element[0],f=c.originalEvent;if(f)for(e in f)e in c||(c[e]=f[e]);return this.element.trigger(c,d),!(a.isFunction(g)&&g.call(this.element[0],c,d)===!1||c.isDefaultPrevented())}}})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.mouse.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){var c=!1;a(document).mouseup(function(a){c=!1}),a.widget("ui.mouse",{options:{cancel:":input,option",distance:1,delay:0},_mouseInit:function(){var b=this;this.element.bind("mousedown."+this.widgetName,function(a){return b._mouseDown(a)}).bind("click."+this.widgetName,function(c){if(!0===a.data(c.target,b.widgetName+".preventClickEvent"))return a.removeData(c.target,b.widgetName+".preventClickEvent"),c.stopImmediatePropagation(),!1}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),a(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(b){if(c)return;this._mouseStarted&&this._mouseUp(b),this._mouseDownEvent=b;var d=this,e=b.which==1,f=typeof this.options.cancel=="string"&&b.target.nodeName?a(b.target).closest(this.options.cancel).length:!1;if(!e||f||!this._mouseCapture(b))return!0;this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){d.mouseDelayMet=!0},this.options.delay));if(this._mouseDistanceMet(b)&&this._mouseDelayMet(b)){this._mouseStarted=this._mouseStart(b)!==!1;if(!this._mouseStarted)return b.preventDefault(),!0}return!0===a.data(b.target,this.widgetName+".preventClickEvent")&&a.removeData(b.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(a){return d._mouseMove(a)},this._mouseUpDelegate=function(a){return d._mouseUp(a)},a(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),b.preventDefault(),c=!0,!0},_mouseMove:function(b){return!a.browser.msie||document.documentMode>=9||!!b.button?this._mouseStarted?(this._mouseDrag(b),b.preventDefault()):(this._mouseDistanceMet(b)&&this._mouseDelayMet(b)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,b)!==!1,this._mouseStarted?this._mouseDrag(b):this._mouseUp(b)),!this._mouseStarted):this._mouseUp(b)},_mouseUp:function(b){return a(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,b.target==this._mouseDownEvent.target&&a.data(b.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(b)),!1},_mouseDistanceMet:function(a){return Math.max(Math.abs(this._mouseDownEvent.pageX-a.pageX),Math.abs(this._mouseDownEvent.pageY-a.pageY))>=this.options.distance},_mouseDelayMet:function(a){return this.mouseDelayMet},_mouseStart:function(a){},_mouseDrag:function(a){},_mouseStop:function(a){},_mouseCapture:function(a){return!0}})})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.position.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.ui=a.ui||{};var c=/left|center|right/,d=/top|center|bottom/,e="center",f={},g=a.fn.position,h=a.fn.offset;a.fn.position=function(b){if(!b||!b.of)return g.apply(this,arguments);b=a.extend({},b);var h=a(b.of),i=h[0],j=(b.collision||"flip").split(" "),k=b.offset?b.offset.split(" "):[0,0],l,m,n;return i.nodeType===9?(l=h.width(),m=h.height(),n={top:0,left:0}):i.setTimeout?(l=h.width(),m=h.height(),n={top:h.scrollTop(),left:h.scrollLeft()}):i.preventDefault?(b.at="left top",l=m=0,n={top:b.of.pageY,left:b.of.pageX}):(l=h.outerWidth(),m=h.outerHeight(),n=h.offset()),a.each(["my","at"],function(){var a=(b[this]||"").split(" ");a.length===1&&(a=c.test(a[0])?a.concat([e]):d.test(a[0])?[e].concat(a):[e,e]),a[0]=c.test(a[0])?a[0]:e,a[1]=d.test(a[1])?a[1]:e,b[this]=a}),j.length===1&&(j[1]=j[0]),k[0]=parseInt(k[0],10)||0,k.length===1&&(k[1]=k[0]),k[1]=parseInt(k[1],10)||0,b.at[0]==="right"?n.left+=l:b.at[0]===e&&(n.left+=l/2),b.at[1]==="bottom"?n.top+=m:b.at[1]===e&&(n.top+=m/2),n.left+=k[0],n.top+=k[1],this.each(function(){var c=a(this),d=c.outerWidth(),g=c.outerHeight(),h=parseInt(a.curCSS(this,"marginLeft",!0))||0,i=parseInt(a.curCSS(this,"marginTop",!0))||0,o=d+h+(parseInt(a.curCSS(this,"marginRight",!0))||0),p=g+i+(parseInt(a.curCSS(this,"marginBottom",!0))||0),q=a.extend({},n),r;b.my[0]==="right"?q.left-=d:b.my[0]===e&&(q.left-=d/2),b.my[1]==="bottom"?q.top-=g:b.my[1]===e&&(q.top-=g/2),f.fractions||(q.left=Math.round(q.left),q.top=Math.round(q.top)),r={left:q.left-h,top:q.top-i},a.each(["left","top"],function(c,e){a.ui.position[j[c]]&&a.ui.position[j[c]][e](q,{targetWidth:l,targetHeight:m,elemWidth:d,elemHeight:g,collisionPosition:r,collisionWidth:o,collisionHeight:p,offset:k,my:b.my,at:b.at})}),a.fn.bgiframe&&c.bgiframe(),c.offset(a.extend(q,{using:b.using}))})},a.ui.position={fit:{left:function(b,c){var d=a(window),e=c.collisionPosition.left+c.collisionWidth-d.width()-d.scrollLeft();b.left=e>0?b.left-e:Math.max(b.left-c.collisionPosition.left,b.left)},top:function(b,c){var d=a(window),e=c.collisionPosition.top+c.collisionHeight-d.height()-d.scrollTop();b.top=e>0?b.top-e:Math.max(b.top-c.collisionPosition.top,b.top)}},flip:{left:function(b,c){if(c.at[0]===e)return;var d=a(window),f=c.collisionPosition.left+c.collisionWidth-d.width()-d.scrollLeft(),g=c.my[0]==="left"?-c.elemWidth:c.my[0]==="right"?c.elemWidth:0,h=c.at[0]==="left"?c.targetWidth:-c.targetWidth,i=-2*c.offset[0];b.left+=c.collisionPosition.left<0?g+h+i:f>0?g+h+i:0},top:function(b,c){if(c.at[1]===e)return;var d=a(window),f=c.collisionPosition.top+c.collisionHeight-d.height()-d.scrollTop(),g=c.my[1]==="top"?-c.elemHeight:c.my[1]==="bottom"?c.elemHeight:0,h=c.at[1]==="top"?c.targetHeight:-c.targetHeight,i=-2*c.offset[1];b.top+=c.collisionPosition.top<0?g+h+i:f>0?g+h+i:0}}},a.offset.setOffset||(a.offset.setOffset=function(b,c){/static/.test(a.curCSS(b,"position"))&&(b.style.position="relative");var d=a(b),e=d.offset(),f=parseInt(a.curCSS(b,"top",!0),10)||0,g=parseInt(a.curCSS(b,"left",!0),10)||0,h={top:c.top-e.top+f,left:c.left-e.left+g};"using"in c?c.using.call(b,h):d.css(h)},a.fn.offset=function(b){var c=this[0];return!c||!c.ownerDocument?null:b?this.each(function(){a.offset.setOffset(this,b)}):h.call(this)}),function(){var b=document.getElementsByTagName("body")[0],c=document.createElement("div"),d,e,g,h,i;d=document.createElement(b?"div":"body"),g={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},b&&a.extend(g,{position:"absolute",left:"-1000px",top:"-1000px"});for(var j in g)d.style[j]=g[j];d.appendChild(c),e=b||document.documentElement,e.insertBefore(d,e.firstChild),c.style.cssText="position: absolute; left: 10.7432222px; top: 10.432325px; height: 30px; width: 201px;",h=a(c).offset(function(a,b){return b}).offset(),d.innerHTML="",e.removeChild(d),i=h.top+h.left+(b?2e3:0),f.fractions=i>21&&i<22}()})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.draggable.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.widget("ui.draggable",a.ui.mouse,{widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1},_create:function(){this.options.helper=="original"&&!/^(?:r|a|f)/.test(this.element.css("position"))&&(this.element[0].style.position="relative"),this.options.addClasses&&this.element.addClass("ui-draggable"),this.options.disabled&&this.element.addClass("ui-draggable-disabled"),this._mouseInit()},destroy:function(){if(!this.element.data("draggable"))return;return this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._mouseDestroy(),this},_mouseCapture:function(b){var c=this.options;return this.helper||c.disabled||a(b.target).is(".ui-resizable-handle")?!1:(this.handle=this._getHandle(b),this.handle?(c.iframeFix&&a(c.iframeFix===!0?"iframe":c.iframeFix).each(function(){a('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1e3}).css(a(this).offset()).appendTo("body")}),!0):!1)},_mouseStart:function(b){var c=this.options;return this.helper=this._createHelper(b),this._cacheHelperProportions(),a.ui.ddmanager&&(a.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},a.extend(this.offset,{click:{left:b.pageX-this.offset.left,top:b.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(b),this.originalPageX=b.pageX,this.originalPageY=b.pageY,c.cursorAt&&this._adjustOffsetFromHelper(c.cursorAt),c.containment&&this._setContainment(),this._trigger("start",b)===!1?(this._clear(),!1):(this._cacheHelperProportions(),a.ui.ddmanager&&!c.dropBehaviour&&a.ui.ddmanager.prepareOffsets(this,b),this.helper.addClass("ui-draggable-dragging"),this._mouseDrag(b,!0),a.ui.ddmanager&&a.ui.ddmanager.dragStart(this,b),!0)},_mouseDrag:function(b,c){this.position=this._generatePosition(b),this.positionAbs=this._convertPositionTo("absolute");if(!c){var d=this._uiHash();if(this._trigger("drag",b,d)===!1)return this._mouseUp({}),!1;this.position=d.position}if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";return a.ui.ddmanager&&a.ui.ddmanager.drag(this,b),!1},_mouseStop:function(b){var c=!1;a.ui.ddmanager&&!this.options.dropBehaviour&&(c=a.ui.ddmanager.drop(this,b)),this.dropped&&(c=this.dropped,this.dropped=!1);var d=this.element[0],e=!1;while(d&&(d=d.parentNode))d==document&&(e=!0);if(!e&&this.options.helper==="original")return!1;if(this.options.revert=="invalid"&&!c||this.options.revert=="valid"&&c||this.options.revert===!0||a.isFunction(this.options.revert)&&this.options.revert.call(this.element,c)){var f=this;a(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){f._trigger("stop",b)!==!1&&f._clear()})}else this._trigger("stop",b)!==!1&&this._clear();return!1},_mouseUp:function(b){return this.options.iframeFix===!0&&a("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)}),a.ui.ddmanager&&a.ui.ddmanager.dragStop(this,b),a.ui.mouse.prototype._mouseUp.call(this,b)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(b){var c=!this.options.handle||!a(this.options.handle,this.element).length?!0:!1;return a(this.options.handle,this.element).find("*").andSelf().each(function(){this==b.target&&(c=!0)}),c},_createHelper:function(b){var c=this.options,d=a.isFunction(c.helper)?a(c.helper.apply(this.element[0],[b])):c.helper=="clone"?this.element.clone().removeAttr("id"):this.element;return d.parents("body").length||d.appendTo(c.appendTo=="parent"?this.element[0].parentNode:c.appendTo),d[0]!=this.element[0]&&!/(fixed|absolute)/.test(d.css("position"))&&d.css("position","absolute"),d},_adjustOffsetFromHelper:function(b){typeof b=="string"&&(b=b.split(" ")),a.isArray(b)&&(b={left:+b[0],top:+b[1]||0}),"left"in b&&(this.offset.click.left=b.left+this.margins.left),"right"in b&&(this.offset.click.left=this.helperProportions.width-b.right+this.margins.left),"top"in b&&(this.offset.click.top=b.top+this.margins.top),"bottom"in b&&(this.offset.click.top=this.helperProportions.height-b.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var b=this.offsetParent.offset();this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&a.ui.contains(this.scrollParent[0],this.offsetParent[0])&&(b.left+=this.scrollParent.scrollLeft(),b.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&a.browser.msie)b={top:0,left:0};return{top:b.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:b.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var a=this.element.position();return{top:a.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:a.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var b=this.options;b.containment=="parent"&&(b.containment=this.helper[0].parentNode);if(b.containment=="document"||b.containment=="window")this.containment=[b.containment=="document"?0:a(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,b.containment=="document"?0:a(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,(b.containment=="document"?0:a(window).scrollLeft())+a(b.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(b.containment=="document"?0:a(window).scrollTop())+(a(b.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(b.containment)&&b.containment.constructor!=Array){var c=a(b.containment),d=c[0];if(!d)return;var e=c.offset(),f=a(d).css("overflow")!="hidden";this.containment=[(parseInt(a(d).css("borderLeftWidth"),10)||0)+(parseInt(a(d).css("paddingLeft"),10)||0),(parseInt(a(d).css("borderTopWidth"),10)||0)+(parseInt(a(d).css("paddingTop"),10)||0),(f?Math.max(d.scrollWidth,d.offsetWidth):d.offsetWidth)-(parseInt(a(d).css("borderLeftWidth"),10)||0)-(parseInt(a(d).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(f?Math.max(d.scrollHeight,d.offsetHeight):d.offsetHeight)-(parseInt(a(d).css("borderTopWidth"),10)||0)-(parseInt(a(d).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=c}else b.containment.constructor==Array&&(this.containment=b.containment)},_convertPositionTo:function(b,c){c||(c=this.position);var d=b=="absolute"?1:-1,e=this.options,f=this.cssPosition=="absolute"&&(this.scrollParent[0]==document||!a.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,g=/(html|body)/i.test(f[0].tagName);return{top:c.top+this.offset.relative.top*d+this.offset.parent.top*d-(a.browser.safari&&a.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():g?0:f.scrollTop())*d),left:c.left+this.offset.relative.left*d+this.offset.parent.left*d-(a.browser.safari&&a.browser.version<526&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():g?0:f.scrollLeft())*d)}},_generatePosition:function(b){var c=this.options,d=this.cssPosition=="absolute"&&(this.scrollParent[0]==document||!a.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,e=/(html|body)/i.test(d[0].tagName),f=b.pageX,g=b.pageY;if(this.originalPosition){var h;if(this.containment){if(this.relative_container){var i=this.relative_container.offset();h=[this.containment[0]+i.left,this.containment[1]+i.top,this.containment[2]+i.left,this.containment[3]+i.top]}else h=this.containment;b.pageX-this.offset.click.left<h[0]&&(f=h[0]+this.offset.click.left),b.pageY-this.offset.click.top<h[1]&&(g=h[1]+this.offset.click.top),b.pageX-this.offset.click.left>h[2]&&(f=h[2]+this.offset.click.left),b.pageY-this.offset.click.top>h[3]&&(g=h[3]+this.offset.click.top)}if(c.grid){var j=c.grid[1]?this.originalPageY+Math.round((g-this.originalPageY)/c.grid[1])*c.grid[1]:this.originalPageY;g=h?j-this.offset.click.top<h[1]||j-this.offset.click.top>h[3]?j-this.offset.click.top<h[1]?j+c.grid[1]:j-c.grid[1]:j:j;var k=c.grid[0]?this.originalPageX+Math.round((f-this.originalPageX)/c.grid[0])*c.grid[0]:this.originalPageX;f=h?k-this.offset.click.left<h[0]||k-this.offset.click.left>h[2]?k-this.offset.click.left<h[0]?k+c.grid[0]:k-c.grid[0]:k:k}}return{top:g-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(a.browser.safari&&a.browser.version<526&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollTop():e?0:d.scrollTop()),left:f-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(a.browser.safari&&a.browser.version<526&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():e?0:d.scrollLeft())}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]!=this.element[0]&&!this.cancelHelperRemoval&&this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1},_trigger:function(b,c,d){return d=d||this._uiHash(),a.ui.plugin.call(this,b,[c,d]),b=="drag"&&(this.positionAbs=this._convertPositionTo("absolute")),a.Widget.prototype._trigger.call(this,b,c,d)},plugins:{},_uiHash:function(a){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),a.extend(a.ui.draggable,{version:"1.8.20"}),a.ui.plugin.add("draggable","connectToSortable",{start:function(b,c){var d=a(this).data("draggable"),e=d.options,f=a.extend({},c,{item:d.element});d.sortables=[],a(e.connectToSortable).each(function(){var c=a.data(this,"sortable");c&&!c.options.disabled&&(d.sortables.push({instance:c,shouldRevert:c.options.revert}),c.refreshPositions(),c._trigger("activate",b,f))})},stop:function(b,c){var d=a(this).data("draggable"),e=a.extend({},c,{item:d.element});a.each(d.sortables,function(){this.instance.isOver?(this.instance.isOver=0,d.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=!0),this.instance._mouseStop(b),this.instance.options.helper=this.instance.options._helper,d.options.helper=="original"&&this.instance.currentItem.css({top:"auto",left:"auto"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger("deactivate",b,e))})},drag:function(b,c){var d=a(this).data("draggable"),e=this,f=function(b){var c=this.offset.click.top,d=this.offset.click.left,e=this.positionAbs.top,f=this.positionAbs.left,g=b.height,h=b.width,i=b.top,j=b.left;return a.ui.isOver(e+c,f+d,i,j,g,h)};a.each(d.sortables,function(f){this.instance.positionAbs=d.positionAbs,this.instance.helperProportions=d.helperProportions,this.instance.offset.click=d.offset.click,this.instance._intersectsWith(this.instance.containerCache)?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=a(e).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return c.helper[0]},b.target=this.instance.currentItem[0],this.instance._mouseCapture(b,!0),this.instance._mouseStart(b,!0,!0),this.instance.offset.click.top=d.offset.click.top,this.instance.offset.click.left=d.offset.click.left,this.instance.offset.parent.left-=d.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=d.offset.parent.top-this.instance.offset.parent.top,d._trigger("toSortable",b),d.dropped=this.instance.element,d.currentItem=d.element,this.instance.fromOutside=d),this.instance.currentItem&&this.instance._mouseDrag(b)):this.instance.isOver&&(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger("out",b,this.instance._uiHash(this.instance)),this.instance._mouseStop(b,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),d._trigger("fromSortable",b),d.dropped=!1)})}}),a.ui.plugin.add("draggable","cursor",{start:function(b,c){var d=a("body"),e=a(this).data("draggable").options;d.css("cursor")&&(e._cursor=d.css("cursor")),d.css("cursor",e.cursor)},stop:function(b,c){var d=a(this).data("draggable").options;d._cursor&&a("body").css("cursor",d._cursor)}}),a.ui.plugin.add("draggable","opacity",{start:function(b,c){var d=a(c.helper),e=a(this).data("draggable").options;d.css("opacity")&&(e._opacity=d.css("opacity")),d.css("opacity",e.opacity)},stop:function(b,c){var d=a(this).data("draggable").options;d._opacity&&a(c.helper).css("opacity",d._opacity)}}),a.ui.plugin.add("draggable","scroll",{start:function(b,c){var d=a(this).data("draggable");d.scrollParent[0]!=document&&d.scrollParent[0].tagName!="HTML"&&(d.overflowOffset=d.scrollParent.offset())},drag:function(b,c){var d=a(this).data("draggable"),e=d.options,f=!1;if(d.scrollParent[0]!=document&&d.scrollParent[0].tagName!="HTML"){if(!e.axis||e.axis!="x")d.overflowOffset.top+d.scrollParent[0].offsetHeight-b.pageY<e.scrollSensitivity?d.scrollParent[0].scrollTop=f=d.scrollParent[0].scrollTop+e.scrollSpeed:b.pageY-d.overflowOffset.top<e.scrollSensitivity&&(d.scrollParent[0].scrollTop=f=d.scrollParent[0].scrollTop-e.scrollSpeed);if(!e.axis||e.axis!="y")d.overflowOffset.left+d.scrollParent[0].offsetWidth-b.pageX<e.scrollSensitivity?d.scrollParent[0].scrollLeft=f=d.scrollParent[0].scrollLeft+e.scrollSpeed:b.pageX-d.overflowOffset.left<e.scrollSensitivity&&(d.scrollParent[0].scrollLeft=f=d.scrollParent[0].scrollLeft-e.scrollSpeed)}else{if(!e.axis||e.axis!="x")b.pageY-a(document).scrollTop()<e.scrollSensitivity?f=a(document).scrollTop(a(document).scrollTop()-e.scrollSpeed):a(window).height()-(b.pageY-a(document).scrollTop())<e.scrollSensitivity&&(f=a(document).scrollTop(a(document).scrollTop()+e.scrollSpeed));if(!e.axis||e.axis!="y")b.pageX-a(document).scrollLeft()<e.scrollSensitivity?f=a(document).scrollLeft(a(document).scrollLeft()-e.scrollSpeed):a(window).width()-(b.pageX-a(document).scrollLeft())<e.scrollSensitivity&&(f=a(document).scrollLeft(a(document).scrollLeft()+e.scrollSpeed))}f!==!1&&a.ui.ddmanager&&!e.dropBehaviour&&a.ui.ddmanager.prepareOffsets(d,b)}}),a.ui.plugin.add("draggable","snap",{start:function(b,c){var d=a(this).data("draggable"),e=d.options;d.snapElements=[],a(e.snap.constructor!=String?e.snap.items||":data(draggable)":e.snap).each(function(){var b=a(this),c=b.offset();this!=d.element[0]&&d.snapElements.push({item:this,width:b.outerWidth(),height:b.outerHeight(),top:c.top,left:c.left})})},drag:function(b,c){var d=a(this).data("draggable"),e=d.options,f=e.snapTolerance,g=c.offset.left,h=g+d.helperProportions.width,i=c.offset.top,j=i+d.helperProportions.height;for(var k=d.snapElements.length-1;k>=0;k--){var l=d.snapElements[k].left,m=l+d.snapElements[k].width,n=d.snapElements[k].top,o=n+d.snapElements[k].height;if(!(l-f<g&&g<m+f&&n-f<i&&i<o+f||l-f<g&&g<m+f&&n-f<j&&j<o+f||l-f<h&&h<m+f&&n-f<i&&i<o+f||l-f<h&&h<m+f&&n-f<j&&j<o+f)){d.snapElements[k].snapping&&d.options.snap.release&&d.options.snap.release.call(d.element,b,a.extend(d._uiHash(),{snapItem:d.snapElements[k].item})),d.snapElements[k].snapping=!1;continue}if(e.snapMode!="inner"){var p=Math.abs(n-j)<=f,q=Math.abs(o-i)<=f,r=Math.abs(l-h)<=f,s=Math.abs(m-g)<=f;p&&(c.position.top=d._convertPositionTo("relative",{top:n-d.helperProportions.height,left:0}).top-d.margins.top),q&&(c.position.top=d._convertPositionTo("relative",{top:o,left:0}).top-d.margins.top),r&&(c.position.left=d._convertPositionTo("relative",{top:0,left:l-d.helperProportions.width}).left-d.margins.left),s&&(c.position.left=d._convertPositionTo("relative",{top:0,left:m}).left-d.margins.left)}var t=p||q||r||s;if(e.snapMode!="outer"){var p=Math.abs(n-i)<=f,q=Math.abs(o-j)<=f,r=Math.abs(l-g)<=f,s=Math.abs(m-h)<=f;p&&(c.position.top=d._convertPositionTo("relative",{top:n,left:0}).top-d.margins.top),q&&(c.position.top=d._convertPositionTo("relative",{top:o-d.helperProportions.height,left:0}).top-d.margins.top),r&&(c.position.left=d._convertPositionTo("relative",{top:0,left:l}).left-d.margins.left),s&&(c.position.left=d._convertPositionTo("relative",{top:0,left:m-d.helperProportions.width}).left-d.margins.left)}!d.snapElements[k].snapping&&(p||q||r||s||t)&&d.options.snap.snap&&d.options.snap.snap.call(d.element,b,a.extend(d._uiHash(),{snapItem:d.snapElements[k].item})),d.snapElements[k].snapping=p||q||r||s||t}}}),a.ui.plugin.add("draggable","stack",{start:function(b,c){var d=a(this).data("draggable").options,e=a.makeArray(a(d.stack)).sort(function(b,c){return(parseInt(a(b).css("zIndex"),10)||0)-(parseInt(a(c).css("zIndex"),10)||0)});if(!e.length)return;var f=parseInt(e[0].style.zIndex)||0;a(e).each(function(a){this.style.zIndex=f+a}),this[0].style.zIndex=f+e.length}}),a.ui.plugin.add("draggable","zIndex",{start:function(b,c){var d=a(c.helper),e=a(this).data("draggable").options;d.css("zIndex")&&(e._zIndex=d.css("zIndex")),d.css("zIndex",e.zIndex)},stop:function(b,c){var d=a(this).data("draggable").options;d._zIndex&&a(c.helper).css("zIndex",d._zIndex)}})})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.droppable.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.widget("ui.droppable",{widgetEventPrefix:"drop",options:{accept:"*",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:"default",tolerance:"intersect"},_create:function(){var b=this.options,c=b.accept;this.isover=0,this.isout=1,this.accept=a.isFunction(c)?c:function(a){return a.is(c)},this.proportions={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight},a.ui.ddmanager.droppables[b.scope]=a.ui.ddmanager.droppables[b.scope]||[],a.ui.ddmanager.droppables[b.scope].push(this),b.addClasses&&this.element.addClass("ui-droppable")},destroy:function(){var b=a.ui.ddmanager.droppables[this.options.scope];for(var c=0;c<b.length;c++)b[c]==this&&b.splice(c,1);return this.element.removeClass("ui-droppable ui-droppable-disabled").removeData("droppable").unbind(".droppable"),this},_setOption:function(b,c){b=="accept"&&(this.accept=a.isFunction(c)?c:function(a){return a.is(c)}),a.Widget.prototype._setOption.apply(this,arguments)},_activate:function(b){var c=a.ui.ddmanager.current;this.options.activeClass&&this.element.addClass(this.options.activeClass),c&&this._trigger("activate",b,this.ui(c))},_deactivate:function(b){var c=a.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass),c&&this._trigger("deactivate",b,this.ui(c))},_over:function(b){var c=a.ui.ddmanager.current;if(!c||(c.currentItem||c.element)[0]==this.element[0])return;this.accept.call(this.element[0],c.currentItem||c.element)&&(this.options.hoverClass&&this.element.addClass(this.options.hoverClass),this._trigger("over",b,this.ui(c)))},_out:function(b){var c=a.ui.ddmanager.current;if(!c||(c.currentItem||c.element)[0]==this.element[0])return;this.accept.call(this.element[0],c.currentItem||c.element)&&(this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("out",b,this.ui(c)))},_drop:function(b,c){var d=c||a.ui.ddmanager.current;if(!d||(d.currentItem||d.element)[0]==this.element[0])return!1;var e=!1;return this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function(){var b=a.data(this,"droppable");if(b.options.greedy&&!b.options.disabled&&b.options.scope==d.options.scope&&b.accept.call(b.element[0],d.currentItem||d.element)&&a.ui.intersect(d,a.extend(b,{offset:b.element.offset()}),b.options.tolerance))return e=!0,!1}),e?!1:this.accept.call(this.element[0],d.currentItem||d.element)?(this.options.activeClass&&this.element.removeClass(this.options.activeClass),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("drop",b,this.ui(d)),this.element):!1},ui:function(a){return{draggable:a.currentItem||a.element,helper:a.helper,position:a.position,offset:a.positionAbs}}}),a.extend(a.ui.droppable,{version:"1.8.20"}),a.ui.intersect=function(b,c,d){if(!c.offset)return!1;var e=(b.positionAbs||b.position.absolute).left,f=e+b.helperProportions.width,g=(b.positionAbs||b.position.absolute).top,h=g+b.helperProportions.height,i=c.offset.left,j=i+c.proportions.width,k=c.offset.top,l=k+c.proportions.height;switch(d){case"fit":return i<=e&&f<=j&&k<=g&&h<=l;case"intersect":return i<e+b.helperProportions.width/2&&f-b.helperProportions.width/2<j&&k<g+b.helperProportions.height/2&&h-b.helperProportions.height/2<l;case"pointer":var m=(b.positionAbs||b.position.absolute).left+(b.clickOffset||b.offset.click).left,n=(b.positionAbs||b.position.absolute).top+(b.clickOffset||b.offset.click).top,o=a.ui.isOver(n,m,k,i,c.proportions.height,c.proportions.width);return o;case"touch":return(g>=k&&g<=l||h>=k&&h<=l||g<k&&h>l)&&(e>=i&&e<=j||f>=i&&f<=j||e<i&&f>j);default:return!1}},a.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(b,c){var d=a.ui.ddmanager.droppables[b.options.scope]||[],e=c?c.type:null,f=(b.currentItem||b.element).find(":data(droppable)").andSelf();g:for(var h=0;h<d.length;h++){if(d[h].options.disabled||b&&!d[h].accept.call(d[h].element[0],b.currentItem||b.element))continue;for(var i=0;i<f.length;i++)if(f[i]==d[h].element[0]){d[h].proportions.height=0;continue g}d[h].visible=d[h].element.css("display")!="none";if(!d[h].visible)continue;e=="mousedown"&&d[h]._activate.call(d[h],c),d[h].offset=d[h].element.offset(),d[h].proportions={width:d[h].element[0].offsetWidth,height:d[h].element[0].offsetHeight}}},drop:function(b,c){var d=!1;return a.each(a.ui.ddmanager.droppables[b.options.scope]||[],function(){if(!this.options)return;!this.options.disabled&&this.visible&&a.ui.intersect(b,this,this.options.tolerance)&&(d=this._drop.call(this,c)||d),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],b.currentItem||b.element)&&(this.isout=1,this.isover=0,this._deactivate.call(this,c))}),d},dragStart:function(b,c){b.element.parents(":not(body,html)").bind("scroll.droppable",function(){b.options.refreshPositions||a.ui.ddmanager.prepareOffsets(b,c)})},drag:function(b,c){b.options.refreshPositions&&a.ui.ddmanager.prepareOffsets(b,c),a.each(a.ui.ddmanager.droppables[b.options.scope]||[],function(){if(this.options.disabled||this.greedyChild||!this.visible)return;var d=a.ui.intersect(b,this,this.options.tolerance),e=!d&&this.isover==1?"isout":d&&this.isover==0?"isover":null;if(!e)return;var f;if(this.options.greedy){var g=this.element.parents(":data(droppable):eq(0)");g.length&&(f=a.data(g[0],"droppable"),f.greedyChild=e=="isover"?1:0)}f&&e=="isover"&&(f.isover=0,f.isout=1,f._out.call(f,c)),this[e]=1,this[e=="isout"?"isover":"isout"]=0,this[e=="isover"?"_over":"_out"].call(this,c),f&&e=="isout"&&(f.isout=0,f.isover=1,f._over.call(f,c))})},dragStop:function(b,c){b.element.parents(":not(body,html)").unbind("scroll.droppable"),b.options.refreshPositions||a.ui.ddmanager.prepareOffsets(b,c)}}})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.resizable.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.widget("ui.resizable",a.ui.mouse,{widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:1e3},_create:function(){var b=this,c=this.options;this.element.addClass("ui-resizable"),a.extend(this,{_aspectRatio:!!c.aspectRatio,aspectRatio:c.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:c.helper||c.ghost||c.animate?c.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&&(this.element.wrap(a('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("resizable",this.element.data("resizable")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css({margin:this.originalElement.css("margin")}),this._proportionallyResize()),this.handles=c.handles||(a(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se");if(this.handles.constructor==String){this.handles=="all"&&(this.handles="n,e,s,w,se,sw,ne,nw");var d=this.handles.split(",");this.handles={};for(var e=0;e<d.length;e++){var f=a.trim(d[e]),g="ui-resizable-"+f,h=a('<div class="ui-resizable-handle '+g+'"></div>');h.css({zIndex:c.zIndex}),"se"==f&&h.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),this.handles[f]=".ui-resizable-"+f,this.element.append(h)}}this._renderAxis=function(b){b=b||this.element;for(var c in this.handles){this.handles[c].constructor==String&&(this.handles[c]=a(this.handles[c],this.element).show());if(this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)){var d=a(this.handles[c],this.element),e=0;e=/sw|ne|nw|se|n|s/.test(c)?d.outerHeight():d.outerWidth();var f=["padding",/ne|nw|n/.test(c)?"Top":/se|sw|s/.test(c)?"Bottom":/^e$/.test(c)?"Right":"Left"].join("");b.css(f,e),this._proportionallyResize()}if(!a(this.handles[c]).length)continue}},this._renderAxis(this.element),this._handles=a(".ui-resizable-handle",this.element).disableSelection(),this._handles.mouseover(function(){if(!b.resizing){if(this.className)var a=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);b.axis=a&&a[1]?a[1]:"se"}}),c.autoHide&&(this._handles.hide(),a(this.element).addClass("ui-resizable-autohide").hover(function(){if(c.disabled)return;a(this).removeClass("ui-resizable-autohide"),b._handles.show()},function(){if(c.disabled)return;b.resizing||(a(this).addClass("ui-resizable-autohide"),b._handles.hide())})),this._mouseInit()},destroy:function(){this._mouseDestroy();var b=function(b){a(b).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};if(this.elementIsWrapper){b(this.element);var c=this.element;c.after(this.originalElement.css({position:c.css("position"),width:c.outerWidth(),height:c.outerHeight(),top:c.css("top"),left:c.css("left")})).remove()}return this.originalElement.css("resize",this.originalResizeStyle),b(this.originalElement),this},_mouseCapture:function(b){var c=!1;for(var d in this.handles)a(this.handles[d])[0]==b.target&&(c=!0);return!this.options.disabled&&c},_mouseStart:function(b){var d=this.options,e=this.element.position(),f=this.element;this.resizing=!0,this.documentScroll={top:a(document).scrollTop(),left:a(document).scrollLeft()},(f.is(".ui-draggable")||/absolute/.test(f.css("position")))&&f.css({position:"absolute",top:e.top,left:e.left}),this._renderProxy();var g=c(this.helper.css("left")),h=c(this.helper.css("top"));d.containment&&(g+=a(d.containment).scrollLeft()||0,h+=a(d.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:g,top:h},this.size=this._helper?{width:f.outerWidth(),height:f.outerHeight()}:{width:f.width(),height:f.height()},this.originalSize=this._helper?{width:f.outerWidth(),height:f.outerHeight()}:{width:f.width(),height:f.height()},this.originalPosition={left:g,top:h},this.sizeDiff={width:f.outerWidth()-f.width(),height:f.outerHeight()-f.height()},this.originalMousePosition={left:b.pageX,top:b.pageY},this.aspectRatio=typeof d.aspectRatio=="number"?d.aspectRatio:this.originalSize.width/this.originalSize.height||1;var i=a(".ui-resizable-"+this.axis).css("cursor");return a("body").css("cursor",i=="auto"?this.axis+"-resize":i),f.addClass("ui-resizable-resizing"),this._propagate("start",b),!0},_mouseDrag:function(b){var c=this.helper,d=this.options,e={},f=this,g=this.originalMousePosition,h=this.axis,i=b.pageX-g.left||0,j=b.pageY-g.top||0,k=this._change[h];if(!k)return!1;var l=k.apply(this,[b,i,j]),m=a.browser.msie&&a.browser.version<7,n=this.sizeDiff;this._updateVirtualBoundaries(b.shiftKey);if(this._aspectRatio||b.shiftKey)l=this._updateRatio(l,b);return l=this._respectSize(l,b),this._propagate("resize",b),c.css({top:this.position.top+"px",left:this.position.left+"px",width:this.size.width+"px",height:this.size.height+"px"}),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),this._updateCache(l),this._trigger("resize",b,this.ui()),!1},_mouseStop:function(b){this.resizing=!1;var c=this.options,d=this;if(this._helper){var e=this._proportionallyResizeElements,f=e.length&&/textarea/i.test(e[0].nodeName),g=f&&a.ui.hasScroll(e[0],"left")?0:d.sizeDiff.height,h=f?0:d.sizeDiff.width,i={width:d.helper.width()-h,height:d.helper.height()-g},j=parseInt(d.element.css("left"),10)+(d.position.left-d.originalPosition.left)||null,k=parseInt(d.element.css("top"),10)+(d.position.top-d.originalPosition.top)||null;c.animate||this.element.css(a.extend(i,{top:k,left:j})),d.helper.height(d.size.height),d.helper.width(d.size.width),this._helper&&!c.animate&&this._proportionallyResize()}return a("body").css("cursor","auto"),this.element.removeClass("ui-resizable-resizing"),this._propagate("stop",b),this._helper&&this.helper.remove(),!1},_updateVirtualBoundaries:function(a){var b=this.options,c,e,f,g,h;h={minWidth:d(b.minWidth)?b.minWidth:0,maxWidth:d(b.maxWidth)?b.maxWidth:Infinity,minHeight:d(b.minHeight)?b.minHeight:0,maxHeight:d(b.maxHeight)?b.maxHeight:Infinity};if(this._aspectRatio||a)c=h.minHeight*this.aspectRatio,f=h.minWidth/this.aspectRatio,e=h.maxHeight*this.aspectRatio,g=h.maxWidth/this.aspectRatio,c>h.minWidth&&(h.minWidth=c),f>h.minHeight&&(h.minHeight=f),e<h.maxWidth&&(h.maxWidth=e),g<h.maxHeight&&(h.maxHeight=g);this._vBoundaries=h},_updateCache:function(a){var b=this.options;this.offset=this.helper.offset(),d(a.left)&&(this.position.left=a.left),d(a.top)&&(this.position.top=a.top),d(a.height)&&(this.size.height=a.height),d(a.width)&&(this.size.width=a.width)},_updateRatio:function(a,b){var c=this.options,e=this.position,f=this.size,g=this.axis;return d(a.height)?a.width=a.height*this.aspectRatio:d(a.width)&&(a.height=a.width/this.aspectRatio),g=="sw"&&(a.left=e.left+(f.width-a.width),a.top=null),g=="nw"&&(a.top=e.top+(f.height-a.height),a.left=e.left+(f.width-a.width)),a},_respectSize:function(a,b){var c=this.helper,e=this._vBoundaries,f=this._aspectRatio||b.shiftKey,g=this.axis,h=d(a.width)&&e.maxWidth&&e.maxWidth<a.width,i=d(a.height)&&e.maxHeight&&e.maxHeight<a.height,j=d(a.width)&&e.minWidth&&e.minWidth>a.width,k=d(a.height)&&e.minHeight&&e.minHeight>a.height;j&&(a.width=e.minWidth),k&&(a.height=e.minHeight),h&&(a.width=e.maxWidth),i&&(a.height=e.maxHeight);var l=this.originalPosition.left+this.originalSize.width,m=this.position.top+this.size.height,n=/sw|nw|w/.test(g),o=/nw|ne|n/.test(g);j&&n&&(a.left=l-e.minWidth),h&&n&&(a.left=l-e.maxWidth),k&&o&&(a.top=m-e.minHeight),i&&o&&(a.top=m-e.maxHeight);var p=!a.width&&!a.height;return p&&!a.left&&a.top?a.top=null:p&&!a.top&&a.left&&(a.left=null),a},_proportionallyResize:function(){var b=this.options;if(!this._proportionallyResizeElements.length)return;var c=this.helper||this.element;for(var d=0;d<this._proportionallyResizeElements.length;d++){var e=this._proportionallyResizeElements[d];if(!this.borderDif){var f=[e.css("borderTopWidth"),e.css("borderRightWidth"),e.css("borderBottomWidth"),e.css("borderLeftWidth")],g=[e.css("paddingTop"),e.css("paddingRight"),e.css("paddingBottom"),e.css("paddingLeft")];this.borderDif=a.map(f,function(a,b){var c=parseInt(a,10)||0,d=parseInt(g[b],10)||0;return c+d})}if(!a.browser.msie||!a(c).is(":hidden")&&!a(c).parents(":hidden").length)e.css({height:c.height()-this.borderDif[0]-this.borderDif[2]||0,width:c.width()-this.borderDif[1]-this.borderDif[3]||0});else continue}},_renderProxy:function(){var b=this.element,c=this.options;this.elementOffset=b.offset();if(this._helper){this.helper=this.helper||a('<div style="overflow:hidden;"></div>');var d=a.browser.msie&&a.browser.version<7,e=d?1:0,f=d?2:-1;this.helper.addClass(this._helper).css({width:this.element.outerWidth()+f,height:this.element.outerHeight()+f,position:"absolute",left:this.elementOffset.left-e+"px",top:this.elementOffset.top-e+"px",zIndex:++c.zIndex}),this.helper.appendTo("body").disableSelection()}else this.helper=this.element},_change:{e:function(a,b,c){return{width:this.originalSize.width+b}},w:function(a,b,c){var d=this.options,e=this.originalSize,f=this.originalPosition;return{left:f.left+b,width:e.width-b}},n:function(a,b,c){var d=this.options,e=this.originalSize,f=this.originalPosition;return{top:f.top+c,height:e.height-c}},s:function(a,b,c){return{height:this.originalSize.height+c}},se:function(b,c,d){return a.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[b,c,d]))},sw:function(b,c,d){return a.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[b,c,d]))},ne:function(b,c,d){return a.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[b,c,d]))},nw:function(b,c,d){return a.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[b,c,d]))}},_propagate:function(b,c){a.ui.plugin.call(this,b,[c,this.ui()]),b!="resize"&&this._trigger(b,c,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),a.extend(a.ui.resizable,{version:"1.8.20"}),a.ui.plugin.add("resizable","alsoResize",{start:function(b,c){var d=a(this).data("resizable"),e=d.options,f=function(b){a(b).each(function(){var b=a(this);b.data("resizable-alsoresize",{width:parseInt(b.width(),10),height:parseInt(b.height(),10),left:parseInt(b.css("left"),10),top:parseInt(b.css("top"),10)})})};typeof e.alsoResize=="object"&&!e.alsoResize.parentNode?e.alsoResize.length?(e.alsoResize=e.alsoResize[0],f(e.alsoResize)):a.each(e.alsoResize,function(a){f(a)}):f(e.alsoResize)},resize:function(b,c){var d=a(this).data("resizable"),e=d.options,f=d.originalSize,g=d.originalPosition,h={height:d.size.height-f.height||0,width:d.size.width-f.width||0,top:d.position.top-g.top||0,left:d.position.left-g.left||0},i=function(b,d){a(b).each(function(){var b=a(this),e=a(this).data("resizable-alsoresize"),f={},g=d&&d.length?d:b.parents(c.originalElement[0]).length?["width","height"]:["width","height","top","left"];a.each(g,function(a,b){var c=(e[b]||0)+(h[b]||0);c&&c>=0&&(f[b]=c||null)}),b.css(f)})};typeof e.alsoResize=="object"&&!e.alsoResize.nodeType?a.each(e.alsoResize,function(a,b){i(a,b)}):i(e.alsoResize)},stop:function(b,c){a(this).removeData("resizable-alsoresize")}}),a.ui.plugin.add("resizable","animate",{stop:function(b,c){var d=a(this).data("resizable"),e=d.options,f=d._proportionallyResizeElements,g=f.length&&/textarea/i.test(f[0].nodeName),h=g&&a.ui.hasScroll(f[0],"left")?0:d.sizeDiff.height,i=g?0:d.sizeDiff.width,j={width:d.size.width-i,height:d.size.height-h},k=parseInt(d.element.css("left"),10)+(d.position.left-d.originalPosition.left)||null,l=parseInt(d.element.css("top"),10)+(d.position.top-d.originalPosition.top)||null;d.element.animate(a.extend(j,l&&k?{top:l,left:k}:{}),{duration:e.animateDuration,easing:e.animateEasing,step:function(){var c={width:parseInt(d.element.css("width"),10),height:parseInt(d.element.css("height"),10),top:parseInt(d.element.css("top"),10),left:parseInt(d.element.css("left"),10)};f&&f.length&&a(f[0]).css({width:c.width,height:c.height}),d._updateCache(c),d._propagate("resize",b)}})}}),a.ui.plugin.add("resizable","containment",{start:function(b,d){var e=a(this).data("resizable"),f=e.options,g=e.element,h=f.containment,i=h instanceof a?h.get(0):/parent/.test(h)?g.parent().get(0):h;if(!i)return;e.containerElement=a(i);if(/document/.test(h)||h==document)e.containerOffset={left:0,top:0},e.containerPosition={left:0,top:0},e.parentData={element:a(document),left:0,top:0,width:a(document).width(),height:a(document).height()||document.body.parentNode.scrollHeight};else{var j=a(i),k=[];a(["Top","Right","Left","Bottom"]).each(function(a,b){k[a]=c(j.css("padding"+b))}),e.containerOffset=j.offset(),e.containerPosition=j.position(),e.containerSize={height:j.innerHeight()-k[3],width:j.innerWidth()-k[1]};var l=e.containerOffset,m=e.containerSize.height,n=e.containerSize.width,o=a.ui.hasScroll(i,"left")?i.scrollWidth:n,p=a.ui.hasScroll(i)?i.scrollHeight:m;e.parentData={element:i,left:l.left,top:l.top,width:o,height:p}}},resize:function(b,c){var d=a(this).data("resizable"),e=d.options,f=d.containerSize,g=d.containerOffset,h=d.size,i=d.position,j=d._aspectRatio||b.shiftKey,k={top:0,left:0},l=d.containerElement;l[0]!=document&&/static/.test(l.css("position"))&&(k=g),i.left<(d._helper?g.left:0)&&(d.size.width=d.size.width+(d._helper?d.position.left-g.left:d.position.left-k.left),j&&(d.size.height=d.size.width/d.aspectRatio),d.position.left=e.helper?g.left:0),i.top<(d._helper?g.top:0)&&(d.size.height=d.size.height+(d._helper?d.position.top-g.top:d.position.top),j&&(d.size.width=d.size.height*d.aspectRatio),d.position.top=d._helper?g.top:0),d.offset.left=d.parentData.left+d.position.left,d.offset.top=d.parentData.top+d.position.top;var m=Math.abs((d._helper?d.offset.left-k.left:d.offset.left-k.left)+d.sizeDiff.width),n=Math.abs((d._helper?d.offset.top-k.top:d.offset.top-g.top)+d.sizeDiff.height),o=d.containerElement.get(0)==d.element.parent().get(0),p=/relative|absolute/.test(d.containerElement.css("position"));o&&p&&(m-=d.parentData.left),m+d.size.width>=d.parentData.width&&(d.size.width=d.parentData.width-m,j&&(d.size.height=d.size.width/d.aspectRatio)),n+d.size.height>=d.parentData.height&&(d.size.height=d.parentData.height-n,j&&(d.size.width=d.size.height*d.aspectRatio))},stop:function(b,c){var d=a(this).data("resizable"),e=d.options,f=d.position,g=d.containerOffset,h=d.containerPosition,i=d.containerElement,j=a(d.helper),k=j.offset(),l=j.outerWidth()-d.sizeDiff.width,m=j.outerHeight()-d.sizeDiff.height;d._helper&&!e.animate&&/relative/.test(i.css("position"))&&a(this).css({left:k.left-h.left-g.left,width:l,height:m}),d._helper&&!e.animate&&/static/.test(i.css("position"))&&a(this).css({left:k.left-h.left-g.left,width:l,height:m})}}),a.ui.plugin.add("resizable","ghost",{start:function(b,c){var d=a(this).data("resizable"),e=d.options,f=d.size;d.ghost=d.originalElement.clone(),d.ghost.css({opacity:.25,display:"block",position:"relative",height:f.height,width:f.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass(typeof e.ghost=="string"?e.ghost:""),d.ghost.appendTo(d.helper)},resize:function(b,c){var d=a(this).data("resizable"),e=d.options;d.ghost&&d.ghost.css({position:"relative",height:d.size.height,width:d.size.width})},stop:function(b,c){var d=a(this).data("resizable"),e=d.options;d.ghost&&d.helper&&d.helper.get(0).removeChild(d.ghost.get(0))}}),a.ui.plugin.add("resizable","grid",{resize:function(b,c){var d=a(this).data("resizable"),e=d.options,f=d.size,g=d.originalSize,h=d.originalPosition,i=d.axis,j=e._aspectRatio||b.shiftKey;e.grid=typeof e.grid=="number"?[e.grid,e.grid]:e.grid;var k=Math.round((f.width-g.width)/(e.grid[0]||1))*(e.grid[0]||1),l=Math.round((f.height-g.height)/(e.grid[1]||1))*(e.grid[1]||1);/^(se|s|e)$/.test(i)?(d.size.width=g.width+k,d.size.height=g.height+l):/^(ne)$/.test(i)?(d.size.width=g.width+k,d.size.height=g.height+l,d.position.top=h.top-l):/^(sw)$/.test(i)?(d.size.width=g.width+k,d.size.height=g.height+l,d.position.left=h.left-k):(d.size.width=g.width+k,d.size.height=g.height+l,d.position.top=h.top-l,d.position.left=h.left-k)}});var c=function(a){return parseInt(a,10)||0},d=function(a){return!isNaN(parseInt(a,10))}})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.selectable.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.widget("ui.selectable",a.ui.mouse,{options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch"},_create:function(){var b=this;this.element.addClass("ui-selectable"),this.dragged=!1;var c;this.refresh=function(){c=a(b.options.filter,b.element[0]),c.addClass("ui-selectee"),c.each(function(){var b=a(this),c=b.offset();a.data(this,"selectable-item",{element:this,$element:b,left:c.left,top:c.top,right:c.left+b.outerWidth(),bottom:c.top+b.outerHeight(),startselected:!1,selected:b.hasClass("ui-selected"),selecting:b.hasClass("ui-selecting"),unselecting:b.hasClass("ui-unselecting")})})},this.refresh(),this.selectees=c.addClass("ui-selectee"),this._mouseInit(),this.helper=a("<div class='ui-selectable-helper'></div>")},destroy:function(){return this.selectees.removeClass("ui-selectee").removeData("selectable-item"),this.element.removeClass("ui-selectable ui-selectable-disabled").removeData("selectable").unbind(".selectable"),this._mouseDestroy(),this},_mouseStart:function(b){var c=this;this.opos=[b.pageX,b.pageY];if(this.options.disabled)return;var d=this.options;this.selectees=a(d.filter,this.element[0]),this._trigger("start",b),a(d.appendTo).append(this.helper),this.helper.css({left:b.clientX,top:b.clientY,width:0,height:0}),d.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each(function(){var d=a.data(this,"selectable-item");d.startselected=!0,!b.metaKey&&!b.ctrlKey&&(d.$element.removeClass("ui-selected"),d.selected=!1,d.$element.addClass("ui-unselecting"),d.unselecting=!0,c._trigger("unselecting",b,{unselecting:d.element}))}),a(b.target).parents().andSelf().each(function(){var d=a.data(this,"selectable-item");if(d){var e=!b.metaKey&&!b.ctrlKey||!d.$element.hasClass("ui-selected");return d.$element.removeClass(e?"ui-unselecting":"ui-selected").addClass(e?"ui-selecting":"ui-unselecting"),d.unselecting=!e,d.selecting=e,d.selected=e,e?c._trigger("selecting",b,{selecting:d.element}):c._trigger("unselecting",b,{unselecting:d.element}),!1}})},_mouseDrag:function(b){var c=this;this.dragged=!0;if(this.options.disabled)return;var d=this.options,e=this.opos[0],f=this.opos[1],g=b.pageX,h=b.pageY;if(e>g){var i=g;g=e,e=i}if(f>h){var i=h;h=f,f=i}return this.helper.css({left:e,top:f,width:g-e,height:h-f}),this.selectees.each(function(){var i=a.data(this,"selectable-item");if(!i||i.element==c.element[0])return;var j=!1;d.tolerance=="touch"?j=!(i.left>g||i.right<e||i.top>h||i.bottom<f):d.tolerance=="fit"&&(j=i.left>e&&i.right<g&&i.top>f&&i.bottom<h),j?(i.selected&&(i.$element.removeClass("ui-selected"),i.selected=!1),i.unselecting&&(i.$element.removeClass("ui-unselecting"),i.unselecting=!1),i.selecting||(i.$element.addClass("ui-selecting"),i.selecting=!0,c._trigger("selecting",b,{selecting:i.element}))):(i.selecting&&((b.metaKey||b.ctrlKey)&&i.startselected?(i.$element.removeClass("ui-selecting"),i.selecting=!1,i.$element.addClass("ui-selected"),i.selected=!0):(i.$element.removeClass("ui-selecting"),i.selecting=!1,i.startselected&&(i.$element.addClass("ui-unselecting"),i.unselecting=!0),c._trigger("unselecting",b,{unselecting:i.element}))),i.selected&&!b.metaKey&&!b.ctrlKey&&!i.startselected&&(i.$element.removeClass("ui-selected"),i.selected=!1,i.$element.addClass("ui-unselecting"),i.unselecting=!0,c._trigger("unselecting",b,{unselecting:i.element})))}),!1},_mouseStop:function(b){var c=this;this.dragged=!1;var d=this.options;return a(".ui-unselecting",this.element[0]).each(function(){var d=a.data(this,"selectable-item");d.$element.removeClass("ui-unselecting"),d.unselecting=!1,d.startselected=!1,c._trigger("unselected",b,{unselected:d.element})}),a(".ui-selecting",this.element[0]).each(function(){var d=a.data(this,"selectable-item");d.$element.removeClass("ui-selecting").addClass("ui-selected"),d.selecting=!1,d.selected=!0,d.startselected=!0,c._trigger("selected",b,{selected:d.element})}),this._trigger("stop",b),this.helper.remove(),!1}}),a.extend(a.ui.selectable,{version:"1.8.20"})})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.sortable.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.widget("ui.sortable",a.ui.mouse,{widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3},_create:function(){var a=this.options;this.containerCache={},this.element.addClass("ui-sortable"),this.refresh(),this.floating=this.items.length?a.axis==="x"||/left|right/.test(this.items[0].item.css("float"))||/inline|table-cell/.test(this.items[0].item.css("display")):!1,this.offset=this.element.offset(),this._mouseInit(),this.ready=!0},destroy:function(){a.Widget.prototype.destroy.call(this),this.element.removeClass("ui-sortable ui-sortable-disabled"),this._mouseDestroy();for(var b=this.items.length-1;b>=0;b--)this.items[b].item.removeData(this.widgetName+"-item");return this},_setOption:function(b,c){b==="disabled"?(this.options[b]=c,this.widget()[c?"addClass":"removeClass"]("ui-sortable-disabled")):a.Widget.prototype._setOption.apply(this,arguments)},_mouseCapture:function(b,c){var d=this;if(this.reverting)return!1;if(this.options.disabled||this.options.type=="static")return!1;this._refreshItems(b);var e=null,f=this,g=a(b.target).parents().each(function(){if(a.data(this,d.widgetName+"-item")==f)return e=a(this),!1});a.data(b.target,d.widgetName+"-item")==f&&(e=a(b.target));if(!e)return!1;if(this.options.handle&&!c){var h=!1;a(this.options.handle,e).find("*").andSelf().each(function(){this==b.target&&(h=!0)});if(!h)return!1}return this.currentItem=e,this._removeCurrentsFromItems(),!0},_mouseStart:function(b,c,d){var e=this.options,f=this;this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(b),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),a.extend(this.offset,{click:{left:b.pageX-this.offset.left,top:b.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this._generatePosition(b),this.originalPageX=b.pageX,this.originalPageY=b.pageY,e.cursorAt&&this._adjustOffsetFromHelper(e.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!=this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),e.containment&&this._setContainment(),e.cursor&&(a("body").css("cursor")&&(this._storedCursor=a("body").css("cursor")),a("body").css("cursor",e.cursor)),e.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",e.opacity)),e.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",e.zIndex)),this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",b,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions();if(!d)for(var g=this.containers.length-1;g>=0;g--)this.containers[g]._trigger("activate",b,f._uiHash(this));return a.ui.ddmanager&&(a.ui.ddmanager.current=this),a.ui.ddmanager&&!e.dropBehaviour&&a.ui.ddmanager.prepareOffsets(this,b),this.dragging=!0,this.helper.addClass("ui-sortable-helper"),this._mouseDrag(b),!0},_mouseDrag:function(b){this.position=this._generatePosition(b),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs);if(this.options.scroll){var c=this.options,d=!1;this.scrollParent[0]!=document&&this.scrollParent[0].tagName!="HTML"?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-b.pageY<c.scrollSensitivity?this.scrollParent[0].scrollTop=d=this.scrollParent[0].scrollTop+c.scrollSpeed:b.pageY-this.overflowOffset.top<c.scrollSensitivity&&(this.scrollParent[0].scrollTop=d=this.scrollParent[0].scrollTop-c.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-b.pageX<c.scrollSensitivity?this.scrollParent[0].scrollLeft=d=this.scrollParent[0].scrollLeft+c.scrollSpeed:b.pageX-this.overflowOffset.left<c.scrollSensitivity&&(this.scrollParent[0].scrollLeft=d=this.scrollParent[0].scrollLeft-c.scrollSpeed)):(b.pageY-a(document).scrollTop()<c.scrollSensitivity?d=a(document).scrollTop(a(document).scrollTop()-c.scrollSpeed):a(window).height()-(b.pageY-a(document).scrollTop())<c.scrollSensitivity&&(d=a(document).scrollTop(a(document).scrollTop()+c.scrollSpeed)),b.pageX-a(document).scrollLeft()<c.scrollSensitivity?d=a(document).scrollLeft(a(document).scrollLeft()-c.scrollSpeed):a(window).width()-(b.pageX-a(document).scrollLeft())<c.scrollSensitivity&&(d=a(document).scrollLeft(a(document).scrollLeft()+c.scrollSpeed))),d!==!1&&a.ui.ddmanager&&!c.dropBehaviour&&a.ui.ddmanager.prepareOffsets(this,b)}this.positionAbs=this._convertPositionTo("absolute");if(!this.options.axis||this.options.axis!="y")this.helper[0].style.left=this.position.left+"px";if(!this.options.axis||this.options.axis!="x")this.helper[0].style.top=this.position.top+"px";for(var e=this.items.length-1;e>=0;e--){var f=this.items[e],g=f.item[0],h=this._intersectsWithPointer(f);if(!h)continue;if(g!=this.currentItem[0]&&this.placeholder[h==1?"next":"prev"]()[0]!=g&&!a.ui.contains(this.placeholder[0],g)&&(this.options.type=="semi-dynamic"?!a.ui.contains(this.element[0],g):!0)){this.direction=h==1?"down":"up";if(this.options.tolerance=="pointer"||this._intersectsWithSides(f))this._rearrange(b,f);else break;this._trigger("change",b,this._uiHash());break}}return this._contactContainers(b),a.ui.ddmanager&&a.ui.ddmanager.drag(this,b),this._trigger("sort",b,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(b,c){if(!b)return;a.ui.ddmanager&&!this.options.dropBehaviour&&a.ui.ddmanager.drop(this,b);if(this.options.revert){var d=this,e=d.placeholder.offset();d.reverting=!0,a(this.helper).animate({left:e.left-this.offset.parent.left-d.margins.left+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollLeft),top:e.top-this.offset.parent.top-d.margins.top+(this.offsetParent[0]==document.body?0:this.offsetParent[0].scrollTop)},parseInt(this.options.revert,10)||500,function(){d._clear(b)})}else this._clear(b,c);return!1},cancel:function(){var b=this;if(this.dragging){this._mouseUp({target:null}),this.options.helper=="original"?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):this.currentItem.show();for(var c=this.containers.length-1;c>=0;c--)this.containers[c]._trigger("deactivate",null,b._uiHash(this)),this.containers[c].containerCache.over&&(this.containers[c]._trigger("out",null,b._uiHash(this)),this.containers[c].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.options.helper!="original"&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),a.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?a(this.domPosition.prev).after(this.currentItem):a(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(b){var c=this._getItemsAsjQuery(b&&b.connected),d=[];return b=b||{},a(c).each(function(){var c=(a(b.item||this).attr(b.attribute||"id")||"").match(b.expression||/(.+)[-=_](.+)/);c&&d.push((b.key||c[1]+"[]")+"="+(b.key&&b.expression?c[1]:c[2]))}),!d.length&&b.key&&d.push(b.key+"="),d.join("&")},toArray:function(b){var c=this._getItemsAsjQuery(b&&b.connected),d=[];return b=b||{},c.each(function(){d.push(a(b.item||this).attr(b.attribute||"id")||"")}),d},_intersectsWith:function(a){var b=this.positionAbs.left,c=b+this.helperProportions.width,d=this.positionAbs.top,e=d+this.helperProportions.height,f=a.left,g=f+a.width,h=a.top,i=h+a.height,j=this.offset.click.top,k=this.offset.click.left,l=d+j>h&&d+j<i&&b+k>f&&b+k<g;return this.options.tolerance=="pointer"||this.options.forcePointerForContainers||this.options.tolerance!="pointer"&&this.helperProportions[this.floating?"width":"height"]>a[this.floating?"width":"height"]?l:f<b+this.helperProportions.width/2&&c-this.helperProportions.width/2<g&&h<d+this.helperProportions.height/2&&e-this.helperProportions.height/2<i},_intersectsWithPointer:function(b){var c=this.options.axis==="x"||a.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,b.top,b.height),d=this.options.axis==="y"||a.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,b.left,b.width),e=c&&d,f=this._getDragVerticalDirection(),g=this._getDragHorizontalDirection();return e?this.floating?g&&g=="right"||f=="down"?2:1:f&&(f=="down"?2:1):!1},_intersectsWithSides:function(b){var c=a.ui.isOverAxis(this.positionAbs.top+this.offset.click.top,b.top+b.height/2,b.height),d=a.ui.isOverAxis(this.positionAbs.left+this.offset.click.left,b.left+b.width/2,b.width),e=this._getDragVerticalDirection(),f=this._getDragHorizontalDirection();return this.floating&&f?f=="right"&&d||f=="left"&&!d:e&&(e=="down"&&c||e=="up"&&!c)},_getDragVerticalDirection:function(){var a=this.positionAbs.top-this.lastPositionAbs.top;return a!=0&&(a>0?"down":"up")},_getDragHorizontalDirection:function(){var a=this.positionAbs.left-this.lastPositionAbs.left;return a!=0&&(a>0?"right":"left")},refresh:function(a){return this._refreshItems(a),this.refreshPositions(),this},_connectWith:function(){var a=this.options;return a.connectWith.constructor==String?[a.connectWith]:a.connectWith},_getItemsAsjQuery:function(b){var c=this,d=[],e=[],f=this._connectWith();if(f&&b)for(var g=f.length-1;g>=0;g--){var h=a(f[g]);for(var i=h.length-1;i>=0;i--){var j=a.data(h[i],this.widgetName);j&&j!=this&&!j.options.disabled&&e.push([a.isFunction(j.options.items)?j.options.items.call(j.element):a(j.options.items,j.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),j])}}e.push([a.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):a(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]);for(var g=e.length-1;g>=0;g--)e[g][0].each(function(){d.push(this)});return a(d)},_removeCurrentsFromItems:function(){var a=this.currentItem.find(":data("+this.widgetName+"-item)");for(var b=0;b<this.items.length;b++)for(var c=0;c<a.length;c++)a[c]==this.items[b].item[0]&&this.items.splice(b,1)},_refreshItems:function(b){this.items=[],this.containers=[this];var c=this.items,d=this,e=[[a.isFunction(this.options.items)?this.options.items.call(this.element[0],b,{item:this.currentItem}):a(this.options.items,this.element),this]],f=this._connectWith();if(f&&this.ready)for(var g=f.length-1;g>=0;g--){var h=a(f[g]);for(var i=h.length-1;i>=0;i--){var j=a.data(h[i],this.widgetName);j&&j!=this&&!j.options.disabled&&(e.push([a.isFunction(j.options.items)?j.options.items.call(j.element[0],b,{item:this.currentItem}):a(j.options.items,j.element),j]),this.containers.push(j))}}for(var g=e.length-1;g>=0;g--){var k=e[g][1],l=e[g][0];for(var i=0,m=l.length;i<m;i++){var n=a(l[i]);n.data(this.widgetName+"-item",k),c.push({item:n,instance:k,width:0,height:0,left:0,top:0})}}},refreshPositions:function(b){this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());for(var c=this.items.length-1;c>=0;c--){var d=this.items[c];if(d.instance!=this.currentContainer&&this.currentContainer&&d.item[0]!=this.currentItem[0])continue;var e=this.options.toleranceElement?a(this.options.toleranceElement,d.item):d.item;b||(d.width=e.outerWidth(),d.height=e.outerHeight());var f=e.offset();d.left=f.left,d.top=f.top}if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(var c=this.containers.length-1;c>=0;c--){var f=this.containers[c].element.offset();this.containers[c].containerCache.left=f.left,this.containers[c].containerCache.top=f.top,this.containers[c].containerCache.width=this.containers[c].element.outerWidth(),this.containers[c].containerCache.height=this.containers[c].element.outerHeight()}return this},_createPlaceholder:function(b){var c=b||this,d=c.options;if(!d.placeholder||d.placeholder.constructor==String){var e=d.placeholder;d.placeholder={element:function(){var b=a(document.createElement(c.currentItem[0].nodeName)).addClass(e||c.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper")[0];return e||(b.style.visibility="hidden"),b},update:function(a,b){if(e&&!d.forcePlaceholderSize)return;b.height()||b.height(c.currentItem.innerHeight()-parseInt(c.currentItem.css("paddingTop")||0,10)-parseInt(c.currentItem.css("paddingBottom")||0,10)),b.width()||b.width(c.currentItem.innerWidth()-parseInt(c.currentItem.css("paddingLeft")||0,10)-parseInt(c.currentItem.css("paddingRight")||0,10))}}}c.placeholder=a(d.placeholder.element.call(c.element,c.currentItem)),c.currentItem.after(c.placeholder),d.placeholder.update(c,c.placeholder)},_contactContainers:function(b){var c=null,d=null;for(var e=this.containers.length-1;e>=0;e--){if(a.ui.contains(this.currentItem[0],this.containers[e].element[0]))continue;if(this._intersectsWith(this.containers[e].containerCache)){if(c&&a.ui.contains(this.containers[e].element[0],c.element[0]))continue;c=this.containers[e],d=e}else this.containers[e].containerCache.over&&(this.containers[e]._trigger("out",b,this._uiHash(this)),this.containers[e].containerCache.over=0)}if(!c)return;if(this.containers.length===1)this.containers[d]._trigger("over",b,this._uiHash(this)),this.containers[d].containerCache.over=1;else if(this.currentContainer!=this.containers[d]){var f=1e4,g=null,h=this.positionAbs[this.containers[d].floating?"left":"top"];for(var i=this.items.length-1;i>=0;i--){if(!a.ui.contains(this.containers[d].element[0],this.items[i].item[0]))continue;var j=this.items[i][this.containers[d].floating?"left":"top"];Math.abs(j-h)<f&&(f=Math.abs(j-h),g=this.items[i])}if(!g&&!this.options.dropOnEmpty)return;this.currentContainer=this.containers[d],g?this._rearrange(b,g,null,!0):this._rearrange(b,null,this.containers[d].element,!0),this._trigger("change",b,this._uiHash()),this.containers[d]._trigger("change",b,this._uiHash(this)),this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[d]._trigger("over",b,this._uiHash(this)),this.containers[d].containerCache.over=1}},_createHelper:function(b){var c=this.options,d=a.isFunction(c.helper)?a(c.helper.apply(this.element[0],[b,this.currentItem])):c.helper=="clone"?this.currentItem.clone():this.currentItem;return d.parents("body").length||a(c.appendTo!="parent"?c.appendTo:this.currentItem[0].parentNode)[0].appendChild(d[0]),d[0]==this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),(d[0].style.width==""||c.forceHelperSize)&&d.width(this.currentItem.width()),(d[0].style.height==""||c.forceHelperSize)&&d.height(this.currentItem.height()),d},_adjustOffsetFromHelper:function(b){typeof b=="string"&&(b=b.split(" ")),a.isArray(b)&&(b={left:+b[0],top:+b[1]||0}),"left"in b&&(this.offset.click.left=b.left+this.margins.left),"right"in b&&(this.offset.click.left=this.helperProportions.width-b.right+this.margins.left),"top"in b&&(this.offset.click.top=b.top+this.margins.top),"bottom"in b&&(this.offset.click.top=this.helperProportions.height-b.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var b=this.offsetParent.offset();this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&a.ui.contains(this.scrollParent[0],this.offsetParent[0])&&(b.left+=this.scrollParent.scrollLeft(),b.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&a.browser.msie)b={top:0,left:0};return{top:b.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:b.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var a=this.currentItem.position();return{top:a.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:a.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var b=this.options;b.containment=="parent"&&(b.containment=this.helper[0].parentNode);if(b.containment=="document"||b.containment=="window")this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,a(b.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(a(b.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top];if(!/^(document|window|parent)$/.test(b.containment)){var c=a(b.containment)[0],d=a(b.containment).offset(),e=a(c).css("overflow")!="hidden";this.containment=[d.left+(parseInt(a(c).css("borderLeftWidth"),10)||0)+(parseInt(a(c).css("paddingLeft"),10)||0)-this.margins.left,d.top+(parseInt(a(c).css("borderTopWidth"),10)||0)+(parseInt(a(c).css("paddingTop"),10)||0)-this.margins.top,d.left+(e?Math.max(c.scrollWidth,c.offsetWidth):c.offsetWidth)-(parseInt(a(c).css("borderLeftWidth"),10)||0)-(parseInt(a(c).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,d.top+(e?Math.max(c.scrollHeight,c.offsetHeight):c.offsetHeight)-(parseInt(a(c).css("borderTopWidth"),10)||0)-(parseInt(a(c).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top]}},_convertPositionTo:function(b,c){c||(c=this.position);var d=b=="absolute"?1:-1,e=this.options,f=this.cssPosition=="absolute"&&(this.scrollParent[0]==document||!a.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,g=/(html|body)/i.test(f[0].tagName);return{top:c.top+this.offset.relative.top*d+this.offset.parent.top*d-(a.browser.safari&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():g?0:f.scrollTop())*d),left:c.left+this.offset.relative.left*d+this.offset.parent.left*d-(a.browser.safari&&this.cssPosition=="fixed"?0:(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():g?0:f.scrollLeft())*d)}},_generatePosition:function(b){var c=this.options,d=this.cssPosition=="absolute"&&(this.scrollParent[0]==document||!a.ui.contains(this.scrollParent[0],this.offsetParent[0]))?this.offsetParent:this.scrollParent,e=/(html|body)/i.test(d[0].tagName);this.cssPosition=="relative"&&(this.scrollParent[0]==document||this.scrollParent[0]==this.offsetParent[0])&&(this.offset.relative=this._getRelativeOffset());var f=b.pageX,g=b.pageY;if(this.originalPosition){this.containment&&(b.pageX-this.offset.click.left<this.containment[0]&&(f=this.containment[0]+this.offset.click.left),b.pageY-this.offset.click.top<this.containment[1]&&(g=this.containment[1]+this.offset.click.top),b.pageX-this.offset.click.left>this.containment[2]&&(f=this.containment[2]+this.offset.click.left),b.pageY-this.offset.click.top>this.containment[3]&&(g=this.containment[3]+this.offset.click.top));if(c.grid){var h=this.originalPageY+Math.round((g-this.originalPageY)/c.grid[1])*c.grid[1];g=this.containment?h-this.offset.click.top<this.containment[1]||h-this.offset.click.top>this.containment[3]?h-this.offset.click.top<this.containment[1]?h+c.grid[1]:h-c.grid[1]:h:h;var i=this.originalPageX+Math.round((f-this.originalPageX)/c.grid[0])*c.grid[0];f=this.containment?i-this.offset.click.left<this.containment[0]||i-this.offset.click.left>this.containment[2]?i-this.offset.click.left<this.containment[0]?i+c.grid[0]:i-c.grid[0]:i:i}}return{top:g-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(a.browser.safari&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollTop():e?0:d.scrollTop()),left:f-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(a.browser.safari&&this.cssPosition=="fixed"?0:this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():e?0:d.scrollLeft())}},_rearrange:function(a,b,c,d){c?c[0].appendChild(this.placeholder[0]):b.item[0].parentNode.insertBefore(this.placeholder[0],this.direction=="down"?b.item[0]:b.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var e=this,f=this.counter;window.setTimeout(function(){f==e.counter&&e.refreshPositions(!d)},0)},_clear:function(b,c){this.reverting=!1;var d=[],e=this;!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null;if(this.helper[0]==this.currentItem[0]){for(var f in this._storedCSS)if(this._storedCSS[f]=="auto"||this._storedCSS[f]=="static")this._storedCSS[f]="";this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();this.fromOutside&&!c&&d.push(function(a){this._trigger("receive",a,this._uiHash(this.fromOutside))}),(this.fromOutside||this.domPosition.prev!=this.currentItem.prev().not(".ui-sortable-helper")[0]||this.domPosition.parent!=this.currentItem.parent()[0])&&!c&&d.push(function(a){this._trigger("update",a,this._uiHash())});if(!a.ui.contains(this.element[0],this.currentItem[0])){c||d.push(function(a){this._trigger("remove",a,this._uiHash())});for(var f=this.containers.length-1;f>=0;f--)a.ui.contains(this.containers[f].element[0],this.currentItem[0])&&!c&&(d.push(function(a){return function(b){a._trigger("receive",b,this._uiHash(this))}}.call(this,this.containers[f])),d.push(function(a){return function(b){a._trigger("update",b,this._uiHash(this))}}.call(this,this.containers[f])))}for(var f=this.containers.length-1;f>=0;f--)c||d.push(function(a){return function(b){a._trigger("deactivate",b,this._uiHash(this))}}.call(this,this.containers[f])),this.containers[f].containerCache.over&&(d.push(function(a){return function(b){a._trigger("out",b,this._uiHash(this))}}.call(this,this.containers[f])),this.containers[f].containerCache.over=0);this._storedCursor&&a("body").css("cursor",this._storedCursor),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex",this._storedZIndex=="auto"?"":this._storedZIndex),this.dragging=!1;if(this.cancelHelperRemoval){if(!c){this._trigger("beforeStop",b,this._uiHash());for(var f=0;f<d.length;f++)d[f].call(this,b);this._trigger("stop",b,this._uiHash())}return!1}c||this._trigger("beforeStop",b,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.helper[0]!=this.currentItem[0]&&this.helper.remove(),this.helper=null;if(!c){for(var f=0;f<d.length;f++)d[f].call(this,b);this._trigger("stop",b,this._uiHash())}return this.fromOutside=!1,!0},_trigger:function(){a.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(b){var c=b||this;return{helper:c.helper,placeholder:c.placeholder||a([]),position:c.position,originalPosition:c.originalPosition,offset:c.positionAbs,item:c.currentItem,sender:b?b.element:null}}}),a.extend(a.ui.sortable,{version:"1.8.20"})})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.accordion.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.widget("ui.accordion",{options:{active:0,animated:"slide",autoHeight:!0,clearStyle:!1,collapsible:!1,event:"click",fillSpace:!1,header:"> li > :first-child,> :not(li):even",icons:{header:"ui-icon-triangle-1-e",headerSelected:"ui-icon-triangle-1-s"},navigation:!1,navigationFilter:function(){return this.href.toLowerCase()===location.href.toLowerCase()}},_create:function(){var b=this,c=b.options;b.running=0,b.element.addClass("ui-accordion ui-widget ui-helper-reset").children("li").addClass("ui-accordion-li-fix"),b.headers=b.element.find(c.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all").bind("mouseenter.accordion",function(){if(c.disabled)return;a(this).addClass("ui-state-hover")}).bind("mouseleave.accordion",function(){if(c.disabled)return;a(this).removeClass("ui-state-hover")}).bind("focus.accordion",function(){if(c.disabled)return;a(this).addClass("ui-state-focus")}).bind("blur.accordion",function(){if(c.disabled)return;a(this).removeClass("ui-state-focus")}),b.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom");if(c.navigation){var d=b.element.find("a").filter(c.navigationFilter).eq(0);if(d.length){var e=d.closest(".ui-accordion-header");e.length?b.active=e:b.active=d.closest(".ui-accordion-content").prev()}}b.active=b._findActive(b.active||c.active).addClass("ui-state-default ui-state-active").toggleClass("ui-corner-all").toggleClass("ui-corner-top"),b.active.next().addClass("ui-accordion-content-active"),b._createIcons(),b.resize(),b.element.attr("role","tablist"),b.headers.attr("role","tab").bind("keydown.accordion",function(a){return b._keydown(a)}).next().attr("role","tabpanel"),b.headers.not(b.active||"").attr({"aria-expanded":"false","aria-selected":"false",tabIndex:-1}).next().hide(),b.active.length?b.active.attr({"aria-expanded":"true","aria-selected":"true",tabIndex:0}):b.headers.eq(0).attr("tabIndex",0),a.browser.safari||b.headers.find("a").attr("tabIndex",-1),c.event&&b.headers.bind(c.event.split(" ").join(".accordion ")+".accordion",function(a){b._clickHandler.call(b,a,this),a.preventDefault()})},_createIcons:function(){var b=this.options;b.icons&&(a("<span></span>").addClass("ui-icon "+b.icons.header).prependTo(this.headers),this.active.children(".ui-icon").toggleClass(b.icons.header).toggleClass(b.icons.headerSelected),this.element.addClass("ui-accordion-icons"))},_destroyIcons:function(){this.headers.children(".ui-icon").remove(),this.element.removeClass("ui-accordion-icons")},destroy:function(){var b=this.options;this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"),this.headers.unbind(".accordion").removeClass("ui-accordion-header ui-accordion-disabled ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-selected").removeAttr("tabIndex"),this.headers.find("a").removeAttr("tabIndex"),this._destroyIcons();var c=this.headers.next().css("display","").removeAttr("role").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-accordion-disabled ui-state-disabled");return(b.autoHeight||b.fillHeight)&&c.css("height",""),a.Widget.prototype.destroy.call(this)},_setOption:function(b,c){a.Widget.prototype._setOption.apply(this,arguments),b=="active"&&this.activate(c),b=="icons"&&(this._destroyIcons(),c&&this._createIcons()),b=="disabled"&&this.headers.add(this.headers.next())[c?"addClass":"removeClass"]("ui-accordion-disabled ui-state-disabled")},_keydown:function(b){if(this.options.disabled||b.altKey||b.ctrlKey)return;var c=a.ui.keyCode,d=this.headers.length,e=this.headers.index(b.target),f=!1;switch(b.keyCode){case c.RIGHT:case c.DOWN:f=this.headers[(e+1)%d];break;case c.LEFT:case c.UP:f=this.headers[(e-1+d)%d];break;case c.SPACE:case c.ENTER:this._clickHandler({target:b.target},b.target),b.preventDefault()}return f?(a(b.target).attr("tabIndex",-1),a(f).attr("tabIndex",0),f.focus(),!1):!0},resize:function(){var b=this.options,c;if(b.fillSpace){if(a.browser.msie){var d=this.element.parent().css("overflow");this.element.parent().css("overflow","hidden")}c=this.element.parent().height(),a.browser.msie&&this.element.parent().css("overflow",d),this.headers.each(function(){c-=a(this).outerHeight(!0)}),this.headers.next().each(function(){a(this).height(Math.max(0,c-a(this).innerHeight()+a(this).height()))}).css("overflow","auto")}else b.autoHeight&&(c=0,this.headers.next().each(function(){c=Math.max(c,a(this).height("").height())}).height(c));return this},activate:function(a){this.options.active=a;var b=this._findActive(a)[0];return this._clickHandler({target:b},b),this},_findActive:function(b){return b?typeof b=="number"?this.headers.filter(":eq("+b+")"):this.headers.not(this.headers.not(b)):b===!1?a([]):this.headers.filter(":eq(0)")},_clickHandler:function(b,c){var d=this.options;if(d.disabled)return;if(!b.target){if(!d.collapsible)return;this.active.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(d.icons.headerSelected).addClass(d.icons.header),this.active.next().addClass("ui-accordion-content-active");var e=this.active.next(),f={options:d,newHeader:a([]),oldHeader:d.active,newContent:a([]),oldContent:e},g=this.active=a([]);this._toggle(g,e,f);return}var h=a(b.currentTarget||c),i=h[0]===this.active[0];d.active=d.collapsible&&i?!1:this.headers.index(h);if(this.running||!d.collapsible&&i)return;var j=this.active,g=h.next(),e=this.active.next(),f={options:d,newHeader:i&&d.collapsible?a([]):h,oldHeader:this.active,newContent:i&&d.collapsible?a([]):g,oldContent:e},k=this.headers.index(this.active[0])>this.headers.index(h[0]);this.active=i?a([]):h,this._toggle(g,e,f,i,k),j.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(d.icons.headerSelected).addClass(d.icons.header),i||(h.removeClass("ui-state-default ui-corner-all").addClass("ui-state-active ui-corner-top").children(".ui-icon").removeClass(d.icons.header).addClass(d.icons.headerSelected),h.next().addClass("ui-accordion-content-active"));return},_toggle:function(b,c,d,e,f){var g=this,h=g.options;g.toShow=b,g.toHide=c,g.data=d;var i=function(){if(!g)return;return g._completed.apply(g,arguments)};g._trigger("changestart",null,g.data),g.running=c.size()===0?b.size():c.size();if(h.animated){var j={};h.collapsible&&e?j={toShow:a([]),toHide:c,complete:i,down:f,autoHeight:h.autoHeight||h.fillSpace}:j={toShow:b,toHide:c,complete:i,down:f,autoHeight:h.autoHeight||h.fillSpace},h.proxied||(h.proxied=h.animated),h.proxiedDuration||(h.proxiedDuration=h.duration),h.animated=a.isFunction(h.proxied)?h.proxied(j):h.proxied,h.duration=a.isFunction(h.proxiedDuration)?h.proxiedDuration(j):h.proxiedDuration;var k=a.ui.accordion.animations,l=h.duration,m=h.animated;m&&!k[m]&&!a.easing[m]&&(m="slide"),k[m]||(k[m]=function(a){this.slide(a,{easing:m,duration:l||700})}),k[m](j)}else h.collapsible&&e?b.toggle():(c.hide(),b.show()),i(!0);c.prev().attr({"aria-expanded":"false","aria-selected":"false",tabIndex:-1}).blur(),b.prev().attr({"aria-expanded":"true","aria-selected":"true",tabIndex:0}).focus()},_completed:function(a){this.running=a?0:--this.running;if(this.running)return;this.options.clearStyle&&this.toShow.add(this.toHide).css({height:"",overflow:""}),this.toHide.removeClass("ui-accordion-content-active"),this.toHide.length&&(this.toHide.parent()[0].className=this.toHide.parent()[0].className),this._trigger("change",null,this.data)}}),a.extend(a.ui.accordion,{version:"1.8.20",animations:{slide:function(b,c){b=a.extend({easing:"swing",duration:300},b,c);if(!b.toHide.size()){b.toShow.animate({height:"show",paddingTop:"show",paddingBottom:"show"},b);return}if(!b.toShow.size()){b.toHide.animate({height:"hide",paddingTop:"hide",paddingBottom:"hide"},b);return}var d=b.toShow.css("overflow"),e=0,f={},g={},h=["height","paddingTop","paddingBottom"],i,j=b.toShow;i=j[0].style.width,j.width(j.parent().width()-parseFloat(j.css("paddingLeft"))-parseFloat(j.css("paddingRight"))-(parseFloat(j.css("borderLeftWidth"))||0)-(parseFloat(j.css("borderRightWidth"))||0)),a.each(h,function(c,d){g[d]="hide";var e=(""+a.css(b.toShow[0],d)).match(/^([\d+-.]+)(.*)$/);f[d]={value:e[1],unit:e[2]||"px"}}),b.toShow.css({height:0,overflow:"hidden"}).show(),b.toHide.filter(":hidden").each(b.complete).end().filter(":visible").animate(g,{step:function(a,c){c.prop=="height"&&(e=c.end-c.start===0?0:(c.now-c.start)/(c.end-c.start)),b.toShow[0].style[c.prop]=e*f[c.prop].value+f[c.prop].unit},duration:b.duration,easing:b.easing,complete:function(){b.autoHeight||b.toShow.css("height",""),b.toShow.css({width:i,overflow:d}),b.complete()}})},bounceslide:function(a){this.slide(a,{easing:a.down?"easeOutBounce":"swing",duration:a.down?1e3:200})}}})})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.autocomplete.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){var c=0;a.widget("ui.autocomplete",{options:{appendTo:"body",autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null},pending:0,_create:function(){var b=this,c=this.element[0].ownerDocument,d;this.isMultiLine=this.element.is("textarea"),this.element.addClass("ui-autocomplete-input").attr("autocomplete","off").attr({role:"textbox","aria-autocomplete":"list","aria-haspopup":"true"}).bind("keydown.autocomplete",function(c){if(b.options.disabled||b.element.propAttr("readOnly"))return;d=!1;var e=a.ui.keyCode;switch(c.keyCode){case e.PAGE_UP:b._move("previousPage",c);break;case e.PAGE_DOWN:b._move("nextPage",c);break;case e.UP:b._keyEvent("previous",c);break;case e.DOWN:b._keyEvent("next",c);break;case e.ENTER:case e.NUMPAD_ENTER:b.menu.active&&(d=!0,c.preventDefault());case e.TAB:if(!b.menu.active)return;b.menu.select(c);break;case e.ESCAPE:b.element.val(b.term),b.close(c);break;default:clearTimeout(b.searching),b.searching=setTimeout(function(){b.term!=b.element.val()&&(b.selectedItem=null,b.search(null,c))},b.options.delay)}}).bind("keypress.autocomplete",function(a){d&&(d=!1,a.preventDefault())}).bind("focus.autocomplete",function(){if(b.options.disabled)return;b.selectedItem=null,b.previous=b.element.val()}).bind("blur.autocomplete",function(a){if(b.options.disabled)return;clearTimeout(b.searching),b.closing=setTimeout(function(){b.close(a),b._change(a)},150)}),this._initSource(),this.menu=a("<ul></ul>").addClass("ui-autocomplete").appendTo(a(this.options.appendTo||"body",c)[0]).mousedown(function(c){var d=b.menu.element[0];a(c.target).closest(".ui-menu-item").length||setTimeout(function(){a(document).one("mousedown",function(c){c.target!==b.element[0]&&c.target!==d&&!a.ui.contains(d,c.target)&&b.close()})},1),setTimeout(function(){clearTimeout(b.closing)},13)}).menu({focus:function(a,c){var d=c.item.data("item.autocomplete");!1!==b._trigger("focus",a,{item:d})&&/^key/.test(a.originalEvent.type)&&b.element.val(d.value)},selected:function(a,d){var e=d.item.data("item.autocomplete"),f=b.previous;b.element[0]!==c.activeElement&&(b.element.focus(),b.previous=f,setTimeout(function(){b.previous=f,b.selectedItem=e},1)),!1!==b._trigger("select",a,{item:e})&&b.element.val(e.value),b.term=b.element.val(),b.close(a),b.selectedItem=e},blur:function(a,c){b.menu.element.is(":visible")&&b.element.val()!==b.term&&b.element.val(b.term)}}).zIndex(this.element.zIndex()+1).css({top:0,left:0}).hide().data("menu"),a.fn.bgiframe&&this.menu.element.bgiframe(),b.beforeunloadHandler=function(){b.element.removeAttr("autocomplete")},a(window).bind("beforeunload",b.beforeunloadHandler)},destroy:function(){this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete").removeAttr("role").removeAttr("aria-autocomplete").removeAttr("aria-haspopup"),this.menu.element.remove(),a(window).unbind("beforeunload",this.beforeunloadHandler),a.Widget.prototype.destroy.call(this)},_setOption:function(b,c){a.Widget.prototype._setOption.apply(this,arguments),b==="source"&&this._initSource(),b==="appendTo"&&this.menu.element.appendTo(a(c||"body",this.element[0].ownerDocument)[0]),b==="disabled"&&c&&this.xhr&&this.xhr.abort()},_initSource:function(){var b=this,c,d;a.isArray(this.options.source)?(c=this.options.source,this.source=function(b,d){d(a.ui.autocomplete.filter(c,b.term))}):typeof this.options.source=="string"?(d=this.options.source,this.source=function(c,e){b.xhr&&b.xhr.abort(),b.xhr=a.ajax({url:d,data:c,dataType:"json",success:function(a,b){e(a)},error:function(){e([])}})}):this.source=this.options.source},search:function(a,b){a=a!=null?a:this.element.val(),this.term=this.element.val();if(a.length<this.options.minLength)return this.close(b);clearTimeout(this.closing);if(this._trigger("search",b)===!1)return;return this._search(a)},_search:function(a){this.pending++,this.element.addClass("ui-autocomplete-loading"),this.source({term:a},this._response())},_response:function(){var a=this,b=++c;return function(d){b===c&&a.__response(d),a.pending--,a.pending||a.element.removeClass("ui-autocomplete-loading")}},__response:function(a){!this.options.disabled&&a&&a.length?(a=this._normalize(a),this._suggest(a),this._trigger("open")):this.close()},close:function(a){clearTimeout(this.closing),this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.deactivate(),this._trigger("close",a))},_change:function(a){this.previous!==this.element.val()&&this._trigger("change",a,{item:this.selectedItem})},_normalize:function(b){return b.length&&b[0].label&&b[0].value?b:a.map(b,function(b){return typeof b=="string"?{label:b,value:b}:a.extend({label:b.label||b.value,value:b.value||b.label},b)})},_suggest:function(b){var c=this.menu.element.empty().zIndex(this.element.zIndex()+1);this._renderMenu(c,b),this.menu.deactivate(),this.menu.refresh(),c.show(),this._resizeMenu(),c.position(a.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next(new a.Event("mouseover"))},_resizeMenu:function(){var a=this.menu.element;a.outerWidth(Math.max(a.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(b,c){var d=this;a.each(c,function(a,c){d._renderItem(b,c)})},_renderItem:function(b,c){return a("<li></li>").data("item.autocomplete",c).append(a("<a></a>").text(c.label)).appendTo(b)},_move:function(a,b){if(!this.menu.element.is(":visible")){this.search(null,b);return}if(this.menu.first()&&/^previous/.test(a)||this.menu.last()&&/^next/.test(a)){this.element.val(this.term),this.menu.deactivate();return}this.menu[a](b)},widget:function(){return this.menu.element},_keyEvent:function(a,b){if(!this.isMultiLine||this.menu.element.is(":visible"))this._move(a,b),b.preventDefault()}}),a.extend(a.ui.autocomplete,{escapeRegex:function(a){return a.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")},filter:function(b,c){var d=new RegExp(a.ui.autocomplete.escapeRegex(c),"i");return a.grep(b,function(a){return d.test(a.label||a.value||a)})}})})(jQuery),function(a){a.widget("ui.menu",{_create:function(){var b=this;this.element.addClass("ui-menu ui-widget ui-widget-content ui-corner-all").attr({role:"listbox","aria-activedescendant":"ui-active-menuitem"}).click(function(c){if(!a(c.target).closest(".ui-menu-item a").length)return;c.preventDefault(),b.select(c)}),this.refresh()},refresh:function(){var b=this,c=this.element.children("li:not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","menuitem");c.children("a").addClass("ui-corner-all").attr("tabindex",-1).mouseenter(function(c){b.activate(c,a(this).parent())}).mouseleave(function(){b.deactivate()})},activate:function(a,b){this.deactivate();if(this.hasScroll()){var c=b.offset().top-this.element.offset().top,d=this.element.scrollTop(),e=this.element.height();c<0?this.element.scrollTop(d+c):c>=e&&this.element.scrollTop(d+c-e+b.height())}this.active=b.eq(0).children("a").addClass("ui-state-hover").attr("id","ui-active-menuitem").end(),this._trigger("focus",a,{item:b})},deactivate:function(){if(!this.active)return;this.active.children("a").removeClass("ui-state-hover").removeAttr("id"),this._trigger("blur"),this.active=null},next:function(a){this.move("next",".ui-menu-item:first",a)},previous:function(a){this.move("prev",".ui-menu-item:last",a)},first:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},last:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},move:function(a,b,c){if(!this.active){this.activate(c,this.element.children(b));return}var d=this.active[a+"All"](".ui-menu-item").eq(0);d.length?this.activate(c,d):this.activate(c,this.element.children(b))},nextPage:function(b){if(this.hasScroll()){if(!this.active||this.last()){this.activate(b,this.element.children(".ui-menu-item:first"));return}var c=this.active.offset().top,d=this.element.height(),e=this.element.children(".ui-menu-item").filter(function(){var b=a(this).offset().top-c-d+a(this).height();return b<10&&b>-10});e.length||(e=this.element.children(".ui-menu-item:last")),this.activate(b,e)}else this.activate(b,this.element.children(".ui-menu-item").filter(!this.active||this.last()?":first":":last"))},previousPage:function(b){if(this.hasScroll()){if(!this.active||this.first()){this.activate(b,this.element.children(".ui-menu-item:last"));return}var c=this.active.offset().top,d=this.element.height(),e=this.element.children(".ui-menu-item").filter(function(){var b=a(this).offset().top-c+d-a(this).height();return b<10&&b>-10});e.length||(e=this.element.children(".ui-menu-item:first")),this.activate(b,e)}else this.activate(b,this.element.children(".ui-menu-item").filter(!this.active||this.first()?":last":":first"))},hasScroll:function(){return this.element.height()<this.element[a.fn.prop?"prop":"attr"]("scrollHeight")},select:function(a){this._trigger("selected",a,{item:this.active})}})}(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.button.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){var c,d,e,f,g="ui-button ui-widget ui-state-default ui-corner-all",h="ui-state-hover ui-state-active ",i="ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",j=function(){var b=a(this).find(":ui-button");setTimeout(function(){b.button("refresh")},1)},k=function(b){var c=b.name,d=b.form,e=a([]);return c&&(d?e=a(d).find("[name='"+c+"']"):e=a("[name='"+c+"']",b.ownerDocument).filter(function(){return!this.form})),e};a.widget("ui.button",{options:{disabled:null,text:!0,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest("form").unbind("reset.button").bind("reset.button",j),typeof this.options.disabled!="boolean"?this.options.disabled=!!this.element.propAttr("disabled"):this.element.propAttr("disabled",this.options.disabled),this._determineButtonType(),this.hasTitle=!!this.buttonElement.attr("title");var b=this,h=this.options,i=this.type==="checkbox"||this.type==="radio",l="ui-state-hover"+(i?"":" ui-state-active"),m="ui-state-focus";h.label===null&&(h.label=this.buttonElement.html()),this.buttonElement.addClass(g).attr("role","button").bind("mouseenter.button",function(){if(h.disabled)return;a(this).addClass("ui-state-hover"),this===c&&a(this).addClass("ui-state-active")}).bind("mouseleave.button",function(){if(h.disabled)return;a(this).removeClass(l)}).bind("click.button",function(a){h.disabled&&(a.preventDefault(),a.stopImmediatePropagation())}),this.element.bind("focus.button",function(){b.buttonElement.addClass(m)}).bind("blur.button",function(){b.buttonElement.removeClass(m)}),i&&(this.element.bind("change.button",function(){if(f)return;b.refresh()}),this.buttonElement.bind("mousedown.button",function(a){if(h.disabled)return;f=!1,d=a.pageX,e=a.pageY}).bind("mouseup.button",function(a){if(h.disabled)return;if(d!==a.pageX||e!==a.pageY)f=!0})),this.type==="checkbox"?this.buttonElement.bind("click.button",function(){if(h.disabled||f)return!1;a(this).toggleClass("ui-state-active"),b.buttonElement.attr("aria-pressed",b.element[0].checked)}):this.type==="radio"?this.buttonElement.bind("click.button",function(){if(h.disabled||f)return!1;a(this).addClass("ui-state-active"),b.buttonElement.attr("aria-pressed","true");var c=b.element[0];k(c).not(c).map(function(){return a(this).button("widget")[0]}).removeClass("ui-state-active").attr("aria-pressed","false")}):(this.buttonElement.bind("mousedown.button",function(){if(h.disabled)return!1;a(this).addClass("ui-state-active"),c=this,a(document).one("mouseup",function(){c=null})}).bind("mouseup.button",function(){if(h.disabled)return!1;a(this).removeClass("ui-state-active")}).bind("keydown.button",function(b){if(h.disabled)return!1;(b.keyCode==a.ui.keyCode.SPACE||b.keyCode==a.ui.keyCode.ENTER)&&a(this).addClass("ui-state-active")}).bind("keyup.button",function(){a(this).removeClass("ui-state-active")}),this.buttonElement.is("a")&&this.buttonElement.keyup(function(b){b.keyCode===a.ui.keyCode.SPACE&&a(this).click()})),this._setOption("disabled",h.disabled),this._resetButton()},_determineButtonType:function(){this.element.is(":checkbox")?this.type="checkbox":this.element.is(":radio")?this.type="radio":this.element.is("input")?this.type="input":this.type="button";if(this.type==="checkbox"||this.type==="radio"){var a=this.element.parents().filter(":last"),b="label[for='"+this.element.attr("id")+"']";this.buttonElement=a.find(b),this.buttonElement.length||(a=a.length?a.siblings():this.element.siblings(),this.buttonElement=a.filter(b),this.buttonElement.length||(this.buttonElement=a.find(b))),this.element.addClass("ui-helper-hidden-accessible");var c=this.element.is(":checked");c&&this.buttonElement.addClass("ui-state-active"),this.buttonElement.attr("aria-pressed",c)}else this.buttonElement=this.element},widget:function(){return this.buttonElement},destroy:function(){this.element.removeClass("ui-helper-hidden-accessible"),this.buttonElement.removeClass(g+" "+h+" "+i).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()),this.hasTitle||this.buttonElement.removeAttr("title"),a.Widget.prototype.destroy.call(this)},_setOption:function(b,c){a.Widget.prototype._setOption.apply(this,arguments);if(b==="disabled"){c?this.element.propAttr("disabled",!0):this.element.propAttr("disabled",!1);return}this._resetButton()},refresh:function(){var b=this.element.is(":disabled");b!==this.options.disabled&&this._setOption("disabled",b),this.type==="radio"?k(this.element[0]).each(function(){a(this).is(":checked")?a(this).button("widget").addClass("ui-state-active").attr("aria-pressed","true"):a(this).button("widget").removeClass("ui-state-active").attr("aria-pressed","false")}):this.type==="checkbox"&&(this.element.is(":checked")?this.buttonElement.addClass("ui-state-active").attr("aria-pressed","true"):this.buttonElement.removeClass("ui-state-active").attr("aria-pressed","false"))},_resetButton:function(){if(this.type==="input"){this.options.label&&this.element.val(this.options.label);return}var b=this.buttonElement.removeClass(i),c=a("<span></span>",this.element[0].ownerDocument).addClass("ui-button-text").html(this.options.label).appendTo(b.empty()).text(),d=this.options.icons,e=d.primary&&d.secondary,f=[];d.primary||d.secondary?(this.options.text&&f.push("ui-button-text-icon"+(e?"s":d.primary?"-primary":"-secondary")),d.primary&&b.prepend("<span class='ui-button-icon-primary ui-icon "+d.primary+"'></span>"),d.secondary&&b.append("<span class='ui-button-icon-secondary ui-icon "+d.secondary+"'></span>"),this.options.text||(f.push(e?"ui-button-icons-only":"ui-button-icon-only"),this.hasTitle||b.attr("title",c))):f.push("ui-button-text-only"),b.addClass(f.join(" "))}}),a.widget("ui.buttonset",{options:{items:":button, :submit, :reset, :checkbox, :radio, a, :data(button)"},_create:function(){this.element.addClass("ui-buttonset")},_init:function(){this.refresh()},_setOption:function(b,c){b==="disabled"&&this.buttons.button("option",b,c),a.Widget.prototype._setOption.apply(this,arguments)},refresh:function(){var b=this.element.css("direction")==="rtl";this.buttons=this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function(){return a(this).button("widget")[0]}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(b?"ui-corner-right":"ui-corner-left").end().filter(":last").addClass(b?"ui-corner-left":"ui-corner-right").end().end()},destroy:function(){this.element.removeClass("ui-buttonset"),this.buttons.map(function(){return a(this).button("widget")[0]}).removeClass("ui-corner-left ui-corner-right").end().button("destroy"),a.Widget.prototype.destroy.call(this)}})})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.dialog.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){var c="ui-dialog ui-widget ui-widget-content ui-corner-all ",d={buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},e={maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0},f=a.attrFn||{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0,click:!0};a.widget("ui.dialog",{options:{autoOpen:!0,buttons:{},closeOnEscape:!0,closeText:"close",dialogClass:"",draggable:!0,hide:null,height:"auto",maxHeight:!1,maxWidth:!1,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",collision:"fit",using:function(b){var c=a(this).css(b).offset().top;c<0&&a(this).css("top",b.top-c)}},resizable:!0,show:null,stack:!0,title:"",width:300,zIndex:1e3},_create:function(){this.originalTitle=this.element.attr("title"),typeof this.originalTitle!="string"&&(this.originalTitle=""),this.options.title=this.options.title||this.originalTitle;var b=this,d=b.options,e=d.title||"&#160;",f=a.ui.dialog.getTitleId(b.element),g=(b.uiDialog=a("<div></div>")).appendTo(document.body).hide().addClass(c+d.dialogClass).css({zIndex:d.zIndex}).attr("tabIndex",-1).css("outline",0).keydown(function(c){d.closeOnEscape&&!c.isDefaultPrevented()&&c.keyCode&&c.keyCode===a.ui.keyCode.ESCAPE&&(b.close(c),c.preventDefault())}).attr({role:"dialog","aria-labelledby":f}).mousedown(function(a){b.moveToTop(!1,a)}),h=b.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(g),i=(b.uiDialogTitlebar=a("<div></div>")).addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(g),j=a('<a href="#"></a>').addClass("ui-dialog-titlebar-close ui-corner-all").attr("role","button").hover(function(){j.addClass("ui-state-hover")},function(){j.removeClass("ui-state-hover")}).focus(function(){j.addClass("ui-state-focus")}).blur(function(){j.removeClass("ui-state-focus")}).click(function(a){return b.close(a),!1}).appendTo(i),k=(b.uiDialogTitlebarCloseText=a("<span></span>")).addClass("ui-icon ui-icon-closethick").text(d.closeText).appendTo(j),l=a("<span></span>").addClass("ui-dialog-title").attr("id",f).html(e).prependTo(i);a.isFunction(d.beforeclose)&&!a.isFunction(d.beforeClose)&&(d.beforeClose=d.beforeclose),i.find("*").add(i).disableSelection(),d.draggable&&a.fn.draggable&&b._makeDraggable(),d.resizable&&a.fn.resizable&&b._makeResizable(),b._createButtons(d.buttons),b._isOpen=!1,a.fn.bgiframe&&g.bgiframe()},_init:function(){this.options.autoOpen&&this.open()},destroy:function(){var a=this;return a.overlay&&a.overlay.destroy(),a.uiDialog.hide(),a.element.unbind(".dialog").removeData("dialog").removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body"),a.uiDialog.remove(),a.originalTitle&&a.element.attr("title",a.originalTitle),a},widget:function(){return this.uiDialog},close:function(b){var c=this,d,e;if(!1===c._trigger("beforeClose",b))return;return c.overlay&&c.overlay.destroy(),c.uiDialog.unbind("keypress.ui-dialog"),c._isOpen=!1,c.options.hide?c.uiDialog.hide(c.options.hide,function(){c._trigger("close",b)}):(c.uiDialog.hide(),c._trigger("close",b)),a.ui.dialog.overlay.resize(),c.options.modal&&(d=0,a(".ui-dialog").each(function(){this!==c.uiDialog[0]&&(e=a(this).css("z-index"),isNaN(e)||(d=Math.max(d,e)))}),a.ui.dialog.maxZ=d),c},isOpen:function(){return this._isOpen},moveToTop:function(b,c){var d=this,e=d.options,f;return e.modal&&!b||!e.stack&&!e.modal?d._trigger("focus",c):(e.zIndex>a.ui.dialog.maxZ&&(a.ui.dialog.maxZ=e.zIndex),d.overlay&&(a.ui.dialog.maxZ+=1,d.overlay.$el.css("z-index",a.ui.dialog.overlay.maxZ=a.ui.dialog.maxZ)),f={scrollTop:d.element.scrollTop(),scrollLeft:d.element.scrollLeft()},a.ui.dialog.maxZ+=1,d.uiDialog.css("z-index",a.ui.dialog.maxZ),d.element.attr(f),d._trigger("focus",c),d)},open:function(){if(this._isOpen)return;var b=this,c=b.options,d=b.uiDialog;return b.overlay=c.modal?new a.ui.dialog.overlay(b):null,b._size(),b._position(c.position),d.show(c.show),b.moveToTop(!0),c.modal&&d.bind("keydown.ui-dialog",function(b){if(b.keyCode!==a.ui.keyCode.TAB)return;var c=a(":tabbable",this),d=c.filter(":first"),e=c.filter(":last");if(b.target===e[0]&&!b.shiftKey)return d.focus(1),!1;if(b.target===d[0]&&b.shiftKey)return e.focus(1),!1}),a(b.element.find(":tabbable").get().concat(d.find(".ui-dialog-buttonpane :tabbable").get().concat(d.get()))).eq(0).focus(),b._isOpen=!0,b._trigger("open"),b},_createButtons:function(b){var c=this,d=!1,e=a("<div></div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),g=a("<div></div>").addClass("ui-dialog-buttonset").appendTo(e);c.uiDialog.find(".ui-dialog-buttonpane").remove(),typeof b=="object"&&b!==null&&a.each(b,function(){return!(d=!0)}),d&&(a.each(b,function(b,d){d=a.isFunction(d)?{click:d,text:b}:d;var e=a('<button type="button"></button>').click(function(){d.click.apply(c.element[0],arguments)}).appendTo(g);a.each(d,function(a,b){if(a==="click")return;a in f?e[a](b):e.attr(a,b)}),a.fn.button&&e.button()}),e.appendTo(c.uiDialog))},_makeDraggable:function(){function f(a){return{position:a.position,offset:a.offset}}var b=this,c=b.options,d=a(document),e;b.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(d,g){e=c.height==="auto"?"auto":a(this).height(),a(this).height(a(this).height()).addClass("ui-dialog-dragging"),b._trigger("dragStart",d,f(g))},drag:function(a,c){b._trigger("drag",a,f(c))},stop:function(g,h){c.position=[h.position.left-d.scrollLeft(),h.position.top-d.scrollTop()],a(this).removeClass("ui-dialog-dragging").height(e),b._trigger("dragStop",g,f(h)),a.ui.dialog.overlay.resize()}})},_makeResizable:function(c){function h(a){return{originalPosition:a.originalPosition,originalSize:a.originalSize,position:a.position,size:a.size}}c=c===b?this.options.resizable:c;var d=this,e=d.options,f=d.uiDialog.css("position"),g=typeof c=="string"?c:"n,e,s,w,se,sw,ne,nw";d.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:d.element,maxWidth:e.maxWidth,maxHeight:e.maxHeight,minWidth:e.minWidth,minHeight:d._minHeight(),handles:g,start:function(b,c){a(this).addClass("ui-dialog-resizing"),d._trigger("resizeStart",b,h(c))},resize:function(a,b){d._trigger("resize",a,h(b))},stop:function(b,c){a(this).removeClass("ui-dialog-resizing"),e.height=a(this).height(),e.width=a(this).width(),d._trigger("resizeStop",b,h(c)),a.ui.dialog.overlay.resize()}}).css("position",f).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")},_minHeight:function(){var a=this.options;return a.height==="auto"?a.minHeight:Math.min(a.minHeight,a.height)},_position:function(b){var c=[],d=[0,0],e;if(b){if(typeof b=="string"||typeof b=="object"&&"0"in b)c=b.split?b.split(" "):[b[0],b[1]],c.length===1&&(c[1]=c[0]),a.each(["left","top"],function(a,b){+c[a]===c[a]&&(d[a]=c[a],c[a]=b)}),b={my:c.join(" "),at:c.join(" "),offset:d.join(" ")};b=a.extend({},a.ui.dialog.prototype.options.position,b)}else b=a.ui.dialog.prototype.options.position;e=this.uiDialog.is(":visible"),e||this.uiDialog.show(),this.uiDialog.css({top:0,left:0}).position(a.extend({of:window},b)),e||this.uiDialog.hide()},_setOptions:function(b){var c=this,f={},g=!1;a.each(b,function(a,b){c._setOption(a,b),a in d&&(g=!0),a in e&&(f[a]=b)}),g&&this._size(),this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option",f)},_setOption:function(b,d){var e=this,f=e.uiDialog;switch(b){case"beforeclose":b="beforeClose";break;case"buttons":e._createButtons(d);break;case"closeText":e.uiDialogTitlebarCloseText.text(""+d);break;case"dialogClass":f.removeClass(e.options.dialogClass).addClass(c+d);break;case"disabled":d?f.addClass("ui-dialog-disabled"):f.removeClass("ui-dialog-disabled");break;case"draggable":var g=f.is(":data(draggable)");g&&!d&&f.draggable("destroy"),!g&&d&&e._makeDraggable();break;case"position":e._position(d);break;case"resizable":var h=f.is(":data(resizable)");h&&!d&&f.resizable("destroy"),h&&typeof d=="string"&&f.resizable("option","handles",d),!h&&d!==!1&&e._makeResizable(d);break;case"title":a(".ui-dialog-title",e.uiDialogTitlebar).html(""+(d||"&#160;"))}a.Widget.prototype._setOption.apply(e,arguments)},_size:function(){var b=this.options,c,d,e=this.uiDialog.is(":visible");this.element.show().css({width:"auto",minHeight:0,height:0}),b.minWidth>b.width&&(b.width=b.minWidth),c=this.uiDialog.css({height:"auto",width:b.width}).height(),d=Math.max(0,b.minHeight-c);if(b.height==="auto")if(a.support.minHeight)this.element.css({minHeight:d,height:"auto"});else{this.uiDialog.show();var f=this.element.css("height","auto").height();e||this.uiDialog.hide(),this.element.height(Math.max(f,d))}else this.element.height(Math.max(b.height-c,0));this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())}}),a.extend(a.ui.dialog,{version:"1.8.20",uuid:0,maxZ:0,getTitleId:function(a){var b=a.attr("id");return b||(this.uuid+=1,b=this.uuid),"ui-dialog-title-"+b},overlay:function(b){this.$el=a.ui.dialog.overlay.create(b)}}),a.extend(a.ui.dialog.overlay,{instances:[],oldInstances:[],maxZ:0,events:a.map("focus,mousedown,mouseup,keydown,keypress,click".split(","),function(a){return a+".dialog-overlay"}).join(" "),create:function(b){this.instances.length===0&&(setTimeout(function(){a.ui.dialog.overlay.instances.length&&a(document).bind(a.ui.dialog.overlay.events,function(b){if(a(b.target).zIndex()<a.ui.dialog.overlay.maxZ)return!1})},1),a(document).bind("keydown.dialog-overlay",function(c){b.options.closeOnEscape&&!c.isDefaultPrevented()&&c.keyCode&&c.keyCode===a.ui.keyCode.ESCAPE&&(b.close(c),c.preventDefault())}),a(window).bind("resize.dialog-overlay",a.ui.dialog.overlay.resize));var c=(this.oldInstances.pop()||a("<div></div>").addClass("ui-widget-overlay")).appendTo(document.body).css({width:this.width(),height:this.height()});return a.fn.bgiframe&&c.bgiframe(),this.instances.push(c),c},destroy:function(b){var c=a.inArray(b,this.instances);c!=-1&&this.oldInstances.push(this.instances.splice(c,1)[0]),this.instances.length===0&&a([document,window]).unbind(".dialog-overlay"),b.remove();var d=0;a.each(this.instances,function(){d=Math.max(d,this.css("z-index"))}),this.maxZ=d},height:function(){var b,c;return a.browser.msie&&a.browser.version<7?(b=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),c=Math.max(document.documentElement.offsetHeight,document.body.offsetHeight),b<c?a(window).height()+"px":b+"px"):a(document).height()+"px"},width:function(){var b,c;return a.browser.msie?(b=Math.max(document.documentElement.scrollWidth,document.body.scrollWidth),c=Math.max(document.documentElement.offsetWidth,document.body.offsetWidth),b<c?a(window).width()+"px":b+"px"):a(document).width()+"px"},resize:function(){var b=a([]);a.each(a.ui.dialog.overlay.instances,function(){b=b.add(this)}),b.css({width:0,height:0}).css({width:a.ui.dialog.overlay.width(),height:a.ui.dialog.overlay.height()})}}),a.extend(a.ui.dialog.overlay.prototype,{destroy:function(){a.ui.dialog.overlay.destroy(this.$el)}})})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.slider.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){var c=5;a.widget("ui.slider",a.ui.mouse,{widgetEventPrefix:"slide",options:{animate:!1,distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null},_create:function(){var b=this,d=this.options,e=this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),f="<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",g=d.values&&d.values.length||1,h=[];this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this.element.addClass("ui-slider ui-slider-"+this.orientation+" ui-widget"+" ui-widget-content"+" ui-corner-all"+(d.disabled?" ui-slider-disabled ui-disabled":"")),this.range=a([]),d.range&&(d.range===!0&&(d.values||(d.values=[this._valueMin(),this._valueMin()]),d.values.length&&d.values.length!==2&&(d.values=[d.values[0],d.values[0]])),this.range=a("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header"+(d.range==="min"||d.range==="max"?" ui-slider-range-"+d.range:"")));for(var i=e.length;i<g;i+=1)h.push(f);this.handles=e.add(a(h.join("")).appendTo(b.element)),this.handle=this.handles.eq(0),this.handles.add(this.range).filter("a").click(function(a){a.preventDefault()}).hover(function(){d.disabled||a(this).addClass("ui-state-hover")},function(){a(this).removeClass("ui-state-hover")}).focus(function(){d.disabled?a(this).blur():(a(".ui-slider .ui-state-focus").removeClass("ui-state-focus"),a(this).addClass("ui-state-focus"))}).blur(function(){a(this).removeClass("ui-state-focus")}),this.handles.each(function(b){a(this).data("index.ui-slider-handle",b)}),this.handles.keydown(function(d){var e=a(this).data("index.ui-slider-handle"),f,g,h,i;if(b.options.disabled)return;switch(d.keyCode){case a.ui.keyCode.HOME:case a.ui.keyCode.END:case a.ui.keyCode.PAGE_UP:case a.ui.keyCode.PAGE_DOWN:case a.ui.keyCode.UP:case a.ui.keyCode.RIGHT:case a.ui.keyCode.DOWN:case a.ui.keyCode.LEFT:d.preventDefault();if(!b._keySliding){b._keySliding=!0,a(this).addClass("ui-state-active"),f=b._start(d,e);if(f===!1)return}}i=b.options.step,b.options.values&&b.options.values.length?g=h=b.values(e):g=h=b.value();switch(d.keyCode){case a.ui.keyCode.HOME:h=b._valueMin();break;case a.ui.keyCode.END:h=b._valueMax();break;case a.ui.keyCode.PAGE_UP:h=b._trimAlignValue(g+(b._valueMax()-b._valueMin())/c);break;case a.ui.keyCode.PAGE_DOWN:h=b._trimAlignValue(g-(b._valueMax()-b._valueMin())/c);break;case a.ui.keyCode.UP:case a.ui.keyCode.RIGHT:if(g===b._valueMax())return;h=b._trimAlignValue(g+i);break;case a.ui.keyCode.DOWN:case a.ui.keyCode.LEFT:if(g===b._valueMin())return;h=b._trimAlignValue(g-i)}b._slide(d,e,h)}).keyup(function(c){var d=a(this).data("index.ui-slider-handle");b._keySliding&&(b._keySliding=!1,b._stop(c,d),b._change(c,d),a(this).removeClass("ui-state-active"))}),this._refreshValue(),this._animateOff=!1},destroy:function(){return this.handles.remove(),this.range.remove(),this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all").removeData("slider").unbind(".slider"),this._mouseDestroy(),this},_mouseCapture:function(b){var c=this.options,d,e,f,g,h,i,j,k,l;return c.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),d={x:b.pageX,y:b.pageY},e=this._normValueFromMouse(d),f=this._valueMax()-this._valueMin()+1,h=this,this.handles.each(function(b){var c=Math.abs(e-h.values(b));f>c&&(f=c,g=a(this),i=b)}),c.range===!0&&this.values(1)===c.min&&(i+=1,g=a(this.handles[i])),j=this._start(b,i),j===!1?!1:(this._mouseSliding=!0,h._handleIndex=i,g.addClass("ui-state-active").focus(),k=g.offset(),l=!a(b.target).parents().andSelf().is(".ui-slider-handle"),this._clickOffset=l?{left:0,top:0}:{left:b.pageX-k.left-g.width()/2,top:b.pageY-k.top-g.height()/2-(parseInt(g.css("borderTopWidth"),10)||0)-(parseInt(g.css("borderBottomWidth"),10)||0)+(parseInt(g.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(b,i,e),this._animateOff=!0,!0))},_mouseStart:function(a){return!0},_mouseDrag:function(a){var b={x:a.pageX,y:a.pageY},c=this._normValueFromMouse(b);return this._slide(a,this._handleIndex,c),!1},_mouseStop:function(a){return this.handles.removeClass("ui-state-active"),this._mouseSliding=!1,this._stop(a,this._handleIndex),this._change(a,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation=this.options.orientation==="vertical"?"vertical":"horizontal"},_normValueFromMouse:function(a){var b,c,d,e,f;return this.orientation==="horizontal"?(b=this.elementSize.width,c=a.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(b=this.elementSize.height,c=a.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),d=c/b,d>1&&(d=1),d<0&&(d=0),this.orientation==="vertical"&&(d=1-d),e=this._valueMax()-this._valueMin(),f=this._valueMin()+d*e,this._trimAlignValue(f)},_start:function(a,b){var c={handle:this.handles[b],value:this.value()};return this.options.values&&this.options.values.length&&(c.value=this.values(b),c.values=this.values()),this._trigger("start",a,c)},_slide:function(a,b,c){var d,e,f;this.options.values&&this.options.values.length?(d=this.values(b?0:1),this.options.values.length===2&&this.options.range===!0&&(b===0&&c>d||b===1&&c<d)&&(c=d),c!==this.values(b)&&(e=this.values(),e[b]=c,f=this._trigger("slide",a,{handle:this.handles[b],value:c,values:e}),d=this.values(b?0:1),f!==!1&&this.values(b,c,!0))):c!==this.value()&&(f=this._trigger("slide",a,{handle:this.handles[b],value:c}),f!==!1&&this.value(c))},_stop:function(a,b){var c={handle:this.handles[b],value:this.value()};this.options.values&&this.options.values.length&&(c.value=this.values(b),c.values=this.values()),this._trigger("stop",a,c)},_change:function(a,b){if(!this._keySliding&&!this._mouseSliding){var c={handle:this.handles[b],value:this.value()};this.options.values&&this.options.values.length&&(c.value=this.values(b),c.values=this.values()),this._trigger("change",a,c)}},value:function(a){if(arguments.length){this.options.value=this._trimAlignValue(a),this._refreshValue(),this._change(null,0);return}return this._value()},values:function(b,c){var d,e,f;if(arguments.length>1){this.options.values[b]=this._trimAlignValue(c),this._refreshValue(),this._change(null,b);return}if(!arguments.length)return this._values();if(!a.isArray(arguments[0]))return this.options.values&&this.options.values.length?this._values(b):this.value();d=this.options.values,e=arguments[0];for(f=0;f<d.length;f+=1)d[f]=this._trimAlignValue(e[f]),this._change(null,f);this._refreshValue()},_setOption:function(b,c){var d,e=0;a.isArray(this.options.values)&&(e=this.options.values.length),a.Widget.prototype._setOption.apply(this,arguments);switch(b){case"disabled":c?(this.handles.filter(".ui-state-focus").blur(),this.handles.removeClass("ui-state-hover"),this.handles.propAttr("disabled",!0),this.element.addClass("ui-disabled")):(this.handles.propAttr("disabled",!1),this.element.removeClass("ui-disabled"));break;case"orientation":this._detectOrientation(),this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-"+this.orientation),this._refreshValue();break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":this._animateOff=!0,this._refreshValue();for(d=0;d<e;d+=1)this._change(null,d);this._animateOff=!1}},_value:function(){var a=this.options.value;return a=this._trimAlignValue(a),a},_values:function(a){var b,c,d;if(arguments.length)return b=this.options.values[a],b=this._trimAlignValue(b),b;c=this.options.values.slice();for(d=0;d<c.length;d+=1)c[d]=this._trimAlignValue(c[d]);return c},_trimAlignValue:function(a){if(a<=this._valueMin())return this._valueMin();if(a>=this._valueMax())return this._valueMax();var b=this.options.step>0?this.options.step:1,c=(a-this._valueMin())%b,d=a-c;return Math.abs(c)*2>=b&&(d+=c>0?b:-b),parseFloat(d.toFixed(5))},_valueMin:function(){return this.options.min},_valueMax:function(){return this.options.max},_refreshValue:function(){var b=this.options.range,c=this.options,d=this,e=this._animateOff?!1:c.animate,f,g={},h,i,j,k;this.options.values&&this.options.values.length?this.handles.each(function(b,i){f=(d.values(b)-d._valueMin())/(d._valueMax()-d._valueMin())*100,g[d.orientation==="horizontal"?"left":"bottom"]=f+"%",a(this).stop(1,1)[e?"animate":"css"](g,c.animate),d.options.range===!0&&(d.orientation==="horizontal"?(b===0&&d.range.stop(1,1)[e?"animate":"css"]({left:f+"%"},c.animate),b===1&&d.range[e?"animate":"css"]({width:f-h+"%"},{queue:!1,duration:c.animate})):(b===0&&d.range.stop(1,1)[e?"animate":"css"]({bottom:f+"%"},c.animate),b===1&&d.range[e?"animate":"css"]({height:f-h+"%"},{queue:!1,duration:c.animate}))),h=f}):(i=this.value(),j=this._valueMin(),k=this._valueMax(),f=k!==j?(i-j)/(k-j)*100:0,g[d.orientation==="horizontal"?"left":"bottom"]=f+"%",this.handle.stop(1,1)[e?"animate":"css"](g,c.animate),b==="min"&&this.orientation==="horizontal"&&this.range.stop(1,1)[e?"animate":"css"]({width:f+"%"},c.animate),b==="max"&&this.orientation==="horizontal"&&this.range[e?"animate":"css"]({width:100-f+"%"},{queue:!1,duration:c.animate}),b==="min"&&this.orientation==="vertical"&&this.range.stop(1,1)[e?"animate":"css"]({height:f+"%"},c.animate),b==="max"&&this.orientation==="vertical"&&this.range[e?"animate":"css"]({height:100-f+"%"},{queue:!1,duration:c.animate}))}}),a.extend(a.ui.slider,{version:"1.8.20"})})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.tabs.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){function e(){return++c}function f(){return++d}var c=0,d=0;a.widget("ui.tabs",{options:{add:null,ajaxOptions:null,cache:!1,cookie:null,collapsible:!1,disable:null,disabled:[],enable:null,event:"click",fx:null,idPrefix:"ui-tabs-",load:null,panelTemplate:"<div></div>",remove:null,select:null,show:null,spinner:"<em>Loading&#8230;</em>",tabTemplate:"<li><a href='#{href}'><span>#{label}</span></a></li>"},_create:function(){this._tabify(!0)},_setOption:function(a,b){if(a=="selected"){if(this.options.collapsible&&b==this.options.selected)return;this.select(b)}else this.options[a]=b,this._tabify()},_tabId:function(a){return a.title&&a.title.replace(/\s/g,"_").replace(/[^\w\u00c0-\uFFFF-]/g,"")||this.options.idPrefix+e()},_sanitizeSelector:function(a){return a.replace(/:/g,"\\:")},_cookie:function(){var b=this.cookie||(this.cookie=this.options.cookie.name||"ui-tabs-"+f());return a.cookie.apply(null,[b].concat(a.makeArray(arguments)))},_ui:function(a,b){return{tab:a,panel:b,index:this.anchors.index(a)}},_cleanup:function(){this.lis.filter(".ui-state-processing").removeClass("ui-state-processing").find("span:data(label.tabs)").each(function(){var b=a(this);b.html(b.data("label.tabs")).removeData("label.tabs")})},_tabify:function(c){function m(b,c){b.css("display",""),!a.support.opacity&&c.opacity&&b[0].style.removeAttribute("filter")}var d=this,e=this.options,f=/^#.+/;this.list=this.element.find("ol,ul").eq(0),this.lis=a(" > li:has(a[href])",this.list),this.anchors=this.lis.map(function(){return a("a",this)[0]}),this.panels=a([]),this.anchors.each(function(b,c){var g=a(c).attr("href"),h=g.split("#")[0],i;h&&(h===location.toString().split("#")[0]||(i=a("base")[0])&&h===i.href)&&(g=c.hash,c.href=g);if(f.test(g))d.panels=d.panels.add(d.element.find(d._sanitizeSelector(g)));else if(g&&g!=="#"){a.data(c,"href.tabs",g),a.data(c,"load.tabs",g.replace(/#.*$/,""));var j=d._tabId(c);c.href="#"+j;var k=d.element.find("#"+j);k.length||(k=a(e.panelTemplate).attr("id",j).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").insertAfter(d.panels[b-1]||d.list),k.data("destroy.tabs",!0)),d.panels=d.panels.add(k)}else e.disabled.push(b)}),c?(this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all"),this.list.addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all"),this.lis.addClass("ui-state-default ui-corner-top"),this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom"),e.selected===b?(location.hash&&this.anchors.each(function(a,b){if(b.hash==location.hash)return e.selected=a,!1}),typeof e.selected!="number"&&e.cookie&&(e.selected=parseInt(d._cookie(),10)),typeof e.selected!="number"&&this.lis.filter(".ui-tabs-selected").length&&(e.selected=this.lis.index(this.lis.filter(".ui-tabs-selected"))),e.selected=e.selected||(this.lis.length?0:-1)):e.selected===null&&(e.selected=-1),e.selected=e.selected>=0&&this.anchors[e.selected]||e.selected<0?e.selected:0,e.disabled=a.unique(e.disabled.concat(a.map(this.lis.filter(".ui-state-disabled"),function(a,b){return d.lis.index(a)}))).sort(),a.inArray(e.selected,e.disabled)!=-1&&e.disabled.splice(a.inArray(e.selected,e.disabled),1),this.panels.addClass("ui-tabs-hide"),this.lis.removeClass("ui-tabs-selected ui-state-active"),e.selected>=0&&this.anchors.length&&(d.element.find(d._sanitizeSelector(d.anchors[e.selected].hash)).removeClass("ui-tabs-hide"),this.lis.eq(e.selected).addClass("ui-tabs-selected ui-state-active"),d.element.queue("tabs",function(){d._trigger("show",null,d._ui(d.anchors[e.selected],d.element.find(d._sanitizeSelector(d.anchors[e.selected].hash))[0]))}),this.load(e.selected)),a(window).bind("unload",function(){d.lis.add(d.anchors).unbind(".tabs"),d.lis=d.anchors=d.panels=null})):e.selected=this.lis.index(this.lis.filter(".ui-tabs-selected")),this.element[e.collapsible?"addClass":"removeClass"]("ui-tabs-collapsible"),e.cookie&&this._cookie(e.selected,e.cookie);for(var g=0,h;h=this.lis[g];g++)a(h)[a.inArray(g,e.disabled)!=-1&&!a(h).hasClass("ui-tabs-selected")?"addClass":"removeClass"]("ui-state-disabled");e.cache===!1&&this.anchors.removeData("cache.tabs"),this.lis.add(this.anchors).unbind(".tabs");if(e.event!=="mouseover"){var i=function(a,b){b.is(":not(.ui-state-disabled)")&&b.addClass("ui-state-"+a)},j=function(a,b){b.removeClass("ui-state-"+a)};this.lis.bind("mouseover.tabs",function(){i("hover",a(this))}),this.lis.bind("mouseout.tabs",function(){j("hover",a(this))}),this.anchors.bind("focus.tabs",function(){i("focus",a(this).closest("li"))}),this.anchors.bind("blur.tabs",function(){j("focus",a(this).closest("li"))})}var k,l;e.fx&&(a.isArray(e.fx)?(k=e.fx[0],l=e.fx[1]):k=l=e.fx);var n=l?function(b,c){a(b).closest("li").addClass("ui-tabs-selected ui-state-active"),c.hide().removeClass("ui-tabs-hide").animate(l,l.duration||"normal",function(){m(c,l),d._trigger("show",null,d._ui(b,c[0]))})}:function(b,c){a(b).closest("li").addClass("ui-tabs-selected ui-state-active"),c.removeClass("ui-tabs-hide"),d._trigger("show",null,d._ui(b,c[0]))},o=k?function(a,b){b.animate(k,k.duration||"normal",function(){d.lis.removeClass("ui-tabs-selected ui-state-active"),b.addClass("ui-tabs-hide"),m(b,k),d.element.dequeue("tabs")})}:function(a,b,c){d.lis.removeClass("ui-tabs-selected ui-state-active"),b.addClass("ui-tabs-hide"),d.element.dequeue("tabs")};this.anchors.bind(e.event+".tabs",function(){var b=this,c=a(b).closest("li"),f=d.panels.filter(":not(.ui-tabs-hide)"),g=d.element.find(d._sanitizeSelector(b.hash));if(c.hasClass("ui-tabs-selected")&&!e.collapsible||c.hasClass("ui-state-disabled")||c.hasClass("ui-state-processing")||d.panels.filter(":animated").length||d._trigger("select",null,d._ui(this,g[0]))===!1)return this.blur(),!1;e.selected=d.anchors.index(this),d.abort();if(e.collapsible){if(c.hasClass("ui-tabs-selected"))return e.selected=-1,e.cookie&&d._cookie(e.selected,e.cookie),d.element.queue("tabs",function(){o(b,f)}).dequeue("tabs"),this.blur(),!1;if(!f.length)return e.cookie&&d._cookie(e.selected,e.cookie),d.element.queue("tabs",function(){n(b,g)}),d.load(d.anchors.index(this)),this.blur(),!1}e.cookie&&d._cookie(e.selected,e.cookie);if(g.length)f.length&&d.element.queue("tabs",function(){o(b,f)}),d.element.queue("tabs",function(){n(b,g)}),d.load(d.anchors.index(this));else throw"jQuery UI Tabs: Mismatching fragment identifier.";a.browser.msie&&this.blur()}),this.anchors.bind("click.tabs",function(){return!1})},_getIndex:function(a){return typeof a=="string"&&(a=this.anchors.index(this.anchors.filter("[href$='"+a+"']"))),a},destroy:function(){var b=this.options;return this.abort(),this.element.unbind(".tabs").removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible").removeData("tabs"),this.list.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all"),this.anchors.each(function(){var b=a.data(this,"href.tabs");b&&(this.href=b);var c=a(this).unbind(".tabs");a.each(["href","load","cache"],function(a,b){c.removeData(b+".tabs")})}),this.lis.unbind(".tabs").add(this.panels).each(function(){a.data(this,"destroy.tabs")?a(this).remove():a(this).removeClass(["ui-state-default","ui-corner-top","ui-tabs-selected","ui-state-active","ui-state-hover","ui-state-focus","ui-state-disabled","ui-tabs-panel","ui-widget-content","ui-corner-bottom","ui-tabs-hide"].join(" "))}),b.cookie&&this._cookie(null,b.cookie),this},add:function(c,d,e){e===b&&(e=this.anchors.length);var f=this,g=this.options,h=a(g.tabTemplate.replace(/#\{href\}/g,c).replace(/#\{label\}/g,d)),i=c.indexOf("#")?this._tabId(a("a",h)[0]):c.replace("#","");h.addClass("ui-state-default ui-corner-top").data("destroy.tabs",!0);var j=f.element.find("#"+i);return j.length||(j=a(g.panelTemplate).attr("id",i).data("destroy.tabs",!0)),j.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide"),e>=this.lis.length?(h.appendTo(this.list),j.appendTo(this.list[0].parentNode)):(h.insertBefore(this.lis[e]),j.insertBefore(this.panels[e])),g.disabled=a.map(g.disabled,function(a,b){return a>=e?++a:a}),this._tabify(),this.anchors.length==1&&(g.selected=0,h.addClass("ui-tabs-selected ui-state-active"),j.removeClass("ui-tabs-hide"),this.element.queue("tabs",function(){f._trigger("show",null,f._ui(f.anchors[0],f.panels[0]))}),this.load(0)),this._trigger("add",null,this._ui(this.anchors[e],this.panels[e])),this},remove:function(b){b=this._getIndex(b);var c=this.options,d=this.lis.eq(b).remove(),e=this.panels.eq(b).remove();return d.hasClass("ui-tabs-selected")&&this.anchors.length>1&&this.select(b+(b+1<this.anchors.length?1:-1)),c.disabled=a.map(a.grep(c.disabled,function(a,c){return a!=b}),function(a,c){return a>=b?--a:a}),this._tabify(),this._trigger("remove",null,this._ui(d.find("a")[0],e[0])),this},enable:function(b){b=this._getIndex(b);var c=this.options;if(a.inArray(b,c.disabled)==-1)return;return this.lis.eq(b).removeClass("ui-state-disabled"),c.disabled=a.grep(c.disabled,function(a,c){return a!=b}),this._trigger("enable",null,this._ui(this.anchors[b],this.panels[b])),this},disable:function(a){a=this._getIndex(a);var b=this,c=this.options;return a!=c.selected&&(this.lis.eq(a).addClass("ui-state-disabled"),c.disabled.push(a),c.disabled.sort(),this._trigger("disable",null,this._ui(this.anchors[a],this.panels[a]))),this},select:function(a){a=this._getIndex(a);if(a==-1)if(this.options.collapsible&&this.options.selected!=-1)a=this.options.selected;else return this;return this.anchors.eq(a).trigger(this.options.event+".tabs"),this},load:function(b){b=this._getIndex(b);var c=this,d=this.options,e=this.anchors.eq(b)[0],f=a.data(e,"load.tabs");this.abort();if(!f||this.element.queue("tabs").length!==0&&a.data(e,"cache.tabs")){this.element.dequeue("tabs");return}this.lis.eq(b).addClass("ui-state-processing");if(d.spinner){var g=a("span",e);g.data("label.tabs",g.html()).html(d.spinner)}return this.xhr=a.ajax(a.extend({},d.ajaxOptions,{url:f,success:function(f,g){c.element.find(c._sanitizeSelector(e.hash)).html(f),c._cleanup(),d.cache&&a.data(e,"cache.tabs",!0),c._trigger("load",null,c._ui(c.anchors[b],c.panels[b]));try{d.ajaxOptions.success(f,g)}catch(h){}},error:function(a,f,g){c._cleanup(),c._trigger("load",null,c._ui(c.anchors[b],c.panels[b]));try{d.ajaxOptions.error(a,f,b,e)}catch(g){}}})),c.element.dequeue("tabs"),this},abort:function(){return this.element.queue([]),this.panels.stop(!1,!0),this.element.queue("tabs",this.element.queue("tabs").splice(-2,2)),this.xhr&&(this.xhr.abort(),delete this.xhr),this._cleanup(),this},url:function(a,b){return this.anchors.eq(a).removeData("cache.tabs").data("load.tabs",b),this},length:function(){return this.anchors.length}}),a.extend(a.ui.tabs,{version:"1.8.20"}),a.extend(a.ui.tabs.prototype,{rotation:null,rotate:function(a,b){var c=this,d=this.options,e=c._rotate||(c._rotate=function(b){clearTimeout(c.rotation),c.rotation=setTimeout(function(){var a=d.selected;c.select(++a<c.anchors.length?a:0)},a),b&&b.stopPropagation()}),f=c._unrotate||(c._unrotate=b?function(a){e()}:function(a){a.clientX&&c.rotate(null)});return a?(this.element.bind("tabsshow",e),this.anchors.bind(d.event+".tabs",f),e()):(clearTimeout(c.rotation),this.element.unbind("tabsshow",e),this.anchors.unbind(d.event+".tabs",f),delete this._rotate,delete this._unrotate),this}})})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.datepicker.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function($,undefined){function Datepicker(){this.debug=!1,this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},$.extend(this._defaults,this.regional[""]),this.dpDiv=bindHover($('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}function bindHover(a){var b="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return a.bind("mouseout",function(a){var c=$(a.target).closest(b);if(!c.length)return;c.removeClass("ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover")}).bind("mouseover",function(c){var d=$(c.target).closest(b);if($.datepicker._isDisabledDatepicker(instActive.inline?a.parent()[0]:instActive.input[0])||!d.length)return;d.parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),d.addClass("ui-state-hover"),d.hasClass("ui-datepicker-prev")&&d.addClass("ui-datepicker-prev-hover"),d.hasClass("ui-datepicker-next")&&d.addClass("ui-datepicker-next-hover")})}function extendRemove(a,b){$.extend(a,b);for(var c in b)if(b[c]==null||b[c]==undefined)a[c]=b[c];return a}function isArray(a){return a&&($.browser.safari&&typeof a=="object"&&a.length||a.constructor&&a.constructor.toString().match(/\Array\(\)/))}$.extend($.ui,{datepicker:{version:"1.8.20"}});var PROP_NAME="datepicker",dpuuid=(new Date).getTime(),instActive;$.extend(Datepicker.prototype,{markerClassName:"hasDatepicker",maxRows:4,log:function(){this.debug&&console.log.apply("",arguments)},_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(a){return extendRemove(this._defaults,a||{}),this},_attachDatepicker:function(target,settings){var inlineSettings=null;for(var attrName in this._defaults){var attrValue=target.getAttribute("date:"+attrName);if(attrValue){inlineSettings=inlineSettings||{};try{inlineSettings[attrName]=eval(attrValue)}catch(err){inlineSettings[attrName]=attrValue}}}var nodeName=target.nodeName.toLowerCase(),inline=nodeName=="div"||nodeName=="span";target.id||(this.uuid+=1,target.id="dp"+this.uuid);var inst=this._newInst($(target),inline);inst.settings=$.extend({},settings||{},inlineSettings||{}),nodeName=="input"?this._connectDatepicker(target,inst):inline&&this._inlineDatepicker(target,inst)},_newInst:function(a,b){var c=a[0].id.replace(/([^A-Za-z0-9_-])/g,"\\\\$1");return{id:c,input:a,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:b,dpDiv:b?bindHover($('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')):this.dpDiv}},_connectDatepicker:function(a,b){var c=$(a);b.append=$([]),b.trigger=$([]);if(c.hasClass(this.markerClassName))return;this._attachments(c,b),c.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",function(a,c,d){b.settings[c]=d}).bind("getData.datepicker",function(a,c){return this._get(b,c)}),this._autoSize(b),$.data(a,PROP_NAME,b),b.settings.disabled&&this._disableDatepicker(a)},_attachments:function(a,b){var c=this._get(b,"appendText"),d=this._get(b,"isRTL");b.append&&b.append.remove(),c&&(b.append=$('<span class="'+this._appendClass+'">'+c+"</span>"),a[d?"before":"after"](b.append)),a.unbind("focus",this._showDatepicker),b.trigger&&b.trigger.remove();var e=this._get(b,"showOn");(e=="focus"||e=="both")&&a.focus(this._showDatepicker);if(e=="button"||e=="both"){var f=this._get(b,"buttonText"),g=this._get(b,"buttonImage");b.trigger=$(this._get(b,"buttonImageOnly")?$("<img/>").addClass(this._triggerClass).attr({src:g,alt:f,title:f}):$('<button type="button"></button>').addClass(this._triggerClass).html(g==""?f:$("<img/>").attr({src:g,alt:f,title:f}))),a[d?"before":"after"](b.trigger),b.trigger.click(function(){return $.datepicker._datepickerShowing&&$.datepicker._lastInput==a[0]?$.datepicker._hideDatepicker():$.datepicker._datepickerShowing&&$.datepicker._lastInput!=a[0]?($.datepicker._hideDatepicker(),$.datepicker._showDatepicker(a[0])):$.datepicker._showDatepicker(a[0]),!1})}},_autoSize:function(a){if(this._get(a,"autoSize")&&!a.inline){var b=new Date(2009,11,20),c=this._get(a,"dateFormat");if(c.match(/[DM]/)){var d=function(a){var b=0,c=0;for(var d=0;d<a.length;d++)a[d].length>b&&(b=a[d].length,c=d);return c};b.setMonth(d(this._get(a,c.match(/MM/)?"monthNames":"monthNamesShort"))),b.setDate(d(this._get(a,c.match(/DD/)?"dayNames":"dayNamesShort"))+20-b.getDay())}a.input.attr("size",this._formatDate(a,b).length)}},_inlineDatepicker:function(a,b){var c=$(a);if(c.hasClass(this.markerClassName))return;c.addClass(this.markerClassName).append(b.dpDiv).bind("setData.datepicker",function(a,c,d){b.settings[c]=d}).bind("getData.datepicker",function(a,c){return this._get(b,c)}),$.data(a,PROP_NAME,b),this._setDate(b,this._getDefaultDate(b),!0),this._updateDatepicker(b),this._updateAlternate(b),b.settings.disabled&&this._disableDatepicker(a),b.dpDiv.css("display","block")},_dialogDatepicker:function(a,b,c,d,e){var f=this._dialogInst;if(!f){this.uuid+=1;var g="dp"+this.uuid;this._dialogInput=$('<input type="text" id="'+g+'" style="position: absolute; top: -100px; width: 0px; z-index: -10;"/>'),this._dialogInput.keydown(this._doKeyDown),$("body").append(this._dialogInput),f=this._dialogInst=this._newInst(this._dialogInput,!1),f.settings={},$.data(this._dialogInput[0],PROP_NAME,f)}extendRemove(f.settings,d||{}),b=b&&b.constructor==Date?this._formatDate(f,b):b,this._dialogInput.val(b),this._pos=e?e.length?e:[e.pageX,e.pageY]:null;if(!this._pos){var h=document.documentElement.clientWidth,i=document.documentElement.clientHeight,j=document.documentElement.scrollLeft||document.body.scrollLeft,k=document.documentElement.scrollTop||document.body.scrollTop;this._pos=[h/2-100+j,i/2-150+k]}return this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),f.settings.onSelect=c,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),$.blockUI&&$.blockUI(this.dpDiv),$.data(this._dialogInput[0],PROP_NAME,f),this},_destroyDatepicker:function(a){var b=$(a),c=$.data(a,PROP_NAME);if(!b.hasClass(this.markerClassName))return;var d=a.nodeName.toLowerCase();$.removeData(a,PROP_NAME),d=="input"?(c.append.remove(),c.trigger.remove(),b.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):(d=="div"||d=="span")&&b.removeClass(this.markerClassName).empty()},_enableDatepicker:function(a){var b=$(a),c=$.data(a,PROP_NAME);if(!b.hasClass(this.markerClassName))return;var d=a.nodeName.toLowerCase();if(d=="input")a.disabled=!1,c.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""});else if(d=="div"||d=="span"){var e=b.children("."+this._inlineClass);e.children().removeClass("ui-state-disabled"),e.find("select.ui-datepicker-month, select.ui-datepicker-year").removeAttr("disabled")}this._disabledInputs=$.map(this._disabledInputs,function(b){return b==a?null:b})},_disableDatepicker:function(a){var b=$(a),c=$.data(a,PROP_NAME);if(!b.hasClass(this.markerClassName))return;var d=a.nodeName.toLowerCase();if(d=="input")a.disabled=!0,c.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"});else if(d=="div"||d=="span"){var e=b.children("."+this._inlineClass);e.children().addClass("ui-state-disabled"),e.find("select.ui-datepicker-month, select.ui-datepicker-year").attr("disabled","disabled")}this._disabledInputs=$.map(this._disabledInputs,function(b){return b==a?null:b}),this._disabledInputs[this._disabledInputs.length]=a},_isDisabledDatepicker:function(a){if(!a)return!1;for(var b=0;b<this._disabledInputs.length;b++)if(this._disabledInputs[b]==a)return!0;return!1},_getInst:function(a){try{return $.data(a,PROP_NAME)}catch(b){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(a,b,c){var d=this._getInst(a);if(arguments.length==2&&typeof b=="string")return b=="defaults"?$.extend({},$.datepicker._defaults):d?b=="all"?$.extend({},d.settings):this._get(d,b):null;var e=b||{};typeof b=="string"&&(e={},e[b]=c);if(d){this._curInst==d&&this._hideDatepicker();var f=this._getDateDatepicker(a,!0),g=this._getMinMaxDate(d,"min"),h=this._getMinMaxDate(d,"max");extendRemove(d.settings,e),g!==null&&e.dateFormat!==undefined&&e.minDate===undefined&&(d.settings.minDate=this._formatDate(d,g)),h!==null&&e.dateFormat!==undefined&&e.maxDate===undefined&&(d.settings.maxDate=this._formatDate(d,h)),this._attachments($(a),d),this._autoSize(d),this._setDate(d,f),this._updateAlternate(d),this._updateDatepicker(d)}},_changeDatepicker:function(a,b,c){this._optionDatepicker(a,b,c)},_refreshDatepicker:function(a){var b=this._getInst(a);b&&this._updateDatepicker(b)},_setDateDatepicker:function(a,b){var c=this._getInst(a);c&&(this._setDate(c,b),this._updateDatepicker(c),this._updateAlternate(c))},_getDateDatepicker:function(a,b){var c=this._getInst(a);return c&&!c.inline&&this._setDateFromField(c,b),c?this._getDate(c):null},_doKeyDown:function(a){var b=$.datepicker._getInst(a.target),c=!0,d=b.dpDiv.is(".ui-datepicker-rtl");b._keyEvent=!0;if($.datepicker._datepickerShowing)switch(a.keyCode){case 9:$.datepicker._hideDatepicker(),c=!1;break;case 13:var e=$("td."+$.datepicker._dayOverClass+":not(."+$.datepicker._currentClass+")",b.dpDiv);e[0]&&$.datepicker._selectDay(a.target,b.selectedMonth,b.selectedYear,e[0]);var f=$.datepicker._get(b,"onSelect");if(f){var g=$.datepicker._formatDate(b);f.apply(b.input?b.input[0]:null,[g,b])}else $.datepicker._hideDatepicker();return!1;case 27:$.datepicker._hideDatepicker();break;case 33:$.datepicker._adjustDate(a.target,a.ctrlKey?-$.datepicker._get(b,"stepBigMonths"):-$.datepicker._get(b,"stepMonths"),"M");break;case 34:$.datepicker._adjustDate(a.target,a.ctrlKey?+$.datepicker._get(b,"stepBigMonths"):+$.datepicker._get(b,"stepMonths"),"M");break;case 35:(a.ctrlKey||a.metaKey)&&$.datepicker._clearDate(a.target),c=a.ctrlKey||a.metaKey;break;case 36:(a.ctrlKey||a.metaKey)&&$.datepicker._gotoToday(a.target),c=a.ctrlKey||a.metaKey;break;case 37:(a.ctrlKey||a.metaKey)&&$.datepicker._adjustDate(a.target,d?1:-1,"D"),c=a.ctrlKey||a.metaKey,a.originalEvent.altKey&&$.datepicker._adjustDate(a.target,a.ctrlKey?-$.datepicker._get(b,"stepBigMonths"):-$.datepicker._get(b,"stepMonths"),"M");break;case 38:(a.ctrlKey||a.metaKey)&&$.datepicker._adjustDate(a.target,-7,"D"),c=a.ctrlKey||a.metaKey;break;case 39:(a.ctrlKey||a.metaKey)&&$.datepicker._adjustDate(a.target,d?-1:1,"D"),c=a.ctrlKey||a.metaKey,a.originalEvent.altKey&&$.datepicker._adjustDate(a.target,a.ctrlKey?+$.datepicker._get(b,"stepBigMonths"):+$.datepicker._get(b,"stepMonths"),"M");break;case 40:(a.ctrlKey||a.metaKey)&&$.datepicker._adjustDate(a.target,7,"D"),c=a.ctrlKey||a.metaKey;break;default:c=!1}else a.keyCode==36&&a.ctrlKey?$.datepicker._showDatepicker(this):c=!1;c&&(a.preventDefault(),a.stopPropagation())},_doKeyPress:function(a){var b=$.datepicker._getInst(a.target);if($.datepicker._get(b,"constrainInput")){var c=$.datepicker._possibleChars($.datepicker._get(b,"dateFormat")),d=String.fromCharCode(a.charCode==undefined?a.keyCode:a.charCode);return a.ctrlKey||a.metaKey||d<" "||!c||c.indexOf(d)>-1}},_doKeyUp:function(a){var b=$.datepicker._getInst(a.target);if(b.input.val()!=b.lastVal)try{var c=$.datepicker.parseDate($.datepicker._get(b,"dateFormat"),b.input?b.input.val():null,$.datepicker._getFormatConfig(b));c&&($.datepicker._setDateFromField(b),$.datepicker._updateAlternate(b),$.datepicker._updateDatepicker(b))}catch(d){$.datepicker.log(d)}return!0},_showDatepicker:function(a){a=a.target||a,a.nodeName.toLowerCase()!="input"&&(a=$("input",a.parentNode)[0]);if($.datepicker._isDisabledDatepicker(a)||$.datepicker._lastInput==a)return;var b=$.datepicker._getInst(a);$.datepicker._curInst&&$.datepicker._curInst!=b&&($.datepicker._curInst.dpDiv.stop(!0,!0),b&&$.datepicker._datepickerShowing&&$.datepicker._hideDatepicker($.datepicker._curInst.input[0]));var c=$.datepicker._get(b,"beforeShow"),d=c?c.apply(a,[a,b]):{};if(d===!1)return;extendRemove(b.settings,d),b.lastVal=null,$.datepicker._lastInput=a,$.datepicker._setDateFromField(b),$.datepicker._inDialog&&(a.value=""),$.datepicker._pos||($.datepicker._pos=$.datepicker._findPos(a),$.datepicker._pos[1]+=a.offsetHeight);var e=!1;$(a).parents().each(function(){return e|=$(this).css("position")=="fixed",!e}),e&&$.browser.opera&&($.datepicker._pos[0]-=document.documentElement.scrollLeft,$.datepicker._pos[1]-=document.documentElement.scrollTop);var f={left:$.datepicker._pos[0],top:$.datepicker._pos[1]};$.datepicker._pos=null,b.dpDiv.empty(),b.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),$.datepicker._updateDatepicker(b),f=$.datepicker._checkOffset(b,f,e),b.dpDiv.css({position:$.datepicker._inDialog&&$.blockUI?"static":e?"fixed":"absolute",display:"none",left:f.left+"px",top:f.top+"px"});if(!b.inline){var g=$.datepicker._get(b,"showAnim"),h=$.datepicker._get(b,"duration"),i=function(){var a=b.dpDiv.find("iframe.ui-datepicker-cover");if(!!a.length){var c=$.datepicker._getBorders(b.dpDiv);a.css({left:-c[0],top:-c[1],width:b.dpDiv.outerWidth(),height:b.dpDiv.outerHeight()})}};b.dpDiv.zIndex($(a).zIndex()+1),$.datepicker._datepickerShowing=!0,$.effects&&$.effects[g]?b.dpDiv.show(g,$.datepicker._get(b,"showOptions"),h,i):b.dpDiv[g||"show"](g?h:null,i),(!g||!h)&&i(),b.input.is(":visible")&&!b.input.is(":disabled")&&b.input.focus(),$.datepicker._curInst=b}},_updateDatepicker:function(a){var b=this;b.maxRows=4;var c=$.datepicker._getBorders(a.dpDiv);instActive=a,a.dpDiv.empty().append(this._generateHTML(a));var d=a.dpDiv.find("iframe.ui-datepicker-cover");!d.length||d.css({left:-c[0],top:-c[1],width:a.dpDiv.outerWidth(),height:a.dpDiv.outerHeight()}),a.dpDiv.find("."+this._dayOverClass+" a").mouseover();var e=this._getNumberOfMonths(a),f=e[1],g=17;a.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),f>1&&a.dpDiv.addClass("ui-datepicker-multi-"+f).css("width",g*f+"em"),a.dpDiv[(e[0]!=1||e[1]!=1?"add":"remove")+"Class"]("ui-datepicker-multi"),a.dpDiv[(this._get(a,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),a==$.datepicker._curInst&&$.datepicker._datepickerShowing&&a.input&&a.input.is(":visible")&&!a.input.is(":disabled")&&a.input[0]!=document.activeElement&&a.input.focus();if(a.yearshtml){var h=a.yearshtml;setTimeout(function(){h===a.yearshtml&&a.yearshtml&&a.dpDiv.find("select.ui-datepicker-year:first").replaceWith(a.yearshtml),h=a.yearshtml=null},0)}},_getBorders:function(a){var b=function(a){return{thin:1,medium:2,thick:3}[a]||a};return[parseFloat(b(a.css("border-left-width"))),parseFloat(b(a.css("border-top-width")))]},_checkOffset:function(a,b,c){var d=a.dpDiv.outerWidth(),e=a.dpDiv.outerHeight(),f=a.input?a.input.outerWidth():0,g=a.input?a.input.outerHeight():0,h=document.documentElement.clientWidth+$(document).scrollLeft(),i=document.documentElement.clientHeight+$(document).scrollTop();return b.left-=this._get(a,"isRTL")?d-f:0,b.left-=c&&b.left==a.input.offset().left?$(document).scrollLeft():0,b.top-=c&&b.top==a.input.offset().top+g?$(document).scrollTop():0,b.left-=Math.min(b.left,b.left+d>h&&h>d?Math.abs(b.left+d-h):0),b.top-=Math.min(b.top,b.top+e>i&&i>e?Math.abs(e+g):0),b},_findPos:function(a){var b=this._getInst(a),c=this._get(b,"isRTL");while(a&&(a.type=="hidden"||a.nodeType!=1||$.expr.filters.hidden(a)))a=a[c?"previousSibling":"nextSibling"];var d=$(a).offset();return[d.left,d.top]},_hideDatepicker:function(a){var b=this._curInst;if(!b||a&&b!=$.data(a,PROP_NAME))return;if(this._datepickerShowing){var c=this._get(b,"showAnim"),d=this._get(b,"duration"),e=function(){$.datepicker._tidyDialog(b)};$.effects&&$.effects[c]?b.dpDiv.hide(c,$.datepicker._get(b,"showOptions"),d,e):b.dpDiv[c=="slideDown"?"slideUp":c=="fadeIn"?"fadeOut":"hide"](c?d:null,e),c||e(),this._datepickerShowing=!1;var f=this._get(b,"onClose");f&&f.apply(b.input?b.input[0]:null,[b.input?b.input.val():"",b]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),$.blockUI&&($.unblockUI(),$("body").append(this.dpDiv))),this._inDialog=!1}},_tidyDialog:function(a){a.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(a){if(!$.datepicker._curInst)return;var b=$(a.target),c=$.datepicker._getInst(b[0]);(b[0].id!=$.datepicker._mainDivId&&b.parents("#"+$.datepicker._mainDivId).length==0&&!b.hasClass($.datepicker.markerClassName)&&!b.closest("."+$.datepicker._triggerClass).length&&$.datepicker._datepickerShowing&&(!$.datepicker._inDialog||!$.blockUI)||b.hasClass($.datepicker.markerClassName)&&$.datepicker._curInst!=c)&&$.datepicker._hideDatepicker()},_adjustDate:function(a,b,c){var d=$(a),e=this._getInst(d[0]);if(this._isDisabledDatepicker(d[0]))return;this._adjustInstDate(e,b+(c=="M"?this._get(e,"showCurrentAtPos"):0),c),this._updateDatepicker(e)},_gotoToday:function(a){var b=$(a),c=this._getInst(b[0]);if(this._get(c,"gotoCurrent")&&c.currentDay)c.selectedDay=c.currentDay,c.drawMonth=c.selectedMonth=c.currentMonth,c.drawYear=c.selectedYear=c.currentYear;else{var d=new Date;c.selectedDay=d.getDate(),c.drawMonth=c.selectedMonth=d.getMonth(),c.drawYear=c.selectedYear=d.getFullYear()}this._notifyChange(c),this._adjustDate(b)},_selectMonthYear:function(a,b,c){var d=$(a),e=this._getInst(d[0]);e["selected"+(c=="M"?"Month":"Year")]=e["draw"+(c=="M"?"Month":"Year")]=parseInt(b.options[b.selectedIndex].value,10),this._notifyChange(e),this._adjustDate(d)},_selectDay:function(a,b,c,d){var e=$(a);if($(d).hasClass(this._unselectableClass)||this._isDisabledDatepicker(e[0]))return;var f=this._getInst(e[0]);f.selectedDay=f.currentDay=$("a",d).html(),f.selectedMonth=f.currentMonth=b,f.selectedYear=f.currentYear=c,this._selectDate(a,this._formatDate(f,f.currentDay,f.currentMonth,f.currentYear))},_clearDate:function(a){var b=$(a),c=this._getInst(b[0]);this._selectDate(b,"")},_selectDate:function(a,b){var c=$(a),d=this._getInst(c[0]);b=b!=null?b:this._formatDate(d),d.input&&d.input.val(b),this._updateAlternate(d);var e=this._get(d,"onSelect");e?e.apply(d.input?d.input[0]:null,[b,d]):d.input&&d.input.trigger("change"),d.inline?this._updateDatepicker(d):(this._hideDatepicker(),this._lastInput=d.input[0],typeof d.input[0]!="object"&&d.input.focus(),this._lastInput=null)},_updateAlternate:function(a){var b=this._get(a,"altField");if(b){var c=this._get(a,"altFormat")||this._get(a,"dateFormat"),d=this._getDate(a),e=this.formatDate(c,d,this._getFormatConfig(a));$(b).each(function(){$(this).val(e)})}},noWeekends:function(a){var b=a.getDay();return[b>0&&b<6,""]},iso8601Week:function(a){var b=new Date(a.getTime());b.setDate(b.getDate()+4-(b.getDay()||7));var c=b.getTime();return b.setMonth(0),b.setDate(1),Math.floor(Math.round((c-b)/864e5)/7)+1},parseDate:function(a,b,c){if(a==null||b==null)throw"Invalid arguments";b=typeof b=="object"?b.toString():b+"";if(b=="")return null;var d=(c?c.shortYearCutoff:null)||this._defaults.shortYearCutoff;d=typeof d!="string"?d:(new Date).getFullYear()%100+parseInt(d,10);var e=(c?c.dayNamesShort:null)||this._defaults.dayNamesShort,f=(c?c.dayNames:null)||this._defaults.dayNames,g=(c?c.monthNamesShort:null)||this._defaults.monthNamesShort,h=(c?c.monthNames:null)||this._defaults.monthNames,i=-1,j=-1,k=-1,l=-1,m=!1,n=function(b){var c=s+1<a.length&&a.charAt(s+1)==b;return c&&s++,c},o=function(a){var c=n(a),d=a=="@"?14:a=="!"?20:a=="y"&&c?4:a=="o"?3:2,e=new RegExp("^\\d{1,"+d+"}"),f=b.substring(r).match(e);if(!f)throw"Missing number at position "+r;return r+=f[0].length,parseInt(f[0],10)},p=function(a,c,d){var e=$.map(n(a)?d:c,function(a,b){return[[b,a]]}).sort(function(a,b){return-(a[1].length-b[1].length)}),f=-1;$.each(e,function(a,c){var d=c[1];if(b.substr(r,d.length).toLowerCase()==d.toLowerCase())return f=c[0],r+=d.length,!1});if(f!=-1)return f+1;throw"Unknown name at position "+r},q=function(){if(b.charAt(r)!=a.charAt(s))throw"Unexpected literal at position "+r;r++},r=0;for(var s=0;s<a.length;s++)if(m)a.charAt(s)=="'"&&!n("'")?m=!1:q();else switch(a.charAt(s)){case"d":k=o("d");break;case"D":p("D",e,f);break;case"o":l=o("o");break;case"m":j=o("m");break;case"M":j=p("M",g,h);break;case"y":i=o("y");break;case"@":var t=new Date(o("@"));i=t.getFullYear(),j=t.getMonth()+1,k=t.getDate();break;case"!":var t=new Date((o("!")-this._ticksTo1970)/1e4);i=t.getFullYear(),j=t.getMonth()+1,k=t.getDate();break;case"'":n("'")?q():m=!0;break;default:q()}if(r<b.length)throw"Extra/unparsed characters found in date: "+b.substring(r);i==-1?i=(new Date).getFullYear():i<100&&(i+=(new Date).getFullYear()-(new Date).getFullYear()%100+(i<=d?0:-100));if(l>-1){j=1,k=l;do{var u=this._getDaysInMonth(i,j-1);if(k<=u)break;j++,k-=u}while(!0)}var t=this._daylightSavingAdjust(new Date(i,j-1,k));if(t.getFullYear()!=i||t.getMonth()+1!=j||t.getDate()!=k)throw"Invalid date";return t},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925))*24*60*60*1e7,formatDate:function(a,b,c){if(!b)return"";var d=(c?c.dayNamesShort:null)||this._defaults.dayNamesShort,e=(c?c.dayNames:null)||this._defaults.dayNames,f=(c?c.monthNamesShort:null)||this._defaults.monthNamesShort,g=(c?c.monthNames:null)||this._defaults.monthNames,h=function(b){var c=m+1<a.length&&a.charAt(m+1)==b;return c&&m++,c},i=function(a,b,c){var d=""+b;if(h(a))while(d.length<c)d="0"+d;return d},j=function(a,b,c,d){return h(a)?d[b]:c[b]},k="",l=!1;if(b)for(var m=0;m<a.length;m++)if(l)a.charAt(m)=="'"&&!h("'")?l=!1:k+=a.charAt(m);else switch(a.charAt(m)){case"d":k+=i("d",b.getDate(),2);break;case"D":k+=j("D",b.getDay(),d,e);break;case"o":k+=i("o",Math.round(((new Date(b.getFullYear(),b.getMonth(),b.getDate())).getTime()-(new Date(b.getFullYear(),0,0)).getTime())/864e5),3);break;case"m":k+=i("m",b.getMonth()+1,2);break;case"M":k+=j("M",b.getMonth(),f,g);break;case"y":k+=h("y")?b.getFullYear():(b.getYear()%100<10?"0":"")+b.getYear()%100;break;case"@":k+=b.getTime();break;case"!":k+=b.getTime()*1e4+this._ticksTo1970;break;case"'":h("'")?k+="'":l=!0;break;default:k+=a.charAt(m)}return k},_possibleChars:function(a){var b="",c=!1,d=function(b){var c=e+1<a.length&&a.charAt(e+1)==b;return c&&e++,c};for(var e=0;e<a.length;e++)if(c)a.charAt(e)=="'"&&!d("'")?c=!1:b+=a.charAt(e);else switch(a.charAt(e)){case"d":case"m":case"y":case"@":b+="0123456789";break;case"D":case"M":return null;case"'":d("'")?b+="'":c=!0;break;default:b+=a.charAt(e)}return b},_get:function(a,b){return a.settings[b]!==undefined?a.settings[b]:this._defaults[b]},_setDateFromField:function(a,b){if(a.input.val()==a.lastVal)return;var c=this._get(a,"dateFormat"),d=a.lastVal=a.input?a.input.val():null,e,f;e=f=this._getDefaultDate(a);var g=this._getFormatConfig(a);try{e=this.parseDate(c,d,g)||f}catch(h){this.log(h),d=b?"":d}a.selectedDay=e.getDate(),a.drawMonth=a.selectedMonth=e.getMonth(),a.drawYear=a.selectedYear=e.getFullYear(),a.currentDay=d?e.getDate():0,a.currentMonth=d?e.getMonth():0,a.currentYear=d?e.getFullYear():0,this._adjustInstDate(a)},_getDefaultDate:function(a){return this._restrictMinMax(a,this._determineDate(a,this._get(a,"defaultDate"),new Date))},_determineDate:function(a,b,c){var d=function(a){var b=new Date;return b.setDate(b.getDate()+a),b},e=function(b){try{return $.datepicker.parseDate($.datepicker._get(a,"dateFormat"),b,$.datepicker._getFormatConfig(a))}catch(c){}var d=(b.toLowerCase().match(/^c/)?$.datepicker._getDate(a):null)||new Date,e=d.getFullYear(),f=d.getMonth(),g=d.getDate(),h=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,i=h.exec(b);while(i){switch(i[2]||"d"){case"d":case"D":g+=parseInt(i[1],10);break;case"w":case"W":g+=parseInt(i[1],10)*7;break;case"m":case"M":f+=parseInt(i[1],10),g=Math.min(g,$.datepicker._getDaysInMonth(e,f));break;case"y":case"Y":e+=parseInt(i[1],10),g=Math.min(g,$.datepicker._getDaysInMonth(e,f))}i=h.exec(b)}return new Date(e,f,g)},f=b==null||b===""?c:typeof b=="string"?e(b):typeof b=="number"?isNaN(b)?c:d(b):new Date(b.getTime());return f=f&&f.toString()=="Invalid Date"?c:f,f&&(f.setHours(0),f.setMinutes(0),f.setSeconds(0),f.setMilliseconds(0)),this._daylightSavingAdjust(f)},_daylightSavingAdjust:function(a){return a?(a.setHours(a.getHours()>12?a.getHours()+2:0),a):null},_setDate:function(a,b,c){var d=!b,e=a.selectedMonth,f=a.selectedYear,g=this._restrictMinMax(a,this._determineDate(a,b,new Date));a.selectedDay=a.currentDay=g.getDate(),a.drawMonth=a.selectedMonth=a.currentMonth=g.getMonth(),a.drawYear=a.selectedYear=a.currentYear=g.getFullYear(),(e!=a.selectedMonth||f!=a.selectedYear)&&!c&&this._notifyChange(a),this._adjustInstDate(a),a.input&&a.input.val(d?"":this._formatDate(a))},_getDate:function(a){var b=!a.currentYear||a.input&&a.input.val()==""?null:this._daylightSavingAdjust(new Date(a.currentYear,a.currentMonth,a.currentDay));return b},_generateHTML:function(a){var b=new Date;b=this._daylightSavingAdjust(new Date(b.getFullYear(),b.getMonth(),b.getDate()));var c=this._get(a,"isRTL"),d=this._get(a,"showButtonPanel"),e=this._get(a,"hideIfNoPrevNext"),f=this._get(a,"navigationAsDateFormat"),g=this._getNumberOfMonths(a),h=this._get(a,"showCurrentAtPos"),i=this._get(a,"stepMonths"),j=g[0]!=1||g[1]!=1,k=this._daylightSavingAdjust(a.currentDay?new Date(a.currentYear,a.currentMonth,a.currentDay):new Date(9999,9,9)),l=this._getMinMaxDate(a,"min"),m=this._getMinMaxDate(a,"max"),n=a.drawMonth-h,o=a.drawYear;n<0&&(n+=12,o--);if(m){var p=this._daylightSavingAdjust(new Date(m.getFullYear(),m.getMonth()-g[0]*g[1]+1,m.getDate()));p=l&&p<l?l:p;while(this._daylightSavingAdjust(new Date(o,n,1))>p)n--,n<0&&(n=11,o--)}a.drawMonth=n,a.drawYear=o;var q=this._get(a,"prevText");q=f?this.formatDate(q,this._daylightSavingAdjust(new Date(o,n-i,1)),this._getFormatConfig(a)):q;var r=this._canAdjustMonth(a,-1,o,n)?'<a class="ui-datepicker-prev ui-corner-all" onclick="DP_jQuery_'+dpuuid+".datepicker._adjustDate('#"+a.id+"', -"+i+", 'M');\""+' title="'+q+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"e":"w")+'">'+q+"</span></a>":e?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+q+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"e":"w")+'">'+q+"</span></a>",s=this._get(a,"nextText");s=f?this.formatDate(s,this._daylightSavingAdjust(new Date(o,n+i,1)),this._getFormatConfig(a)):s;var t=this._canAdjustMonth(a,1,o,n)?'<a class="ui-datepicker-next ui-corner-all" onclick="DP_jQuery_'+dpuuid+".datepicker._adjustDate('#"+a.id+"', +"+i+", 'M');\""+' title="'+s+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"w":"e")+'">'+s+"</span></a>":e?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+s+'"><span class="ui-icon ui-icon-circle-triangle-'+(c?"w":"e")+'">'+s+"</span></a>",u=this._get(a,"currentText"),v=this._get(a,"gotoCurrent")&&a.currentDay?k:b;u=f?this.formatDate(u,v,this._getFormatConfig(a)):u;var w=a.inline?"":'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" onclick="DP_jQuery_'+dpuuid+'.datepicker._hideDatepicker();">'+this._get(a,"closeText")+"</button>",x=d?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(c?w:"")+(this._isInRange(a,v)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" onclick="DP_jQuery_'+dpuuid+".datepicker._gotoToday('#"+a.id+"');\""+">"+u+"</button>":"")+(c?"":w)+"</div>":"",y=parseInt(this._get(a,"firstDay"),10);y=isNaN(y)?0:y;var z=this._get(a,"showWeek"),A=this._get(a,"dayNames"),B=this._get(a,"dayNamesShort"),C=this._get(a,"dayNamesMin"),D=this._get(a,"monthNames"),E=this._get(a,"monthNamesShort"),F=this._get(a,"beforeShowDay"),G=this._get(a,"showOtherMonths"),H=this._get(a,"selectOtherMonths"),I=this._get(a,"calculateWeek")||this.iso8601Week,J=this._getDefaultDate(a),K="";for(var L=0;L<g[0];L++){var M="";this.maxRows=4;for(var N=0;N<g[1];N++){var O=this._daylightSavingAdjust(new Date(o,n,a.selectedDay)),P=" ui-corner-all",Q="";if(j){Q+='<div class="ui-datepicker-group';if(g[1]>1)switch(N){case 0:Q+=" ui-datepicker-group-first",P=" ui-corner-"+(c?"right":"left");break;case g[1]-1:Q+=" ui-datepicker-group-last",P=" ui-corner-"+(c?"left":"right");break;default:Q+=" ui-datepicker-group-middle",P=""}Q+='">'}Q+='<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+P+'">'+(/all|left/.test(P)&&L==0?c?t:r:"")+(/all|right/.test(P)&&L==0?c?r:t:"")+this._generateMonthYearHeader(a,n,o,l,m,L>0||N>0,D,E)+'</div><table class="ui-datepicker-calendar"><thead>'+"<tr>";var R=z?'<th class="ui-datepicker-week-col">'+this._get(a,"weekHeader")+"</th>":"";for(var S=0;S<7;S++){var T=(S+y)%7;R+="<th"+((S+y+6)%7>=5?' class="ui-datepicker-week-end"':"")+">"+'<span title="'+A[T]+'">'+C[T]+"</span></th>"}Q+=R+"</tr></thead><tbody>";var U=this._getDaysInMonth(o,n);o==a.selectedYear&&n==a.selectedMonth&&(a.selectedDay=Math.min(a.selectedDay,U));var V=(this._getFirstDayOfMonth(o,n)-y+7)%7,W=Math.ceil((V+U)/7),X=j?this.maxRows>W?this.maxRows:W:W;this.maxRows=X;var Y=this._daylightSavingAdjust(new Date(o,n,1-V));for(var Z=0;Z<X;Z++){Q+="<tr>";var _=z?'<td class="ui-datepicker-week-col">'+this._get(a,"calculateWeek")(Y)+"</td>":"";for(var S=0;S<7;S++){var ba=F?F.apply(a.input?a.input[0]:null,[Y]):[!0,""],bb=Y.getMonth()!=n,bc=bb&&!H||!ba[0]||l&&Y<l||m&&Y>m;_+='<td class="'+((S+y+6)%7>=5?" ui-datepicker-week-end":"")+(bb?" ui-datepicker-other-month":"")+(Y.getTime()==O.getTime()&&n==a.selectedMonth&&a._keyEvent||J.getTime()==Y.getTime()&&J.getTime()==O.getTime()?" "+this._dayOverClass:"")+(bc?" "+this._unselectableClass+" ui-state-disabled":"")+(bb&&!G?"":" "+ba[1]+(Y.getTime()==k.getTime()?" "+this._currentClass:"")+(Y.getTime()==b.getTime()?" ui-datepicker-today":""))+'"'+((!bb||G)&&ba[2]?' title="'+ba[2]+'"':"")+(bc?"":' onclick="DP_jQuery_'+dpuuid+".datepicker._selectDay('#"+a.id+"',"+Y.getMonth()+","+Y.getFullYear()+', this);return false;"')+">"+(bb&&!G?"&#xa0;":bc?'<span class="ui-state-default">'+Y.getDate()+"</span>":'<a class="ui-state-default'+(Y.getTime()==b.getTime()?" ui-state-highlight":"")+(Y.getTime()==k.getTime()?" ui-state-active":"")+(bb?" ui-priority-secondary":"")+'" href="#">'+Y.getDate()+"</a>")+"</td>",Y.setDate(Y.getDate()+1),Y=this._daylightSavingAdjust(Y)}Q+=_+"</tr>"}n++,n>11&&(n=0,o++),Q+="</tbody></table>"+(j?"</div>"+(g[0]>0&&N==g[1]-1?'<div class="ui-datepicker-row-break"></div>':""):""),M+=Q}K+=M}return K+=x+($.browser.msie&&parseInt($.browser.version,10)<7&&!a.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':""),a._keyEvent=!1,K},_generateMonthYearHeader:function(a,b,c,d,e,f,g,h){var i=this._get(a,"changeMonth"),j=this._get(a,"changeYear"),k=this._get(a,"showMonthAfterYear"),l='<div class="ui-datepicker-title">',m="";if(f||!i)m+='<span class="ui-datepicker-month">'+g[b]+"</span>";else{var n=d&&d.getFullYear()==c,o=e&&e.getFullYear()==c;m+='<select class="ui-datepicker-month" onchange="DP_jQuery_'+dpuuid+".datepicker._selectMonthYear('#"+a.id+"', this, 'M');\" "+">";for(var p=0;p<12;p++)(!n||p>=d.getMonth())&&(!o||p<=e.getMonth())&&(m+='<option value="'+p+'"'+(p==b?' selected="selected"':"")+">"+h[p]+"</option>");m+="</select>"}k||(l+=m+(f||!i||!j?"&#xa0;":""));if(!a.yearshtml){a.yearshtml="";if(f||!j)l+='<span class="ui-datepicker-year">'+c+"</span>";else{var q=this._get(a,"yearRange").split(":"),r=(new Date).getFullYear(),s=function(a){var b=a.match(/c[+-].*/)?c+parseInt(a.substring(1),10):a.match(/[+-].*/)?r+parseInt(a,10):parseInt(a,10);return isNaN(b)?r:b},t=s(q[0]),u=Math.max(t,s(q[1]||""));t=d?Math.max(t,d.getFullYear()):t,u=e?Math.min(u,e.getFullYear()):u,a.yearshtml+='<select class="ui-datepicker-year" onchange="DP_jQuery_'+dpuuid+".datepicker._selectMonthYear('#"+a.id+"', this, 'Y');\" "+">";for(;t<=u;t++)a.yearshtml+='<option value="'+t+'"'+(t==c?' selected="selected"':"")+">"+t+"</option>";a.yearshtml+="</select>",l+=a.yearshtml,a.yearshtml=null}}return l+=this._get(a,"yearSuffix"),k&&(l+=(f||!i||!j?"&#xa0;":"")+m),l+="</div>",l},_adjustInstDate:function(a,b,c){var d=a.drawYear+(c=="Y"?b:0),e=a.drawMonth+(c=="M"?b:0),f=Math.min(a.selectedDay,this._getDaysInMonth(d,e))+(c=="D"?b:0),g=this._restrictMinMax(a,this._daylightSavingAdjust(new Date(d,e,f)));a.selectedDay=g.getDate(),a.drawMonth=a.selectedMonth=g.getMonth(),a.drawYear=a.selectedYear=g.getFullYear(),(c=="M"||c=="Y")&&this._notifyChange(a)},_restrictMinMax:function(a,b){var c=this._getMinMaxDate(a,"min"),d=this._getMinMaxDate(a,"max"),e=c&&b<c?c:b;return e=d&&e>d?d:e,e},_notifyChange:function(a){var b=this._get(a,"onChangeMonthYear");b&&b.apply(a.input?a.input[0]:null,[a.selectedYear,a.selectedMonth+1,a])},_getNumberOfMonths:function(a){var b=this._get(a,"numberOfMonths");return b==null?[1,1]:typeof b=="number"?[1,b]:b},_getMinMaxDate:function(a,b){return this._determineDate(a,this._get(a,b+"Date"),null)},_getDaysInMonth:function(a,b){return 32-this._daylightSavingAdjust(new Date(a,b,32)).getDate()},_getFirstDayOfMonth:function(a,b){return(new Date(a,b,1)).getDay()},_canAdjustMonth:function(a,b,c,d){var e=this._getNumberOfMonths(a),f=this._daylightSavingAdjust(new Date(c,d+(b<0?b:e[0]*e[1]),1));return b<0&&f.setDate(this._getDaysInMonth(f.getFullYear(),f.getMonth())),this._isInRange(a,f)},_isInRange:function(a,b){var c=this._getMinMaxDate(a,"min"),d=this._getMinMaxDate(a,"max");return(!c||b.getTime()>=c.getTime())&&(!d||b.getTime()<=d.getTime())},_getFormatConfig:function(a){var b=this._get(a,"shortYearCutoff");return b=typeof b!="string"?b:(new Date).getFullYear()%100+parseInt(b,10),{shortYearCutoff:b,dayNamesShort:this._get(a,"dayNamesShort"),dayNames:this._get(a,"dayNames"),monthNamesShort:this._get(a,"monthNamesShort"),monthNames:this._get(a,"monthNames")}},_formatDate:function(a,b,c,d){b||(a.currentDay=a.selectedDay,a.currentMonth=a.selectedMonth,a.currentYear=a.selectedYear);var e=b?typeof b=="object"?b:this._daylightSavingAdjust(new Date(d,c,b)):this._daylightSavingAdjust(new Date(a.currentYear,a.currentMonth,a.currentDay));return this.formatDate(this._get(a,"dateFormat"),e,this._getFormatConfig(a))}}),$.fn.datepicker=function(a){if(!this.length)return this;$.datepicker.initialized||($(document).mousedown($.datepicker._checkExternalClick).find("body").append($.datepicker.dpDiv),$.datepicker.initialized=!0);var b=Array.prototype.slice.call(arguments,1);return typeof a!="string"||a!="isDisabled"&&a!="getDate"&&a!="widget"?a=="option"&&arguments.length==2&&typeof arguments[1]=="string"?$.datepicker["_"+a+"Datepicker"].apply($.datepicker,[this[0]].concat(b)):this.each(function(){typeof a=="string"?$.datepicker["_"+a+"Datepicker"].apply($.datepicker,[this].concat(b)):$.datepicker._attachDatepicker(this,a)}):$.datepicker["_"+a+"Datepicker"].apply($.datepicker,[this[0]].concat(b))},$.datepicker=new Datepicker,$.datepicker.initialized=!1,$.datepicker.uuid=(new Date).getTime(),$.datepicker.version="1.8.20",window["DP_jQuery_"+dpuuid]=$})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.progressbar.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.widget("ui.progressbar",{options:{value:0,max:100},min:0,_create:function(){this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({role:"progressbar","aria-valuemin":this.min,"aria-valuemax":this.options.max,"aria-valuenow":this._value()}),this.valueDiv=a("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element),this.oldValue=this._value(),this._refreshValue()},destroy:function(){this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),this.valueDiv.remove(),a.Widget.prototype.destroy.apply(this,arguments)},value:function(a){return a===b?this._value():(this._setOption("value",a),this)},_setOption:function(b,c){b==="value"&&(this.options.value=c,this._refreshValue(),this._value()===this.options.max&&this._trigger("complete")),a.Widget.prototype._setOption.apply(this,arguments)},_value:function(){var a=this.options.value;return typeof a!="number"&&(a=0),Math.min(this.options.max,Math.max(this.min,a))},_percentage:function(){return 100*this._value()/this.options.max},_refreshValue:function(){var a=this.value(),b=this._percentage();this.oldValue!==a&&(this.oldValue=a,this._trigger("change")),this.valueDiv.toggle(a>this.min).toggleClass("ui-corner-right",a===this.options.max).width(b.toFixed(0)+"%"),this.element.attr("aria-valuenow",a)}}),a.extend(a.ui.progressbar,{version:"1.8.20"})})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.core.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
jQuery.effects||function(a,b){function c(b){var c;return b&&b.constructor==Array&&b.length==3?b:(c=/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(b))?[parseInt(c[1],10),parseInt(c[2],10),parseInt(c[3],10)]:(c=/rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(b))?[parseFloat(c[1])*2.55,parseFloat(c[2])*2.55,parseFloat(c[3])*2.55]:(c=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(b))?[parseInt(c[1],16),parseInt(c[2],16),parseInt(c[3],16)]:(c=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(b))?[parseInt(c[1]+c[1],16),parseInt(c[2]+c[2],16),parseInt(c[3]+c[3],16)]:(c=/rgba\(0, 0, 0, 0\)/.exec(b))?e.transparent:e[a.trim(b).toLowerCase()]}function d(b,d){var e;do{e=a.curCSS(b,d);if(e!=""&&e!="transparent"||a.nodeName(b,"body"))break;d="backgroundColor"}while(b=b.parentNode);return c(e)}function h(){var a=document.defaultView?document.defaultView.getComputedStyle(this,null):this.currentStyle,b={},c,d;if(a&&a.length&&a[0]&&a[a[0]]){var e=a.length;while(e--)c=a[e],typeof a[c]=="string"&&(d=c.replace(/\-(\w)/g,function(a,b){return b.toUpperCase()}),b[d]=a[c])}else for(c in a)typeof a[c]=="string"&&(b[c]=a[c]);return b}function i(b){var c,d;for(c in b)d=b[c],(d==null||a.isFunction(d)||c in g||/scrollbar/.test(c)||!/color/i.test(c)&&isNaN(parseFloat(d)))&&delete b[c];return b}function j(a,b){var c={_:0},d;for(d in b)a[d]!=b[d]&&(c[d]=b[d]);return c}function k(b,c,d,e){typeof b=="object"&&(e=c,d=null,c=b,b=c.effect),a.isFunction(c)&&(e=c,d=null,c={});if(typeof c=="number"||a.fx.speeds[c])e=d,d=c,c={};return a.isFunction(d)&&(e=d,d=null),c=c||{},d=d||c.duration,d=a.fx.off?0:typeof d=="number"?d:d in a.fx.speeds?a.fx.speeds[d]:a.fx.speeds._default,e=e||c.complete,[b,c,d,e]}function l(b){return!b||typeof b=="number"||a.fx.speeds[b]?!0:typeof b=="string"&&!a.effects[b]?!0:!1}a.effects={},a.each(["backgroundColor","borderBottomColor","borderLeftColor","borderRightColor","borderTopColor","borderColor","color","outlineColor"],function(b,e){a.fx.step[e]=function(a){a.colorInit||(a.start=d(a.elem,e),a.end=c(a.end),a.colorInit=!0),a.elem.style[e]="rgb("+Math.max(Math.min(parseInt(a.pos*(a.end[0]-a.start[0])+a.start[0],10),255),0)+","+Math.max(Math.min(parseInt(a.pos*(a.end[1]-a.start[1])+a.start[1],10),255),0)+","+Math.max(Math.min(parseInt(a.pos*(a.end[2]-a.start[2])+a.start[2],10),255),0)+")"}});var e={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0],transparent:[255,255,255]},f=["add","remove","toggle"],g={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};a.effects.animateClass=function(b,c,d,e){return a.isFunction(d)&&(e=d,d=null),this.queue(function(){var g=a(this),k=g.attr("style")||" ",l=i(h.call(this)),m,n=g.attr("class")||"";a.each(f,function(a,c){b[c]&&g[c+"Class"](b[c])}),m=i(h.call(this)),g.attr("class",n),g.animate(j(l,m),{queue:!1,duration:c,easing:d,complete:function(){a.each(f,function(a,c){b[c]&&g[c+"Class"](b[c])}),typeof g.attr("style")=="object"?(g.attr("style").cssText="",g.attr("style").cssText=k):g.attr("style",k),e&&e.apply(this,arguments),a.dequeue(this)}})})},a.fn.extend({_addClass:a.fn.addClass,addClass:function(b,c,d,e){return c?a.effects.animateClass.apply(this,[{add:b},c,d,e]):this._addClass(b)},_removeClass:a.fn.removeClass,removeClass:function(b,c,d,e){return c?a.effects.animateClass.apply(this,[{remove:b},c,d,e]):this._removeClass(b)},_toggleClass:a.fn.toggleClass,toggleClass:function(c,d,e,f,g){return typeof d=="boolean"||d===b?e?a.effects.animateClass.apply(this,[d?{add:c}:{remove:c},e,f,g]):this._toggleClass(c,d):a.effects.animateClass.apply(this,[{toggle:c},d,e,f])},switchClass:function(b,c,d,e,f){return a.effects.animateClass.apply(this,[{add:c,remove:b},d,e,f])}}),a.extend(a.effects,{version:"1.8.20",save:function(a,b){for(var c=0;c<b.length;c++)b[c]!==null&&a.data("ec.storage."+b[c],a[0].style[b[c]])},restore:function(a,b){for(var c=0;c<b.length;c++)b[c]!==null&&a.css(b[c],a.data("ec.storage."+b[c]))},setMode:function(a,b){return b=="toggle"&&(b=a.is(":hidden")?"show":"hide"),b},getBaseline:function(a,b){var c,d;switch(a[0]){case"top":c=0;break;case"middle":c=.5;break;case"bottom":c=1;break;default:c=a[0]/b.height}switch(a[1]){case"left":d=0;break;case"center":d=.5;break;case"right":d=1;break;default:d=a[1]/b.width}return{x:d,y:c}},createWrapper:function(b){if(b.parent().is(".ui-effects-wrapper"))return b.parent();var c={width:b.outerWidth(!0),height:b.outerHeight(!0),"float":b.css("float")},d=a("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),e=document.activeElement;return b.wrap(d),(b[0]===e||a.contains(b[0],e))&&a(e).focus(),d=b.parent(),b.css("position")=="static"?(d.css({position:"relative"}),b.css({position:"relative"})):(a.extend(c,{position:b.css("position"),zIndex:b.css("z-index")}),a.each(["top","left","bottom","right"],function(a,d){c[d]=b.css(d),isNaN(parseInt(c[d],10))&&(c[d]="auto")}),b.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),d.css(c).show()},removeWrapper:function(b){var c,d=document.activeElement;return b.parent().is(".ui-effects-wrapper")?(c=b.parent().replaceWith(b),(b[0]===d||a.contains(b[0],d))&&a(d).focus(),c):b},setTransition:function(b,c,d,e){return e=e||{},a.each(c,function(a,c){var f=b.cssUnit(c);f[0]>0&&(e[c]=f[0]*d+f[1])}),e}}),a.fn.extend({effect:function(b,c,d,e){var f=k.apply(this,arguments),g={options:f[1],duration:f[2],callback:f[3]},h=g.options.mode,i=a.effects[b];return a.fx.off||!i?h?this[h](g.duration,g.callback):this.each(function(){g.callback&&g.callback.call(this)}):i.call(this,g)},_show:a.fn.show,show:function(a){if(l(a))return this._show.apply(this,arguments);var b=k.apply(this,arguments);return b[1].mode="show",this.effect.apply(this,b)},_hide:a.fn.hide,hide:function(a){if(l(a))return this._hide.apply(this,arguments);var b=k.apply(this,arguments);return b[1].mode="hide",this.effect.apply(this,b)},__toggle:a.fn.toggle,toggle:function(b){if(l(b)||typeof b=="boolean"||a.isFunction(b))return this.__toggle.apply(this,arguments);var c=k.apply(this,arguments);return c[1].mode="toggle",this.effect.apply(this,c)},cssUnit:function(b){var c=this.css(b),d=[];return a.each(["em","px","%","pt"],function(a,b){c.indexOf(b)>0&&(d=[parseFloat(c),b])}),d}}),a.easing.jswing=a.easing.swing,a.extend(a.easing,{def:"easeOutQuad",swing:function(b,c,d,e,f){return a.easing[a.easing.def](b,c,d,e,f)},easeInQuad:function(a,b,c,d,e){return d*(b/=e)*b+c},easeOutQuad:function(a,b,c,d,e){return-d*(b/=e)*(b-2)+c},easeInOutQuad:function(a,b,c,d,e){return(b/=e/2)<1?d/2*b*b+c:-d/2*(--b*(b-2)-1)+c},easeInCubic:function(a,b,c,d,e){return d*(b/=e)*b*b+c},easeOutCubic:function(a,b,c,d,e){return d*((b=b/e-1)*b*b+1)+c},easeInOutCubic:function(a,b,c,d,e){return(b/=e/2)<1?d/2*b*b*b+c:d/2*((b-=2)*b*b+2)+c},easeInQuart:function(a,b,c,d,e){return d*(b/=e)*b*b*b+c},easeOutQuart:function(a,b,c,d,e){return-d*((b=b/e-1)*b*b*b-1)+c},easeInOutQuart:function(a,b,c,d,e){return(b/=e/2)<1?d/2*b*b*b*b+c:-d/2*((b-=2)*b*b*b-2)+c},easeInQuint:function(a,b,c,d,e){return d*(b/=e)*b*b*b*b+c},easeOutQuint:function(a,b,c,d,e){return d*((b=b/e-1)*b*b*b*b+1)+c},easeInOutQuint:function(a,b,c,d,e){return(b/=e/2)<1?d/2*b*b*b*b*b+c:d/2*((b-=2)*b*b*b*b+2)+c},easeInSine:function(a,b,c,d,e){return-d*Math.cos(b/e*(Math.PI/2))+d+c},easeOutSine:function(a,b,c,d,e){return d*Math.sin(b/e*(Math.PI/2))+c},easeInOutSine:function(a,b,c,d,e){return-d/2*(Math.cos(Math.PI*b/e)-1)+c},easeInExpo:function(a,b,c,d,e){return b==0?c:d*Math.pow(2,10*(b/e-1))+c},easeOutExpo:function(a,b,c,d,e){return b==e?c+d:d*(-Math.pow(2,-10*b/e)+1)+c},easeInOutExpo:function(a,b,c,d,e){return b==0?c:b==e?c+d:(b/=e/2)<1?d/2*Math.pow(2,10*(b-1))+c:d/2*(-Math.pow(2,-10*--b)+2)+c},easeInCirc:function(a,b,c,d,e){return-d*(Math.sqrt(1-(b/=e)*b)-1)+c},easeOutCirc:function(a,b,c,d,e){return d*Math.sqrt(1-(b=b/e-1)*b)+c},easeInOutCirc:function(a,b,c,d,e){return(b/=e/2)<1?-d/2*(Math.sqrt(1-b*b)-1)+c:d/2*(Math.sqrt(1-(b-=2)*b)+1)+c},easeInElastic:function(a,b,c,d,e){var f=1.70158,g=0,h=d;if(b==0)return c;if((b/=e)==1)return c+d;g||(g=e*.3);if(h<Math.abs(d)){h=d;var f=g/4}else var f=g/(2*Math.PI)*Math.asin(d/h);return-(h*Math.pow(2,10*(b-=1))*Math.sin((b*e-f)*2*Math.PI/g))+c},easeOutElastic:function(a,b,c,d,e){var f=1.70158,g=0,h=d;if(b==0)return c;if((b/=e)==1)return c+d;g||(g=e*.3);if(h<Math.abs(d)){h=d;var f=g/4}else var f=g/(2*Math.PI)*Math.asin(d/h);return h*Math.pow(2,-10*b)*Math.sin((b*e-f)*2*Math.PI/g)+d+c},easeInOutElastic:function(a,b,c,d,e){var f=1.70158,g=0,h=d;if(b==0)return c;if((b/=e/2)==2)return c+d;g||(g=e*.3*1.5);if(h<Math.abs(d)){h=d;var f=g/4}else var f=g/(2*Math.PI)*Math.asin(d/h);return b<1?-0.5*h*Math.pow(2,10*(b-=1))*Math.sin((b*e-f)*2*Math.PI/g)+c:h*Math.pow(2,-10*(b-=1))*Math.sin((b*e-f)*2*Math.PI/g)*.5+d+c},easeInBack:function(a,c,d,e,f,g){return g==b&&(g=1.70158),e*(c/=f)*c*((g+1)*c-g)+d},easeOutBack:function(a,c,d,e,f,g){return g==b&&(g=1.70158),e*((c=c/f-1)*c*((g+1)*c+g)+1)+d},easeInOutBack:function(a,c,d,e,f,g){return g==b&&(g=1.70158),(c/=f/2)<1?e/2*c*c*(((g*=1.525)+1)*c-g)+d:e/2*((c-=2)*c*(((g*=1.525)+1)*c+g)+2)+d},easeInBounce:function(b,c,d,e,f){return e-a.easing.easeOutBounce(b,f-c,0,e,f)+d},easeOutBounce:function(a,b,c,d,e){return(b/=e)<1/2.75?d*7.5625*b*b+c:b<2/2.75?d*(7.5625*(b-=1.5/2.75)*b+.75)+c:b<2.5/2.75?d*(7.5625*(b-=2.25/2.75)*b+.9375)+c:d*(7.5625*(b-=2.625/2.75)*b+.984375)+c},easeInOutBounce:function(b,c,d,e,f){return c<f/2?a.easing.easeInBounce(b,c*2,0,e,f)*.5+d:a.easing.easeOutBounce(b,c*2-f,0,e,f)*.5+e*.5+d}})}(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.blind.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.effects.blind=function(b){return this.queue(function(){var c=a(this),d=["position","top","bottom","left","right"],e=a.effects.setMode(c,b.options.mode||"hide"),f=b.options.direction||"vertical";a.effects.save(c,d),c.show();var g=a.effects.createWrapper(c).css({overflow:"hidden"}),h=f=="vertical"?"height":"width",i=f=="vertical"?g.height():g.width();e=="show"&&g.css(h,0);var j={};j[h]=e=="show"?i:0,g.animate(j,b.duration,b.options.easing,function(){e=="hide"&&c.hide(),a.effects.restore(c,d),a.effects.removeWrapper(c),b.callback&&b.callback.apply(c[0],arguments),c.dequeue()})})}})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.bounce.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.effects.bounce=function(b){return this.queue(function(){var c=a(this),d=["position","top","bottom","left","right"],e=a.effects.setMode(c,b.options.mode||"effect"),f=b.options.direction||"up",g=b.options.distance||20,h=b.options.times||5,i=b.duration||250;/show|hide/.test(e)&&d.push("opacity"),a.effects.save(c,d),c.show(),a.effects.createWrapper(c);var j=f=="up"||f=="down"?"top":"left",k=f=="up"||f=="left"?"pos":"neg",g=b.options.distance||(j=="top"?c.outerHeight({margin:!0})/3:c.outerWidth({margin:!0})/3);e=="show"&&c.css("opacity",0).css(j,k=="pos"?-g:g),e=="hide"&&(g=g/(h*2)),e!="hide"&&h--;if(e=="show"){var l={opacity:1};l[j]=(k=="pos"?"+=":"-=")+g,c.animate(l,i/2,b.options.easing),g=g/2,h--}for(var m=0;m<h;m++){var n={},p={};n[j]=(k=="pos"?"-=":"+=")+g,p[j]=(k=="pos"?"+=":"-=")+g,c.animate(n,i/2,b.options.easing).animate(p,i/2,b.options.easing),g=e=="hide"?g*2:g/2}if(e=="hide"){var l={opacity:0};l[j]=(k=="pos"?"-=":"+=")+g,c.animate(l,i/2,b.options.easing,function(){c.hide(),a.effects.restore(c,d),a.effects.removeWrapper(c),b.callback&&b.callback.apply(this,arguments)})}else{var n={},p={};n[j]=(k=="pos"?"-=":"+=")+g,p[j]=(k=="pos"?"+=":"-=")+g,c.animate(n,i/2,b.options.easing).animate(p,i/2,b.options.easing,function(){a.effects.restore(c,d),a.effects.removeWrapper(c),b.callback&&b.callback.apply(this,arguments)})}c.queue("fx",function(){c.dequeue()}),c.dequeue()})}})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.clip.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.effects.clip=function(b){return this.queue(function(){var c=a(this),d=["position","top","bottom","left","right","height","width"],e=a.effects.setMode(c,b.options.mode||"hide"),f=b.options.direction||"vertical";a.effects.save(c,d),c.show();var g=a.effects.createWrapper(c).css({overflow:"hidden"}),h=c[0].tagName=="IMG"?g:c,i={size:f=="vertical"?"height":"width",position:f=="vertical"?"top":"left"},j=f=="vertical"?h.height():h.width();e=="show"&&(h.css(i.size,0),h.css(i.position,j/2));var k={};k[i.size]=e=="show"?j:0,k[i.position]=e=="show"?0:j/2,h.animate(k,{queue:!1,duration:b.duration,easing:b.options.easing,complete:function(){e=="hide"&&c.hide(),a.effects.restore(c,d),a.effects.removeWrapper(c),b.callback&&b.callback.apply(c[0],arguments),c.dequeue()}})})}})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.drop.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.effects.drop=function(b){return this.queue(function(){var c=a(this),d=["position","top","bottom","left","right","opacity"],e=a.effects.setMode(c,b.options.mode||"hide"),f=b.options.direction||"left";a.effects.save(c,d),c.show(),a.effects.createWrapper(c);var g=f=="up"||f=="down"?"top":"left",h=f=="up"||f=="left"?"pos":"neg",i=b.options.distance||(g=="top"?c.outerHeight({margin:!0})/2:c.outerWidth({margin:!0})/2);e=="show"&&c.css("opacity",0).css(g,h=="pos"?-i:i);var j={opacity:e=="show"?1:0};j[g]=(e=="show"?h=="pos"?"+=":"-=":h=="pos"?"-=":"+=")+i,c.animate(j,{queue:!1,duration:b.duration,easing:b.options.easing,complete:function(){e=="hide"&&c.hide(),a.effects.restore(c,d),a.effects.removeWrapper(c),b.callback&&b.callback.apply(this,arguments),c.dequeue()}})})}})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.explode.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.effects.explode=function(b){return this.queue(function(){var c=b.options.pieces?Math.round(Math.sqrt(b.options.pieces)):3,d=b.options.pieces?Math.round(Math.sqrt(b.options.pieces)):3;b.options.mode=b.options.mode=="toggle"?a(this).is(":visible")?"hide":"show":b.options.mode;var e=a(this).show().css("visibility","hidden"),f=e.offset();f.top-=parseInt(e.css("marginTop"),10)||0,f.left-=parseInt(e.css("marginLeft"),10)||0;var g=e.outerWidth(!0),h=e.outerHeight(!0);for(var i=0;i<c;i++)for(var j=0;j<d;j++)e.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-j*(g/d),top:-i*(h/c)}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:g/d,height:h/c,left:f.left+j*(g/d)+(b.options.mode=="show"?(j-Math.floor(d/2))*(g/d):0),top:f.top+i*(h/c)+(b.options.mode=="show"?(i-Math.floor(c/2))*(h/c):0),opacity:b.options.mode=="show"?0:1}).animate({left:f.left+j*(g/d)+(b.options.mode=="show"?0:(j-Math.floor(d/2))*(g/d)),top:f.top+i*(h/c)+(b.options.mode=="show"?0:(i-Math.floor(c/2))*(h/c)),opacity:b.options.mode=="show"?1:0},b.duration||500);setTimeout(function(){b.options.mode=="show"?e.css({visibility:"visible"}):e.css({visibility:"visible"}).hide(),b.callback&&b.callback.apply(e[0]),e.dequeue(),a("div.ui-effects-explode").remove()},b.duration||500)})}})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.fade.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.effects.fade=function(b){return this.queue(function(){var c=a(this),d=a.effects.setMode(c,b.options.mode||"hide");c.animate({opacity:d},{queue:!1,duration:b.duration,easing:b.options.easing,complete:function(){b.callback&&b.callback.apply(this,arguments),c.dequeue()}})})}})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.fold.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.effects.fold=function(b){return this.queue(function(){var c=a(this),d=["position","top","bottom","left","right"],e=a.effects.setMode(c,b.options.mode||"hide"),f=b.options.size||15,g=!!b.options.horizFirst,h=b.duration?b.duration/2:a.fx.speeds._default/2;a.effects.save(c,d),c.show();var i=a.effects.createWrapper(c).css({overflow:"hidden"}),j=e=="show"!=g,k=j?["width","height"]:["height","width"],l=j?[i.width(),i.height()]:[i.height(),i.width()],m=/([0-9]+)%/.exec(f);m&&(f=parseInt(m[1],10)/100*l[e=="hide"?0:1]),e=="show"&&i.css(g?{height:0,width:f}:{height:f,width:0});var n={},p={};n[k[0]]=e=="show"?l[0]:f,p[k[1]]=e=="show"?l[1]:0,i.animate(n,h,b.options.easing).animate(p,h,b.options.easing,function(){e=="hide"&&c.hide(),a.effects.restore(c,d),a.effects.removeWrapper(c),b.callback&&b.callback.apply(c[0],arguments),c.dequeue()})})}})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.highlight.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.effects.highlight=function(b){return this.queue(function(){var c=a(this),d=["backgroundImage","backgroundColor","opacity"],e=a.effects.setMode(c,b.options.mode||"show"),f={backgroundColor:c.css("backgroundColor")};e=="hide"&&(f.opacity=0),a.effects.save(c,d),c.show().css({backgroundImage:"none",backgroundColor:b.options.color||"#ffff99"}).animate(f,{queue:!1,duration:b.duration,easing:b.options.easing,complete:function(){e=="hide"&&c.hide(),a.effects.restore(c,d),e=="show"&&!a.support.opacity&&this.style.removeAttribute("filter"),b.callback&&b.callback.apply(this,arguments),c.dequeue()}})})}})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.pulsate.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.effects.pulsate=function(b){return this.queue(function(){var c=a(this),d=a.effects.setMode(c,b.options.mode||"show"),e=(b.options.times||5)*2-1,f=b.duration?b.duration/2:a.fx.speeds._default/2,g=c.is(":visible"),h=0;g||(c.css("opacity",0).show(),h=1),(d=="hide"&&g||d=="show"&&!g)&&e--;for(var i=0;i<e;i++)c.animate({opacity:h},f,b.options.easing),h=(h+1)%2;c.animate({opacity:h},f,b.options.easing,function(){h==0&&c.hide(),b.callback&&b.callback.apply(this,arguments)}),c.queue("fx",function(){c.dequeue()}).dequeue()})}})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.scale.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.effects.puff=function(b){return this.queue(function(){var c=a(this),d=a.effects.setMode(c,b.options.mode||"hide"),e=parseInt(b.options.percent,10)||150,f=e/100,g={height:c.height(),width:c.width()};a.extend(b.options,{fade:!0,mode:d,percent:d=="hide"?e:100,from:d=="hide"?g:{height:g.height*f,width:g.width*f}}),c.effect("scale",b.options,b.duration,b.callback),c.dequeue()})},a.effects.scale=function(b){return this.queue(function(){var c=a(this),d=a.extend(!0,{},b.options),e=a.effects.setMode(c,b.options.mode||"effect"),f=parseInt(b.options.percent,10)||(parseInt(b.options.percent,10)==0?0:e=="hide"?0:100),g=b.options.direction||"both",h=b.options.origin;e!="effect"&&(d.origin=h||["middle","center"],d.restore=!0);var i={height:c.height(),width:c.width()};c.from=b.options.from||(e=="show"?{height:0,width:0}:i);var j={y:g!="horizontal"?f/100:1,x:g!="vertical"?f/100:1};c.to={height:i.height*j.y,width:i.width*j.x},b.options.fade&&(e=="show"&&(c.from.opacity=0,c.to.opacity=1),e=="hide"&&(c.from.opacity=1,c.to.opacity=0)),d.from=c.from,d.to=c.to,d.mode=e,c.effect("size",d,b.duration,b.callback),c.dequeue()})},a.effects.size=function(b){return this.queue(function(){var c=a(this),d=["position","top","bottom","left","right","width","height","overflow","opacity"],e=["position","top","bottom","left","right","overflow","opacity"],f=["width","height","overflow"],g=["fontSize"],h=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],i=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],j=a.effects.setMode(c,b.options.mode||"effect"),k=b.options.restore||!1,l=b.options.scale||"both",m=b.options.origin,n={height:c.height(),width:c.width()};c.from=b.options.from||n,c.to=b.options.to||n;if(m){var p=a.effects.getBaseline(m,n);c.from.top=(n.height-c.from.height)*p.y,c.from.left=(n.width-c.from.width)*p.x,c.to.top=(n.height-c.to.height)*p.y,c.to.left=(n.width-c.to.width)*p.x}var q={from:{y:c.from.height/n.height,x:c.from.width/n.width},to:{y:c.to.height/n.height,x:c.to.width/n.width}};if(l=="box"||l=="both")q.from.y!=q.to.y&&(d=d.concat(h),c.from=a.effects.setTransition(c,h,q.from.y,c.from),c.to=a.effects.setTransition(c,h,q.to.y,c.to)),q.from.x!=q.to.x&&(d=d.concat(i),c.from=a.effects.setTransition(c,i,q.from.x,c.from),c.to=a.effects.setTransition(c,i,q.to.x,c.to));(l=="content"||l=="both")&&q.from.y!=q.to.y&&(d=d.concat(g),c.from=a.effects.setTransition(c,g,q.from.y,c.from),c.to=a.effects.setTransition(c,g,q.to.y,c.to)),a.effects.save(c,k?d:e),c.show(),a.effects.createWrapper(c),c.css("overflow","hidden").css(c.from);if(l=="content"||l=="both")h=h.concat(["marginTop","marginBottom"]).concat(g),i=i.concat(["marginLeft","marginRight"]),f=d.concat(h).concat(i),c.find("*[width]").each(function(){var c=a(this);k&&a.effects.save(c,f);var d={height:c.height(),width:c.width()};c.from={height:d.height*q.from.y,width:d.width*q.from.x},c.to={height:d.height*q.to.y,width:d.width*q.to.x},q.from.y!=q.to.y&&(c.from=a.effects.setTransition(c,h,q.from.y,c.from),c.to=a.effects.setTransition(c,h,q.to.y,c.to)),q.from.x!=q.to.x&&(c.from=a.effects.setTransition(c,i,q.from.x,c.from),c.to=a.effects.setTransition(c,i,q.to.x,c.to)),c.css(c.from),c.animate(c.to,b.duration,b.options.easing,function(){k&&a.effects.restore(c,f)})});c.animate(c.to,{queue:!1,duration:b.duration,easing:b.options.easing,complete:function(){c.to.opacity===0&&c.css("opacity",c.from.opacity),j=="hide"&&c.hide(),a.effects.restore(c,k?d:e),a.effects.removeWrapper(c),b.callback&&b.callback.apply(this,arguments),c.dequeue()}})})}})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.shake.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.effects.shake=function(b){return this.queue(function(){var c=a(this),d=["position","top","bottom","left","right"],e=a.effects.setMode(c,b.options.mode||"effect"),f=b.options.direction||"left",g=b.options.distance||20,h=b.options.times||3,i=b.duration||b.options.duration||140;a.effects.save(c,d),c.show(),a.effects.createWrapper(c);var j=f=="up"||f=="down"?"top":"left",k=f=="up"||f=="left"?"pos":"neg",l={},m={},n={};l[j]=(k=="pos"?"-=":"+=")+g,m[j]=(k=="pos"?"+=":"-=")+g*2,n[j]=(k=="pos"?"-=":"+=")+g*2,c.animate(l,i,b.options.easing);for(var p=1;p<h;p++)c.animate(m,i,b.options.easing).animate(n,i,b.options.easing);c.animate(m,i,b.options.easing).animate(l,i/2,b.options.easing,function(){a.effects.restore(c,d),a.effects.removeWrapper(c),b.callback&&b.callback.apply(this,arguments)}),c.queue("fx",function(){c.dequeue()}),c.dequeue()})}})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.slide.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.effects.slide=function(b){return this.queue(function(){var c=a(this),d=["position","top","bottom","left","right"],e=a.effects.setMode(c,b.options.mode||"show"),f=b.options.direction||"left";a.effects.save(c,d),c.show(),a.effects.createWrapper(c).css({overflow:"hidden"});var g=f=="up"||f=="down"?"top":"left",h=f=="up"||f=="left"?"pos":"neg",i=b.options.distance||(g=="top"?c.outerHeight({margin:!0}):c.outerWidth({margin:!0}));e=="show"&&c.css(g,h=="pos"?isNaN(i)?"-"+i:-i:i);var j={};j[g]=(e=="show"?h=="pos"?"+=":"-=":h=="pos"?"-=":"+=")+i,c.animate(j,{queue:!1,duration:b.duration,easing:b.options.easing,complete:function(){e=="hide"&&c.hide(),a.effects.restore(c,d),a.effects.removeWrapper(c),b.callback&&b.callback.apply(this,arguments),c.dequeue()}})})}})(jQuery);;/*! jQuery UI - v1.8.20 - 2012-04-30
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.transfer.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function(a,b){a.effects.transfer=function(b){return this.queue(function(){var c=a(this),d=a(b.options.to),e=d.offset(),f={top:e.top,left:e.left,height:d.innerHeight(),width:d.innerWidth()},g=c.offset(),h=a('<div class="ui-effects-transfer"></div>').appendTo(document.body).addClass(b.options.className).css({top:g.top,left:g.left,height:c.innerHeight(),width:c.innerWidth(),position:"absolute"}).animate(f,b.duration,b.options.easing,function(){h.remove(),b.callback&&b.callback.apply(c[0],arguments),c.dequeue()})})}})(jQuery);;
/*1.0*/
//     Underscore.js 1.4.3
//     http://underscorejs.org
//     (c) 2009-2012 Jeremy Ashkenas, DocumentCloud Inc.
//     Underscore may be freely distributed under the MIT license.
(function(){var n=this,t=n._,r={},e=Array.prototype,u=Object.prototype,i=Function.prototype,a=e.push,o=e.slice,c=e.concat,l=u.toString,f=u.hasOwnProperty,s=e.forEach,p=e.map,v=e.reduce,h=e.reduceRight,g=e.filter,d=e.every,m=e.some,y=e.indexOf,b=e.lastIndexOf,x=Array.isArray,_=Object.keys,j=i.bind,w=function(n){return n instanceof w?n:this instanceof w?(this._wrapped=n,void 0):new w(n)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=w),exports._=w):n._=w,w.VERSION="1.4.3";var A=w.each=w.forEach=function(n,t,e){if(null!=n)if(s&&n.forEach===s)n.forEach(t,e);else if(n.length===+n.length){for(var u=0,i=n.length;i>u;u++)if(t.call(e,n[u],u,n)===r)return}else for(var a in n)if(w.has(n,a)&&t.call(e,n[a],a,n)===r)return};w.map=w.collect=function(n,t,r){var e=[];return null==n?e:p&&n.map===p?n.map(t,r):(A(n,function(n,u,i){e[e.length]=t.call(r,n,u,i)}),e)};var O="Reduce of empty array with no initial value";w.reduce=w.foldl=w.inject=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),v&&n.reduce===v)return e&&(t=w.bind(t,e)),u?n.reduce(t,r):n.reduce(t);if(A(n,function(n,i,a){u?r=t.call(e,r,n,i,a):(r=n,u=!0)}),!u)throw new TypeError(O);return r},w.reduceRight=w.foldr=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),h&&n.reduceRight===h)return e&&(t=w.bind(t,e)),u?n.reduceRight(t,r):n.reduceRight(t);var i=n.length;if(i!==+i){var a=w.keys(n);i=a.length}if(A(n,function(o,c,l){c=a?a[--i]:--i,u?r=t.call(e,r,n[c],c,l):(r=n[c],u=!0)}),!u)throw new TypeError(O);return r},w.find=w.detect=function(n,t,r){var e;return E(n,function(n,u,i){return t.call(r,n,u,i)?(e=n,!0):void 0}),e},w.filter=w.select=function(n,t,r){var e=[];return null==n?e:g&&n.filter===g?n.filter(t,r):(A(n,function(n,u,i){t.call(r,n,u,i)&&(e[e.length]=n)}),e)},w.reject=function(n,t,r){return w.filter(n,function(n,e,u){return!t.call(r,n,e,u)},r)},w.every=w.all=function(n,t,e){t||(t=w.identity);var u=!0;return null==n?u:d&&n.every===d?n.every(t,e):(A(n,function(n,i,a){return(u=u&&t.call(e,n,i,a))?void 0:r}),!!u)};var E=w.some=w.any=function(n,t,e){t||(t=w.identity);var u=!1;return null==n?u:m&&n.some===m?n.some(t,e):(A(n,function(n,i,a){return u||(u=t.call(e,n,i,a))?r:void 0}),!!u)};w.contains=w.include=function(n,t){return null==n?!1:y&&n.indexOf===y?-1!=n.indexOf(t):E(n,function(n){return n===t})},w.invoke=function(n,t){var r=o.call(arguments,2);return w.map(n,function(n){return(w.isFunction(t)?t:n[t]).apply(n,r)})},w.pluck=function(n,t){return w.map(n,function(n){return n[t]})},w.where=function(n,t){return w.isEmpty(t)?[]:w.filter(n,function(n){for(var r in t)if(t[r]!==n[r])return!1;return!0})},w.max=function(n,t,r){if(!t&&w.isArray(n)&&n[0]===+n[0]&&65535>n.length)return Math.max.apply(Math,n);if(!t&&w.isEmpty(n))return-1/0;var e={computed:-1/0,value:-1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;a>=e.computed&&(e={value:n,computed:a})}),e.value},w.min=function(n,t,r){if(!t&&w.isArray(n)&&n[0]===+n[0]&&65535>n.length)return Math.min.apply(Math,n);if(!t&&w.isEmpty(n))return 1/0;var e={computed:1/0,value:1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;e.computed>a&&(e={value:n,computed:a})}),e.value},w.shuffle=function(n){var t,r=0,e=[];return A(n,function(n){t=w.random(r++),e[r-1]=e[t],e[t]=n}),e};var F=function(n){return w.isFunction(n)?n:function(t){return t[n]}};w.sortBy=function(n,t,r){var e=F(t);return w.pluck(w.map(n,function(n,t,u){return{value:n,index:t,criteria:e.call(r,n,t,u)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(r>e||void 0===r)return 1;if(e>r||void 0===e)return-1}return n.index<t.index?-1:1}),"value")};var k=function(n,t,r,e){var u={},i=F(t||w.identity);return A(n,function(t,a){var o=i.call(r,t,a,n);e(u,o,t)}),u};w.groupBy=function(n,t,r){return k(n,t,r,function(n,t,r){(w.has(n,t)?n[t]:n[t]=[]).push(r)})},w.countBy=function(n,t,r){return k(n,t,r,function(n,t){w.has(n,t)||(n[t]=0),n[t]++})},w.sortedIndex=function(n,t,r,e){r=null==r?w.identity:F(r);for(var u=r.call(e,t),i=0,a=n.length;a>i;){var o=i+a>>>1;u>r.call(e,n[o])?i=o+1:a=o}return i},w.toArray=function(n){return n?w.isArray(n)?o.call(n):n.length===+n.length?w.map(n,w.identity):w.values(n):[]},w.size=function(n){return null==n?0:n.length===+n.length?n.length:w.keys(n).length},w.first=w.head=w.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:o.call(n,0,t)},w.initial=function(n,t,r){return o.call(n,0,n.length-(null==t||r?1:t))},w.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:o.call(n,Math.max(n.length-t,0))},w.rest=w.tail=w.drop=function(n,t,r){return o.call(n,null==t||r?1:t)},w.compact=function(n){return w.filter(n,w.identity)};var R=function(n,t,r){return A(n,function(n){w.isArray(n)?t?a.apply(r,n):R(n,t,r):r.push(n)}),r};w.flatten=function(n,t){return R(n,t,[])},w.without=function(n){return w.difference(n,o.call(arguments,1))},w.uniq=w.unique=function(n,t,r,e){w.isFunction(t)&&(e=r,r=t,t=!1);var u=r?w.map(n,r,e):n,i=[],a=[];return A(u,function(r,e){(t?e&&a[a.length-1]===r:w.contains(a,r))||(a.push(r),i.push(n[e]))}),i},w.union=function(){return w.uniq(c.apply(e,arguments))},w.intersection=function(n){var t=o.call(arguments,1);return w.filter(w.uniq(n),function(n){return w.every(t,function(t){return w.indexOf(t,n)>=0})})},w.difference=function(n){var t=c.apply(e,o.call(arguments,1));return w.filter(n,function(n){return!w.contains(t,n)})},w.zip=function(){for(var n=o.call(arguments),t=w.max(w.pluck(n,"length")),r=Array(t),e=0;t>e;e++)r[e]=w.pluck(n,""+e);return r},w.object=function(n,t){if(null==n)return{};for(var r={},e=0,u=n.length;u>e;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},w.indexOf=function(n,t,r){if(null==n)return-1;var e=0,u=n.length;if(r){if("number"!=typeof r)return e=w.sortedIndex(n,t),n[e]===t?e:-1;e=0>r?Math.max(0,u+r):r}if(y&&n.indexOf===y)return n.indexOf(t,r);for(;u>e;e++)if(n[e]===t)return e;return-1},w.lastIndexOf=function(n,t,r){if(null==n)return-1;var e=null!=r;if(b&&n.lastIndexOf===b)return e?n.lastIndexOf(t,r):n.lastIndexOf(t);for(var u=e?r:n.length;u--;)if(n[u]===t)return u;return-1},w.range=function(n,t,r){1>=arguments.length&&(t=n||0,n=0),r=arguments[2]||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=0,i=Array(e);e>u;)i[u++]=n,n+=r;return i};var I=function(){};w.bind=function(n,t){var r,e;if(n.bind===j&&j)return j.apply(n,o.call(arguments,1));if(!w.isFunction(n))throw new TypeError;return r=o.call(arguments,2),e=function(){if(!(this instanceof e))return n.apply(t,r.concat(o.call(arguments)));I.prototype=n.prototype;var u=new I;I.prototype=null;var i=n.apply(u,r.concat(o.call(arguments)));return Object(i)===i?i:u}},w.bindAll=function(n){var t=o.call(arguments,1);return 0==t.length&&(t=w.functions(n)),A(t,function(t){n[t]=w.bind(n[t],n)}),n},w.memoize=function(n,t){var r={};return t||(t=w.identity),function(){var e=t.apply(this,arguments);return w.has(r,e)?r[e]:r[e]=n.apply(this,arguments)}},w.delay=function(n,t){var r=o.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},w.defer=function(n){return w.delay.apply(w,[n,1].concat(o.call(arguments,1)))},w.throttle=function(n,t){var r,e,u,i,a=0,o=function(){a=new Date,u=null,i=n.apply(r,e)};return function(){var c=new Date,l=t-(c-a);return r=this,e=arguments,0>=l?(clearTimeout(u),u=null,a=c,i=n.apply(r,e)):u||(u=setTimeout(o,l)),i}},w.debounce=function(n,t,r){var e,u;return function(){var i=this,a=arguments,o=function(){e=null,r||(u=n.apply(i,a))},c=r&&!e;return clearTimeout(e),e=setTimeout(o,t),c&&(u=n.apply(i,a)),u}},w.once=function(n){var t,r=!1;return function(){return r?t:(r=!0,t=n.apply(this,arguments),n=null,t)}},w.wrap=function(n,t){return function(){var r=[n];return a.apply(r,arguments),t.apply(this,r)}},w.compose=function(){var n=arguments;return function(){for(var t=arguments,r=n.length-1;r>=0;r--)t=[n[r].apply(this,t)];return t[0]}},w.after=function(n,t){return 0>=n?t():function(){return 1>--n?t.apply(this,arguments):void 0}},w.keys=_||function(n){if(n!==Object(n))throw new TypeError("Invalid object");var t=[];for(var r in n)w.has(n,r)&&(t[t.length]=r);return t},w.values=function(n){var t=[];for(var r in n)w.has(n,r)&&t.push(n[r]);return t},w.pairs=function(n){var t=[];for(var r in n)w.has(n,r)&&t.push([r,n[r]]);return t},w.invert=function(n){var t={};for(var r in n)w.has(n,r)&&(t[n[r]]=r);return t},w.functions=w.methods=function(n){var t=[];for(var r in n)w.isFunction(n[r])&&t.push(r);return t.sort()},w.extend=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]=t[r]}),n},w.pick=function(n){var t={},r=c.apply(e,o.call(arguments,1));return A(r,function(r){r in n&&(t[r]=n[r])}),t},w.omit=function(n){var t={},r=c.apply(e,o.call(arguments,1));for(var u in n)w.contains(r,u)||(t[u]=n[u]);return t},w.defaults=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)null==n[r]&&(n[r]=t[r])}),n},w.clone=function(n){return w.isObject(n)?w.isArray(n)?n.slice():w.extend({},n):n},w.tap=function(n,t){return t(n),n};var S=function(n,t,r,e){if(n===t)return 0!==n||1/n==1/t;if(null==n||null==t)return n===t;n instanceof w&&(n=n._wrapped),t instanceof w&&(t=t._wrapped);var u=l.call(n);if(u!=l.call(t))return!1;switch(u){case"[object String]":return n==t+"";case"[object Number]":return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case"[object Date]":case"[object Boolean]":return+n==+t;case"[object RegExp]":return n.source==t.source&&n.global==t.global&&n.multiline==t.multiline&&n.ignoreCase==t.ignoreCase}if("object"!=typeof n||"object"!=typeof t)return!1;for(var i=r.length;i--;)if(r[i]==n)return e[i]==t;r.push(n),e.push(t);var a=0,o=!0;if("[object Array]"==u){if(a=n.length,o=a==t.length)for(;a--&&(o=S(n[a],t[a],r,e)););}else{var c=n.constructor,f=t.constructor;if(c!==f&&!(w.isFunction(c)&&c instanceof c&&w.isFunction(f)&&f instanceof f))return!1;for(var s in n)if(w.has(n,s)&&(a++,!(o=w.has(t,s)&&S(n[s],t[s],r,e))))break;if(o){for(s in t)if(w.has(t,s)&&!a--)break;o=!a}}return r.pop(),e.pop(),o};w.isEqual=function(n,t){return S(n,t,[],[])},w.isEmpty=function(n){if(null==n)return!0;if(w.isArray(n)||w.isString(n))return 0===n.length;for(var t in n)if(w.has(n,t))return!1;return!0},w.isElement=function(n){return!(!n||1!==n.nodeType)},w.isArray=x||function(n){return"[object Array]"==l.call(n)},w.isObject=function(n){return n===Object(n)},A(["Arguments","Function","String","Number","Date","RegExp"],function(n){w["is"+n]=function(t){return l.call(t)=="[object "+n+"]"}}),w.isArguments(arguments)||(w.isArguments=function(n){return!(!n||!w.has(n,"callee"))}),w.isFunction=function(n){return"function"==typeof n},w.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},w.isNaN=function(n){return w.isNumber(n)&&n!=+n},w.isBoolean=function(n){return n===!0||n===!1||"[object Boolean]"==l.call(n)},w.isNull=function(n){return null===n},w.isUndefined=function(n){return void 0===n},w.has=function(n,t){return f.call(n,t)},w.noConflict=function(){return n._=t,this},w.identity=function(n){return n},w.times=function(n,t,r){for(var e=Array(n),u=0;n>u;u++)e[u]=t.call(r,u);return e},w.random=function(n,t){return null==t&&(t=n,n=0),n+(0|Math.random()*(t-n+1))};var T={escape:{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"}};T.unescape=w.invert(T.escape);var M={escape:RegExp("["+w.keys(T.escape).join("")+"]","g"),unescape:RegExp("("+w.keys(T.unescape).join("|")+")","g")};w.each(["escape","unescape"],function(n){w[n]=function(t){return null==t?"":(""+t).replace(M[n],function(t){return T[n][t]})}}),w.result=function(n,t){if(null==n)return null;var r=n[t];return w.isFunction(r)?r.call(n):r},w.mixin=function(n){A(w.functions(n),function(t){var r=w[t]=n[t];w.prototype[t]=function(){var n=[this._wrapped];return a.apply(n,arguments),z.call(this,r.apply(w,n))}})};var N=0;w.uniqueId=function(n){var t=""+ ++N;return n?n+t:t},w.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var q=/(.)^/,B={"'":"'","\\":"\\","\r":"r","\n":"n","	":"t","\u2028":"u2028","\u2029":"u2029"},D=/\\|'|\r|\n|\t|\u2028|\u2029/g;w.template=function(n,t,r){r=w.defaults({},r,w.templateSettings);var e=RegExp([(r.escape||q).source,(r.interpolate||q).source,(r.evaluate||q).source].join("|")+"|$","g"),u=0,i="__p+='";n.replace(e,function(t,r,e,a,o){return i+=n.slice(u,o).replace(D,function(n){return"\\"+B[n]}),r&&(i+="'+\n((__t=("+r+"))==null?'':_.escape(__t))+\n'"),e&&(i+="'+\n((__t=("+e+"))==null?'':__t)+\n'"),a&&(i+="';\n"+a+"\n__p+='"),u=o+t.length,t}),i+="';\n",r.variable||(i="with(obj||{}){\n"+i+"}\n"),i="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+i+"return __p;\n";try{var a=Function(r.variable||"obj","_",i)}catch(o){throw o.source=i,o}if(t)return a(t,w);var c=function(n){return a.call(this,n,w)};return c.source="function("+(r.variable||"obj")+"){\n"+i+"}",c},w.chain=function(n){return w(n).chain()};var z=function(n){return this._chain?w(n).chain():n};w.mixin(w),A(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var t=e[n];w.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),"shift"!=n&&"splice"!=n||0!==r.length||delete r[0],z.call(this,r)}}),A(["concat","join","slice"],function(n){var t=e[n];w.prototype[n]=function(){return z.call(this,t.apply(this._wrapped,arguments))}}),w.extend(w.prototype,{chain:function(){return this._chain=!0,this},value:function(){return this._wrapped}})}).call(this);
/*1.0*/
!function(e,n){"use strict";function r(e,n){var r,t,u=e.toLowerCase();for(n=[].concat(n),r=0;n.length>r;r+=1)if(t=n[r]){if(t.test&&t.test(e))return!0;if(t.toLowerCase()===u)return!0}}var t=n.prototype.trim,u=n.prototype.trimRight,i=n.prototype.trimLeft,l=function(e){return 1*e||0},o=function(e,n){if(1>n)return"";for(var r="";n>0;)1&n&&(r+=e),n>>=1,e+=e;return r},a=[].slice,c=function(e){return null==e?"\\s":e.source?e.source:"["+g.escapeRegExp(e)+"]"},s={lt:"<",gt:">",quot:'"',amp:"&",apos:"'"},f={};for(var p in s)f[s[p]]=p;f["'"]="#39";var h=function(){function e(e){return Object.prototype.toString.call(e).slice(8,-1).toLowerCase()}var r=o,t=function(){return t.cache.hasOwnProperty(arguments[0])||(t.cache[arguments[0]]=t.parse(arguments[0])),t.format.call(null,t.cache[arguments[0]],arguments)};return t.format=function(t,u){var i,l,o,a,c,s,f,p=1,g=t.length,d="",m=[];for(l=0;g>l;l++)if(d=e(t[l]),"string"===d)m.push(t[l]);else if("array"===d){if(a=t[l],a[2])for(i=u[p],o=0;a[2].length>o;o++){if(!i.hasOwnProperty(a[2][o]))throw new Error(h('[_.sprintf] property "%s" does not exist',a[2][o]));i=i[a[2][o]]}else i=a[1]?u[a[1]]:u[p++];if(/[^s]/.test(a[8])&&"number"!=e(i))throw new Error(h("[_.sprintf] expecting number but found %s",e(i)));switch(a[8]){case"b":i=i.toString(2);break;case"c":i=n.fromCharCode(i);break;case"d":i=parseInt(i,10);break;case"e":i=a[7]?i.toExponential(a[7]):i.toExponential();break;case"f":i=a[7]?parseFloat(i).toFixed(a[7]):parseFloat(i);break;case"o":i=i.toString(8);break;case"s":i=(i=n(i))&&a[7]?i.substring(0,a[7]):i;break;case"u":i=Math.abs(i);break;case"x":i=i.toString(16);break;case"X":i=i.toString(16).toUpperCase()}i=/[def]/.test(a[8])&&a[3]&&i>=0?"+"+i:i,s=a[4]?"0"==a[4]?"0":a[4].charAt(1):" ",f=a[6]-n(i).length,c=a[6]?r(s,f):"",m.push(a[5]?i+c:c+i)}return m.join("")},t.cache={},t.parse=function(e){for(var n=e,r=[],t=[],u=0;n;){if(null!==(r=/^[^\x25]+/.exec(n)))t.push(r[0]);else if(null!==(r=/^\x25{2}/.exec(n)))t.push("%");else{if(null===(r=/^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-fosuxX])/.exec(n)))throw new Error("[_.sprintf] huh?");if(r[2]){u|=1;var i=[],l=r[2],o=[];if(null===(o=/^([a-z_][a-z_\d]*)/i.exec(l)))throw new Error("[_.sprintf] huh?");for(i.push(o[1]);""!==(l=l.substring(o[0].length));)if(null!==(o=/^\.([a-z_][a-z_\d]*)/i.exec(l)))i.push(o[1]);else{if(null===(o=/^\[(\d+)\]/.exec(l)))throw new Error("[_.sprintf] huh?");i.push(o[1])}r[2]=i}else u|=2;if(3===u)throw new Error("[_.sprintf] mixing positional and named placeholders is not (yet) supported");t.push(r)}n=n.substring(r[0].length)}return t},t}(),g={VERSION:"2.3.0",isBlank:function(e){return null==e&&(e=""),/^\s*$/.test(e)},stripTags:function(e){return null==e?"":n(e).replace(/<\/?[^>]+>/g,"")},capitalize:function(e){return e=null==e?"":n(e),e.charAt(0).toUpperCase()+e.slice(1)},chop:function(e,r){return null==e?[]:(e=n(e),r=~~r,r>0?e.match(new RegExp(".{1,"+r+"}","g")):[e])},clean:function(e){return g.strip(e).replace(/\s+/g," ")},count:function(e,r){if(null==e||null==r)return 0;e=n(e),r=n(r);for(var t=0,u=0,i=r.length;;){if(u=e.indexOf(r,u),-1===u)break;t++,u+=i}return t},chars:function(e){return null==e?[]:n(e).split("")},swapCase:function(e){return null==e?"":n(e).replace(/\S/g,function(e){return e===e.toUpperCase()?e.toLowerCase():e.toUpperCase()})},escapeHTML:function(e){return null==e?"":n(e).replace(/[&<>"']/g,function(e){return"&"+f[e]+";"})},unescapeHTML:function(e){return null==e?"":n(e).replace(/\&([^;]+);/g,function(e,r){var t;return r in s?s[r]:(t=r.match(/^#x([\da-fA-F]+)$/))?n.fromCharCode(parseInt(t[1],16)):(t=r.match(/^#(\d+)$/))?n.fromCharCode(~~t[1]):e})},escapeRegExp:function(e){return null==e?"":n(e).replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")},splice:function(e,n,r,t){var u=g.chars(e);return u.splice(~~n,~~r,t),u.join("")},insert:function(e,n,r){return g.splice(e,n,0,r)},include:function(e,r){return""===r?!0:null==e?!1:-1!==n(e).indexOf(r)},join:function(){var e=a.call(arguments),n=e.shift();return null==n&&(n=""),e.join(n)},lines:function(e){return null==e?[]:n(e).split("\n")},reverse:function(e){return g.chars(e).reverse().join("")},startsWith:function(e,r){return""===r?!0:null==e||null==r?!1:(e=n(e),r=n(r),e.length>=r.length&&e.slice(0,r.length)===r)},endsWith:function(e,r){return""===r?!0:null==e||null==r?!1:(e=n(e),r=n(r),e.length>=r.length&&e.slice(e.length-r.length)===r)},succ:function(e){return null==e?"":(e=n(e),e.slice(0,-1)+n.fromCharCode(e.charCodeAt(e.length-1)+1))},titleize:function(e){return null==e?"":(e=n(e).toLowerCase(),e.replace(/(?:^|\s|-)\S/g,function(e){return e.toUpperCase()}))},camelize:function(e){return g.trim(e).replace(/[-_\s]+(.)?/g,function(e,n){return n?n.toUpperCase():""})},underscored:function(e){return g.trim(e).replace(/([a-z\d])([A-Z]+)/g,"$1_$2").replace(/[-\s]+/g,"_").toLowerCase()},dasherize:function(e){return g.trim(e).replace(/([A-Z])/g,"-$1").replace(/[-_\s]+/g,"-").toLowerCase()},classify:function(e){return g.titleize(n(e).replace(/[\W_]/g," ")).replace(/\s/g,"")},humanize:function(e){return g.capitalize(g.underscored(e).replace(/_id$/,"").replace(/_/g," "))},trim:function(e,r){return null==e?"":!r&&t?t.call(e):(r=c(r),n(e).replace(new RegExp("^"+r+"+|"+r+"+$","g"),""))},ltrim:function(e,r){return null==e?"":!r&&i?i.call(e):(r=c(r),n(e).replace(new RegExp("^"+r+"+"),""))},rtrim:function(e,r){return null==e?"":!r&&u?u.call(e):(r=c(r),n(e).replace(new RegExp(r+"+$"),""))},truncate:function(e,r,t){return null==e?"":(e=n(e),t=t||"...",r=~~r,e.length>r?e.slice(0,r)+t:e)},prune:function(e,r,t){if(null==e)return"";if(e=n(e),r=~~r,t=null!=t?n(t):"...",r>=e.length)return e;var u=function(e){return e.toUpperCase()!==e.toLowerCase()?"A":" "},i=e.slice(0,r+1).replace(/.(?=\W*\w*$)/g,u);return i=i.slice(i.length-2).match(/\w\w/)?i.replace(/\s*\S+$/,""):g.rtrim(i.slice(0,i.length-1)),(i+t).length>e.length?e:e.slice(0,i.length)+t},words:function(e,n){return g.isBlank(e)?[]:g.trim(e,n).split(n||/\s+/)},pad:function(e,r,t,u){e=null==e?"":n(e),r=~~r;var i=0;switch(t?t.length>1&&(t=t.charAt(0)):t=" ",u){case"right":return i=r-e.length,e+o(t,i);case"both":return i=r-e.length,o(t,Math.ceil(i/2))+e+o(t,Math.floor(i/2));default:return i=r-e.length,o(t,i)+e}},lpad:function(e,n,r){return g.pad(e,n,r)},rpad:function(e,n,r){return g.pad(e,n,r,"right")},lrpad:function(e,n,r){return g.pad(e,n,r,"both")},sprintf:h,vsprintf:function(e,n){return n.unshift(e),h.apply(null,n)},toNumber:function(e,n){return e?(e=g.trim(e),e.match(/^-?\d+(?:\.\d+)?$/)?l(l(e).toFixed(~~n)):0/0):0},numberFormat:function(e,n,r,t){if(isNaN(e)||null==e)return"";e=e.toFixed(~~n),t="string"==typeof t?t:",";var u=e.split("."),i=u[0],l=u[1]?(r||".")+u[1]:"";return i.replace(/(\d)(?=(?:\d{3})+$)/g,"$1"+t)+l},strRight:function(e,r){if(null==e)return"";e=n(e),r=null!=r?n(r):r;var t=r?e.indexOf(r):-1;return~t?e.slice(t+r.length,e.length):e},strRightBack:function(e,r){if(null==e)return"";e=n(e),r=null!=r?n(r):r;var t=r?e.lastIndexOf(r):-1;return~t?e.slice(t+r.length,e.length):e},strLeft:function(e,r){if(null==e)return"";e=n(e),r=null!=r?n(r):r;var t=r?e.indexOf(r):-1;return~t?e.slice(0,t):e},strLeftBack:function(e,n){if(null==e)return"";e+="",n=null!=n?""+n:n;var r=e.lastIndexOf(n);return~r?e.slice(0,r):e},toSentence:function(e,n,r,t){n=n||", ",r=r||" and ";var u=e.slice(),i=u.pop();return e.length>2&&t&&(r=g.rtrim(n)+r),u.length?u.join(n)+r+i:i},toSentenceSerial:function(){var e=a.call(arguments);return e[3]=!0,g.toSentence.apply(g,e)},slugify:function(e){if(null==e)return"";var r="ąàáäâãåæăćęèéëêìíïîłńòóöôõøśșțùúüûñçżź",t="aaaaaaaaaceeeeeiiiilnoooooosstuuuunczz",u=new RegExp(c(r),"g");return e=n(e).toLowerCase().replace(u,function(e){var n=r.indexOf(e);return t.charAt(n)||"-"}),g.dasherize(e.replace(/[^\w\s-]/g,""))},surround:function(e,n){return[n,e,n].join("")},quote:function(e,n){return g.surround(e,n||'"')},unquote:function(e,n){return n=n||'"',e[0]===n&&e[e.length-1]===n?e.slice(1,e.length-1):e},exports:function(){var e={};for(var n in this)this.hasOwnProperty(n)&&!n.match(/^(?:include|contains|reverse)$/)&&(e[n]=this[n]);return e},repeat:function(e,r,t){if(null==e)return"";if(r=~~r,null==t)return o(n(e),r);for(var u=[];r>0;u[--r]=e);return u.join(t)},naturalCmp:function(e,r){if(e==r)return 0;if(!e)return-1;if(!r)return 1;for(var t=/(\.\d+)|(\d+)|(\D+)/g,u=n(e).toLowerCase().match(t),i=n(r).toLowerCase().match(t),l=Math.min(u.length,i.length),o=0;l>o;o++){var a=u[o],c=i[o];if(a!==c){var s=parseInt(a,10);if(!isNaN(s)){var f=parseInt(c,10);if(!isNaN(f)&&s-f)return s-f}return c>a?-1:1}}return u.length===i.length?u.length-i.length:r>e?-1:1},levenshtein:function(e,r){if(null==e&&null==r)return 0;if(null==e)return n(r).length;if(null==r)return n(e).length;e=n(e),r=n(r);for(var t,u,i=[],l=0;r.length>=l;l++)for(var o=0;e.length>=o;o++)u=l&&o?e.charAt(o-1)===r.charAt(l-1)?t:Math.min(i[o],i[o-1],t)+1:l+o,t=i[o],i[o]=u;return i.pop()},toBoolean:function(e,n,t){return"number"==typeof e&&(e=""+e),"string"!=typeof e?!!e:(e=g.trim(e),r(e,n||["true","1"])?!0:r(e,t||["false","0"])?!1:void 0)}};g.strip=g.trim,g.lstrip=g.ltrim,g.rstrip=g.rtrim,g.center=g.lrpad,g.rjust=g.lpad,g.ljust=g.rpad,g.contains=g.include,g.q=g.quote,g.toBool=g.toBoolean,"undefined"!=typeof exports&&("undefined"!=typeof module&&module.exports&&(module.exports=g),exports._s=g),"function"==typeof define&&define.amd&&define("underscore.string",[],function(){return g}),e._=e._||{},e._.string=e._.str=g}(this,String);
/*1.0*/
// Backbone.js 0.9.10

// (c) 2010-2012 Jeremy Ashkenas, DocumentCloud Inc.
// Backbone may be freely distributed under the MIT license.
// For all details and documentation:
// http://backbonejs.org
(function(){var n=this,B=n.Backbone,h=[],C=h.push,u=h.slice,D=h.splice,g;g="undefined"!==typeof exports?exports:n.Backbone={};g.VERSION="0.9.10";var f=n._;!f&&"undefined"!==typeof require&&(f=require("underscore"));g.$=n.jQuery||n.Zepto||n.ender;g.noConflict=function(){n.Backbone=B;return this};g.emulateHTTP=!1;g.emulateJSON=!1;var v=/\s+/,q=function(a,b,c,d){if(!c)return!0;if("object"===typeof c)for(var e in c)a[b].apply(a,[e,c[e]].concat(d));else if(v.test(c)){c=c.split(v);e=0;for(var f=c.length;e<
f;e++)a[b].apply(a,[c[e]].concat(d))}else return!0},w=function(a,b){var c,d=-1,e=a.length;switch(b.length){case 0:for(;++d<e;)(c=a[d]).callback.call(c.ctx);break;case 1:for(;++d<e;)(c=a[d]).callback.call(c.ctx,b[0]);break;case 2:for(;++d<e;)(c=a[d]).callback.call(c.ctx,b[0],b[1]);break;case 3:for(;++d<e;)(c=a[d]).callback.call(c.ctx,b[0],b[1],b[2]);break;default:for(;++d<e;)(c=a[d]).callback.apply(c.ctx,b)}},h=g.Events={on:function(a,b,c){if(!q(this,"on",a,[b,c])||!b)return this;this._events||(this._events=
{});(this._events[a]||(this._events[a]=[])).push({callback:b,context:c,ctx:c||this});return this},once:function(a,b,c){if(!q(this,"once",a,[b,c])||!b)return this;var d=this,e=f.once(function(){d.off(a,e);b.apply(this,arguments)});e._callback=b;this.on(a,e,c);return this},off:function(a,b,c){var d,e,t,g,j,l,k,h;if(!this._events||!q(this,"off",a,[b,c]))return this;if(!a&&!b&&!c)return this._events={},this;g=a?[a]:f.keys(this._events);j=0;for(l=g.length;j<l;j++)if(a=g[j],d=this._events[a]){t=[];if(b||
c){k=0;for(h=d.length;k<h;k++)e=d[k],(b&&b!==e.callback&&b!==e.callback._callback||c&&c!==e.context)&&t.push(e)}this._events[a]=t}return this},trigger:function(a){if(!this._events)return this;var b=u.call(arguments,1);if(!q(this,"trigger",a,b))return this;var c=this._events[a],d=this._events.all;c&&w(c,b);d&&w(d,arguments);return this},listenTo:function(a,b,c){var d=this._listeners||(this._listeners={}),e=a._listenerId||(a._listenerId=f.uniqueId("l"));d[e]=a;a.on(b,"object"===typeof b?this:c,this);
return this},stopListening:function(a,b,c){var d=this._listeners;if(d){if(a)a.off(b,"object"===typeof b?this:c,this),!b&&!c&&delete d[a._listenerId];else{"object"===typeof b&&(c=this);for(var e in d)d[e].off(b,c,this);this._listeners={}}return this}}};h.bind=h.on;h.unbind=h.off;f.extend(g,h);var r=g.Model=function(a,b){var c,d=a||{};this.cid=f.uniqueId("c");this.attributes={};b&&b.collection&&(this.collection=b.collection);b&&b.parse&&(d=this.parse(d,b)||{});if(c=f.result(this,"defaults"))d=f.defaults({},
d,c);this.set(d,b);this.changed={};this.initialize.apply(this,arguments)};f.extend(r.prototype,h,{changed:null,idAttribute:"id",initialize:function(){},toJSON:function(){return f.clone(this.attributes)},sync:function(){return g.sync.apply(this,arguments)},get:function(a){return this.attributes[a]},escape:function(a){return f.escape(this.get(a))},has:function(a){return null!=this.get(a)},set:function(a,b,c){var d,e,g,p,j,l,k;if(null==a)return this;"object"===typeof a?(e=a,c=b):(e={})[a]=b;c||(c={});
if(!this._validate(e,c))return!1;g=c.unset;p=c.silent;a=[];j=this._changing;this._changing=!0;j||(this._previousAttributes=f.clone(this.attributes),this.changed={});k=this.attributes;l=this._previousAttributes;this.idAttribute in e&&(this.id=e[this.idAttribute]);for(d in e)b=e[d],f.isEqual(k[d],b)||a.push(d),f.isEqual(l[d],b)?delete this.changed[d]:this.changed[d]=b,g?delete k[d]:k[d]=b;if(!p){a.length&&(this._pending=!0);b=0;for(d=a.length;b<d;b++)this.trigger("change:"+a[b],this,k[a[b]],c)}if(j)return this;
if(!p)for(;this._pending;)this._pending=!1,this.trigger("change",this,c);this._changing=this._pending=!1;return this},unset:function(a,b){return this.set(a,void 0,f.extend({},b,{unset:!0}))},clear:function(a){var b={},c;for(c in this.attributes)b[c]=void 0;return this.set(b,f.extend({},a,{unset:!0}))},hasChanged:function(a){return null==a?!f.isEmpty(this.changed):f.has(this.changed,a)},changedAttributes:function(a){if(!a)return this.hasChanged()?f.clone(this.changed):!1;var b,c=!1,d=this._changing?
this._previousAttributes:this.attributes,e;for(e in a)if(!f.isEqual(d[e],b=a[e]))(c||(c={}))[e]=b;return c},previous:function(a){return null==a||!this._previousAttributes?null:this._previousAttributes[a]},previousAttributes:function(){return f.clone(this._previousAttributes)},fetch:function(a){a=a?f.clone(a):{};void 0===a.parse&&(a.parse=!0);var b=a.success;a.success=function(a,d,e){if(!a.set(a.parse(d,e),e))return!1;b&&b(a,d,e)};return this.sync("read",this,a)},save:function(a,b,c){var d,e,g=this.attributes;
null==a||"object"===typeof a?(d=a,c=b):(d={})[a]=b;if(d&&(!c||!c.wait)&&!this.set(d,c))return!1;c=f.extend({validate:!0},c);if(!this._validate(d,c))return!1;d&&c.wait&&(this.attributes=f.extend({},g,d));void 0===c.parse&&(c.parse=!0);e=c.success;c.success=function(a,b,c){a.attributes=g;var k=a.parse(b,c);c.wait&&(k=f.extend(d||{},k));if(f.isObject(k)&&!a.set(k,c))return!1;e&&e(a,b,c)};a=this.isNew()?"create":c.patch?"patch":"update";"patch"===a&&(c.attrs=d);a=this.sync(a,this,c);d&&c.wait&&(this.attributes=
g);return a},destroy:function(a){a=a?f.clone(a):{};var b=this,c=a.success,d=function(){b.trigger("destroy",b,b.collection,a)};a.success=function(a,b,e){(e.wait||a.isNew())&&d();c&&c(a,b,e)};if(this.isNew())return a.success(this,null,a),!1;var e=this.sync("delete",this,a);a.wait||d();return e},url:function(){var a=f.result(this,"urlRoot")||f.result(this.collection,"url")||x();return this.isNew()?a:a+("/"===a.charAt(a.length-1)?"":"/")+encodeURIComponent(this.id)},parse:function(a){return a},clone:function(){return new this.constructor(this.attributes)},
isNew:function(){return null==this.id},isValid:function(a){return!this.validate||!this.validate(this.attributes,a)},_validate:function(a,b){if(!b.validate||!this.validate)return!0;a=f.extend({},this.attributes,a);var c=this.validationError=this.validate(a,b)||null;if(!c)return!0;this.trigger("invalid",this,c,b||{});return!1}});var s=g.Collection=function(a,b){b||(b={});b.model&&(this.model=b.model);void 0!==b.comparator&&(this.comparator=b.comparator);this.models=[];this._reset();this.initialize.apply(this,
arguments);a&&this.reset(a,f.extend({silent:!0},b))};f.extend(s.prototype,h,{model:r,initialize:function(){},toJSON:function(a){return this.map(function(b){return b.toJSON(a)})},sync:function(){return g.sync.apply(this,arguments)},add:function(a,b){a=f.isArray(a)?a.slice():[a];b||(b={});var c,d,e,g,p,j,l,k,h,m;l=[];k=b.at;h=this.comparator&&null==k&&!1!=b.sort;m=f.isString(this.comparator)?this.comparator:null;c=0;for(d=a.length;c<d;c++)(e=this._prepareModel(g=a[c],b))?(p=this.get(e))?b.merge&&(p.set(g===
e?e.attributes:g,b),h&&(!j&&p.hasChanged(m))&&(j=!0)):(l.push(e),e.on("all",this._onModelEvent,this),this._byId[e.cid]=e,null!=e.id&&(this._byId[e.id]=e)):this.trigger("invalid",this,g,b);l.length&&(h&&(j=!0),this.length+=l.length,null!=k?D.apply(this.models,[k,0].concat(l)):C.apply(this.models,l));j&&this.sort({silent:!0});if(b.silent)return this;c=0;for(d=l.length;c<d;c++)(e=l[c]).trigger("add",e,this,b);j&&this.trigger("sort",this,b);return this},remove:function(a,b){a=f.isArray(a)?a.slice():[a];
b||(b={});var c,d,e,g;c=0;for(d=a.length;c<d;c++)if(g=this.get(a[c]))delete this._byId[g.id],delete this._byId[g.cid],e=this.indexOf(g),this.models.splice(e,1),this.length--,b.silent||(b.index=e,g.trigger("remove",g,this,b)),this._removeReference(g);return this},push:function(a,b){a=this._prepareModel(a,b);this.add(a,f.extend({at:this.length},b));return a},pop:function(a){var b=this.at(this.length-1);this.remove(b,a);return b},unshift:function(a,b){a=this._prepareModel(a,b);this.add(a,f.extend({at:0},
b));return a},shift:function(a){var b=this.at(0);this.remove(b,a);return b},slice:function(a,b){return this.models.slice(a,b)},get:function(a){if(null!=a)return this._idAttr||(this._idAttr=this.model.prototype.idAttribute),this._byId[a.id||a.cid||a[this._idAttr]||a]},at:function(a){return this.models[a]},where:function(a){return f.isEmpty(a)?[]:this.filter(function(b){for(var c in a)if(a[c]!==b.get(c))return!1;return!0})},sort:function(a){if(!this.comparator)throw Error("Cannot sort a set without a comparator");
a||(a={});f.isString(this.comparator)||1===this.comparator.length?this.models=this.sortBy(this.comparator,this):this.models.sort(f.bind(this.comparator,this));a.silent||this.trigger("sort",this,a);return this},pluck:function(a){return f.invoke(this.models,"get",a)},update:function(a,b){b=f.extend({add:!0,merge:!0,remove:!0},b);b.parse&&(a=this.parse(a,b));var c,d,e,g,h=[],j=[],l={};f.isArray(a)||(a=a?[a]:[]);if(b.add&&!b.remove)return this.add(a,b);d=0;for(e=a.length;d<e;d++)c=a[d],g=this.get(c),
b.remove&&g&&(l[g.cid]=!0),(b.add&&!g||b.merge&&g)&&h.push(c);if(b.remove){d=0;for(e=this.models.length;d<e;d++)c=this.models[d],l[c.cid]||j.push(c)}j.length&&this.remove(j,b);h.length&&this.add(h,b);return this},reset:function(a,b){b||(b={});b.parse&&(a=this.parse(a,b));for(var c=0,d=this.models.length;c<d;c++)this._removeReference(this.models[c]);b.previousModels=this.models.slice();this._reset();a&&this.add(a,f.extend({silent:!0},b));b.silent||this.trigger("reset",this,b);return this},fetch:function(a){a=
a?f.clone(a):{};void 0===a.parse&&(a.parse=!0);var b=a.success;a.success=function(a,d,e){a[e.update?"update":"reset"](d,e);b&&b(a,d,e)};return this.sync("read",this,a)},create:function(a,b){b=b?f.clone(b):{};if(!(a=this._prepareModel(a,b)))return!1;b.wait||this.add(a,b);var c=this,d=b.success;b.success=function(a,b,f){f.wait&&c.add(a,f);d&&d(a,b,f)};a.save(null,b);return a},parse:function(a){return a},clone:function(){return new this.constructor(this.models)},_reset:function(){this.length=0;this.models.length=
0;this._byId={}},_prepareModel:function(a,b){if(a instanceof r)return a.collection||(a.collection=this),a;b||(b={});b.collection=this;var c=new this.model(a,b);return!c._validate(a,b)?!1:c},_removeReference:function(a){this===a.collection&&delete a.collection;a.off("all",this._onModelEvent,this)},_onModelEvent:function(a,b,c,d){("add"===a||"remove"===a)&&c!==this||("destroy"===a&&this.remove(b,d),b&&a==="change:"+b.idAttribute&&(delete this._byId[b.previous(b.idAttribute)],null!=b.id&&(this._byId[b.id]=
b)),this.trigger.apply(this,arguments))},sortedIndex:function(a,b,c){b||(b=this.comparator);var d=f.isFunction(b)?b:function(a){return a.get(b)};return f.sortedIndex(this.models,a,d,c)}});f.each("forEach each map collect reduce foldl inject reduceRight foldr find detect filter select reject every all some any include contains invoke max min toArray size first head take initial rest tail drop last without indexOf shuffle lastIndexOf isEmpty chain".split(" "),function(a){s.prototype[a]=function(){var b=
u.call(arguments);b.unshift(this.models);return f[a].apply(f,b)}});f.each(["groupBy","countBy","sortBy"],function(a){s.prototype[a]=function(b,c){var d=f.isFunction(b)?b:function(a){return a.get(b)};return f[a](this.models,d,c)}});var y=g.Router=function(a){a||(a={});a.routes&&(this.routes=a.routes);this._bindRoutes();this.initialize.apply(this,arguments)},E=/\((.*?)\)/g,F=/(\(\?)?:\w+/g,G=/\*\w+/g,H=/[\-{}\[\]+?.,\\\^$|#\s]/g;f.extend(y.prototype,h,{initialize:function(){},route:function(a,b,c){f.isRegExp(a)||
(a=this._routeToRegExp(a));c||(c=this[b]);g.history.route(a,f.bind(function(d){d=this._extractParameters(a,d);c&&c.apply(this,d);this.trigger.apply(this,["route:"+b].concat(d));this.trigger("route",b,d);g.history.trigger("route",this,b,d)},this));return this},navigate:function(a,b){g.history.navigate(a,b);return this},_bindRoutes:function(){if(this.routes)for(var a,b=f.keys(this.routes);null!=(a=b.pop());)this.route(a,this.routes[a])},_routeToRegExp:function(a){a=a.replace(H,"\\$&").replace(E,"(?:$1)?").replace(F,
function(a,c){return c?a:"([^/]+)"}).replace(G,"(.*?)");return RegExp("^"+a+"$")},_extractParameters:function(a,b){return a.exec(b).slice(1)}});var m=g.History=function(){this.handlers=[];f.bindAll(this,"checkUrl");"undefined"!==typeof window&&(this.location=window.location,this.history=window.history)},z=/^[#\/]|\s+$/g,I=/^\/+|\/+$/g,J=/msie [\w.]+/,K=/\/$/;m.started=!1;f.extend(m.prototype,h,{interval:50,getHash:function(a){return(a=(a||this).location.href.match(/#(.*)$/))?a[1]:""},getFragment:function(a,
b){if(null==a)if(this._hasPushState||!this._wantsHashChange||b){a=this.location.pathname;var c=this.root.replace(K,"");a.indexOf(c)||(a=a.substr(c.length))}else a=this.getHash();return a.replace(z,"")},start:function(a){if(m.started)throw Error("Backbone.history has already been started");m.started=!0;this.options=f.extend({},{root:"/"},this.options,a);this.root=this.options.root;this._wantsHashChange=!1!==this.options.hashChange;this._wantsPushState=!!this.options.pushState;this._hasPushState=!(!this.options.pushState||
!this.history||!this.history.pushState);a=this.getFragment();var b=document.documentMode,b=J.exec(navigator.userAgent.toLowerCase())&&(!b||7>=b);this.root=("/"+this.root+"/").replace(I,"/");b&&this._wantsHashChange&&(this.iframe=g.$('<iframe src="javascript:0" tabindex="-1" />').hide().appendTo("body")[0].contentWindow,this.navigate(a));if(this._hasPushState)g.$(window).on("popstate",this.checkUrl);else if(this._wantsHashChange&&"onhashchange"in window&&!b)g.$(window).on("hashchange",this.checkUrl);
else this._wantsHashChange&&(this._checkUrlInterval=setInterval(this.checkUrl,this.interval));this.fragment=a;a=this.location;b=a.pathname.replace(/[^\/]$/,"$&/")===this.root;if(this._wantsHashChange&&this._wantsPushState&&!this._hasPushState&&!b)return this.fragment=this.getFragment(null,!0),this.location.replace(this.root+this.location.search+"#"+this.fragment),!0;this._wantsPushState&&(this._hasPushState&&b&&a.hash)&&(this.fragment=this.getHash().replace(z,""),this.history.replaceState({},document.title,
this.root+this.fragment+a.search));if(!this.options.silent)return this.loadUrl()},stop:function(){g.$(window).off("popstate",this.checkUrl).off("hashchange",this.checkUrl);clearInterval(this._checkUrlInterval);m.started=!1},route:function(a,b){this.handlers.unshift({route:a,callback:b})},checkUrl:function(){var a=this.getFragment();a===this.fragment&&this.iframe&&(a=this.getFragment(this.getHash(this.iframe)));if(a===this.fragment)return!1;this.iframe&&this.navigate(a);this.loadUrl()||this.loadUrl(this.getHash())},
loadUrl:function(a){var b=this.fragment=this.getFragment(a);return f.any(this.handlers,function(a){if(a.route.test(b))return a.callback(b),!0})},navigate:function(a,b){if(!m.started)return!1;if(!b||!0===b)b={trigger:b};a=this.getFragment(a||"");if(this.fragment!==a){this.fragment=a;var c=this.root+a;if(this._hasPushState)this.history[b.replace?"replaceState":"pushState"]({},document.title,c);else if(this._wantsHashChange)this._updateHash(this.location,a,b.replace),this.iframe&&a!==this.getFragment(this.getHash(this.iframe))&&
(b.replace||this.iframe.document.open().close(),this._updateHash(this.iframe.location,a,b.replace));else return this.location.assign(c);b.trigger&&this.loadUrl(a)}},_updateHash:function(a,b,c){c?(c=a.href.replace(/(javascript:|#).*$/,""),a.replace(c+"#"+b)):a.hash="#"+b}});g.history=new m;var A=g.View=function(a){this.cid=f.uniqueId("view");this._configure(a||{});this._ensureElement();this.initialize.apply(this,arguments);this.delegateEvents()},L=/^(\S+)\s*(.*)$/,M="model collection el id attributes className tagName events".split(" ");
f.extend(A.prototype,h,{tagName:"div",$:function(a){return this.$el.find(a)},initialize:function(){},render:function(){return this},remove:function(){this.$el.remove();this.stopListening();return this},setElement:function(a,b){this.$el&&this.undelegateEvents();this.$el=a instanceof g.$?a:g.$(a);this.el=this.$el[0];!1!==b&&this.delegateEvents();return this},delegateEvents:function(a){if(a||(a=f.result(this,"events"))){this.undelegateEvents();for(var b in a){var c=a[b];f.isFunction(c)||(c=this[a[b]]);
if(!c)throw Error('Method "'+a[b]+'" does not exist');var d=b.match(L),e=d[1],d=d[2],c=f.bind(c,this),e=e+(".delegateEvents"+this.cid);if(""===d)this.$el.on(e,c);else this.$el.on(e,d,c)}}},undelegateEvents:function(){this.$el.off(".delegateEvents"+this.cid)},_configure:function(a){this.options&&(a=f.extend({},f.result(this,"options"),a));f.extend(this,f.pick(a,M));this.options=a},_ensureElement:function(){if(this.el)this.setElement(f.result(this,"el"),!1);else{var a=f.extend({},f.result(this,"attributes"));
this.id&&(a.id=f.result(this,"id"));this.className&&(a["class"]=f.result(this,"className"));a=g.$("<"+f.result(this,"tagName")+">").attr(a);this.setElement(a,!1)}}});var N={create:"POST",update:"PUT",patch:"PATCH","delete":"DELETE",read:"GET"};g.sync=function(a,b,c){var d=N[a];f.defaults(c||(c={}),{emulateHTTP:g.emulateHTTP,emulateJSON:g.emulateJSON});var e={type:d,dataType:"json"};c.url||(e.url=f.result(b,"url")||x());if(null==c.data&&b&&("create"===a||"update"===a||"patch"===a))e.contentType="application/json",
e.data=JSON.stringify(c.attrs||b.toJSON(c));c.emulateJSON&&(e.contentType="application/x-www-form-urlencoded",e.data=e.data?{model:e.data}:{});if(c.emulateHTTP&&("PUT"===d||"DELETE"===d||"PATCH"===d)){e.type="POST";c.emulateJSON&&(e.data._method=d);var h=c.beforeSend;c.beforeSend=function(a){a.setRequestHeader("X-HTTP-Method-Override",d);if(h)return h.apply(this,arguments)}}"GET"!==e.type&&!c.emulateJSON&&(e.processData=!1);var m=c.success;c.success=function(a){m&&m(b,a,c);b.trigger("sync",b,a,c)};
var j=c.error;c.error=function(a){j&&j(b,a,c);b.trigger("error",b,a,c)};a=c.xhr=g.ajax(f.extend(e,c));b.trigger("request",b,a,c);return a};g.ajax=function(){return g.$.ajax.apply(g.$,arguments)};r.extend=s.extend=y.extend=A.extend=m.extend=function(a,b){var c=this,d;d=a&&f.has(a,"constructor")?a.constructor:function(){return c.apply(this,arguments)};f.extend(d,c,b);var e=function(){this.constructor=d};e.prototype=c.prototype;d.prototype=new e;a&&f.extend(d.prototype,a);d.__super__=c.prototype;return d};
var x=function(){throw Error('A "url" property or function must be specified');}}).call(this);
/*1.0*/
// MarionetteJS (Backbone.Marionette)
// ----------------------------------
// v1.0.3
//
// Copyright (c)2013 Derick Bailey, Muted Solutions, LLC.
// Distributed under MIT license
//
// http://marionettejs.com



/*!
 * Includes BabySitter
 * https://github.com/marionettejs/backbone.babysitter/
 *
 * Includes Wreqr
 * https://github.com/marionettejs/backbone.wreqr/
 */


Backbone.ChildViewContainer=function(e,t){var i=function(e){this._views={},this._indexByModel={},this._indexByCollection={},this._indexByCustom={},this._updateLength(),this._addInitialViews(e)};t.extend(i.prototype,{add:function(e,t){var i=e.cid;this._views[i]=e,e.model&&(this._indexByModel[e.model.cid]=i),e.collection&&(this._indexByCollection[e.collection.cid]=i),t&&(this._indexByCustom[t]=i),this._updateLength()},findByModel:function(e){var t=this._indexByModel[e.cid];return this.findByCid(t)},findByCollection:function(e){var t=this._indexByCollection[e.cid];return this.findByCid(t)},findByCustom:function(e){var t=this._indexByCustom[e];return this.findByCid(t)},findByIndex:function(e){return t.values(this._views)[e]},findByCid:function(e){return this._views[e]},remove:function(e){var t=e.cid;e.model&&delete this._indexByModel[e.model.cid],e.collection&&delete this._indexByCollection[e.collection.cid];var i;for(var n in this._indexByCustom)if(this._indexByCustom.hasOwnProperty(n)&&this._indexByCustom[n]===t){i=n;break}i&&delete this._indexByCustom[i],delete this._views[t],this._updateLength()},call:function(e,t){t=Array.prototype.slice.call(arguments,1),this.apply(e,t)},apply:function(e,i){i=i||[],t.each(this._views,function(n){t.isFunction(n[e])&&n[e].apply(n,i)})},_updateLength:function(){this.length=t.size(this._views)},_addInitialViews:function(e){if(e){var t,i,n=e.length;for(i=0;n>i;i++)t=e[i],this.add(t)}}});var n=["forEach","each","map","find","detect","filter","select","reject","every","all","some","any","include","contains","invoke","toArray","first","initial","rest","last","without","isEmpty","pluck"];return t.each(n,function(e){i.prototype[e]=function(){var i=t.values(this._views),n=[i].concat(t.toArray(arguments));return t[e].apply(t,n)}}),i}(Backbone,_),Backbone.Wreqr=function(e,t,i){"use strict";var n={};return n.Handlers=function(e,t){var i=function(e){this.options=e,this._wreqrHandlers={},t.isFunction(this.initialize)&&this.initialize(e)};return i.extend=e.Model.extend,t.extend(i.prototype,e.Events,{setHandlers:function(e){t.each(e,function(e,i){var n=null;t.isObject(e)&&!t.isFunction(e)&&(n=e.context,e=e.callback),this.setHandler(i,e,n)},this)},setHandler:function(e,t,i){var n={callback:t,context:i};this._wreqrHandlers[e]=n,this.trigger("handler:add",e,t,i)},hasHandler:function(e){return!!this._wreqrHandlers[e]},getHandler:function(e){var t=this._wreqrHandlers[e];if(!t)throw Error("Handler not found for '"+e+"'");return function(){var e=Array.prototype.slice.apply(arguments);return t.callback.apply(t.context,e)}},removeHandler:function(e){delete this._wreqrHandlers[e]},removeAllHandlers:function(){this._wreqrHandlers={}}}),i}(e,i),n.CommandStorage=function(){var t=function(e){this.options=e,this._commands={},i.isFunction(this.initialize)&&this.initialize(e)};return i.extend(t.prototype,e.Events,{getCommands:function(e){var t=this._commands[e];return t||(t={command:e,instances:[]},this._commands[e]=t),t},addCommand:function(e,t){var i=this.getCommands(e);i.instances.push(t)},clearCommands:function(e){var t=this.getCommands(e);t.instances=[]}}),t}(),n.Commands=function(e){return e.Handlers.extend({storageType:e.CommandStorage,constructor:function(t){this.options=t||{},this._initializeStorage(this.options),this.on("handler:add",this._executeCommands,this);var i=Array.prototype.slice.call(arguments);e.Handlers.prototype.constructor.apply(this,i)},execute:function(e,t){e=arguments[0],t=Array.prototype.slice.call(arguments,1),this.hasHandler(e)?this.getHandler(e).apply(this,t):this.storage.addCommand(e,t)},_executeCommands:function(e,t,n){var r=this.storage.getCommands(e);i.each(r.instances,function(e){t.apply(n,e)}),this.storage.clearCommands(e)},_initializeStorage:function(e){var t,n=e.storageType||this.storageType;t=i.isFunction(n)?new n:n,this.storage=t}})}(n),n.RequestResponse=function(e){return e.Handlers.extend({request:function(){var e=arguments[0],t=Array.prototype.slice.call(arguments,1);return this.getHandler(e).apply(this,t)}})}(n),n.EventAggregator=function(e,t){var i=function(){};return i.extend=e.Model.extend,t.extend(i.prototype,e.Events),i}(e,i),n}(Backbone,Backbone.Marionette,_);var Marionette=function(e,t,i){"use strict";function n(e){return s.call(e)}function r(e,t){var i=Error(e);throw i.name=t||"Error",i}var o={};t.Marionette=o,o.$=t.$;var s=Array.prototype.slice;return o.extend=t.Model.extend,o.getOption=function(e,t){if(e&&t){var i;return i=e.options&&t in e.options&&void 0!==e.options[t]?e.options[t]:e[t]}},o.triggerMethod=function(){function e(e,t,i){return i.toUpperCase()}var t=/(^|:)(\w)/gi,n=function(n){var r="on"+n.replace(t,e),o=this[r];return this.trigger.apply(this,arguments),i.isFunction(o)?o.apply(this,i.tail(arguments)):void 0};return n}(),o.MonitorDOMRefresh=function(){function e(e){e._isShown=!0,n(e)}function t(e){e._isRendered=!0,n(e)}function n(e){e._isShown&&e._isRendered&&i.isFunction(e.triggerMethod)&&e.triggerMethod("dom:refresh")}return function(i){i.listenTo(i,"show",function(){e(i)}),i.listenTo(i,"render",function(){t(i)})}}(),function(e){function t(e,t,n,o){var s=o.split(/\s+/);i.each(s,function(i){var o=e[i];o||r("Method '"+i+"' was configured as an event handler, but does not exist."),e.listenTo(t,n,o,e)})}function n(e,t,i,n){e.listenTo(t,i,n,e)}function o(e,t,n,r){var o=r.split(/\s+/);i.each(o,function(i){var r=e[i];e.stopListening(t,n,r,e)})}function s(e,t,i,n){e.stopListening(t,i,n,e)}function h(e,t,n,r,o){t&&n&&(i.isFunction(n)&&(n=n.call(e)),i.each(n,function(n,s){i.isFunction(n)?r(e,t,s,n):o(e,t,s,n)}))}e.bindEntityEvents=function(e,i,r){h(e,i,r,n,t)},e.unbindEntityEvents=function(e,t,i){h(e,t,i,s,o)}}(o),o.Callbacks=function(){this._deferred=o.$.Deferred(),this._callbacks=[]},i.extend(o.Callbacks.prototype,{add:function(e,t){this._callbacks.push({cb:e,ctx:t}),this._deferred.done(function(i,n){t&&(i=t),e.call(i,n)})},run:function(e,t){this._deferred.resolve(t,e)},reset:function(){var e=this._callbacks;this._deferred=o.$.Deferred(),this._callbacks=[],i.each(e,function(e){this.add(e.cb,e.ctx)},this)}}),o.Controller=function(e){this.triggerMethod=o.triggerMethod,this.options=e||{},i.isFunction(this.initialize)&&this.initialize(this.options)},o.Controller.extend=o.extend,i.extend(o.Controller.prototype,t.Events,{close:function(){this.stopListening(),this.triggerMethod("close"),this.unbind()}}),o.Region=function(e){if(this.options=e||{},this.el=o.getOption(this,"el"),!this.el){var t=Error("An 'el' must be specified for a region.");throw t.name="NoElError",t}if(this.initialize){var i=Array.prototype.slice.apply(arguments);this.initialize.apply(this,i)}},i.extend(o.Region,{buildRegion:function(e,t){var n="string"==typeof e,r="string"==typeof e.selector,o=e.regionType===void 0,s="function"==typeof e;if(!s&&!n&&!r)throw Error("Region must be specified as a Region type, a selector string or an object with selector property");var h,a;n&&(h=e),e.selector&&(h=e.selector),s&&(a=e),!s&&o&&(a=t),e.regionType&&(a=e.regionType);var l=new a({el:h});return e.parentEl&&(l.getEl=function(t){var n=e.parentEl;return i.isFunction(n)&&(n=n()),n.find(t)}),l}}),i.extend(o.Region.prototype,t.Events,{show:function(e){this.ensureEl();var t=e.isClosed||i.isUndefined(e.$el),n=e!==this.currentView;n&&this.close(),e.render(),(n||t)&&this.open(e),this.currentView=e,o.triggerMethod.call(this,"show",e),o.triggerMethod.call(e,"show")},ensureEl:function(){this.$el&&0!==this.$el.length||(this.$el=this.getEl(this.el))},getEl:function(e){return o.$(e)},open:function(e){this.$el.empty().append(e.el)},close:function(){var e=this.currentView;e&&!e.isClosed&&(e.close?e.close():e.remove&&e.remove(),o.triggerMethod.call(this,"close"),delete this.currentView)},attachView:function(e){this.currentView=e},reset:function(){this.close(),delete this.$el}}),o.Region.extend=o.extend,o.RegionManager=function(e){var t=e.Controller.extend({constructor:function(t){this._regions={},e.Controller.prototype.constructor.call(this,t)},addRegions:function(e,t){var n={};return i.each(e,function(e,r){"string"==typeof e&&(e={selector:e}),e.selector&&(e=i.defaults({},e,t));var o=this.addRegion(r,e);n[r]=o},this),n},addRegion:function(t,n){var r,o=i.isObject(n),s=i.isString(n),h=!!n.selector;return r=s||o&&h?e.Region.buildRegion(n,e.Region):i.isFunction(n)?e.Region.buildRegion(n,e.Region):n,this._store(t,r),this.triggerMethod("region:add",t,r),r},get:function(e){return this._regions[e]},removeRegion:function(e){var t=this._regions[e];this._remove(e,t)},removeRegions:function(){i.each(this._regions,function(e,t){this._remove(t,e)},this)},closeRegions:function(){i.each(this._regions,function(e){e.close()},this)},close:function(){this.removeRegions();var t=Array.prototype.slice.call(arguments);e.Controller.prototype.close.apply(this,t)},_store:function(e,t){this._regions[e]=t,this._setLength()},_remove:function(e,t){t.close(),delete this._regions[e],this._setLength(),this.triggerMethod("region:remove",e,t)},_setLength:function(){this.length=i.size(this._regions)}}),n=["forEach","each","map","find","detect","filter","select","reject","every","all","some","any","include","contains","invoke","toArray","first","initial","rest","last","without","isEmpty","pluck"];return i.each(n,function(e){t.prototype[e]=function(){var t=i.values(this._regions),n=[t].concat(i.toArray(arguments));return i[e].apply(i,n)}}),t}(o),o.TemplateCache=function(e){this.templateId=e},i.extend(o.TemplateCache,{templateCaches:{},get:function(e){var t=this.templateCaches[e];return t||(t=new o.TemplateCache(e),this.templateCaches[e]=t),t.load()},clear:function(){var e,t=n(arguments),i=t.length;if(i>0)for(e=0;i>e;e++)delete this.templateCaches[t[e]];else this.templateCaches={}}}),i.extend(o.TemplateCache.prototype,{load:function(){if(this.compiledTemplate)return this.compiledTemplate;var e=this.loadTemplate(this.templateId);return this.compiledTemplate=this.compileTemplate(e),this.compiledTemplate},loadTemplate:function(e){var t=o.$(e).html();return t&&0!==t.length||r("Could not find template: '"+e+"'","NoTemplateError"),t},compileTemplate:function(e){return i.template(e)}}),o.Renderer={render:function(e,t){if(!e){var i=Error("Cannot render the template since it's false, null or undefined.");throw i.name="TemplateNotFoundError",i}var n;return n="function"==typeof e?e:o.TemplateCache.get(e),n(t)}},o.View=t.View.extend({constructor:function(){i.bindAll(this,"render");var e=Array.prototype.slice.apply(arguments);t.View.prototype.constructor.apply(this,e),o.MonitorDOMRefresh(this),this.listenTo(this,"show",this.onShowCalled,this)},triggerMethod:o.triggerMethod,getTemplate:function(){return o.getOption(this,"template")},mixinTemplateHelpers:function(e){e=e||{};var t=this.templateHelpers;return i.isFunction(t)&&(t=t.call(this)),i.extend(e,t)},configureTriggers:function(){if(this.triggers){var e={},t=i.result(this,"triggers");return i.each(t,function(t,i){e[i]=function(e){e&&e.preventDefault&&e.preventDefault(),e&&e.stopPropagation&&e.stopPropagation();var i={view:this,model:this.model,collection:this.collection};this.triggerMethod(t,i)}},this),e}},delegateEvents:function(e){this._delegateDOMEvents(e),o.bindEntityEvents(this,this.model,o.getOption(this,"modelEvents")),o.bindEntityEvents(this,this.collection,o.getOption(this,"collectionEvents"))},_delegateDOMEvents:function(e){e=e||this.events,i.isFunction(e)&&(e=e.call(this));var n={},r=this.configureTriggers();i.extend(n,e,r),t.View.prototype.delegateEvents.call(this,n)},undelegateEvents:function(){var e=Array.prototype.slice.call(arguments);t.View.prototype.undelegateEvents.apply(this,e),o.unbindEntityEvents(this,this.model,o.getOption(this,"modelEvents")),o.unbindEntityEvents(this,this.collection,o.getOption(this,"collectionEvents"))},onShowCalled:function(){},close:function(){if(!this.isClosed){var e=this.triggerMethod("before:close");e!==!1&&(this.isClosed=!0,this.triggerMethod("close"),this.unbindUIElements(),this.remove())}},bindUIElements:function(){if(this.ui){this._uiBindings||(this._uiBindings=this.ui);var e=i.result(this,"_uiBindings");this.ui={},i.each(i.keys(e),function(t){var i=e[t];this.ui[t]=this.$(i)},this)}},unbindUIElements:function(){this.ui&&(i.each(this.ui,function(e,t){delete this.ui[t]},this),this.ui=this._uiBindings,delete this._uiBindings)}}),o.ItemView=o.View.extend({serializeData:function(){var e={};return this.model?e=this.model.toJSON():this.collection&&(e={items:this.collection.toJSON()}),e},render:function(){this.isClosed=!1,this.triggerMethod("before:render",this),this.triggerMethod("item:before:render",this);var e=this.serializeData();e=this.mixinTemplateHelpers(e);var t=this.getTemplate(),i=o.Renderer.render(t,e);return this.$el.html(i),this.bindUIElements(),this.triggerMethod("render",this),this.triggerMethod("item:rendered",this),this},close:function(){this.isClosed||(this.triggerMethod("item:before:close"),o.View.prototype.close.apply(this,n(arguments)),this.triggerMethod("item:closed"))}}),o.CollectionView=o.View.extend({itemViewEventPrefix:"itemview",constructor:function(){this._initChildViewStorage(),o.View.prototype.constructor.apply(this,n(arguments)),this._initialEvents()},_initialEvents:function(){this.collection&&(this.listenTo(this.collection,"add",this.addChildView,this),this.listenTo(this.collection,"remove",this.removeItemView,this),this.listenTo(this.collection,"reset",this.render,this))},addChildView:function(e){this.closeEmptyView();var t=this.getItemView(e),i=this.collection.indexOf(e);this.addItemView(e,t,i)},onShowCalled:function(){this.children.each(function(e){o.triggerMethod.call(e,"show")})},triggerBeforeRender:function(){this.triggerMethod("before:render",this),this.triggerMethod("collection:before:render",this)},triggerRendered:function(){this.triggerMethod("render",this),this.triggerMethod("collection:rendered",this)},render:function(){return this.isClosed=!1,this.triggerBeforeRender(),this._renderChildren(),this.triggerRendered(),this},_renderChildren:function(){this.closeEmptyView(),this.closeChildren(),this.collection&&this.collection.length>0?this.showCollection():this.showEmptyView()},showCollection:function(){var e;this.collection.each(function(t,i){e=this.getItemView(t),this.addItemView(t,e,i)},this)},showEmptyView:function(){var e=o.getOption(this,"emptyView");if(e&&!this._showingEmptyView){this._showingEmptyView=!0;var i=new t.Model;this.addItemView(i,e,0)}},closeEmptyView:function(){this._showingEmptyView&&(this.closeChildren(),delete this._showingEmptyView)},getItemView:function(){var e=o.getOption(this,"itemView");return e||r("An `itemView` must be specified","NoItemViewError"),e},addItemView:function(e,t,n){var r=o.getOption(this,"itemViewOptions");i.isFunction(r)&&(r=r.call(this,e,n));var s=this.buildItemView(e,t,r);this.addChildViewEventForwarding(s),this.triggerMethod("before:item:added",s),this.children.add(s),this.renderItemView(s,n),this._isShown&&o.triggerMethod.call(s,"show"),this.triggerMethod("after:item:added",s)},addChildViewEventForwarding:function(e){var t=o.getOption(this,"itemViewEventPrefix");this.listenTo(e,"all",function(){var i=n(arguments);i[0]=t+":"+i[0],i.splice(1,0,e),o.triggerMethod.apply(this,i)},this)},renderItemView:function(e,t){e.render(),this.appendHtml(this,e,t)},buildItemView:function(e,t,n){var r=i.extend({model:e},n);return new t(r)},removeItemView:function(e){var t=this.children.findByModel(e);this.removeChildView(t),this.checkEmpty()},removeChildView:function(e){e&&(this.stopListening(e),e.close?e.close():e.remove&&e.remove(),this.children.remove(e)),this.triggerMethod("item:removed",e)},checkEmpty:function(){this.collection&&0!==this.collection.length||this.showEmptyView()},appendHtml:function(e,t){e.$el.append(t.el)},_initChildViewStorage:function(){this.children=new t.ChildViewContainer},close:function(){this.isClosed||(this.triggerMethod("collection:before:close"),this.closeChildren(),this.triggerMethod("collection:closed"),o.View.prototype.close.apply(this,n(arguments)))},closeChildren:function(){this.children.each(function(e){this.removeChildView(e)},this),this.checkEmpty()}}),o.CompositeView=o.CollectionView.extend({_initialEvents:function(){this.collection&&(this.listenTo(this.collection,"add",this.addChildView,this),this.listenTo(this.collection,"remove",this.removeItemView,this),this.listenTo(this.collection,"reset",this._renderChildren,this))},getItemView:function(){var e=o.getOption(this,"itemView")||this.constructor;return e||r("An `itemView` must be specified","NoItemViewError"),e},serializeData:function(){var e={};return this.model&&(e=this.model.toJSON()),e},render:function(){this.isRendered=!0,this.isClosed=!1,this.resetItemViewContainer(),this.triggerBeforeRender();var e=this.renderModel();return this.$el.html(e),this.bindUIElements(),this.triggerMethod("composite:model:rendered"),this._renderChildren(),this.triggerMethod("composite:rendered"),this.triggerRendered(),this},_renderChildren:function(){this.isRendered&&(o.CollectionView.prototype._renderChildren.call(this),this.triggerMethod("composite:collection:rendered"))},renderModel:function(){var e={};e=this.serializeData(),e=this.mixinTemplateHelpers(e);var t=this.getTemplate();return o.Renderer.render(t,e)},appendHtml:function(e,t){var i=this.getItemViewContainer(e);i.append(t.el)},getItemViewContainer:function(e){if("$itemViewContainer"in e)return e.$itemViewContainer;var t;if(e.itemViewContainer){var n=i.result(e,"itemViewContainer");t=e.$(n),0>=t.length&&r("The specified `itemViewContainer` was not found: "+e.itemViewContainer,"ItemViewContainerMissingError")}else t=e.$el;return e.$itemViewContainer=t,t},resetItemViewContainer:function(){this.$itemViewContainer&&delete this.$itemViewContainer}}),o.Layout=o.ItemView.extend({regionType:o.Region,constructor:function(e){e=e||{},this._firstRender=!0,this._initializeRegions(e),o.ItemView.call(this,e)},render:function(){this._firstRender?this._firstRender=!1:this.isClosed?this._initializeRegions():this._reInitializeRegions();var e=Array.prototype.slice.apply(arguments),t=o.ItemView.prototype.render.apply(this,e);return t},close:function(){if(!this.isClosed){this.regionManager.close();var e=Array.prototype.slice.apply(arguments);o.ItemView.prototype.close.apply(this,e)}},addRegion:function(e,t){var i={};return i[e]=t,this.addRegions(i)[e]},addRegions:function(e){return this.regions=i.extend(this.regions||{},e),this._buildRegions(e)},removeRegion:function(e){return this.regionManager.removeRegion(e)},_buildRegions:function(e){var t=this,i={parentEl:function(){return t.$el}};return this.regionManager.addRegions(e,i)},_initializeRegions:function(e){var t;this._initRegionManager(),t=i.isFunction(this.regions)?this.regions(e):this.regions||{},this.addRegions(t)},_reInitializeRegions:function(){this.regionManager.closeRegions(),this.regionManager.each(function(e){e.reset()})},_initRegionManager:function(){this.regionManager=new o.RegionManager,this.listenTo(this.regionManager,"region:add",function(e,t){this[e]=t,this.trigger("region:add",e,t)}),this.listenTo(this.regionManager,"region:remove",function(e,t){delete this[e],this.trigger("region:remove",e,t)})}}),o.AppRouter=t.Router.extend({constructor:function(e){if(t.Router.prototype.constructor.apply(this,n(arguments)),this.options=e,this.appRoutes){var i=o.getOption(this,"controller");this.processAppRoutes(i,this.appRoutes)}},processAppRoutes:function(e,t){var n=i.keys(t).reverse();i.each(n,function(n){var r=t[n],o=e[r];if(!o)throw Error("Method '"+r+"' was not found on the controller");this.route(n,r,i.bind(o,e))},this)}}),o.Application=function(e){this._initRegionManager(),this._initCallbacks=new o.Callbacks,this.vent=new t.Wreqr.EventAggregator,this.commands=new t.Wreqr.Commands,this.reqres=new t.Wreqr.RequestResponse,this.submodules={},i.extend(this,e),this.triggerMethod=o.triggerMethod},i.extend(o.Application.prototype,t.Events,{execute:function(){var e=Array.prototype.slice.apply(arguments);this.commands.execute.apply(this.commands,e)},request:function(){var e=Array.prototype.slice.apply(arguments);return this.reqres.request.apply(this.reqres,e)},addInitializer:function(e){this._initCallbacks.add(e)},start:function(e){this.triggerMethod("initialize:before",e),this._initCallbacks.run(e,this),this.triggerMethod("initialize:after",e),this.triggerMethod("start",e)},addRegions:function(e){return this._regionManager.addRegions(e)},removeRegion:function(e){this._regionManager.removeRegion(e)},module:function(){var e=n(arguments);return e.unshift(this),o.Module.create.apply(o.Module,e)},_initRegionManager:function(){this._regionManager=new o.RegionManager,this.listenTo(this._regionManager,"region:add",function(e,t){this[e]=t}),this.listenTo(this._regionManager,"region:remove",function(e){delete this[e]})}}),o.Application.extend=o.extend,o.Module=function(e,t){this.moduleName=e,this.submodules={},this._setupInitializersAndFinalizers(),this.app=t,this.startWithParent=!0,this.triggerMethod=o.triggerMethod},i.extend(o.Module.prototype,t.Events,{addInitializer:function(e){this._initializerCallbacks.add(e)},addFinalizer:function(e){this._finalizerCallbacks.add(e)},start:function(e){this._isInitialized||(i.each(this.submodules,function(t){t.startWithParent&&t.start(e)}),this.triggerMethod("before:start",e),this._initializerCallbacks.run(e,this),this._isInitialized=!0,this.triggerMethod("start",e))},stop:function(){this._isInitialized&&(this._isInitialized=!1,o.triggerMethod.call(this,"before:stop"),i.each(this.submodules,function(e){e.stop()}),this._finalizerCallbacks.run(void 0,this),this._initializerCallbacks.reset(),this._finalizerCallbacks.reset(),o.triggerMethod.call(this,"stop"))},addDefinition:function(e,t){this._runModuleDefinition(e,t)},_runModuleDefinition:function(e,n){if(e){var r=i.flatten([this,this.app,t,o,o.$,i,n]);e.apply(this,r)}},_setupInitializersAndFinalizers:function(){this._initializerCallbacks=new o.Callbacks,this._finalizerCallbacks=new o.Callbacks}}),i.extend(o.Module,{create:function(e,t,r){var o=e,s=n(arguments);s.splice(0,3),t=t.split(".");var h=t.length,a=[];return a[h-1]=r,i.each(t,function(t,i){var n=o;o=this._getModule(n,t,e),this._addModuleDefinition(n,o,a[i],s)},this),o},_getModule:function(e,t,i){var n=e[t];return n||(n=new o.Module(t,i),e[t]=n,e.submodules[t]=n),n},_addModuleDefinition:function(e,t,n,r){var o,s;i.isFunction(n)?(o=n,s=!0):i.isObject(n)?(o=n.define,s=n.startWithParent):s=!0,o&&t.addDefinition(o,r),t.startWithParent=t.startWithParent&&s,t.startWithParent&&!t.startWithParentIsConfigured&&(t.startWithParentIsConfigured=!0,e.addInitializer(function(e){t.startWithParent&&t.start(e)}))}}),o}(this,Backbone,_);
//@ sourceMappingURL=backbone.marionette.map
;
/*1.0*/
/**
 * Backbone-relational.js 0.7.1
 * (c) 2011-2013 Paul Uithol and contributors (https://github.com/PaulUithol/Backbone-relational/graphs/contributors)
 * 
 * Backbone-relational may be freely distributed under the MIT license; see the accompanying LICENSE.txt.
 * For details and documentation: https://github.com/PaulUithol/Backbone-relational.
 * Depends on Backbone (and thus on Underscore as well): https://github.com/documentcloud/backbone.
 */

(function(e){"use strict";var t,n,r;if(typeof window==="undefined"){t=require("underscore");n=require("backbone");r=module.exports=n}else{t=window._;n=window.Backbone;r=window}n.Relational={showWarnings:true};n.Semaphore={_permitsAvailable:null,_permitsUsed:0,acquire:function(){if(this._permitsAvailable&&this._permitsUsed>=this._permitsAvailable){throw new Error("Max permits acquired")}else{this._permitsUsed++}},release:function(){if(this._permitsUsed===0){throw new Error("All permits released")}else{this._permitsUsed--}},isLocked:function(){return this._permitsUsed>0},setAvailablePermits:function(e){if(this._permitsUsed>e){throw new Error("Available permits cannot be less than used permits")}this._permitsAvailable=e}};n.BlockingQueue=function(){this._queue=[]};t.extend(n.BlockingQueue.prototype,n.Semaphore,{_queue:null,add:function(e){if(this.isBlocked()){this._queue.push(e)}else{e()}},process:function(){while(this._queue&&this._queue.length){this._queue.shift()()}},block:function(){this.acquire()},unblock:function(){this.release();if(!this.isBlocked()){this.process()}},isBlocked:function(){return this.isLocked()}});n.Relational.eventQueue=new n.BlockingQueue;n.Store=function(){this._collections=[];this._reverseRelations=[];this._subModels=[];this._modelScopes=[r]};t.extend(n.Store.prototype,n.Events,{addModelScope:function(e){this._modelScopes.push(e)},addSubModels:function(e,t){this._subModels.push({superModelType:t,subModels:e})},setupSuperModel:function(e){t.find(this._subModels||[],function(n){return t.find(n.subModels||[],function(t,r){var i=this.getObjectByName(t);if(e===i){n.superModelType._subModels[r]=e;e._superModel=n.superModelType;e._subModelTypeValue=r;e._subModelTypeAttribute=n.superModelType.prototype.subModelTypeAttribute;return true}},this)},this)},addReverseRelation:function(e){var n=t.any(this._reverseRelations||[],function(n){return t.all(e||[],function(e,t){return e===n[t]})});if(!n&&e.model&&e.type){this._reverseRelations.push(e);var r=function(e,n){if(!e.prototype.relations){e.prototype.relations=[]}e.prototype.relations.push(n);t.each(e._subModels||[],function(e){r(e,n)},this)};r(e.model,e);this.retroFitRelation(e)}},retroFitRelation:function(e){var t=this.getCollection(e.model);t.each(function(t){if(!(t instanceof e.model)){return}new e.type(t,e)},this)},getCollection:function(e){if(e instanceof n.RelationalModel){e=e.constructor}var r=e;while(r._superModel){r=r._superModel}var i=t.detect(this._collections,function(e){return e.model===r});if(!i){i=this._createCollection(r)}return i},getObjectByName:function(n){var r=n.split("."),i=null;t.find(this._modelScopes||[],function(n){i=t.reduce(r||[],function(t,n){return t?t[n]:e},n);if(i&&i!==n){return true}},this);return i},_createCollection:function(e){var t;if(e instanceof n.RelationalModel){e=e.constructor}if(e.prototype instanceof n.RelationalModel){t=new n.Collection;t.model=e;this._collections.push(t)}return t},resolveIdForItem:function(e,r){var i=t.isString(r)||t.isNumber(r)?r:null;if(i===null){if(r instanceof n.RelationalModel){i=r.id}else if(t.isObject(r)){i=r[e.prototype.idAttribute]}}if(!i&&i!==0){i=null}return i},find:function(e,t){var n=this.resolveIdForItem(e,t);var r=this.getCollection(e);if(r){var i=r.get(n);if(i instanceof e){return i}}return null},register:function(e){var t=this.getCollection(e);if(t){if(t.get(e)){if(n.Relational.showWarnings&&typeof console!=="undefined"){console.warn("Duplicate id! Old RelationalModel:%o, New RelationalModel:%o",t.get(e),e)}throw new Error("Cannot instantiate more than one Backbone.RelationalModel with the same id per type!")}var r=e.collection;t.add(e);e.bind("destroy",this.unregister,this);e.collection=r}},update:function(e){var t=this.getCollection(e);t._onModelEvent("change:"+e.idAttribute,e,t)},unregister:function(e){e.unbind("destroy",this.unregister);var t=this.getCollection(e);t&&t.remove(e)}});n.Relational.store=new n.Store;n.Relation=function(e,r){this.instance=e;r=t.isObject(r)?r:{};this.reverseRelation=t.defaults(r.reverseRelation||{},this.options.reverseRelation);this.reverseRelation.type=!t.isString(this.reverseRelation.type)?this.reverseRelation.type:n[this.reverseRelation.type]||n.Relational.store.getObjectByName(this.reverseRelation.type);this.model=r.model||this.instance.constructor;this.options=t.defaults(r,this.options,n.Relation.prototype.options);this.key=this.options.key;this.keySource=this.options.keySource||this.key;this.keyDestination=this.options.keyDestination||this.keySource||this.key;this.relatedModel=this.options.relatedModel;if(t.isString(this.relatedModel)){this.relatedModel=n.Relational.store.getObjectByName(this.relatedModel)}if(!this.checkPreconditions()){return}if(e){var i=this.keySource;if(i!==this.key&&typeof this.instance.get(this.key)==="object"){i=this.key}this.keyContents=this.instance.get(i);if(this.keySource!==this.key){this.instance.unset(this.keySource,{silent:true})}this.instance._relations.push(this)}if(!this.options.isAutoRelation&&this.reverseRelation.type&&this.reverseRelation.key){n.Relational.store.addReverseRelation(t.defaults({isAutoRelation:true,model:this.relatedModel,relatedModel:this.model,reverseRelation:this.options},this.reverseRelation))}t.bindAll(this,"_modelRemovedFromCollection","_relatedModelAdded","_relatedModelRemoved");if(e){this.initialize();if(r.autoFetch){this.instance.fetchRelated(r.key,t.isObject(r.autoFetch)?r.autoFetch:{})}n.Relational.store.getCollection(this.instance).bind("relational:remove",this._modelRemovedFromCollection);n.Relational.store.getCollection(this.relatedModel).bind("relational:add",this._relatedModelAdded).bind("relational:remove",this._relatedModelRemoved)}};n.Relation.extend=n.Model.extend;t.extend(n.Relation.prototype,n.Events,n.Semaphore,{options:{createModels:true,includeInJSON:true,isAutoRelation:false,autoFetch:false},instance:null,key:null,keyContents:null,relatedModel:null,reverseRelation:null,related:null,_relatedModelAdded:function(e,t,n){var r=this;e.queue(function(){r.tryAddRelated(e,n)})},_relatedModelRemoved:function(e,t,n){this.removeRelated(e,n)},_modelRemovedFromCollection:function(e){if(e===this.instance){this.destroy()}},checkPreconditions:function(){var e=this.instance,r=this.key,i=this.model,s=this.relatedModel,o=n.Relational.showWarnings&&typeof console!=="undefined";if(!i||!r||!s){o&&console.warn("Relation=%o; no model, key or relatedModel (%o, %o, %o)",this,i,r,s);return false}if(!(i.prototype instanceof n.RelationalModel)){o&&console.warn("Relation=%o; model does not inherit from Backbone.RelationalModel (%o)",this,e);return false}if(!(s.prototype instanceof n.RelationalModel)){o&&console.warn("Relation=%o; relatedModel does not inherit from Backbone.RelationalModel (%o)",this,s);return false}if(this instanceof n.HasMany&&this.reverseRelation.type===n.HasMany){o&&console.warn("Relation=%o; relation is a HasMany, and the reverseRelation is HasMany as well.",this);return false}if(e&&e._relations.length){var u=t.any(e._relations||[],function(e){var t=this.reverseRelation.key&&e.reverseRelation.key;return e.relatedModel===s&&e.key===r&&(!t||this.reverseRelation.key===e.reverseRelation.key)},this);if(u){o&&console.warn("Relation=%o between instance=%o.%s and relatedModel=%o.%s already exists",this,e,r,s,this.reverseRelation.key);return false}}return true},setRelated:function(e,t){this.related=e;this.instance.acquire();this.instance.attributes[this.key]=e;this.instance.release()},_isReverseRelation:function(e){if(e.instance instanceof this.relatedModel&&this.reverseRelation.key===e.key&&this.key===e.reverseRelation.key){return true}return false},getReverseRelations:function(e){var n=[];var r=!t.isUndefined(e)?[e]:this.related&&(this.related.models||[this.related]);t.each(r||[],function(e){t.each(e.getRelations()||[],function(e){if(this._isReverseRelation(e)){n.push(e)}},this)},this);return n},sanitizeOptions:function(e){e=e?t.clone(e):{};if(e.silent){e.silentChange=true;delete e.silent}return e},unsanitizeOptions:function(e){e=e?t.clone(e):{};if(e.silentChange){e.silent=true;delete e.silentChange}return e},destroy:function(){n.Relational.store.getCollection(this.instance).unbind("relational:remove",this._modelRemovedFromCollection);n.Relational.store.getCollection(this.relatedModel).unbind("relational:add",this._relatedModelAdded).unbind("relational:remove",this._relatedModelRemoved);t.each(this.getReverseRelations()||[],function(e){e.removeRelated(this.instance)},this)}});n.HasOne=n.Relation.extend({options:{reverseRelation:{type:"HasMany"}},initialize:function(){t.bindAll(this,"onChange");this.instance.bind("relational:change:"+this.key,this.onChange);var e=this.findRelated({silent:true});this.setRelated(e);t.each(this.getReverseRelations()||[],function(e){e.addRelated(this.instance)},this)},findRelated:function(e){var t=this.keyContents;var n=null;if(t instanceof this.relatedModel){n=t}else if(t||t===0){n=this.relatedModel.findOrCreate(t,{create:this.options.createModels})}return n},onChange:function(e,r,i){if(this.isLocked()){return}this.acquire();i=this.sanitizeOptions(i);var s=t.isUndefined(i._related);var o=s?this.related:i._related;if(s){this.keyContents=r;if(r instanceof this.relatedModel){this.related=r}else if(r){var u=this.findRelated(i);this.setRelated(u)}else{this.setRelated(null)}}if(o&&this.related!==o){t.each(this.getReverseRelations(o)||[],function(e){e.removeRelated(this.instance,i)},this)}t.each(this.getReverseRelations()||[],function(e){e.addRelated(this.instance,i)},this);if(!i.silentChange&&this.related!==o){var a=this;n.Relational.eventQueue.add(function(){a.instance.trigger("update:"+a.key,a.instance,a.related,i)})}this.release()},tryAddRelated:function(e,r){if(this.related){return}r=this.sanitizeOptions(r);var i=this.keyContents;if(i||i===0){var s=n.Relational.store.resolveIdForItem(this.relatedModel,i);if(!t.isNull(s)&&e.id===s){this.addRelated(e,r)}}},addRelated:function(e,t){if(e!==this.related){var n=this.related||null;this.setRelated(e);this.onChange(this.instance,e,{_related:n})}},removeRelated:function(e,t){if(!this.related){return}if(e===this.related){var n=this.related||null;this.setRelated(null);this.onChange(this.instance,e,{_related:n})}}});n.HasMany=n.Relation.extend({collectionType:null,options:{reverseRelation:{type:"HasOne"},collectionType:n.Collection,collectionKey:true,collectionOptions:{}},initialize:function(){t.bindAll(this,"onChange","handleAddition","handleRemoval","handleReset");this.instance.bind("relational:change:"+this.key,this.onChange);this.collectionType=this.options.collectionType;if(t.isString(this.collectionType)){this.collectionType=n.Relational.store.getObjectByName(this.collectionType)}if(!this.collectionType.prototype instanceof n.Collection){throw new Error("collectionType must inherit from Backbone.Collection")}if(this.keyContents instanceof n.Collection){this.setRelated(this._prepareCollection(this.keyContents))}else{this.setRelated(this._prepareCollection())}this.findRelated({silent:true})},_getCollectionOptions:function(){return t.isFunction(this.options.collectionOptions)?this.options.collectionOptions(this.instance):this.options.collectionOptions},_prepareCollection:function(e){if(this.related){this.related.unbind("relational:add",this.handleAddition).unbind("relational:remove",this.handleRemoval).unbind("relational:reset",this.handleReset)}if(!e||!(e instanceof n.Collection)){e=new this.collectionType([],this._getCollectionOptions())}e.model=this.relatedModel;if(this.options.collectionKey){var t=this.options.collectionKey===true?this.options.reverseRelation.key:this.options.collectionKey;if(e[t]&&e[t]!==this.instance){if(n.Relational.showWarnings&&typeof console!=="undefined"){console.warn("Relation=%o; collectionKey=%s already exists on collection=%o",this,t,this.options.collectionKey)}}else if(t){e[t]=this.instance}}e.bind("relational:add",this.handleAddition).bind("relational:remove",this.handleRemoval).bind("relational:reset",this.handleReset);return e},findRelated:function(e){if(this.keyContents){var r=[];if(this.keyContents instanceof n.Collection){r=this.keyContents.models}else{this.keyContents=t.isArray(this.keyContents)?this.keyContents:[this.keyContents];t.each(this.keyContents||[],function(e){var t=null;if(e instanceof this.relatedModel){t=e}else if(e||e===0){t=this.relatedModel.findOrCreate(e,{create:this.options.createModels})}if(t&&!this.related.get(t)){r.push(t)}},this)}if(r.length){e=this.unsanitizeOptions(e);this.related.add(r,e)}}},onChange:function(r,i,s){s=this.sanitizeOptions(s);this.keyContents=i;if(i instanceof n.Collection){this._prepareCollection(i);this.related=i}else{var o={},u={};if(!t.isArray(i)&&i!==e){i=[i]}t.each(i,function(e){u[e.id]=true});var a=this.related;if(a instanceof n.Collection){t.each(a.models.slice(0),function(e){if(!s.keepNewModels||!e.isNew()){o[e.id]=true;a.remove(e,{silent:e.id in u})}})}else{a=this._prepareCollection()}t.each(i,function(e){var t=this.relatedModel.findOrCreate(e,{create:this.options.createModels});if(t){a.add(t,{silent:t.id in o})}},this);this.setRelated(a)}var f=this;n.Relational.eventQueue.add(function(){!s.silentChange&&f.instance.trigger("update:"+f.key,f.instance,f.related,s)})},tryAddRelated:function(e,r){r=this.sanitizeOptions(r);if(!this.related.get(e)){var i=t.any(this.keyContents||[],function(r){var i=n.Relational.store.resolveIdForItem(this.relatedModel,r);return!t.isNull(i)&&i===e.id},this);if(i){this.related.add(e,r)}}},handleAddition:function(e,r,i){if(!(e instanceof n.Model)){return}i=this.sanitizeOptions(i);t.each(this.getReverseRelations(e)||[],function(e){e.addRelated(this.instance,i)},this);var s=this;n.Relational.eventQueue.add(function(){!i.silentChange&&s.instance.trigger("add:"+s.key,e,s.related,i)})},handleRemoval:function(e,r,i){if(!(e instanceof n.Model)){return}i=this.sanitizeOptions(i);t.each(this.getReverseRelations(e)||[],function(e){e.removeRelated(this.instance,i)},this);var s=this;n.Relational.eventQueue.add(function(){!i.silentChange&&s.instance.trigger("remove:"+s.key,e,s.related,i)})},handleReset:function(e,t){t=this.sanitizeOptions(t);var r=this;n.Relational.eventQueue.add(function(){!t.silentChange&&r.instance.trigger("reset:"+r.key,r.related,t)})},addRelated:function(e,t){var n=this;t=this.unsanitizeOptions(t);e.queue(function(){if(n.related&&!n.related.get(e)){n.related.add(e,t)}})},removeRelated:function(e,t){t=this.unsanitizeOptions(t);if(this.related.get(e)){this.related.remove(e,t)}}});n.RelationalModel=n.Model.extend({relations:null,_relations:null,_isInitialized:false,_deferProcessing:false,_queue:null,subModelTypeAttribute:"type",subModelTypes:null,constructor:function(e,r){var i=this;if(r&&r.collection){this._deferProcessing=true;var s=function(e){if(e===i){i._deferProcessing=false;i.processQueue();r.collection.unbind("relational:add",s)}};r.collection.bind("relational:add",s);t.defer(function(){s(i)})}this._queue=new n.BlockingQueue;this._queue.block();n.Relational.eventQueue.block();n.Model.apply(this,arguments);n.Relational.eventQueue.unblock()},trigger:function(e){if(e.length>5&&"change"===e.substr(0,6)){var t=this,r=arguments;n.Relational.eventQueue.add(function(){n.Model.prototype.trigger.apply(t,r)})}else{n.Model.prototype.trigger.apply(this,arguments)}return this},initializeRelations:function(){this.acquire();this._relations=[];t.each(this.relations||[],function(e){var r=!t.isString(e.type)?e.type:n[e.type]||n.Relational.store.getObjectByName(e.type);if(r&&r.prototype instanceof n.Relation){new r(this,e)}else{n.Relational.showWarnings&&typeof console!=="undefined"&&console.warn("Relation=%o; missing or invalid type!",e)}},this);this._isInitialized=true;this.release();this.processQueue()},updateRelations:function(e){if(this._isInitialized&&!this.isLocked()){t.each(this._relations||[],function(t){var n=this.attributes[t.keySource]||this.attributes[t.key];if(t.related!==n){this.trigger("relational:change:"+t.key,this,n,e||{})}},this)}},queue:function(e){this._queue.add(e)},processQueue:function(){if(this._isInitialized&&!this._deferProcessing&&this._queue.isBlocked()){this._queue.unblock()}},getRelation:function(e){return t.detect(this._relations,function(t){if(t.key===e){return true}},this)},getRelations:function(){return this._relations},fetchRelated:function(e,r,i){r||(r={});var s,o=[],u=this.getRelation(e),a=u&&u.keyContents,f=a&&t.select(t.isArray(a)?a:[a],function(e){var r=n.Relational.store.resolveIdForItem(u.relatedModel,e);return!t.isNull(r)&&(i||!n.Relational.store.find(u.relatedModel,r))},this);if(f&&f.length){var l=t.map(f,function(e){var n;if(t.isObject(e)){n=u.relatedModel.findOrCreate(e)}else{var r={};r[u.relatedModel.prototype.idAttribute]=e;n=u.relatedModel.findOrCreate(r)}return n},this);if(u.related instanceof n.Collection&&t.isFunction(u.related.url)){s=u.related.url(l)}if(s&&s!==u.related.url()){var c=t.defaults({error:function(){var e=arguments;t.each(l||[],function(t){t.trigger("destroy",t,t.collection,r);r.error&&r.error.apply(t,e)})},url:s},r,{add:true});o=[u.related.fetch(c)]}else{o=t.map(l||[],function(e){var n=t.defaults({error:function(){e.trigger("destroy",e,e.collection,r);r.error&&r.error.apply(e,arguments)}},r);return e.fetch(n)},this)}}return o},get:function(r){var i=n.Model.prototype.get;var s=i.call(this,r);var o=r.split(".");if(!this.dotNotation||o.length===1){return s}var u=t.reduce(o,function(e,t){if(!(e instanceof n.Model)){throw new Error("attribute must be instanceof Backbone.Model. Is: "+e+", currentSplit: "+t)}return i.call(e,t)},this);if(s!==e&&u!==e){throw new Error("ambiguous result for '"+r+"'. direct result: "+s+", dotNotation: "+u)}return s||u},set:function(e,r,i){n.Relational.eventQueue.block();var s;if(t.isObject(e)||e==null){s=e;i=r}else{s={};s[e]=r}var o=n.Model.prototype.set.apply(this,arguments);if(!this._isInitialized&&!this.isLocked()){this.constructor.initializeModelHierarchy();n.Relational.store.register(this);this.initializeRelations()}else if(s&&this.idAttribute in s){n.Relational.store.update(this)}if(s){this.updateRelations(i)}n.Relational.eventQueue.unblock();return o},unset:function(e,t){n.Relational.eventQueue.block();var r=n.Model.prototype.unset.apply(this,arguments);this.updateRelations(t);n.Relational.eventQueue.unblock();return r},clear:function(e){n.Relational.eventQueue.block();var t=n.Model.prototype.clear.apply(this,arguments);this.updateRelations(e);n.Relational.eventQueue.unblock();return t},clone:function(){var e=t.clone(this.attributes);if(!t.isUndefined(e[this.idAttribute])){e[this.idAttribute]=null}t.each(this.getRelations()||[],function(t){delete e[t.key]});return new this.constructor(e)},toJSON:function(e){if(this.isLocked()){return this.id}this.acquire();var r=n.Model.prototype.toJSON.call(this,e);if(this.constructor._superModel&&!(this.constructor._subModelTypeAttribute in r)){r[this.constructor._subModelTypeAttribute]=this.constructor._subModelTypeValue}t.each(this._relations||[],function(i){var s=r[i.key];if(i.options.includeInJSON===true){if(s&&t.isFunction(s.toJSON)){r[i.keyDestination]=s.toJSON(e)}else{r[i.keyDestination]=null}}else if(t.isString(i.options.includeInJSON)){if(s instanceof n.Collection){r[i.keyDestination]=s.pluck(i.options.includeInJSON)}else if(s instanceof n.Model){r[i.keyDestination]=s.get(i.options.includeInJSON)}else{r[i.keyDestination]=null}}else if(t.isArray(i.options.includeInJSON)){if(s instanceof n.Collection){var o=[];s.each(function(e){var n={};t.each(i.options.includeInJSON,function(t){n[t]=e.get(t)});o.push(n)});r[i.keyDestination]=o}else if(s instanceof n.Model){var o={};t.each(i.options.includeInJSON,function(e){o[e]=s.get(e)});r[i.keyDestination]=o}else{r[i.keyDestination]=null}}else{delete r[i.key]}if(i.keyDestination!==i.key){delete r[i.key]}});this.release();return r}},{setup:function(e){this.prototype.relations=(this.prototype.relations||[]).slice(0);this._subModels={};this._superModel=null;if(this.prototype.hasOwnProperty("subModelTypes")){n.Relational.store.addSubModels(this.prototype.subModelTypes,this)}else{this.prototype.subModelTypes=null}t.each(this.prototype.relations||[],function(e){if(!e.model){e.model=this}if(e.reverseRelation&&e.model===this){var r=true;if(t.isString(e.relatedModel)){var i=n.Relational.store.getObjectByName(e.relatedModel);r=i&&i.prototype instanceof n.RelationalModel}var s=!t.isString(e.type)?e.type:n[e.type]||n.Relational.store.getObjectByName(e.type);if(r&&s&&s.prototype instanceof n.Relation){new s(null,e)}}},this);return this},build:function(e,t){var n=this;this.initializeModelHierarchy();if(this._subModels&&this.prototype.subModelTypeAttribute in e){var r=e[this.prototype.subModelTypeAttribute];var i=this._subModels[r];if(i){n=i}}return new n(e,t)},initializeModelHierarchy:function(){if(t.isUndefined(this._superModel)||t.isNull(this._superModel)){n.Relational.store.setupSuperModel(this);if(this._superModel){if(this._superModel.prototype.relations){var e=t.any(this.prototype.relations||[],function(e){return e.model&&e.model!==this},this);if(!e){this.prototype.relations=this._superModel.prototype.relations.concat(this.prototype.relations)}}}else{this._superModel=false}}if(this.prototype.subModelTypes&&t.keys(this.prototype.subModelTypes).length!==t.keys(this._subModels).length){t.each(this.prototype.subModelTypes||[],function(e){var t=n.Relational.store.getObjectByName(e);t&&t.initializeModelHierarchy()})}},findOrCreate:function(e,r){r||(r={});var i=t.isObject(e)&&this.prototype.parse?this.prototype.parse(e):e;var s=n.Relational.store.find(this,i);if(t.isObject(e)){if(s&&r.update!==false){s.set(i,r)}else if(!s&&r.create!==false){s=this.build(e,r)}}return s}});t.extend(n.RelationalModel.prototype,n.Semaphore);n.Collection.prototype.__prepareModel=n.Collection.prototype._prepareModel;n.Collection.prototype._prepareModel=function(e,t){var r;if(e instanceof n.Model){if(!e.collection){e.collection=this}r=e}else{t||(t={});t.collection=this;if(typeof this.model.findOrCreate!=="undefined"){r=this.model.findOrCreate(e,t)}else{r=new this.model(e,t)}if(!r._validate(e,t)){r=false}}return r};var i=n.Collection.prototype.__add=n.Collection.prototype.add;n.Collection.prototype.add=function(e,r){r||(r={});if(!t.isArray(e)){e=[e]}var s=[];t.each(e||[],function(e){if(!(e instanceof n.Model)){e=n.Collection.prototype._prepareModel.call(this,e,r)}if(e instanceof n.Model&&!this.get(e)){s.push(e)}},this);if(s.length){i.call(this,s,r);t.each(s||[],function(e){this.trigger("relational:add",e,this,r)},this)}return this};var s=n.Collection.prototype.__remove=n.Collection.prototype.remove;n.Collection.prototype.remove=function(e,r){r||(r={});if(!t.isArray(e)){e=[e]}else{e=e.slice(0)}t.each(e||[],function(e){e=this.get(e);if(e instanceof n.Model){s.call(this,e,r);this.trigger("relational:remove",e,this,r)}},this);return this};var o=n.Collection.prototype.__reset=n.Collection.prototype.reset;n.Collection.prototype.reset=function(e,t){o.call(this,e,t);this.trigger("relational:reset",this,t);return this};var u=n.Collection.prototype.__sort=n.Collection.prototype.sort;n.Collection.prototype.sort=function(e){u.call(this,e);this.trigger("relational:reset",this,e);return this};var a=n.Collection.prototype.__trigger=n.Collection.prototype.trigger;n.Collection.prototype.trigger=function(e){if(e==="add"||e==="remove"||e==="reset"){var r=this,i=arguments;if(e==="add"){i=t.toArray(i);if(t.isObject(i[3])){i[3]=t.clone(i[3])}}n.Relational.eventQueue.add(function(){a.apply(r,i)})}else{a.apply(this,arguments)}return this};n.RelationalModel.extend=function(e,t){var r=n.Model.extend.apply(this,arguments);r.setup(this);return r}})()
;
/*1.0*/
// moment.js
// version : 1.7.2
// author : Tim Wood
// license : MIT
// momentjs.com
(function(a){function E(a,b,c,d){var e=c.lang();return e[a].call?e[a](c,d):e[a][b]}function F(a,b){return function(c){return K(a.call(this,c),b)}}function G(a){return function(b){var c=a.call(this,b);return c+this.lang().ordinal(c)}}function H(a,b,c){this._d=a,this._isUTC=!!b,this._a=a._a||null,this._lang=c||!1}function I(a){var b=this._data={},c=a.years||a.y||0,d=a.months||a.M||0,e=a.weeks||a.w||0,f=a.days||a.d||0,g=a.hours||a.h||0,h=a.minutes||a.m||0,i=a.seconds||a.s||0,j=a.milliseconds||a.ms||0;this._milliseconds=j+i*1e3+h*6e4+g*36e5,this._days=f+e*7,this._months=d+c*12,b.milliseconds=j%1e3,i+=J(j/1e3),b.seconds=i%60,h+=J(i/60),b.minutes=h%60,g+=J(h/60),b.hours=g%24,f+=J(g/24),f+=e*7,b.days=f%30,d+=J(f/30),b.months=d%12,c+=J(d/12),b.years=c,this._lang=!1}function J(a){return a<0?Math.ceil(a):Math.floor(a)}function K(a,b){var c=a+"";while(c.length<b)c="0"+c;return c}function L(a,b,c){var d=b._milliseconds,e=b._days,f=b._months,g;d&&a._d.setTime(+a+d*c),e&&a.date(a.date()+e*c),f&&(g=a.date(),a.date(1).month(a.month()+f*c).date(Math.min(g,a.daysInMonth())))}function M(a){return Object.prototype.toString.call(a)==="[object Array]"}function N(a,b){var c=Math.min(a.length,b.length),d=Math.abs(a.length-b.length),e=0,f;for(f=0;f<c;f++)~~a[f]!==~~b[f]&&e++;return e+d}function O(a,b,c,d){var e,f,g=[];for(e=0;e<7;e++)g[e]=a[e]=a[e]==null?e===2?1:0:a[e];return a[7]=g[7]=b,a[8]!=null&&(g[8]=a[8]),a[3]+=c||0,a[4]+=d||0,f=new Date(0),b?(f.setUTCFullYear(a[0],a[1],a[2]),f.setUTCHours(a[3],a[4],a[5],a[6])):(f.setFullYear(a[0],a[1],a[2]),f.setHours(a[3],a[4],a[5],a[6])),f._a=g,f}function P(a,c){var d,e,g=[];!c&&h&&(c=require("./lang/"+a));for(d=0;d<i.length;d++)c[i[d]]=c[i[d]]||f.en[i[d]];for(d=0;d<12;d++)e=b([2e3,d]),g[d]=new RegExp("^"+(c.months[d]||c.months(e,""))+"|^"+(c.monthsShort[d]||c.monthsShort(e,"")).replace(".",""),"i");return c.monthsParse=c.monthsParse||g,f[a]=c,c}function Q(a){var c=typeof a=="string"&&a||a&&a._lang||null;return c?f[c]||P(c):b}function R(a){return a.match(/\[.*\]/)?a.replace(/^\[|\]$/g,""):a.replace(/\\/g,"")}function S(a){var b=a.match(k),c,d;for(c=0,d=b.length;c<d;c++)D[b[c]]?b[c]=D[b[c]]:b[c]=R(b[c]);return function(e){var f="";for(c=0;c<d;c++)f+=typeof b[c].call=="function"?b[c].call(e,a):b[c];return f}}function T(a,b){function d(b){return a.lang().longDateFormat[b]||b}var c=5;while(c--&&l.test(b))b=b.replace(l,d);return A[b]||(A[b]=S(b)),A[b](a)}function U(a){switch(a){case"DDDD":return p;case"YYYY":return q;case"S":case"SS":case"SSS":case"DDD":return o;case"MMM":case"MMMM":case"dd":case"ddd":case"dddd":case"a":case"A":return r;case"Z":case"ZZ":return s;case"T":return t;case"MM":case"DD":case"YY":case"HH":case"hh":case"mm":case"ss":case"M":case"D":case"d":case"H":case"h":case"m":case"s":return n;default:return new RegExp(a.replace("\\",""))}}function V(a,b,c,d){var e,f;switch(a){case"M":case"MM":c[1]=b==null?0:~~b-1;break;case"MMM":case"MMMM":for(e=0;e<12;e++)if(Q().monthsParse[e].test(b)){c[1]=e,f=!0;break}f||(c[8]=!1);break;case"D":case"DD":case"DDD":case"DDDD":b!=null&&(c[2]=~~b);break;case"YY":c[0]=~~b+(~~b>70?1900:2e3);break;case"YYYY":c[0]=~~Math.abs(b);break;case"a":case"A":d.isPm=(b+"").toLowerCase()==="pm";break;case"H":case"HH":case"h":case"hh":c[3]=~~b;break;case"m":case"mm":c[4]=~~b;break;case"s":case"ss":c[5]=~~b;break;case"S":case"SS":case"SSS":c[6]=~~(("0."+b)*1e3);break;case"Z":case"ZZ":d.isUTC=!0,e=(b+"").match(x),e&&e[1]&&(d.tzh=~~e[1]),e&&e[2]&&(d.tzm=~~e[2]),e&&e[0]==="+"&&(d.tzh=-d.tzh,d.tzm=-d.tzm)}b==null&&(c[8]=!1)}function W(a,b){var c=[0,0,1,0,0,0,0],d={tzh:0,tzm:0},e=b.match(k),f,g;for(f=0;f<e.length;f++)g=(U(e[f]).exec(a)||[])[0],g&&(a=a.slice(a.indexOf(g)+g.length)),D[e[f]]&&V(e[f],g,c,d);return d.isPm&&c[3]<12&&(c[3]+=12),d.isPm===!1&&c[3]===12&&(c[3]=0),O(c,d.isUTC,d.tzh,d.tzm)}function X(a,b){var c,d=a.match(m)||[],e,f=99,g,h,i;for(g=0;g<b.length;g++)h=W(a,b[g]),e=T(new H(h),b[g]).match(m)||[],i=N(d,e),i<f&&(f=i,c=h);return c}function Y(a){var b="YYYY-MM-DDT",c;if(u.exec(a)){for(c=0;c<4;c++)if(w[c][1].exec(a)){b+=w[c][0];break}return s.exec(a)?W(a,b+" Z"):W(a,b)}return new Date(a)}function Z(a,b,c,d,e){var f=e.relativeTime[a];return typeof f=="function"?f(b||1,!!c,a,d):f.replace(/%d/i,b||1)}function $(a,b,c){var e=d(Math.abs(a)/1e3),f=d(e/60),g=d(f/60),h=d(g/24),i=d(h/365),j=e<45&&["s",e]||f===1&&["m"]||f<45&&["mm",f]||g===1&&["h"]||g<22&&["hh",g]||h===1&&["d"]||h<=25&&["dd",h]||h<=45&&["M"]||h<345&&["MM",d(h/30)]||i===1&&["y"]||["yy",i];return j[2]=b,j[3]=a>0,j[4]=c,Z.apply({},j)}function _(a,c){b.fn[a]=function(a){var b=this._isUTC?"UTC":"";return a!=null?(this._d["set"+b+c](a),this):this._d["get"+b+c]()}}function ab(a){b.duration.fn[a]=function(){return this._data[a]}}function bb(a,c){b.duration.fn["as"+a]=function(){return+this/c}}var b,c="1.7.2",d=Math.round,e,f={},g="en",h=typeof module!="undefined"&&module.exports,i="months|monthsShort|weekdays|weekdaysShort|weekdaysMin|longDateFormat|calendar|relativeTime|ordinal|meridiem".split("|"),j=/^\/?Date\((\-?\d+)/i,k=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|YYYY|YY|a|A|hh?|HH?|mm?|ss?|SS?S?|zz?|ZZ?|.)/g,l=/(\[[^\[]*\])|(\\)?(LT|LL?L?L?)/g,m=/([0-9a-zA-Z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)/gi,n=/\d\d?/,o=/\d{1,3}/,p=/\d{3}/,q=/\d{1,4}/,r=/[0-9a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+/i,s=/Z|[\+\-]\d\d:?\d\d/i,t=/T/i,u=/^\s*\d{4}-\d\d-\d\d(T(\d\d(:\d\d(:\d\d(\.\d\d?\d?)?)?)?)?([\+\-]\d\d:?\d\d)?)?/,v="YYYY-MM-DDTHH:mm:ssZ",w=[["HH:mm:ss.S",/T\d\d:\d\d:\d\d\.\d{1,3}/],["HH:mm:ss",/T\d\d:\d\d:\d\d/],["HH:mm",/T\d\d:\d\d/],["HH",/T\d\d/]],x=/([\+\-]|\d\d)/gi,y="Month|Date|Hours|Minutes|Seconds|Milliseconds".split("|"),z={Milliseconds:1,Seconds:1e3,Minutes:6e4,Hours:36e5,Days:864e5,Months:2592e6,Years:31536e6},A={},B="DDD w M D d".split(" "),C="M D H h m s w".split(" "),D={M:function(){return this.month()+1},MMM:function(a){return E("monthsShort",this.month(),this,a)},MMMM:function(a){return E("months",this.month(),this,a)},D:function(){return this.date()},DDD:function(){var a=new Date(this.year(),this.month(),this.date()),b=new Date(this.year(),0,1);return~~((a-b)/864e5+1.5)},d:function(){return this.day()},dd:function(a){return E("weekdaysMin",this.day(),this,a)},ddd:function(a){return E("weekdaysShort",this.day(),this,a)},dddd:function(a){return E("weekdays",this.day(),this,a)},w:function(){var a=new Date(this.year(),this.month(),this.date()-this.day()+5),b=new Date(a.getFullYear(),0,4);return~~((a-b)/864e5/7+1.5)},YY:function(){return K(this.year()%100,2)},YYYY:function(){return K(this.year(),4)},a:function(){return this.lang().meridiem(this.hours(),this.minutes(),!0)},A:function(){return this.lang().meridiem(this.hours(),this.minutes(),!1)},H:function(){return this.hours()},h:function(){return this.hours()%12||12},m:function(){return this.minutes()},s:function(){return this.seconds()},S:function(){return~~(this.milliseconds()/100)},SS:function(){return K(~~(this.milliseconds()/10),2)},SSS:function(){return K(this.milliseconds(),3)},Z:function(){var a=-this.zone(),b="+";return a<0&&(a=-a,b="-"),b+K(~~(a/60),2)+":"+K(~~a%60,2)},ZZ:function(){var a=-this.zone(),b="+";return a<0&&(a=-a,b="-"),b+K(~~(10*a/6),4)}};while(B.length)e=B.pop(),D[e+"o"]=G(D[e]);while(C.length)e=C.pop(),D[e+e]=F(D[e],2);D.DDDD=F(D.DDD,3),b=function(c,d){if(c===null||c==="")return null;var e,f;return b.isMoment(c)?new H(new Date(+c._d),c._isUTC,c._lang):(d?M(d)?e=X(c,d):e=W(c,d):(f=j.exec(c),e=c===a?new Date:f?new Date(+f[1]):c instanceof Date?c:M(c)?O(c):typeof c=="string"?Y(c):new Date(c)),new H(e))},b.utc=function(a,c){return M(a)?new H(O(a,!0),!0):(typeof a=="string"&&!s.exec(a)&&(a+=" +0000",c&&(c+=" Z")),b(a,c).utc())},b.unix=function(a){return b(a*1e3)},b.duration=function(a,c){var d=b.isDuration(a),e=typeof a=="number",f=d?a._data:e?{}:a,g;return e&&(c?f[c]=a:f.milliseconds=a),g=new I(f),d&&(g._lang=a._lang),g},b.humanizeDuration=function(a,c,d){return b.duration(a,c===!0?null:c).humanize(c===!0?!0:d)},b.version=c,b.defaultFormat=v,b.lang=function(a,c){var d;if(!a)return g;(c||!f[a])&&P(a,c);if(f[a]){for(d=0;d<i.length;d++)b[i[d]]=f[a][i[d]];b.monthsParse=f[a].monthsParse,g=a}},b.langData=Q,b.isMoment=function(a){return a instanceof H},b.isDuration=function(a){return a instanceof I},b.lang("en",{months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),longDateFormat:{LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D YYYY",LLL:"MMMM D YYYY LT",LLLL:"dddd, MMMM D YYYY LT"},meridiem:function(a,b,c){return a>11?c?"pm":"PM":c?"am":"AM"},calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[last] dddd [at] LT",sameElse:"L"},relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},ordinal:function(a){var b=a%10;return~~(a%100/10)===1?"th":b===1?"st":b===2?"nd":b===3?"rd":"th"}}),b.fn=H.prototype={clone:function(){return b(this)},valueOf:function(){return+this._d},unix:function(){return Math.floor(+this._d/1e3)},toString:function(){return this._d.toString()},toDate:function(){return this._d},toArray:function(){var a=this;return[a.year(),a.month(),a.date(),a.hours(),a.minutes(),a.seconds(),a.milliseconds(),!!this._isUTC]},isValid:function(){return this._a?this._a[8]!=null?!!this._a[8]:!N(this._a,(this._a[7]?b.utc(this._a):b(this._a)).toArray()):!isNaN(this._d.getTime())},utc:function(){return this._isUTC=!0,this},local:function(){return this._isUTC=!1,this},format:function(a){return T(this,a?a:b.defaultFormat)},add:function(a,c){var d=c?b.duration(+c,a):b.duration(a);return L(this,d,1),this},subtract:function(a,c){var d=c?b.duration(+c,a):b.duration(a);return L(this,d,-1),this},diff:function(a,c,e){var f=this._isUTC?b(a).utc():b(a).local(),g=(this.zone()-f.zone())*6e4,h=this._d-f._d-g,i=this.year()-f.year(),j=this.month()-f.month(),k=this.date()-f.date(),l;return c==="months"?l=i*12+j+k/30:c==="years"?l=i+(j+k/30)/12:l=c==="seconds"?h/1e3:c==="minutes"?h/6e4:c==="hours"?h/36e5:c==="days"?h/864e5:c==="weeks"?h/6048e5:h,e?l:d(l)},from:function(a,c){return b.duration(this.diff(a)).lang(this._lang).humanize(!c)},fromNow:function(a){return this.from(b(),a)},calendar:function(){var a=this.diff(b().sod(),"days",!0),c=this.lang().calendar,d=c.sameElse,e=a<-6?d:a<-1?c.lastWeek:a<0?c.lastDay:a<1?c.sameDay:a<2?c.nextDay:a<7?c.nextWeek:d;return this.format(typeof e=="function"?e.apply(this):e)},isLeapYear:function(){var a=this.year();return a%4===0&&a%100!==0||a%400===0},isDST:function(){return this.zone()<b([this.year()]).zone()||this.zone()<b([this.year(),5]).zone()},day:function(a){var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return a==null?b:this.add({d:a-b})},startOf:function(a){switch(a.replace(/s$/,"")){case"year":this.month(0);case"month":this.date(1);case"day":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return this},endOf:function(a){return this.startOf(a).add(a.replace(/s?$/,"s"),1).subtract("ms",1)},sod:function(){return this.clone().startOf("day")},eod:function(){return this.clone().endOf("day")},zone:function(){return this._isUTC?0:this._d.getTimezoneOffset()},daysInMonth:function(){return b.utc([this.year(),this.month()+1,0]).date()},lang:function(b){return b===a?Q(this):(this._lang=b,this)}};for(e=0;e<y.length;e++)_(y[e].toLowerCase(),y[e]);_("year","FullYear"),b.duration.fn=I.prototype={weeks:function(){return J(this.days()/7)},valueOf:function(){return this._milliseconds+this._days*864e5+this._months*2592e6},humanize:function(a){var b=+this,c=this.lang().relativeTime,d=$(b,!a,this.lang()),e=b<=0?c.past:c.future;return a&&(typeof e=="function"?d=e(d):d=e.replace(/%s/i,d)),d},lang:b.fn.lang};for(e in z)z.hasOwnProperty(e)&&(bb(e,z[e]),ab(e.toLowerCase()));bb("Weeks",6048e5),h&&(module.exports=b),typeof ender=="undefined"&&(this.moment=b),typeof define=="function"&&define.amd&&define("moment",[],function(){return b})}).call(this);
/*1.0*/
// jquery.pjax.js
// copyright chris wanstrath
// https://github.com/defunkt/jquery-pjax
!function(t){function e(e,r,n){var o=this;return this.on("click.pjax",e,function(e){var i=t.extend({},d(r,n));i.container||(i.container=t(this).attr("data-pjax")||o),a(e,i)})}function a(e,a,r){r=d(a,r);var o=e.currentTarget;if("A"!==o.tagName.toUpperCase())throw"$.fn.pjax or $.pjax.click requires an anchor element";if(!(e.which>1||e.metaKey||e.ctrlKey||e.shiftKey||e.altKey||location.protocol!==o.protocol||location.host!==o.host||o.hash&&o.href.replace(o.hash,"")===location.href.replace(location.hash,"")||o.href===location.href+"#")){var i={url:o.href,container:t(o).attr("data-pjax"),target:o,fragment:null};n(t.extend({},i,r)),e.preventDefault()}}function r(e,a,r){r=d(a,r);var o=e.currentTarget;if("FORM"!==o.tagName.toUpperCase())throw"$.pjax.submit requires a form element";var i={type:o.method,url:o.action,data:t(o).serializeArray(),container:t(o).attr("data-pjax"),target:o,fragment:null};n(t.extend({},i,r)),e.preventDefault()}function n(e){function a(e,a){var n=t.Event(e,{relatedTarget:r});return l.trigger(n,a),!n.isDefaultPrevented()}if(e=t.extend(!0,{},t.ajaxSettings,n.defaults,e),e.pushstateMandatory&&!t.support.pjax)return p(e);t.isFunction(e.url)&&(e.url=e.url());var r=e.target,o=c(e.url).hash,l=e.context=f(e.container);e.data||(e.data={}),e.data._pjax=l.selector;var d;e.beforeSend=function(t,r){"GET"!==r.type&&(r.timeout=0),t.setRequestHeader("X-PJAX","true"),t.setRequestHeader("X-PJAX-Container",l.selector);return a("pjax:beforeSend",[t,r])?(r.timeout>0&&(d=setTimeout(function(){a("pjax:timeout",[t,e])&&t.abort("timeout")},r.timeout),r.timeout=0),void(e.requestUrl=c(r.url).href)):!1},e.complete=function(t,r){d&&clearTimeout(d),a("pjax:complete",[t,r,e]),a("pjax:end",[t,e])},e.error=function(t,r,n){var o=m("",t,e),l=a("pjax:error",[t,r,n,e]);"GET"==e.type&&"abort"!==r&&l&&i(o.url)},e.success=function(r,p,u){var d=m(r,u,e);if(!d.contents)return void i(d.url);if(n.state={id:e.id||s(),url:d.url,title:d.title,container:l.selector,fragment:e.fragment,timeout:e.timeout},t.support.pjax&&(e.push||e.replace)&&window.history.replaceState(n.state,d.title,d.url),d.title&&(document.title=d.title),l.html(d.contents),"number"==typeof e.scrollTo&&t(window).scrollTop(e.scrollTo),(e.replace||e.push)&&("undefined"!=typeof GoogleAnalytics&&"function"==typeof GoogleAnalytics.trackPageview?GoogleAnalytics.trackPageview():window._gaq&&_gaq.push(["_trackPageview"])),""!==o){var f=c(d.url);f.hash=o,n.state.url=f.href,t.support.pjax&&window.history.replaceState(n.state,d.title,f.href);var h=t(f.hash);h.length&&t(window).scrollTop(h.offset().top)}a("pjax:success",[r,p,u,e])},n.state||(n.state={id:s(),url:window.location.href,title:document.title,container:l.selector,fragment:e.fragment,timeout:e.timeout},t.support.pjax&&window.history.replaceState(n.state,document.title));var h=n.xhr;h&&h.readyState<4&&(h.onreadystatechange=t.noop,h.abort()),n.options=e;var h=n.xhr=t.ajax(e);return h.readyState>0&&(e.push&&!e.replace&&(x(n.state.id,l.clone().contents()),t.support.pjax&&window.history.pushState(null,"",u(e.requestUrl))),a("pjax:start",[h,e]),a("pjax:send",[h,e])),n.xhr}function o(e,a){var r={url:window.location.href,push:!1,replace:!0,scrollTo:!1};return n(t.extend(r,d(e,a)))}function i(e){t.support.pjax&&(window.history.replaceState(null,"","#"),window.location.replace(e))}function l(e){var a=e.state;if(a&&a.container){var r=t(a.container);if(r.length){var o=y[a.id];if(!n.state)return void(n.state=a);var l=n.state.id<a.id?"forward":"back";j(l,n.state.id,r.clone().contents());var p=t.Event("pjax:popstate",{state:a,direction:l});r.trigger(p);var s={id:a.id,url:a.url,container:r,push:!1,fragment:a.fragment,timeout:a.timeout,scrollTo:!1};o?(r.trigger("pjax:start",[null,s]),a.title&&(document.title=a.title),r.html(o),n.state=a,r.trigger("pjax:end",[null,s])):n(s),r[0].offsetHeight}else i(location.href)}}function p(e){var a=t.isFunction(e.url)?e.url():e.url,r=e.type?e.type.toUpperCase():"GET",n=t("<form>",{method:"GET"===r?"GET":"POST",action:a,style:"display:none"});"GET"!==r&&"POST"!==r&&n.append(t("<input>",{type:"hidden",name:"_method",value:r.toLowerCase()}));var o=e.data;if("string"==typeof o)t.each(o.split("&"),function(e,a){var r=a.split("=");n.append(t("<input>",{type:"hidden",name:r[0],value:r[1]}))});else if("object"==typeof o)for(key in o)n.append(t("<input>",{type:"hidden",name:key,value:o[key]}));var i=a.split("?")[1];i&&t.each(i.split("&"),function(e,a){var r=a.split("=");n.append(t("<input>",{type:"hidden",name:r[0],value:r[1]}))}),t(document.body).append(n),n.submit()}function s(){return(new Date).getTime()}function u(t){return t.replace(/\?_pjax=[^&]+&?/,"?").replace(/_pjax=[^&]+&?/,"").replace(/[\?&]$/,"")}function c(t){var e=document.createElement("a");return e.href=t,e}function d(e,a){return e&&a?a.container=e:a=t.isPlainObject(e)?e:{container:e},a.container&&(a.container=f(a.container)),a}function f(e){if(e=t(e),e.length){if(""!==e.selector&&e.context===document)return e;if(e.attr("id"))return t("#"+e.attr("id"));throw"cant get selector for pjax container!"}throw"no pjax container for "+e.selector}function h(t,e){return t.filter(e).add(t.find(e))}function m(e,a,r){var n={};if(n.url=u(a.getResponseHeader("X-PJAX-URL")||r.requestUrl),/<html/i.test(e))var o=t(e.match(/<head[^>]*>([\s\S.]*)<\/head>/i)[0]),i=t(e.match(/<body[^>]*>([\s\S.]*)<\/body>/i)[0]);else var o=i=t(e);if(0===i.length)return n;if(n.title=h(o,"title").last().text(),r.fragment){if("body"===r.fragment)var l=i;else var l=h(i,r.fragment).first();l.length&&(n.contents=l.contents(),n.title||(n.title=l.attr("title")||l.data("title")))}else/<html/i.test(e)||(n.contents=i);return n.contents&&(n.contents=n.contents.not("title"),n.contents.find("title").remove()),n.title&&(n.title=t.trim(n.title)),n}function x(t,e){for(y[t]=e,b.push(t);w.length;)delete y[w.shift()];for(;b.length>n.defaults.maxCacheLength;)delete y[b.shift()]}function j(t,e,a){var r,n;y[e]=a,"forward"===t?(r=b,n=w):(r=w,n=b),r.push(e),(e=n.pop())&&delete y[e]}function v(){t.fn.pjax=e,t.pjax=n,t.pjax.enable=t.noop,t.pjax.disable=g,t.pjax.click=a,t.pjax.submit=r,t.pjax.reload=o,t.pjax.defaults={timeout:5e3,push:!0,replace:!1,type:"GET",dataType:"html",scrollTo:0,maxCacheLength:20,pushstateMandatory:!0},t(window).bind("popstate.pjax",l)}function g(){t.fn.pjax=function(){return this},t.pjax=p,t.pjax.enable=v,t.pjax.disable=t.noop,t.pjax.click=t.noop,t.pjax.submit=t.noop,t.pjax.reload=function(){window.location.reload()},t(window).unbind("popstate.pjax",l)}var y={},w=[],b=[];t.inArray("state",t.event.props)<0&&t.event.props.push("state"),t.support.pjax=window.history&&window.history.pushState&&window.history.replaceState&&!navigator.userAgent.match(/((iPod|iPhone|iPad).+\bOS\s+[1-4]|WebApps\/.+CFNetwork)/),v()}(jQuery),jQuery.pjax.defaults||(jQuery.pjax.defaults={}),jQuery.pjax.defaults.timeout=5e3;
/*1.0*/
/*!
 * jQuery Form Plugin
 * version: 3.24 (26-DEC-2012)
 * @requires jQuery v1.5 or later
 *
 * Examples and documentation at: http://malsup.com/jquery/form/
 * Project repository: https://github.com/malsup/form
 * Dual licensed under the MIT and GPL licenses:
 *    http://malsup.github.com/mit-license.txt
 *    http://malsup.github.com/gpl-license-v2.txt
 */
/*global ActiveXObject alert */

(function(e){"use strict";function n(t){var n=t.data;if(!t.isDefaultPrevented()){t.preventDefault();e(this).ajaxSubmit(n)}}function r(t){var n=t.target;var r=e(n);if(!r.is("[type=submit],[type=image]")){var i=r.closest("[type=submit]");if(i.length===0){return}n=i[0]}var s=this;s.clk=n;if(n.type=="image"){if(t.offsetX!==undefined){s.clk_x=t.offsetX;s.clk_y=t.offsetY}else if(typeof e.fn.offset=="function"){var o=r.offset();s.clk_x=t.pageX-o.left;s.clk_y=t.pageY-o.top}else{s.clk_x=t.pageX-n.offsetLeft;s.clk_y=t.pageY-n.offsetTop}}setTimeout(function(){s.clk=s.clk_x=s.clk_y=null},100)}function i(){if(!e.fn.ajaxSubmit.debug)return;var t="[jquery.form] "+Array.prototype.join.call(arguments,"");if(window.console&&window.console.log){window.console.log(t)}else if(window.opera&&window.opera.postError){window.opera.postError(t)}}var t={};t.fileapi=e("<input type='file'/>").get(0).files!==undefined;t.formdata=window.FormData!==undefined;e.fn.ajaxSubmit=function(n){function T(t){var n=e.param(t).split("&");var r=n.length;var i={};var s,o;for(s=0;s<r;s++){n[s]=n[s].replace(/\+/g," ");o=n[s].split("=");i[decodeURIComponent(o[0])]=decodeURIComponent(o[1])}return i}function N(t){var i=new FormData;for(var s=0;s<t.length;s++){i.append(t[s].name,t[s].value)}if(n.extraData){var o=T(n.extraData);for(var u in o)if(o.hasOwnProperty(u))i.append(u,o[u])}n.data=null;var a=e.extend(true,{},e.ajaxSettings,n,{contentType:false,processData:false,cache:false,type:r||"POST"});if(n.uploadProgress){a.xhr=function(){var e=jQuery.ajaxSettings.xhr();if(e.upload){e.upload.onprogress=function(e){var t=0;var r=e.loaded||e.position;var i=e.total;if(e.lengthComputable){t=Math.ceil(r/i*100)}n.uploadProgress(e,r,i,t)}}return e}}a.data=null;var f=a.beforeSend;a.beforeSend=function(e,t){t.data=i;if(f)f.call(this,e,t)};return e.ajax(a)}function C(t){function T(e){var t=e.contentWindow?e.contentWindow.document:e.contentDocument?e.contentDocument:e.document;return t}function k(){function o(){try{var e=T(d).readyState;i("state = "+e);if(e&&e.toLowerCase()=="uninitialized")setTimeout(o,50)}catch(t){i("Server abort: ",t," (",t.name,")");_(x);if(b)clearTimeout(b);b=undefined}}var t=u.attr("target"),n=u.attr("action");s.setAttribute("target",h);if(!r){s.setAttribute("method","POST")}if(n!=f.url){s.setAttribute("action",f.url)}if(!f.skipEncodingOverride&&(!r||/post/i.test(r))){u.attr({encoding:"multipart/form-data",enctype:"multipart/form-data"})}if(f.timeout){b=setTimeout(function(){y=true;_(S)},f.timeout)}var a=[];try{if(f.extraData){for(var l in f.extraData){if(f.extraData.hasOwnProperty(l)){if(e.isPlainObject(f.extraData[l])&&f.extraData[l].hasOwnProperty("name")&&f.extraData[l].hasOwnProperty("value")){a.push(e('<input type="hidden" name="'+f.extraData[l].name+'">').val(f.extraData[l].value).appendTo(s)[0])}else{a.push(e('<input type="hidden" name="'+l+'">').val(f.extraData[l]).appendTo(s)[0])}}}}if(!f.iframeTarget){p.appendTo("body");if(d.attachEvent)d.attachEvent("onload",_);else d.addEventListener("load",_,false)}setTimeout(o,15);s.submit()}finally{s.setAttribute("action",n);if(t){s.setAttribute("target",t)}else{u.removeAttr("target")}e(a).remove()}}function _(t){if(v.aborted||M){return}try{A=T(d)}catch(n){i("cannot access response document: ",n);t=x}if(t===S&&v){v.abort("timeout");E.reject(v,"timeout");return}else if(t==x&&v){v.abort("server abort");E.reject(v,"error","server abort");return}if(!A||A.location.href==f.iframeSrc){if(!y)return}if(d.detachEvent)d.detachEvent("onload",_);else d.removeEventListener("load",_,false);var r="success",s;try{if(y){throw"timeout"}var o=f.dataType=="xml"||A.XMLDocument||e.isXMLDoc(A);i("isXml="+o);if(!o&&window.opera&&(A.body===null||!A.body.innerHTML)){if(--O){i("requeing onLoad callback, DOM not available");setTimeout(_,250);return}}var u=A.body?A.body:A.documentElement;v.responseText=u?u.innerHTML:null;v.responseXML=A.XMLDocument?A.XMLDocument:A;if(o)f.dataType="xml";v.getResponseHeader=function(e){var t={"content-type":f.dataType};return t[e]};if(u){v.status=Number(u.getAttribute("status"))||v.status;v.statusText=u.getAttribute("statusText")||v.statusText}var a=(f.dataType||"").toLowerCase();var l=/(json|script|text)/.test(a);if(l||f.textarea){var h=A.getElementsByTagName("textarea")[0];if(h){v.responseText=h.value;v.status=Number(h.getAttribute("status"))||v.status;v.statusText=h.getAttribute("statusText")||v.statusText}else if(l){var m=A.getElementsByTagName("pre")[0];var g=A.getElementsByTagName("body")[0];if(m){v.responseText=m.textContent?m.textContent:m.innerText}else if(g){v.responseText=g.textContent?g.textContent:g.innerText}}}else if(a=="xml"&&!v.responseXML&&v.responseText){v.responseXML=D(v.responseText)}try{L=H(v,a,f)}catch(t){r="parsererror";v.error=s=t||r}}catch(t){i("error caught: ",t);r="error";v.error=s=t||r}if(v.aborted){i("upload aborted");r=null}if(v.status){r=v.status>=200&&v.status<300||v.status===304?"success":"error"}if(r==="success"){if(f.success)f.success.call(f.context,L,"success",v);E.resolve(v.responseText,"success",v);if(c)e.event.trigger("ajaxSuccess",[v,f])}else if(r){if(s===undefined)s=v.statusText;if(f.error)f.error.call(f.context,v,r,s);E.reject(v,"error",s);if(c)e.event.trigger("ajaxError",[v,f,s])}if(c)e.event.trigger("ajaxComplete",[v,f]);if(c&&!--e.active){e.event.trigger("ajaxStop")}if(f.complete)f.complete.call(f.context,v,r);M=true;if(f.timeout)clearTimeout(b);setTimeout(function(){if(!f.iframeTarget)p.remove();v.responseXML=null},100)}var s=u[0],o,a,f,c,h,p,d,v,m,g,y,b;var w=!!e.fn.prop;var E=e.Deferred();if(e("[name=submit],[id=submit]",s).length){alert('Error: Form elements must not have name or id of "submit".');E.reject();return E}if(t){for(a=0;a<l.length;a++){o=e(l[a]);if(w)o.prop("disabled",false);else o.removeAttr("disabled")}}f=e.extend(true,{},e.ajaxSettings,n);f.context=f.context||f;h="jqFormIO"+(new Date).getTime();if(f.iframeTarget){p=e(f.iframeTarget);g=p.attr("name");if(!g)p.attr("name",h);else h=g}else{p=e('<iframe name="'+h+'" src="'+f.iframeSrc+'" />');p.css({position:"absolute",top:"-1000px",left:"-1000px"})}d=p[0];v={aborted:0,responseText:null,responseXML:null,status:0,statusText:"n/a",getAllResponseHeaders:function(){},getResponseHeader:function(){},setRequestHeader:function(){},abort:function(t){var n=t==="timeout"?"timeout":"aborted";i("aborting upload... "+n);this.aborted=1;try{if(d.contentWindow.document.execCommand){d.contentWindow.document.execCommand("Stop")}}catch(r){}p.attr("src",f.iframeSrc);v.error=n;if(f.error)f.error.call(f.context,v,n,t);if(c)e.event.trigger("ajaxError",[v,f,n]);if(f.complete)f.complete.call(f.context,v,n)}};c=f.global;if(c&&0===e.active++){e.event.trigger("ajaxStart")}if(c){e.event.trigger("ajaxSend",[v,f])}if(f.beforeSend&&f.beforeSend.call(f.context,v,f)===false){if(f.global){e.active--}E.reject();return E}if(v.aborted){E.reject();return E}m=s.clk;if(m){g=m.name;if(g&&!m.disabled){f.extraData=f.extraData||{};f.extraData[g]=m.value;if(m.type=="image"){f.extraData[g+".x"]=s.clk_x;f.extraData[g+".y"]=s.clk_y}}}var S=1;var x=2;var N=e("meta[name=csrf-token]").attr("content");var C=e("meta[name=csrf-param]").attr("content");if(C&&N){f.extraData=f.extraData||{};f.extraData[C]=N}if(f.forceSync){k()}else{setTimeout(k,10)}var L,A,O=50,M;var D=e.parseXML||function(e,t){if(window.ActiveXObject){t=new ActiveXObject("Microsoft.XMLDOM");t.async="false";t.loadXML(e)}else{t=(new DOMParser).parseFromString(e,"text/xml")}return t&&t.documentElement&&t.documentElement.nodeName!="parsererror"?t:null};var P=e.parseJSON||function(e){return window["eval"]("("+e+")")};var H=function(t,n,r){var i=t.getResponseHeader("content-type")||"",s=n==="xml"||!n&&i.indexOf("xml")>=0,o=s?t.responseXML:t.responseText;if(s&&o.documentElement.nodeName==="parsererror"){if(e.error)e.error("parsererror")}if(r&&r.dataFilter){o=r.dataFilter(o,n)}if(typeof o==="string"){if(n==="json"||!n&&i.indexOf("json")>=0){o=P(o)}else if(n==="script"||!n&&i.indexOf("javascript")>=0){e.globalEval(o)}}return o};return E}if(!this.length){i("ajaxSubmit: skipping submit process - no element selected");return this}var r,s,o,u=this;if(typeof n=="function"){n={success:n}}r=this.attr("method");s=this.attr("action");o=typeof s==="string"?e.trim(s):"";o=o||window.location.href||"";if(o){o=(o.match(/^([^#]+)/)||[])[1]}n=e.extend(true,{url:o,success:e.ajaxSettings.success,type:r||"GET",iframeSrc:/^https/i.test(window.location.href||"")?"javascript:false":"about:blank"},n);var a={};this.trigger("form-pre-serialize",[this,n,a]);if(a.veto){i("ajaxSubmit: submit vetoed via form-pre-serialize trigger");return this}if(n.beforeSerialize&&n.beforeSerialize(this,n)===false){i("ajaxSubmit: submit aborted via beforeSerialize callback");return this}var f=n.traditional;if(f===undefined){f=e.ajaxSettings.traditional}var l=[];var c,h=this.formToArray(n.semantic,l);if(n.data){n.extraData=n.data;c=e.param(n.data,f)}if(n.beforeSubmit&&n.beforeSubmit(h,this,n)===false){i("ajaxSubmit: submit aborted via beforeSubmit callback");return this}this.trigger("form-submit-validate",[h,this,n,a]);if(a.veto){i("ajaxSubmit: submit vetoed via form-submit-validate trigger");return this}var p=e.param(h,f);if(c){p=p?p+"&"+c:c}if(n.type.toUpperCase()=="GET"){n.url+=(n.url.indexOf("?")>=0?"&":"?")+p;n.data=null}else{n.data=p}var d=[];if(n.resetForm){d.push(function(){u.resetForm()})}if(n.clearForm){d.push(function(){u.clearForm(n.includeHidden)})}if(!n.dataType&&n.target){var v=n.success||function(){};d.push(function(t){var r=n.replaceTarget?"replaceWith":"html";e(n.target)[r](t).each(v,arguments)})}else if(n.success){d.push(n.success)}n.success=function(e,t,r){var i=n.context||this;for(var s=0,o=d.length;s<o;s++){d[s].apply(i,[e,t,r||u,u])}};var m=e('input[type=file]:enabled[value!=""]',this);var g=m.length>0;var y="multipart/form-data";var b=u.attr("enctype")==y||u.attr("encoding")==y;var w=t.fileapi&&t.formdata;i("fileAPI :"+w);var E=(g||b)&&!w;var S;if(n.iframe!==false&&(n.iframe||E)){if(n.closeKeepAlive){e.get(n.closeKeepAlive,function(){S=C(h)})}else{S=C(h)}}else if((g||b)&&w){S=N(h)}else{S=e.ajax(n)}u.removeData("jqxhr").data("jqxhr",S);for(var x=0;x<l.length;x++)l[x]=null;this.trigger("form-submit-notify",[this,n]);return this};e.fn.ajaxForm=function(t){t=t||{};t.delegation=t.delegation&&e.isFunction(e.fn.on);if(!t.delegation&&this.length===0){var s={s:this.selector,c:this.context};if(!e.isReady&&s.s){i("DOM not ready, queuing ajaxForm");e(function(){e(s.s,s.c).ajaxForm(t)});return this}i("terminating; zero elements found by selector"+(e.isReady?"":" (DOM not ready)"));return this}if(t.delegation){e(document).off("submit.form-plugin",this.selector,n).off("click.form-plugin",this.selector,r).on("submit.form-plugin",this.selector,t,n).on("click.form-plugin",this.selector,t,r);return this}return this.ajaxFormUnbind().bind("submit.form-plugin",t,n).bind("click.form-plugin",t,r)};e.fn.ajaxFormUnbind=function(){return this.unbind("submit.form-plugin click.form-plugin")};e.fn.formToArray=function(n,r){var i=[];if(this.length===0){return i}var s=this[0];var o=n?s.getElementsByTagName("*"):s.elements;if(!o){return i}var u,a,f,l,c,h,p;for(u=0,h=o.length;u<h;u++){c=o[u];f=c.name;if(!f){continue}if(n&&s.clk&&c.type=="image"){if(!c.disabled&&s.clk==c){i.push({name:f,value:e(c).val(),type:c.type});i.push({name:f+".x",value:s.clk_x},{name:f+".y",value:s.clk_y})}continue}l=e.fieldValue(c,true);if(l&&l.constructor==Array){if(r)r.push(c);for(a=0,p=l.length;a<p;a++){i.push({name:f,value:l[a]})}}else if(t.fileapi&&c.type=="file"&&!c.disabled){if(r)r.push(c);var d=c.files;if(d.length){for(a=0;a<d.length;a++){i.push({name:f,value:d[a],type:c.type})}}else{i.push({name:f,value:"",type:c.type})}}else if(l!==null&&typeof l!="undefined"){if(r)r.push(c);i.push({name:f,value:l,type:c.type,required:c.required})}}if(!n&&s.clk){var v=e(s.clk),m=v[0];f=m.name;if(f&&!m.disabled&&m.type=="image"){i.push({name:f,value:v.val()});i.push({name:f+".x",value:s.clk_x},{name:f+".y",value:s.clk_y})}}return i};e.fn.formSerialize=function(t){return e.param(this.formToArray(t))};e.fn.fieldSerialize=function(t){var n=[];this.each(function(){var r=this.name;if(!r){return}var i=e.fieldValue(this,t);if(i&&i.constructor==Array){for(var s=0,o=i.length;s<o;s++){n.push({name:r,value:i[s]})}}else if(i!==null&&typeof i!="undefined"){n.push({name:this.name,value:i})}});return e.param(n)};e.fn.fieldValue=function(t){for(var n=[],r=0,i=this.length;r<i;r++){var s=this[r];var o=e.fieldValue(s,t);if(o===null||typeof o=="undefined"||o.constructor==Array&&!o.length){continue}if(o.constructor==Array)e.merge(n,o);else n.push(o)}return n};e.fieldValue=function(t,n){var r=t.name,i=t.type,s=t.tagName.toLowerCase();if(n===undefined){n=true}if(n&&(!r||t.disabled||i=="reset"||i=="button"||(i=="checkbox"||i=="radio")&&!t.checked||(i=="submit"||i=="image")&&t.form&&t.form.clk!=t||s=="select"&&t.selectedIndex==-1)){return null}if(s=="select"){var o=t.selectedIndex;if(o<0){return null}var u=[],a=t.options;var f=i=="select-one";var l=f?o+1:a.length;for(var c=f?o:0;c<l;c++){var h=a[c];if(h.selected){var p=h.value;if(!p){p=h.attributes&&h.attributes["value"]&&!h.attributes["value"].specified?h.text:h.value}if(f){return p}u.push(p)}}return u}return e(t).val()};e.fn.clearForm=function(t){return this.each(function(){e("input,select,textarea",this).clearFields(t)})};e.fn.clearFields=e.fn.clearInputs=function(t){var n=/^(?:color|date|datetime|email|month|number|password|range|search|tel|text|time|url|week)$/i;return this.each(function(){var r=this.type,i=this.tagName.toLowerCase();if(n.test(r)||i=="textarea"){this.value=""}else if(r=="checkbox"||r=="radio"){this.checked=false}else if(i=="select"){this.selectedIndex=-1}else if(r=="file"){if(e.browser.msie){e(this).replaceWith(e(this).clone())}else{e(this).val("")}}else if(t){if(t===true&&/hidden/.test(r)||typeof t=="string"&&e(this).is(t))this.value=""}})};e.fn.resetForm=function(){return this.each(function(){if(typeof this.reset=="function"||typeof this.reset=="object"&&!this.reset.nodeType){this.reset()}})};e.fn.enable=function(e){if(e===undefined){e=true}return this.each(function(){this.disabled=!e})};e.fn.selected=function(t){if(t===undefined){t=true}return this.each(function(){var n=this.type;if(n=="checkbox"||n=="radio"){this.checked=t}else if(this.tagName.toLowerCase()=="option"){var r=e(this).parent("select");if(t&&r[0]&&r[0].type=="select-one"){r.find("option").selected(false)}this.selected=t}})};e.fn.ajaxSubmit.debug=false})(jQuery)
;
/*1.0*/
// Modified from jQuery Mobile "touch.js"
// Maybe doesn't belong here in the "vendor" directory since it is only part of jQuery Mobile and has been modified

(function( $, window, undefined ) {
	var $document = $( document );

	// add new event shortcuts
	$.each( ( "touchstart touchmove touchend " +
		"tap taphold " +
		"swipe swipeleft swiperight " +
		"scrollstart scrollstop" ).split( " " ), function( i, name ) {

		$.fn[ name ] = function( fn ) {
			return fn ? this.bind( name, fn ) : this.trigger( name );
		};

		// jQuery < 1.8
		if ( $.attrFn ) {
			$.attrFn[ name ] = true;
		}
	});

	var supportTouch = Modernizr.touch,
		scrollEvent = "touchmove scroll",
		touchStartEvent = supportTouch ? "touchstart" : "mousedown",
		touchStopEvent = supportTouch ? "touchend" : "mouseup",
		touchMoveEvent = supportTouch ? "touchmove" : "mousemove";

	function triggerCustomEvent( obj, eventType, event ) {
		var originalType = event.type;
		event.type = eventType;
		$.event.dispatch.call( obj, event );
		event.type = originalType;
	}

	// also handles scrollstop
	$.event.special.scrollstart = {

		enabled: true,

		setup: function() {

			var thisObject = this,
				$this = $( thisObject ),
				scrolling,
				timer;

			function trigger( event, state ) {
				scrolling = state;
				triggerCustomEvent( thisObject, scrolling ? "scrollstart" : "scrollstop", event );
			}

			// iPhone triggers scroll after a small delay; use touchmove instead
			$this.bind( scrollEvent, function( event ) {

				if ( !$.event.special.scrollstart.enabled ) {
					return;
				}

				if ( !scrolling ) {
					trigger( event, true );
				}

				clearTimeout( timer );
				timer = setTimeout( function() {
					trigger( event, false );
				}, 50 );
			});
		}
	};

	// also handles taphold
	$.event.special.tap = {
		tapholdThreshold: 750,

		setup: function() {
			var thisObject = this,
				$this = $( thisObject );

			$this.bind( "vmousedown", function( event ) {

				if ( event.which && event.which !== 1 ) {
					return false;
				}

				var origTarget = event.target,
					origEvent = event.originalEvent,
					timer;

				function clearTapTimer() {
					clearTimeout( timer );
				}

				function clearTapHandlers() {
					clearTapTimer();

					$this.unbind( "vclick", clickHandler )
						.unbind( "vmouseup", clearTapTimer );
					$document.unbind( "vmousecancel", clearTapHandlers );
				}

				function clickHandler( event ) {
					clearTapHandlers();

					// ONLY trigger a 'tap' event if the start target is
					// the same as the stop target.
					if ( origTarget === event.target ) {
						triggerCustomEvent( thisObject, "tap", event );
					}
				}

				$this.bind( "vmouseup", clearTapTimer )
					.bind( "vclick", clickHandler );
				$document.bind( "vmousecancel", clearTapHandlers );

				timer = setTimeout( function() {
					triggerCustomEvent( thisObject, "taphold", $.Event( "taphold", { target: origTarget } ) );
				}, $.event.special.tap.tapholdThreshold );
			});
		}
	};

	// also handles swipeleft, swiperight
	$.event.special.swipe = {
		scrollSupressionThreshold: 30, // More than this horizontal displacement, and we will suppress scrolling.

		durationThreshold: 1000, // More time than this, and it isn't a swipe.

		horizontalDistanceThreshold: 30,  // Swipe horizontal displacement must be more than this.

		verticalDistanceThreshold: 75,  // Swipe vertical displacement must be less than this.

		start: function( event ) {
			var data = event.originalEvent.touches ?
					event.originalEvent.touches[ 0 ] : event;
			return {
						time: ( new Date() ).getTime(),
						coords: [ data.pageX, data.pageY ],
						origin: $( event.target )
					};
		},

		stop: function( event ) {
			var data = event.originalEvent.touches ?
					event.originalEvent.touches[ 0 ] : event;
			return {
						time: ( new Date() ).getTime(),
						coords: [ data.pageX, data.pageY ]
					};
		},

		handleSwipe: function( start, stop ) {
			if ( stop.time - start.time < $.event.special.swipe.durationThreshold &&
				Math.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.horizontalDistanceThreshold &&
				Math.abs( start.coords[ 1 ] - stop.coords[ 1 ] ) < $.event.special.swipe.verticalDistanceThreshold ) {

				start.origin.trigger( "swipe" )
					.trigger( start.coords[0] > stop.coords[ 0 ] ? "swipeleft" : "swiperight" );
			}
		},

		setup: function() {
			var thisObject = this,
				$this = $( thisObject );

			$this.bind( touchStartEvent, function( event ) {
				var start = $.event.special.swipe.start( event ),
					stop;

				function moveHandler( event ) {
					if ( !start ) {
						return;
					}

					stop = $.event.special.swipe.stop( event );

					// prevent scrolling
					if ( Math.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.scrollSupressionThreshold ) {
						event.preventDefault();
					}
				}

				$this.bind( touchMoveEvent, moveHandler )
					.one( touchStopEvent, function() {
						$this.unbind( touchMoveEvent, moveHandler );

						if ( start && stop ) {
							$.event.special.swipe.handleSwipe( start, stop );
						}
						start = stop = undefined;
					});
			});
		}
	};
	$.each({
		scrollstop: "scrollstart",
		taphold: "tap",
		swipeleft: "swipe",
		swiperight: "swipe"
	}, function( event, sourceEvent ) {

		$.event.special[ event ] = {
			setup: function() {
				$( this ).bind( sourceEvent, $.noop );
			}
		};
	});

})( jQuery, this );
/*1.0*/
/*
Copyright 2012 Igor Vaynberg

Version: @@ver@@ Timestamp: @@timestamp@@

This software is licensed under the Apache License, Version 2.0 (the "Apache License") or the GNU
General Public License version 2 (the "GPL License"). You may choose either license to govern your
use of this software only upon the condition that you accept all of the terms of either the Apache
License or the GPL License.

You may obtain a copy of the Apache License and the GPL License at:

    http://www.apache.org/licenses/LICENSE-2.0
    http://www.gnu.org/licenses/gpl-2.0.html

Unless required by applicable law or agreed to in writing, software distributed under the
Apache License or the GPL Licesnse is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the Apache License and the GPL License for
the specific language governing permissions and limitations under the Apache License and the GPL License.
*/

(function(e){if(typeof e.fn.each2=="undefined"){e.fn.extend({each2:function(t){var n=e([0]),r=-1,i=this.length;while(++r<i&&(n.context=n[0]=this[r])&&t.call(n[0],r,n)!==false);return this}})}})(jQuery);(function(e,t){"use strict";function h(e,t){var n=0,r=t.length;for(;n<r;n=n+1){if(d(e,t[n]))return n}return-1}function p(){var t=e(c);t.appendTo("body");var n={width:t.width()-t[0].clientWidth,height:t.height()-t[0].clientHeight};t.remove();return n}function d(e,n){if(e===n)return true;if(e===t||n===t)return false;if(e===null||n===null)return false;if(e.constructor===String)return e+""===n+"";if(n.constructor===String)return n+""===e+"";return false}function v(t,n){var r,i,s;if(t===null||t.length<1)return[];r=t.split(n);for(i=0,s=r.length;i<s;i=i+1)r[i]=e.trim(r[i]);return r}function m(e){return e.outerWidth(false)-e.width()}function g(n){var r="keyup-change-value";n.bind("keydown",function(){if(e.data(n,r)===t){e.data(n,r,n.val())}});n.bind("keyup",function(){var i=e.data(n,r);if(i!==t&&n.val()!==i){e.removeData(n,r);n.trigger("keyup-change")}})}function y(n){n.bind("mousemove",function(n){var r=a;if(r===t||r.x!==n.pageX||r.y!==n.pageY){e(n.target).trigger("mousemove-filtered",n)}})}function b(e,n,r){r=r||t;var i;return function(){var t=arguments;window.clearTimeout(i);i=window.setTimeout(function(){n.apply(r,t)},e)}}function w(e){var t=false,n;return function(){if(t===false){n=e();t=true}return n}}function E(e,t){var n=b(e,function(e){t.trigger("scroll-debounced",e)});t.bind("scroll",function(e){if(h(e.target,t.get())>=0)n(e)})}function S(e){if(e[0]===document.activeElement)return;window.setTimeout(function(){var t=e[0],n=e.val().length,r;e.focus();if(e.is(":visible")&&t===document.activeElement){if(t.setSelectionRange){t.setSelectionRange(n,n)}else if(t.createTextRange){r=t.createTextRange();r.collapse(false);r.select()}}},0)}function x(e){e.preventDefault();e.stopPropagation()}function T(e){e.preventDefault();e.stopImmediatePropagation()}function N(t){if(!u){var n=t[0].currentStyle||window.getComputedStyle(t[0],null);u=e(document.createElement("div")).css({position:"absolute",left:"-10000px",top:"-10000px",display:"none",fontSize:n.fontSize,fontFamily:n.fontFamily,fontStyle:n.fontStyle,fontWeight:n.fontWeight,letterSpacing:n.letterSpacing,textTransform:n.textTransform,whiteSpace:"nowrap"});u.attr("class","select2-sizer");e("body").append(u)}u.text(t.val());return u.width()}function C(t,n,r){var i,s=[],o;i=t.attr("class");if(i){i=""+i;e(i.split(" ")).each2(function(){if(this.indexOf("select2-")===0){s.push(this)}})}i=n.attr("class");if(i){i=""+i;e(i.split(" ")).each2(function(){if(this.indexOf("select2-")!==0){o=r(this);if(o){s.push(this)}}})}t.attr("class",s.join(" "))}function k(e,t,n,r){var i=e.toUpperCase().indexOf(t.toUpperCase()),s=t.length;if(i<0){n.push(r(e));return}n.push(r(e.substring(0,i)));n.push("<span class='select2-match'>");n.push(r(e.substring(i,i+s)));n.push("</span>");n.push(r(e.substring(i+s,e.length)))}function L(t){var n,r=0,i=null,s=t.quietMillis||100,o=t.url,u=this;return function(a){window.clearTimeout(n);n=window.setTimeout(function(){r+=1;var n=r,s=t.data,f=o,l=t.transport||e.ajax,c=t.type||"GET",h={};s=s?s.call(u,a.term,a.page,a.context):null;f=typeof f==="function"?f.call(u,a.term,a.page,a.context):f;if(null!==i){i.abort()}if(t.params){if(e.isFunction(t.params)){e.extend(h,t.params.call(u))}else{e.extend(h,t.params)}}e.extend(h,{url:f,dataType:t.dataType,data:s,type:c,cache:false,success:function(e){if(n<r){return}var i=t.results(e,a.page);a.callback(i)},error:function(e,i,s){if(n<r){return}t.error(e,i,s);a.callback({results:[],error:s})}});i=l.call(u,h)},s)}}function A(t){var n=t,r,i,s=function(e){return""+e.text};if(e.isArray(n)){i=n;n={results:i}}if(e.isFunction(n)===false){i=n;n=function(){return i}}var o=n();if(o.text){s=o.text;if(!e.isFunction(s)){r=o.text;s=function(e){return e[r]}}}return function(t){var r=t.term,i={results:[]},o;if(r===""){t.callback(n());return}o=function(n,i){var u,a;n=n[0];if(n.children){u={};for(a in n){if(n.hasOwnProperty(a))u[a]=n[a]}u.children=[];e(n.children).each2(function(e,t){o(t,u.children)});if(u.children.length||t.matcher(r,s(u),n)){i.push(u)}}else{if(t.matcher(r,s(n),n)){i.push(n)}}};e(n().results).each2(function(e,t){o(t,i.results)});t.callback(i)}}function O(n){var r=e.isFunction(n);return function(i){var s=i.term,o={results:[]};e(r?n():n).each(function(){var e=this.text!==t,n=e?this.text:this;if(s===""||i.matcher(s,n)){o.results.push(e?this:{id:this,text:this})}});i.callback(o)}}function M(t,n){if(e.isFunction(t))return true;if(!t)return false;throw new Error("formatterName must be a function or a falsy value")}function _(t){return e.isFunction(t)?t():t}function D(t){var n=0;e.each(t,function(e,t){if(t.children){n+=D(t.children)}else{n++}});return n}function P(e,n,r,i){var s=e,o=false,u,a,f,l,c;if(!i.createSearchChoice||!i.tokenSeparators||i.tokenSeparators.length<1)return t;while(true){a=-1;for(f=0,l=i.tokenSeparators.length;f<l;f++){c=i.tokenSeparators[f];a=e.indexOf(c);if(a>=0)break}if(a<0)break;u=e.substring(0,a);e=e.substring(a+c.length);if(u.length>0){u=i.createSearchChoice(u,n);if(u!==t&&u!==null&&i.id(u)!==t&&i.id(u)!==null){o=false;for(f=0,l=n.length;f<l;f++){if(d(i.id(u),i.id(n[f]))){o=true;break}}if(!o)r(u)}}}if(s!==e)return e}function H(t,n){var r=function(){};r.prototype=new t;r.prototype.constructor=r;r.prototype.parent=t.prototype;r.prototype=e.extend(r.prototype,n);return r}if(window.Select2!==t){return}var n,r,i,s,o,u,a,f,l,n={TAB:9,ENTER:13,ESC:27,SPACE:32,LEFT:37,UP:38,RIGHT:39,DOWN:40,SHIFT:16,CTRL:17,ALT:18,PAGE_UP:33,PAGE_DOWN:34,HOME:36,END:35,BACKSPACE:8,DELETE:46,isArrow:function(e){e=e.which?e.which:e;switch(e){case n.LEFT:case n.RIGHT:case n.UP:case n.DOWN:return true}return false},isControl:function(e){var t=e.which;switch(t){case n.SHIFT:case n.CTRL:case n.ALT:return true}if(e.metaKey)return true;return false},isFunctionKey:function(e){e=e.which?e.which:e;return e>=112&&e<=123}},c="<div class='select2-measure-scrollbar'></div>";f=e(document);o=function(){var e=1;return function(){return e++}}();f.bind("mousemove",function(e){a={x:e.pageX,y:e.pageY}});r=H(Object,{bind:function(e){var t=this;return function(){e.apply(t,arguments)}},init:function(n){var r,i,s=".select2-results",u;this.opts=n=this.prepareOpts(n);this.id=n.id;if(n.element.data("select2")!==t&&n.element.data("select2")!==null){this.destroy()}this.enabled=true;this.container=this.createContainer();this.containerId="s2id_"+(n.element.attr("id")||"autogen"+o());this.containerSelector="#"+this.containerId.replace(/([;&,\.\+\*\~':"\!\^#$%@\[\]\(\)=>\|])/g,"\\$1");this.container.attr("id",this.containerId);this.body=w(function(){return n.element.closest("body")});C(this.container,this.opts.element,this.opts.adaptContainerCssClass);this.container.css(_(n.containerCss));this.container.addClass(_(n.containerCssClass));this.elementTabIndex=this.opts.element.attr("tabindex");this.opts.element.data("select2",this).bind("focus.select2",function(){e(this).select2("focus")}).attr("tabindex","-1").before(this.container);this.container.data("select2",this);this.dropdown=this.container.find(".select2-drop");this.dropdown.addClass(_(n.dropdownCssClass));this.dropdown.data("select2",this);this.results=r=this.container.find(s);this.search=i=this.container.find("input.select2-input");this.resultsPage=0;this.context=null;this.initContainer();y(this.results);this.dropdown.delegate(s,"mousemove-filtered touchstart touchmove touchend",this.bind(this.highlightUnderEvent));E(80,this.results);this.dropdown.delegate(s,"scroll-debounced",this.bind(this.loadMoreIfNeeded));e(this.container).delegate(".select2-input","change",function(e){e.stopPropagation()});e(this.dropdown).delegate(".select2-input","change",function(e){e.stopPropagation()});if(e.fn.mousewheel){r.mousewheel(function(e,t,n,i){var s=r.scrollTop(),o;if(i>0&&s-i<=0){r.scrollTop(0);x(e)}else if(i<0&&r.get(0).scrollHeight-r.scrollTop()+i<=r.height()){r.scrollTop(r.get(0).scrollHeight-r.height());x(e)}})}g(i);i.bind("keyup-change input paste",this.bind(this.updateResults));i.bind("focus",function(){i.addClass("select2-focused")});i.bind("blur",function(){i.removeClass("select2-focused")});this.dropdown.delegate(s,"mouseup",this.bind(function(t){if(e(t.target).closest(".select2-result-selectable").length>0){this.highlightUnderEvent(t);this.selectHighlighted(t)}}));this.dropdown.bind("click mouseup mousedown",function(e){e.stopPropagation()});if(e.isFunction(this.opts.initSelection)){this.initSelection();this.monitorSource()}if(n.element.is(":disabled")||n.element.is("[readonly='readonly']"))this.disable();l=l||p()},destroy:function(){var e=this.opts.element.data("select2");if(this.propertyObserver){delete this.propertyObserver;this.propertyObserver=null}if(e!==t){e.container.remove();e.dropdown.remove();e.opts.element.removeClass("select2-offscreen").removeData("select2").unbind(".select2").attr({tabindex:this.elementTabIndex}).show()}},optionToData:function(e){if(e.is("option")){return{id:e.attr("value"),text:e.text(),element:e.get(),css:e.attr("class"),disabled:d(e.attr("disabled"),"disabled"),locked:d(e.attr("locked"),"locked")}}else if(e.is("optgroup")){return{text:e.attr("label"),children:[],element:e.get(),css:e.attr("class")}}},prepareOpts:function(n){var r,i,s,o,u=this;r=n.element;if(r.get(0).tagName.toLowerCase()==="select"){this.select=i=n.element}if(i){e.each(["id","multiple","ajax","query","createSearchChoice","initSelection","data","tags"],function(){if(this in n){throw new Error("Option '"+this+"' is not allowed for Select2 when attached to a <select> element.")}})}n=e.extend({},{populateResults:function(r,i,s){var o,a,f,l,c=this.opts.id;o=function(r,i,a){var f,l,h,p,d,v,m,g,y,b;r=n.sortResults(r,i,s);for(f=0,l=r.length;f<l;f=f+1){h=r[f];d=h.disabled===true;p=!d&&c(h)!==t;v=h.children&&h.children.length>0;m=e("<li></li>");m.addClass("select2-results-dept-"+a);m.addClass("select2-result");m.addClass(p?"select2-result-selectable":"select2-result-unselectable");if(d){m.addClass("select2-disabled")}if(v){m.addClass("select2-result-with-children")}m.addClass(u.opts.formatResultCssClass(h));g=e(document.createElement("div"));g.addClass("select2-result-label");b=n.formatResult(h,g,s,u.opts.escapeMarkup);if(b!==t){g.html(b)}m.append(g);if(v){y=e("<ul></ul>");y.addClass("select2-result-sub");o(h.children,y,a+1);m.append(y)}m.data("select2-data",h);i.append(m)}};o(i,r,0)}},e.fn.select2.defaults,n);if(typeof n.id!=="function"){s=n.id;n.id=function(e){return e[s]}}if(e.isArray(n.element.data("select2Tags"))){if("tags"in n){throw"tags specified as both an attribute 'data-select2-tags' and in options of Select2 "+n.element.attr("id")}n.tags=n.element.data("select2Tags")}if(i){n.query=this.bind(function(n){var i={results:[],more:false},s=n.term,o,a,f;f=function(e,t){var r;if(e.is("option")){if(n.matcher(s,e.text(),e)){t.push(u.optionToData(e))}}else if(e.is("optgroup")){r=u.optionToData(e);e.children().each2(function(e,t){f(t,r.children)});if(r.children.length>0){t.push(r)}}};o=r.children();if(this.getPlaceholder()!==t&&o.length>0){a=o[0];if(e(a).text()===""){o=o.not(a)}}o.each2(function(e,t){f(t,i.results)});n.callback(i)});n.id=function(e){return e.id};n.formatResultCssClass=function(e){return e.css}}else{if(!("query"in n)){if("ajax"in n){o=n.element.data("ajax-url");if(o&&o.length>0){n.ajax.url=o}n.query=L.call(n.element,n.ajax)}else if("data"in n){n.query=A(n.data)}else if("tags"in n){n.query=O(n.tags);if(n.createSearchChoice===t){n.createSearchChoice=function(e){return{id:e,text:e}}}if(n.initSelection===t){n.initSelection=function(t,r){var i=[];e(v(t.val(),n.separator)).each(function(){var t=this,r=this,s=n.tags;if(e.isFunction(s))s=s();e(s).each(function(){if(d(this.id,t)){r=this.text;return false}});i.push({id:t,text:r})});r(i)}}}}}if(typeof n.query!=="function"){throw"query function not defined for Select2 "+n.element.attr("id")}return n},monitorSource:function(){var e=this.opts.element,t;e.bind("change.select2",this.bind(function(e){if(this.opts.element.data("select2-change-triggered")!==true){this.initSelection()}}));t=this.bind(function(){var e,t,n=this;e=this.opts.element.attr("disabled")!=="disabled";t=this.opts.element.attr("readonly")==="readonly";e=e&&!t;if(this.enabled!==e){if(e){this.enable()}else{this.disable()}}C(this.container,this.opts.element,this.opts.adaptContainerCssClass);this.container.addClass(_(this.opts.containerCssClass));C(this.dropdown,this.opts.element,this.opts.adaptDropdownCssClass);this.dropdown.addClass(_(this.opts.dropdownCssClass))});e.bind("propertychange.select2 DOMAttrModified.select2",t);if(typeof WebKitMutationObserver!=="undefined"){if(this.propertyObserver){delete this.propertyObserver;this.propertyObserver=null}this.propertyObserver=new WebKitMutationObserver(function(e){e.forEach(t)});this.propertyObserver.observe(e.get(0),{attributes:true,subtree:false})}},triggerSelect:function(t){var n=e.Event("selected",{val:this.id(t),object:t});this.opts.element.trigger(n);return!n.isDefaultPrevented()},triggerChange:function(t){t=t||{};t=e.extend({},t,{type:"change",val:this.val()});this.opts.element.data("select2-change-triggered",true);this.opts.element.trigger(t);this.opts.element.data("select2-change-triggered",false);this.opts.element.click();if(this.opts.blurOnChange)this.opts.element.blur()},enable:function(){if(this.enabled)return;this.enabled=true;this.container.removeClass("select2-container-disabled");this.opts.element.removeAttr("disabled")},disable:function(){if(!this.enabled)return;this.close();this.enabled=false;this.container.addClass("select2-container-disabled");this.opts.element.attr("disabled","disabled")},opened:function(){return this.container.hasClass("select2-dropdown-open")},positionDropdown:function(){var t=this.dropdown,n=this.container.offset(),r=this.container.outerHeight(false),i=this.container.outerWidth(false),s=t.outerHeight(false),o=e(window).scrollLeft()+e(window).width(),u=e(window).scrollTop()+e(window).height(),a=n.top+r,f=n.left,c=a+s<=u,h=n.top-s>=this.body().scrollTop(),p=t.outerWidth(false),d=f+p<=o,v=t.hasClass("select2-drop-above"),m,g,y,b;if(this.opts.dropdownAutoWidth){b=e(".select2-results",t)[0];t.addClass("select2-drop-auto-width");t.css("width","");p=t.outerWidth(false)+(b.scrollHeight===b.clientHeight?0:l.width);p>i?i=p:p=i;d=f+p<=o}else{this.container.removeClass("select2-drop-auto-width")}if(this.body().css("position")!=="static"){m=this.body().offset();a-=m.top;f-=m.left}if(v){g=true;if(!h&&c)g=false}else{g=false;if(!c&&h)g=true}if(!d){f=n.left+i-p}if(g){a=n.top-s;this.container.addClass("select2-drop-above");t.addClass("select2-drop-above")}else{this.container.removeClass("select2-drop-above");t.removeClass("select2-drop-above")}y=e.extend({top:a,left:f,width:i},_(this.opts.dropdownCss));t.css(y)},shouldOpen:function(){var t;if(this.opened())return false;t=e.Event("opening");this.opts.element.trigger(t);return!t.isDefaultPrevented()},clearDropdownAlignmentPreference:function(){this.container.removeClass("select2-drop-above");this.dropdown.removeClass("select2-drop-above")},open:function(){if(!this.shouldOpen())return false;window.setTimeout(this.bind(this.opening),1);return true},opening:function(){function u(){return{width:Math.max(document.documentElement.scrollWidth,e(window).width()),height:Math.max(document.documentElement.scrollHeight,e(window).height())}}var t=this.containerId,n="scroll."+t,r="resize."+t,i="orientationchange."+t,s;this.container.addClass("select2-dropdown-open").addClass("select2-container-active");this.clearDropdownAlignmentPreference();if(this.dropdown[0]!==this.body().children().last()[0]){this.dropdown.detach().appendTo(this.body())}s=e("#select2-drop-mask");if(s.length==0){s=e(document.createElement("div"));s.attr("id","select2-drop-mask").attr("class","select2-drop-mask");s.hide();s.appendTo(this.body());s.bind("mousedown touchstart",function(t){var n=e("#select2-drop"),r;if(n.length>0){r=n.data("select2");if(r.opts.selectOnBlur){r.selectHighlighted({noFocus:true})}r.close()}})}if(this.dropdown.prev()[0]!==s[0]){this.dropdown.before(s)}e("#select2-drop").removeAttr("id");this.dropdown.attr("id","select2-drop");s.css(u());s.show();this.dropdown.show();this.positionDropdown();this.dropdown.addClass("select2-drop-active");this.ensureHighlightVisible();var o=this;this.container.parents().add(window).each(function(){e(this).bind(r+" "+n+" "+i,function(t){e("#select2-drop-mask").css(u());o.positionDropdown()})})},close:function(){if(!this.opened())return;var t=this.containerId,n="scroll."+t,r="resize."+t,i="orientationchange."+t;this.container.parents().add(window).each(function(){e(this).unbind(n).unbind(r).unbind(i)});this.clearDropdownAlignmentPreference();e("#select2-drop-mask").hide();this.dropdown.removeAttr("id");this.dropdown.hide();this.container.removeClass("select2-dropdown-open");this.results.empty();this.clearSearch();this.search.removeClass("select2-active small-spinner");this.opts.element.trigger(e.Event("close"))},clearSearch:function(){},getMaximumSelectionSize:function(){return _(this.opts.maximumSelectionSize)},ensureHighlightVisible:function(){var t=this.results,n,r,i,s,o,u,a;r=this.highlight();if(r<0)return;if(r==0){t.scrollTop(0);return}n=this.findHighlightableChoices().find(".select2-result-label");i=e(n[r]);s=i.offset().top+i.outerHeight(true);if(r===n.length-1){a=t.find("li.select2-more-results");if(a.length>0){s=a.offset().top+a.outerHeight(true)}}o=t.offset().top+t.outerHeight(true);if(s>o){t.scrollTop(t.scrollTop()+(s-o))}u=i.offset().top-t.offset().top;if(u<0&&i.css("display")!="none"){t.scrollTop(t.scrollTop()+u)}},findHighlightableChoices:function(){return this.results.find(".select2-result-selectable:not(.select2-selected):not(.select2-disabled)")},moveHighlight:function(t){var n=this.findHighlightableChoices(),r=this.highlight();while(r>-1&&r<n.length){r+=t;var i=e(n[r]);if(i.hasClass("select2-result-selectable")&&!i.hasClass("select2-disabled")&&!i.hasClass("select2-selected")){this.highlight(r);break}}},highlight:function(t){var n=this.findHighlightableChoices(),r,i;if(arguments.length===0){return h(n.filter(".select2-highlighted")[0],n.get())}if(t>=n.length)t=n.length-1;if(t<0)t=0;this.results.find(".select2-highlighted").removeClass("select2-highlighted");r=e(n[t]);r.addClass("select2-highlighted");this.ensureHighlightVisible();i=r.data("select2-data");if(i){this.opts.element.trigger({type:"highlight",val:this.id(i),choice:i})}},countSelectableResults:function(){return this.findHighlightableChoices().length},highlightUnderEvent:function(t){var n=e(t.target).closest(".select2-result-selectable");if(n.length>0&&!n.is(".select2-highlighted")){var r=this.findHighlightableChoices();this.highlight(r.index(n))}else if(n.length==0){this.results.find(".select2-highlighted").removeClass("select2-highlighted")}},loadMoreIfNeeded:function(){var e=this.results,t=e.find("li.select2-more-results"),n,r=-1,i=this.resultsPage+1,s=this,o=this.search.val(),u=this.context;if(t.length===0)return;n=t.offset().top-e.offset().top-e.height();if(n<=this.opts.loadMorePadding){t.addClass("select2-active small-spinner");this.opts.query({element:this.opts.element,term:o,page:i,context:u,matcher:this.opts.matcher,callback:this.bind(function(n){if(!s.opened())return;s.opts.populateResults.call(this,e,n.results,{term:o,page:i,context:u});s.postprocessResults(n,false,false);if(n.more===true){t.detach().appendTo(e).text(s.opts.formatLoadMore(i+1));window.setTimeout(function(){s.loadMoreIfNeeded()},10)}else{t.remove()}s.positionDropdown();s.resultsPage=i;s.context=n.context})})}},tokenize:function(){},updateResults:function(n){function c(){i.scrollTop(0);r.removeClass("select2-active small-spinner");r.removeClass();u.positionDropdown()}function h(e){i.html(e);c()}var r=this.search,i=this.results,s=this.opts,o,u=this,a,f=r.val(),l=e.data(this.container,"select2-last-term");if(n!==true&&l&&d(f,l))return;e.data(this.container,"select2-last-term",f);if(n!==true&&(this.showSearchInput===false||!this.opened())){return}var p=this.getMaximumSelectionSize();if(p>=1){o=this.data();if(e.isArray(o)&&o.length>=p&&M(s.formatSelectionTooBig,"formatSelectionTooBig")){h("<li class='select2-selection-limit'>"+s.formatSelectionTooBig(p)+"</li>");return}}if(r.val().length<s.minimumInputLength){if(M(s.formatInputTooShort,"formatInputTooShort")){h("<li class='select2-no-results'>"+s.formatInputTooShort(r.val(),s.minimumInputLength)+"</li>")}else{h("")}return}if(s.maximumInputLength&&r.val().length>s.maximumInputLength){if(M(s.formatInputTooLong,"formatInputTooLong")){h("<li class='select2-no-results'>"+s.formatInputTooLong(r.val(),s.maximumInputLength)+"</li>")}else{h("")}return}if(s.formatSearching&&this.findHighlightableChoices().length===0){h("<li class='select2-searching'>"+s.formatSearching()+"</li>")}r.addClass("select2-active small-spinner");a=this.tokenize();if(a!=t&&a!=null){r.val(a)}this.resultsPage=1;s.query({element:s.element,term:r.val(),page:this.resultsPage,context:null,matcher:s.matcher,callback:this.bind(function(o){var a;if(!this.opened()){this.search.removeClass("select2-active small-spinner");return}this.context=o.context===t?null:o.context;if(this.opts.createSearchChoice&&r.val()!==""){a=this.opts.createSearchChoice.call(null,r.val(),o.results);if(a!==t&&a!==null&&u.id(a)!==t&&u.id(a)!==null){if(e(o.results).filter(function(){return d(u.id(this),u.id(a))}).length===0){o.results.unshift(a)}}}if(o.error){h("<li class='select2-no-results'> Sorry, an error occurred.</li>");return}else if(o.results.length===0&&M(s.formatNoMatches,"formatNoMatches")){h("<li class='select2-no-results'>"+s.formatNoMatches(r.val())+"</li>");return}i.empty();u.opts.populateResults.call(this,i,o.results,{term:r.val(),page:this.resultsPage,context:null});if(o.more===true&&M(s.formatLoadMore,"formatLoadMore")){i.append("<li class='select2-more-results'>"+u.opts.escapeMarkup(s.formatLoadMore(this.resultsPage))+"</li>");window.setTimeout(function(){u.loadMoreIfNeeded()},10)}this.postprocessResults(o,n);c();this.opts.element.trigger({type:"loaded",data:o})})})},cancel:function(){this.close()},blur:function(){if(this.opts.selectOnBlur)this.selectHighlighted({noFocus:true});this.close();this.container.removeClass("select2-container-active");if(this.search[0]===document.activeElement){this.search.blur()}this.clearSearch();this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus")},focusSearch:function(){S(this.search)},selectHighlighted:function(e){var t=this.highlight(),n=this.results.find(".select2-highlighted"),r=n.closest(".select2-result").data("select2-data");if(r){this.highlight(t);this.onSelect(r,e)}},getPlaceholder:function(){return this.opts.element.attr("placeholder")||this.opts.element.attr("data-placeholder")||this.opts.element.data("placeholder")||this.opts.placeholder},initContainerWidth:function(){function n(){var n,r,i,s,o;if(this.opts.width==="off"){return null}else if(this.opts.width==="element"){return this.opts.element.outerWidth(false)===0?"auto":this.opts.element.outerWidth(false)+"px"}else if(this.opts.width==="copy"||this.opts.width==="resolve"){n=this.opts.element.attr("style");if(n!==t){r=n.split(";");for(s=0,o=r.length;s<o;s=s+1){i=r[s].replace(/\s/g,"").match(/width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i);if(i!==null&&i.length>=1)return i[1]}}n=this.opts.element.css("width");if(n&&n.length>0)return n;if(this.opts.width==="resolve"){return this.opts.element.outerWidth(false)===0?"auto":this.opts.element.outerWidth(false)+"px"}return null}else if(e.isFunction(this.opts.width)){return this.opts.width()}else{return this.opts.width}}var r=n.call(this);if(r!==null){this.container.css("width",r)}}});i=H(r,{createContainer:function(){var t=e(document.createElement("div")).attr({"class":"select2-container"}).html(["<a href='javascript:void(0)' onclick='return false;' class='select2-choice' tabindex='-1'>","   <span> </span><abbr class='select2-search-choice-close select2-display-none'></abbr>","   <div><b></b></div>","</a>","<input class='select2-focusser select2-offscreen' type='text'/>","<div class='select2-drop select2-display-none'>","   <div class='select2-search'>","       <input type='text' autocomplete='off' class='select2-input'/>","   </div>","   <ul class='select2-results'>","   </ul>","</div>"].join(""));return t},disable:function(){if(!this.enabled)return;this.parent.disable.apply(this,arguments);this.focusser.attr("disabled","disabled")},enable:function(){if(this.enabled)return;this.parent.enable.apply(this,arguments);this.focusser.removeAttr("disabled")},opening:function(){this.parent.opening.apply(this,arguments);if(this.showSearchInput!==false){this.search.val(this.focusser.val())}this.search.focus();this.focusser.attr("disabled","disabled").val("");this.updateResults(true);this.opts.element.trigger(e.Event("open"))},close:function(){if(!this.opened())return;this.parent.close.apply(this,arguments);this.focusser.removeAttr("disabled");S(this.focusser)},focus:function(){if(this.opened()){this.close()}else{this.focusser.removeAttr("disabled");this.focusser.focus()}},isFocused:function(){return this.container.hasClass("select2-container-active")},cancel:function(){this.parent.cancel.apply(this,arguments);this.focusser.removeAttr("disabled");this.focusser.focus()},initContainer:function(){var t,r=this.container,i=this.dropdown,s=false;this.showSearch(this.opts.minimumResultsForSearch>=0);this.selection=t=r.find(".select2-choice");this.focusser=r.find(".select2-focusser");this.focusser.attr("id","s2id_autogen"+o());e("label[for='"+this.opts.element.attr("id")+"']").attr("for",this.focusser.attr("id"));this.focusser.attr("tabindex",this.elementTabIndex);this.search.bind("keydown",this.bind(function(e){if(!this.enabled)return;if(e.which===n.PAGE_UP||e.which===n.PAGE_DOWN){x(e);return}switch(e.which){case n.UP:case n.DOWN:this.moveHighlight(e.which===n.UP?-1:1);x(e);return;case n.TAB:case n.ENTER:this.selectHighlighted();x(e);return;case n.ESC:this.cancel(e);x(e);return}}));this.search.bind("blur",this.bind(function(e){if(document.activeElement===this.body().get(0)){window.setTimeout(this.bind(function(){this.search.focus()}),0)}}));this.focusser.bind("keydown",this.bind(function(e){if(!this.enabled)return;if(e.which===n.TAB||n.isControl(e)||n.isFunctionKey(e)||e.which===n.ESC){return}if(this.opts.openOnEnter===false&&e.which===n.ENTER){x(e);return}if(e.which==n.DOWN||e.which==n.UP||e.which==n.ENTER&&this.opts.openOnEnter){this.open();x(e);return}if(e.which==n.DELETE||e.which==n.BACKSPACE){if(this.opts.allowClear){this.clear()}x(e);return}}));g(this.focusser);this.focusser.bind("keyup-change input",this.bind(function(e){e.stopPropagation();if(this.opened())return;this.open()}));t.delegate("abbr","mousedown",this.bind(function(e){if(!this.enabled)return;this.clear();T(e);this.close();this.selection.focus()}));t.bind("mousedown",this.bind(function(e){s=true;if(this.opened()){this.close()}else if(this.enabled){this.open()}x(e);s=false}));i.bind("mousedown",this.bind(function(){this.search.focus()}));t.bind("focus",this.bind(function(e){x(e)}));this.focusser.bind("focus",this.bind(function(){this.container.addClass("select2-container-active")})).bind("blur",this.bind(function(){if(!this.opened()){this.container.removeClass("select2-container-active")}}));this.search.bind("focus",this.bind(function(){this.container.addClass("select2-container-active")}));this.initContainerWidth();this.opts.element.addClass("select2-offscreen");this.setPlaceholder()},clear:function(e){var t=this.selection.data("select2-data");if(t){this.opts.element.val("");this.selection.find("span").empty();this.selection.removeData("select2-data");this.setPlaceholder();if(e!==false){this.opts.element.trigger({type:"removed",val:this.id(t),choice:t});this.triggerChange({removed:t})}}},initSelection:function(){var e;if(this.opts.element.val()===""&&this.opts.element.text()===""){this.updateSelection([]);this.close();this.setPlaceholder()}else{var n=this;this.opts.initSelection.call(null,this.opts.element,function(e){if(e!==t&&e!==null){n.updateSelection(e);n.close();n.setPlaceholder()}})}},prepareOpts:function(){var t=this.parent.prepareOpts.apply(this,arguments),n=this;if(t.element.get(0).tagName.toLowerCase()==="select"){t.initSelection=function(e,t){var r=e.find(":selected");t(n.optionToData(r))}}else if("data"in t){t.initSelection=t.initSelection||function(n,r){var i=n.val();var s=null;t.query({matcher:function(e,n,r){var o=d(i,t.id(r));if(o){s=r}return o},callback:!e.isFunction(r)?e.noop:function(){r(s)}})}}return t},getPlaceholder:function(){if(this.select){if(this.select.find("option").first().text()!==""){return t}}return this.parent.getPlaceholder.apply(this,arguments)},setPlaceholder:function(){var e=this.getPlaceholder();if(this.opts.element.val()===""&&e!==t){if(this.select&&this.select.find("option:first").text()!=="")return;this.selection.find("span").html(this.opts.escapeMarkup(e));this.selection.addClass("select2-default");this.container.removeClass("select2-allowclear");this.selection.find("abbr").hide()}},postprocessResults:function(e,t,n){var r=0,i=this,s=true;this.findHighlightableChoices().each2(function(e,t){if(d(i.id(t.data("select2-data")),i.opts.element.val())){r=e;return false}});if(n!==false){this.highlight(r)}if(t===true){var o=this.opts.minimumResultsForSearch;s=o<0?false:D(e.results)>=o;this.showSearch(s)}},showSearch:function(t){this.showSearchInput=t;this.dropdown.find(".select2-search")[t?"removeClass":"addClass"]("select2-search-hidden");e(this.dropdown,this.container)[t?"addClass":"removeClass"]("select2-with-searchbox")},onSelect:function(e,t){if(!this.triggerSelect(e)){return}var n=this.opts.element.val(),r=this.data();this.opts.element.val(this.id(e));this.updateSelection(e);this.opts.element.trigger({type:"selected",val:this.id(e),choice:e});this.close();if(!t||!t.noFocus)this.selection.focus();if(!d(n,this.id(e))){this.triggerChange({added:e,removed:r})}},updateSelection:function(e){var n=this.selection.find("span"),r;this.selection.data("select2-data",e);n.empty();r=this.opts.formatSelection(e,n);if(r!==t){n.append(this.opts.escapeMarkup(r))}this.selection.removeClass("select2-default");if(this.opts.allowClear&&this.getPlaceholder()!==t){this.container.addClass("select2-allowclear");this.selection.find("abbr").show()}},val:function(){var e,n=false,r=null,i=this,s=this.data();if(arguments.length===0){return this.opts.element.val()}e=arguments[0];if(arguments.length>1){n=arguments[1]}if(this.select){this.select.val(e).find(":selected").each2(function(e,t){r=i.optionToData(t);return false});this.updateSelection(r);this.setPlaceholder();if(n){this.triggerChange({added:r,removed:s})}}else{if(this.opts.initSelection===t){throw new Error("cannot call val() if initSelection() is not defined")}if(!e&&e!==0){this.clear(n);return}this.opts.element.val(e);this.opts.initSelection(this.opts.element,function(e){i.opts.element.val(!e?"":i.id(e));i.updateSelection(e);i.setPlaceholder();if(n){i.triggerChange({added:e,removed:s})}})}},clearSearch:function(){this.search.val("");this.focusser.val("")},data:function(e,n){var r;if(arguments.length===0){r=this.selection.data("select2-data");if(r==t)r=null;return r}else{if(!e||e===""){this.clear(n)}else{r=this.data();this.opts.element.val(!e?"":this.id(e));this.updateSelection(e);if(n){this.triggerChange({added:e,removed:r})}}}}});s=H(r,{createContainer:function(){var t=e(document.createElement("div")).attr({"class":"select2-container select2-container-multi"}).html(["    <ul class='select2-choices'>","  <li class='select2-search-field'>","    <input type='text' autocomplete='off' class='select2-input'>","  </li>","</ul>","<div class='select2-drop select2-drop-multi select2-display-none'>","   <ul class='select2-results'>","   </ul>","</div>"].join(""));return t},prepareOpts:function(){var t=this.parent.prepareOpts.apply(this,arguments),n=this;if(t.element.get(0).tagName.toLowerCase()==="select"){t.initSelection=function(e,t){var r=[];e.find(":selected").each2(function(e,t){r.push(n.optionToData(t))});t(r)}}else if("data"in t){t.initSelection=t.initSelection||function(n,r){var i=v(n.val(),t.separator);var s=[];t.query({matcher:function(n,r,o){var u=e.grep(i,function(e){return d(e,t.id(o))}).length;if(u){s.push(o)}return u},callback:!e.isFunction(r)?e.noop:function(){r(s)}})}}return t},initContainer:function(){var t=".select2-choices",r;this.searchContainer=this.container.find(".select2-search-field");this.selection=r=this.container.find(t);this.search.attr("id","s2id_autogen"+o());e("label[for='"+this.opts.element.attr("id")+"']").attr("for",this.search.attr("id"));this.search.bind("input paste",this.bind(function(){if(!this.enabled)return;if(!this.opened()){this.open()}}));this.search.attr("tabindex",this.elementTabIndex);this.search.bind("keydown",this.bind(function(e){if(!this.enabled)return;if(e.which===n.BACKSPACE&&this.search.val()===""){this.close();var t,i=r.find(".select2-search-choice-focus");if(i.length>0){this.unselect(i.first());this.search.width(10);x(e);return}t=r.find(".select2-search-choice:not(.select2-locked)");if(t.length>0){t.last().addClass("select2-search-choice-focus")}}else{r.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus")}if(this.opened()){switch(e.which){case n.UP:case n.DOWN:this.moveHighlight(e.which===n.UP?-1:1);x(e);return;case n.ENTER:case n.TAB:this.selectHighlighted();x(e);return;case n.ESC:this.cancel(e);x(e);return}}if(e.which===n.TAB||n.isControl(e)||n.isFunctionKey(e)||e.which===n.BACKSPACE||e.which===n.ESC){return}if(e.which===n.ENTER){if(this.opts.openOnEnter===false){return}else if(e.altKey||e.ctrlKey||e.shiftKey||e.metaKey){return}}this.open();if(e.which===n.PAGE_UP||e.which===n.PAGE_DOWN){x(e)}if(e.which===n.ENTER){x(e)}}));this.search.bind("keyup",this.bind(this.resizeSearch));this.search.bind("blur",this.bind(function(e){this.container.removeClass("select2-container-active");this.search.removeClass("select2-focused");this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus");if(!this.opened())this.clearSearch();e.stopImmediatePropagation()}));this.container.delegate(t,"mousedown",this.bind(function(t){if(!this.enabled)return;if(e(t.target).closest(".select2-search-choice").length>0){return}this.clearPlaceholder();this.open();this.focusSearch();t.preventDefault()}));this.container.delegate(t,"focus",this.bind(function(){if(!this.enabled)return;this.container.addClass("select2-container-active");this.dropdown.addClass("select2-drop-active");this.clearPlaceholder()}));this.initContainerWidth();this.opts.element.addClass("select2-offscreen");this.clearSearch()},enable:function(){if(this.enabled)return;this.parent.enable.apply(this,arguments);this.search.removeAttr("disabled")},disable:function(){if(!this.enabled)return;this.parent.disable.apply(this,arguments);this.search.attr("disabled",true)},initSelection:function(){var e;if(this.opts.element.val()===""&&this.opts.element.text()===""){this.updateSelection([]);this.close();this.clearSearch()}if(this.select||this.opts.element.val()!==""){var n=this;this.opts.initSelection.call(null,this.opts.element,function(e){if(e!==t&&e!==null){n.updateSelection(e);n.close();n.clearSearch()}})}},clearSearch:function(){var e=this.getPlaceholder(),n=this.getMaxSearchWidth();if(e!==t&&this.getVal().length===0&&this.search.hasClass("select2-focused")===false){this.search.val(e).addClass("select2-default");this.search.width(n>0?n:this.container.css("width"))}else{this.search.val("").width(10)}},clearPlaceholder:function(){if(this.search.hasClass("select2-default")){this.search.val("").removeClass("select2-default")}},opening:function(){this.clearPlaceholder();this.resizeSearch();this.parent.opening.apply(this,arguments);this.focusSearch();this.updateResults(true);this.search.focus();this.opts.element.trigger(e.Event("open"))},close:function(){if(!this.opened())return;this.parent.close.apply(this,arguments)},focus:function(){this.close();this.search.focus()},isFocused:function(){return this.search.hasClass("select2-focused")},updateSelection:function(t){var n=[],r=[],i=this;e(t).each(function(){if(h(i.id(this),n)<0){n.push(i.id(this));r.push(this)}});t=r;this.selection.find(".select2-search-choice").remove();e(t).each(function(){i.addSelectedChoice(this)});i.postprocessResults()},tokenize:function(){var e=this.search.val();e=this.opts.tokenizer(e,this.data(),this.bind(this.onSelect),this.opts);if(e!=null&&e!=t){this.search.val(e);if(e.length>0){this.open()}}},onSelect:function(e,t){if(!this.triggerSelect(e)){return}this.addSelectedChoice(e);this.opts.element.trigger({type:"selected",val:this.id(e),choice:e});if(this.select||!this.opts.closeOnSelect)this.postprocessResults();if(this.opts.closeOnSelect){this.close();this.search.width(10)}else{if(this.countSelectableResults()>0){this.search.width(10);this.resizeSearch();if(this.getMaximumSelectionSize()>0&&this.val().length>=this.getMaximumSelectionSize()){this.updateResults(true)}this.positionDropdown()}else{this.close();this.search.width(10)}}this.triggerChange({added:e});if(!t||!t.noFocus)this.focusSearch()},cancel:function(){this.close();this.focusSearch()},addSelectedChoice:function(n){var r=!n.locked,i=e("<li class='select2-search-choice'>"+"    <div></div>"+"    <a href='#' onclick='return false;' class='select2-search-choice-close' tabindex='-1'></a>"+"</li>"),s=e("<li class='select2-search-choice select2-locked'>"+"<div></div>"+"</li>");var o=r?i:s,u=this.id(n),a=this.getVal(),f;f=this.opts.formatSelection(n,o.find("div"));if(f!=t){o.find("div").replaceWith("<div>"+this.opts.escapeMarkup(f)+"</div>")}if(r){o.find(".select2-search-choice-close").bind("mousedown",x).bind("click dblclick",this.bind(function(t){if(!this.enabled)return;e(t.target).closest(".select2-search-choice").fadeOut("fast",this.bind(function(){this.unselect(e(t.target));this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus");this.close();this.focusSearch()})).dequeue();x(t)})).bind("focus",this.bind(function(){if(!this.enabled)return;this.container.addClass("select2-container-active");this.dropdown.addClass("select2-drop-active")}))}o.data("select2-data",n);o.insertBefore(this.searchContainer);a.push(u);this.setVal(a)},unselect:function(e){var t=this.getVal(),n,r;e=e.closest(".select2-search-choice");if(e.length===0){throw"Invalid argument: "+e+". Must be .select2-search-choice"}n=e.data("select2-data");if(!n){return}r=h(this.id(n),t);if(r>=0){t.splice(r,1);this.setVal(t);if(this.select)this.postprocessResults()}e.remove();this.opts.element.trigger({type:"removed",val:this.id(n),choice:n});this.triggerChange({removed:n})},postprocessResults:function(){var e=this.getVal(),t=this.results.find(".select2-result"),n=this.results.find(".select2-result-with-children"),r=this;t.each2(function(t,n){var i=r.id(n.data("select2-data"));if(h(i,e)>=0){n.addClass("select2-selected");n.find(".select2-result-selectable").addClass("select2-selected")}});n.each2(function(e,t){if(!t.is(".select2-result-selectable")&&t.find(".select2-result-selectable:not(.select2-selected)").length===0){t.addClass("select2-selected")}});if(this.highlight()==-1){r.highlight(0)}},getMaxSearchWidth:function(){return this.selection.width()-m(this.search)},resizeSearch:function(){var e,t,n,r,i,s=m(this.search);e=N(this.search)+10;t=this.search.offset().left;n=this.selection.width();r=this.selection.offset().left;i=n-(t-r)-s;if(i<e){i=n-s}if(i<40){i=n-s}if(i<=0){i=e}this.search.width(i)},getVal:function(){var e;if(this.select){e=this.select.val();return e===null?[]:e}else{e=this.opts.element.val();return v(e,this.opts.separator)}},setVal:function(t){var n;if(this.select){this.select.val(t)}else{n=[];e(t).each(function(){if(h(this,n)<0)n.push(this)});this.opts.element.val(n.length===0?"":n.join(this.opts.separator))}},buildChangeDetails:function(e,t){var t=t.slice(0),e=e.slice(0);for(var n=0;n<t.length;n++){for(var r=0;r<e.length;r++){if(d(this.opts.id(t[n]),this.opts.id(e[r]))){t.splice(n,1);n--;e.splice(r,1);r--}}}return{added:t,removed:e}},val:function(n,r){var i,s=this,o;if(arguments.length===0){return this.getVal()}i=this.data();if(!i.length)i=[];if(!n&&n!==0){this.opts.element.val("");this.updateSelection([]);this.clearSearch();if(r){this.triggerChange({added:this.data(),removed:i})}return}this.setVal(n);if(this.select){this.opts.initSelection(this.select,this.bind(this.updateSelection));if(r){this.triggerChange(this.buildChangeDetails(i,this.data()))}}else{if(this.opts.initSelection===t){throw new Error("val() cannot be called if initSelection() is not defined")}this.opts.initSelection(this.opts.element,function(t){var n=e(t).map(s.id);s.setVal(n);s.updateSelection(t);s.clearSearch();if(r){s.triggerChange(this.buildChangeDetails(i,this.data()))}})}this.clearSearch()},onSortStart:function(){if(this.select){throw new Error("Sorting of elements is not supported when attached to <select>. Attach to <input type='hidden'/> instead.")}this.search.width(0);this.searchContainer.hide()},onSortEnd:function(){var t=[],n=this;this.searchContainer.show();this.searchContainer.appendTo(this.searchContainer.parent());this.resizeSearch();this.selection.find(".select2-search-choice").each(function(){t.push(n.opts.id(e(this).data("select2-data")))});this.setVal(t);this.triggerChange()},data:function(t,n){var r=this,i,s;if(arguments.length===0){return this.selection.find(".select2-search-choice").map(function(){return e(this).data("select2-data")}).get()}else{s=this.data();if(!t){t=[]}i=e.map(t,function(e){return r.opts.id(e)});this.setVal(i);this.updateSelection(t);this.clearSearch();if(n){this.triggerChange(this.buildChangeDetails(s,this.data()))}}}});e.fn.select2=function(){var n=Array.prototype.slice.call(arguments,0),r,o,u,a,f=["val","destroy","opened","open","close","focus","isFocused","container","onSortStart","onSortEnd","enable","disable","positionDropdown","data"];this.each(function(){if(n.length===0||typeof n[0]==="object"){r=n.length===0?{}:e.extend({},n[0]);r.element=e(this);if(r.element.get(0).tagName.toLowerCase()==="select"){a=r.element.attr("multiple")}else{a=r.multiple||false;if("tags"in r){r.multiple=a=true}}o=a?new s:new i;o.init(r)}else if(typeof n[0]==="string"){if(h(n[0],f)<0){throw"Unknown method: "+n[0]}u=t;o=e(this).data("select2");if(o===t)return;if(n[0]==="container"){u=o.container}else{u=o[n[0]].apply(o,n.slice(1))}if(u!==t){return false}}else{throw"Invalid arguments to select2 plugin: "+n}});return u===t?this:u};e.fn.select2.defaults={width:"copy",loadMorePadding:0,closeOnSelect:true,openOnEnter:true,containerCss:{},dropdownCss:{},containerCssClass:"",dropdownCssClass:"",formatResult:function(e,t,n,r){var i=[];k(e.text,n.term,i,r);return i.join("")},formatSelection:function(e,n){return e?e.text:t},sortResults:function(e,t,n){return e},formatResultCssClass:function(e){return t},formatNoMatches:function(){return"No matches found"},formatInputTooShort:function(e,t){var n=t-e.length;return"Please enter "+n+" more character"+(n==1?"":"s")},formatInputTooLong:function(e,t){var n=e.length-t;return"Please delete "+n+" character"+(n==1?"":"s")},formatSelectionTooBig:function(e){return"You can only select "+e+" item"+(e==1?"":"s")},formatLoadMore:function(e){return"Loading more results..."},formatSearching:function(){return"Searching..."},minimumResultsForSearch:0,minimumInputLength:0,maximumInputLength:null,maximumSelectionSize:0,id:function(e){return e.id},matcher:function(e,t){return(""+t).toUpperCase().indexOf((""+e).toUpperCase())>=0},separator:",",tokenSeparators:[],tokenizer:P,escapeMarkup:function(e){var t={'\\': '&#92;','&': '&amp;','<': '&lt;','>': '&gt;','"': '&quot;',"'": '&apos;',"/": '&#47;'};return String(e).replace(/[&<>"'\/\\]/g,function(e){return t[e[0]]})},blurOnChange:false,selectOnBlur:false,adaptContainerCssClass:function(e){return e},adaptDropdownCssClass:function(e){return null}};window.Select2={query:{ajax:L,local:A,tags:O},util:{debounce:b,markMatch:k},"class":{"abstract":r,single:i,multi:s}}})(jQuery)
;
/*1.0*/
(function($){
  $.extend({
    determine: function(val){
      // for config options that can be a value (e.g. 1, 'bob')
      //   --OR-- a function that returns the value (e.g. function(){return $('$id').value;})
      return $.isFunction(val) ? val() : val;
    }
  });
})(jQuery);
/*1.0*/
/*
 * Copyright © 2006-16 Spiceworks, Inc.  All Rights Reserved.  https://www.spiceworks.com
 */


(function($){

  //***************************************************************************
  // We want to use query parameters as a means to pass along complex viewstate data
  // i.e. deep links to certain tabs, etc. but we need to strip any query params from 
  // the fragments before the router attempts to parameterize it.  Interested parties 
  // can query the Backbone.History.ViewState methods to get any params off of query strings.
  //
  // Additionally we are now using query params as part of "viewstate" for a given url
  // we are poping any query params off of the url fragment before the fragment is passed 
  // to the router for parameterization.  The ViewState mechanisms in Backbone.History 
  // provide you with a structured access to items in the query params.
  // Author: georger@spiceworks.com
  //***************************************************************************
  Backbone.Router.prototype._extractParameters = 
    function(route, fragment) {
      var f = (Backbone.history.queryParamsEnabled())? fragment.split('?')[0] : fragment;
      var params = route.exec(f).slice(1);
      var map = _.map(params, function(param) {
        return param ? decodeURIComponent(param) : null;
      });
      return map;
    }


  //***************************************************************************
  // We are generally using the Router/History navigate event to change the 
  // history state in the browser url but we do not typically trigger events with 
  // that (to prevent circular eventing problems) so instead we're hijacking 
  // navigate and inserting our own 'navigate' event that we broadcast  on the 
  // $UI.app.vent bus (see: sw.backbone.app.js) so that we can know when to rotate ads, etc.
  //
  // Additionally we are now using query params as part of "viewstate" for a given url
  // we are popping any query params off of the url fragment before the fragment is passed 
  // to the router for parameterization.  The ViewState mechanism in Backbone.History 
  // provides you with a structured access to items in the query params.
  // Author: georger@spiceworks.com
  //***************************************************************************
  Backbone.History.prototype.__navigate__ = Backbone.History.prototype.navigate;
  Backbone.History.prototype.__getFragment__ = Backbone.History.prototype.getFragment;
  Backbone.History.prototype.__loadUrl__ = Backbone.History.prototype.loadUrl;

  _.extend(Backbone.History.prototype, {
    query: '',
    _query_enabled: false,
    _viewState: {},
    ctx: null,


    navigate: function(fragment, options){
      // Spiceworks override of the navigate event to interlace our own navigate event
      // in doing so, we attempt to preserve any query parameters that might be on the 
      // current fragment as we use them to provide complex viewstate.
      // To support this, we are adding additional option support to the navigate options:
      // viewstate: {
      //   key: 'key',    // the key for storing the viewstate
      //   value: value,  // the value for the state 
      // } 
      if(this.queryParamsEnabled()){
        if(options && options.viewstate){
          // push any viewstate option into the hash and onto the query string
          var current_state = this._viewState[options.viewstate.key] || {};
          var new_state = {value: options.viewstate.value, persist: true};
          this._viewState[options.viewstate.key] = _.extend(current_state, new_state);
          this.query = this._serializeViewStateFragment();
        }

        fragment += (this.query != '')? ('?' + this.query) : '';
      }

      // invoke the original navigate method
      this.__navigate__(fragment, options);
      this.trigger('navigate', fragment);
    },

    getFragment: function(fragment, forcePushState) {
      var query = this.query = this.getQueryString(fragment, forcePushState);
      if(this.query != ''){
        this._pullSyncViewState();
      }
      return this.__getFragment__(fragment, forcePushState);
    },
     
    loadUrl: function(fragmentOverride) {
      var query = this.query = this.getQueryString(fragmentOverride);
      if(this.query != ''){
        this._pullSyncViewState(true);
      }
      return this.__loadUrl__(fragmentOverride);
    },

    getQueryString: function(fragment, forcePushState){
      var trailingSlash = /\/$/;

      if (fragment == null) {
        if (this._hasPushState || !this._wantsHashChange || forcePushState) {
          fragment = this.location.pathname;
          var root = this.root.replace(trailingSlash, '');
          if (!fragment.indexOf(root)) fragment = fragment.substr(root.length);
        } else {
          fragment = this.getHash();
        }
      }
      fragment = fragment.replace(/^[#\/]|\s+$/g, '');
      var split_fragment = fragment.split('?');
      return (split_fragment.length > 1)? split_fragment[1] : '';
    },

    testRoute: function(route){
      // Given an Backbone route expression, tests it against the current 
      // Backbone.History fragment and returns the result
      var rx = Backbone.Router.prototype._routeToRegExp(route);
      var f = this.getFragment();
      return rx.test(f);
    },     

    //***************************************************************************
    // ViewState Methods
    //***************************************************************************
    enableQueryParams: function(){
      this._query_enabled = true;
    },

    disableQueryParams: function(){
      this._query_enabled = false;
    },

    queryParamsEnabled: function(){
      return this._query_enabled;
    },

    pushViewState: function(key, state, parameterize){
      // pushes the supplied state object into the hash for the current key
      // object merges function in a last-in-wins basis
      var _parameterize = parameterize || false;
      var current_state = this._viewState[key] || {};
      if(current_state.persist && current_state.persist == true){
        // force anything that is currently in the query string to remain
        _parameterize = true;
      }
      var new_state = {value: state, persist: _parameterize};
      this._viewState[key] = _.extend(current_state, new_state);
      if(_parameterize){ this._pushSyncViewState(); }
    },

    getViewState: function(key){
      // returns the viewstate value for the given key and   
      // returns an empty object if the key is unset
      var u;
      return (_.has(this._viewState, key)) ? this._viewState[key].value : u;
    },

    deleteViewState: function(key){
      // deletes the state for the given key
      this._viewState = _.omit(this._viewState, key);
      this._pushSyncViewState();
    },

    // PRIVATE
    _getViewState: function(){
      // getter for the full viewstate
      return this.constructor.prototype._viewState;
    },

    _pullSyncViewState: function(override){  
      // Pulls any viewstate properties from the query parameters and merges it into 
      // the current viewstate
      if(!this.queryParamsEnabled()){return;}
      var queryState = this._deserializeViewStateFragment(this.query);
      if(override){
        var keys = [];
        for(var p in this._viewState){
          if(this._viewState[p].persist == true){
            keys.push(p);
          }
        }
        if(keys.length > 0){
          this._viewState = _.omit(this._viewState, keys)
        }
      }
      this._viewState = _.extend(this._viewState, queryState);
    },

    _pushSyncViewState: function(){
      // Replaces the query param portion of the url with the newly serialized 
      // viewstate
      if(!this.queryParamsEnabled()){return;}
      var new_state = this._serializeViewStateFragment();
      var fragment = this.getFragment().split('?')[0] + '?' + new_state;
      // use the original navigate method and don't trigger events
      this.__navigate__(fragment, {trigger:false, replace:true});
    },

    _clearViewState: function(){
      // clears the current viewState
      this._viewState = {};
    },

    _hasQueryState: function(){
      // check if there are query string parameters
      return (this.query != '');
    },

    _serializeViewStateFragment: function(){
      // converts a complex object graph into a query parameter friendly string
      // and appends it to the url
      // the format is:  ? followed by the URI encoded JSON representation of the viewstate
      var persisted_state = {};
      for(var prop in this._viewState){
        if(this._viewState[prop]['persist']){
          persisted_state[prop] = this._viewState[prop].value;
        }
      }
      var json_string = JSON.stringify(persisted_state);
      var encoded = Base64.encode(json_string);
      return encodeURI(encoded);
    },

    _deserializeViewStateFragment: function(query){
      // converts the serialized viewstate into the full object graph
      var json = Base64.decode(query);
      var obj = {};
      try {
        obj = JSON.parse(json);
      } catch (e) {
        obj = {};
      }
      for(var prop in obj){
        obj[prop] = {value: obj[prop], persist: true};
      }
      return _.extend({}, obj);
    }
  });






  //*********************************************************
  //*********************************************************
  // TODO: GPR
  // Remove all code below this comment and refactor any dependencies to use the Marionette framework
  // rather than the homegrown versions.
  //*********************************************************
  //*********************************************************
  function iterateAndCallShow(views) {
    views.toArray().each(function(view) {
      if (view.childViews.toArray().length > 0) {
        iterateAndCallShow(view.childViews);
      }
      if (view.onShow) {
        view.onShow();
      }
    });
  }

  // ****************************************************
  // extend router with view swap/cleanup
  // ****************************************************
  _.extend(Backbone.Router.prototype, {
    swap: function(newView) {
      if (this.currentView && this.currentView.dispose) {
        this.currentView.dispose();
      }
      this.currentView = newView;
      this.currentView.render();
      $(this.el).empty().append(this.currentView.el);
      if (this.currentView.onShow) {
        this.currentView.onShow();
      }

      iterateAndCallShow(this.currentView.childViews);
    }
  });



  // ****************************************************
  // extend view with self and child view cleanup
  // ****************************************************
  var _super = Backbone.View;
  Backbone.View = function(options) {
    this.bindings = [];
    this.childViews = _([]);
    _super.apply(this, [options]);
  };
  _.extend(Backbone.View.prototype, _super.prototype, {
    bindTo: function (source, event, callback) {
      source.on(event, callback, this);
      this.bindings.push({ source: source, event: event, callback: callback });
    },
    unbindAll: function () {
      _.each(this.bindings, function (binding) {
        binding.source.off(binding.event, binding.callback);
      });
      this.bindings = [];
    },
    renderChildView: function(view) {
      view.render();
      this.childViews.push(view);
      view.parentView = this;
    },
    triggerShow: function() {
      iterateAndCallShow(this.childViews);

       if (this.onShow) {
         this.onShow();
       }
    },
    appendChildView: function(view, options) {
      _.defaults(options || (options = {}), {
        container: this.$el,
        empty: false,
        method: "append"
      }); var container = $(options.container);

      this.renderChildView(view);
      if(options.empty) { container.empty(); }
      container[options.method].apply(container, [view.el]);

      return view; // so we can call trigger show afterwards if we want
    },
    disposeChildViews: function() {
      this.childViews.chain().clone().each(function(view) {
        if(view.dispose) {
          view.dispose();
        }
      });
    },
    removeFromParentView: function() {
      if(this.parentView) {
        this.parentView.removeChildView(this);
      }
    },
    removeChildView: function(view) {
      var index = this.childViews.indexOf(view);
      this.childViews.splice(index, 1);
    },
    dispose: function () {
      this.remove();    // remove this.el from the DOM along with any DOM events
      this.unbindAll(); // unbind all events that this view has bound to
      this.off();       // unbind all listeners to events from this view
      this.disposeChildViews();
      this.removeFromParentView();
    },
    scrollToElement: function($el) {
      var offset = $el.first().offset();
      if (offset) {
        $(window).scrollTop(offset.top);
      }
    }
  });
  Backbone.View.extend = _super.extend;
})(jQuery);


/*1.0*/
/* The moment-strftime plugin does not include a couple of the really nice */
/* formats supported by Ruby (%e and %l). This is a copy of moment-strftime */
/* with those formats added. Hopefully, in the future moment-strftime will add */
/* these and we can just include it without modification. */

((function(){var a,b;typeof require!="undefined"&&require!==null?a=require("moment"):a=this.moment,b={a:"ddd",A:"dddd",b:"MMM",B:"MMMM",d:"DD",e:"D",H:"HH",I:"hh",j:"DDDD",l:"h",m:"MM",M:"mm",p:"A",S:"ss",Z:"z",w:"d",y:"YY",Y:"YYYY","%":"%"},a.fn.strftime=function(a){var c,d,e;d=a;for(c in b)e=b[c],d=d.replace("%"+c,e);return this.format(d)},typeof module!="undefined"&&module!==null?module.exports=a:this.moment=a})).call(this);
/*1.0*/
// jQuery _explicitly_ (no $) and only where you can't
// use something else b/c it breaks Ember fastboot!
!function() {
  "use strict";

  window.$UI = window.$UI || {};
  window.$UI_ENV = window.$UI_ENV || {};

  // We can't use $.extend b/c we don't want to rely on jQuery b/c Ember fastboot
  if( !window.$UI_ENV.environment ) {
    // Deprecation warnings will be shown when in 'development'
    window.$UI_ENV.environment = 'development';
  }

  if( !window.$UI_ENV.linkTo ) {
    // Override this for spcial URL handling like the Desktop->Community linking
    window.$UI_ENV.linkTo = function (text, url, options) {
      options = options || {};
      return '<a href="' + url + '" class="' + (options['class'] || '') +
        (options['target'] ? ('" target="' + options['target']) : '') +
        '">' + text + '</a>';
    }
  }

  if( !window.$UI_ENV.deprecationNotices ) {
    // flags to turn off deprecation notices
    window.$UI_ENV.deprecationNotices = {
      messagePanelCSS: true, // message-panel class
    };
  }

  // example usage:
  // $UI.deprecated_css_check('.some-class', '.some-class will be removed in 3.0 of the Toolkit', 'flagName');
  window.$UI.deprecated_css_check = function(selector, msg, flag, route) {
    if($UI_ENV.deprecationNotices[flag] === false) {
      return;
    }

    if($UI_ENV.environment == 'development') {
      msg = 'UI TOOLKIT DEPRECATION: ' + msg;
      msg = route ? 'ROUTE ' + route.toUpperCase() + ': ' + msg : msg;
      msg += flag ? '\nTo turn off this deprecation notice, set ' + flag + ' on $UI_ENV.deprecationNotices to false.' : '';
      if( typeof window.jQuery === 'function' ) {
        jQuery(selector).each(function(index, item) {
          console.warn(msg);
          console.warn(item);
        });
      }
    }
  };

  if( window.document ) {
    document.addEventListener("DOMContentLoaded", function(event) {
      $UI.deprecated_css_check('.message-panel', '.message-panel will be removed in the next version of the Toolkit.', 'messagePanelCSS');
    });
  }
}();
/*1.0*/
/* _sui-nav-affix.js */

if(typeof window.jQuery === 'function') {
!function ($) {

  "use strict"; // jshint ;_;


 /* NAV AFFIX CLASS DEFINITION
  * ====================== */

  var NavAffix = function (element, options) {
    this.options = $.extend({}, $.fn.navaffix.defaults, options)
    this.$window = $(window)
      .on('scroll.navaffix.data-api', $.proxy(this.checkPosition, this))
      .on('click.navaffix.data-api',  $.proxy(function () { setTimeout($.proxy(this.checkPosition, this), 1) }, this))
    this.$element = $(element)
    this.checkPosition()
  }

  NavAffix.prototype.checkPosition = function () {
    if (!this.$element.is(':visible')) return

    var scrollHeight = $(document).height()
      , scrollTop = this.$window.scrollTop()
      , position = this.$element.offset()
      , offset = this.options.offset
      , offsetBottom = offset.bottom
      , offsetTop = offset.top
      , reset = 'navaffix navaffix-top navaffix-bottom'
      , navaffix

    if (typeof offset != 'object') offsetBottom = offsetTop = offset
    if (typeof offsetTop == 'function') offsetTop = offset.top()
    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom()

    navaffix = this.unpin != null && (scrollTop + this.unpin <= position.top) ?
      false    : offsetBottom != null && (position.top + this.$element.height() >= scrollHeight - offsetBottom) ?
      'bottom' : offsetTop != null && scrollTop <= offsetTop ?
      'top'    : false

    if (this.navaffixed === navaffix) return

    this.navaffixed = navaffix
    this.unpin = navaffix == 'bottom' ? position.top - scrollTop : null

    this.$element.removeClass(reset).addClass('navaffix' + (navaffix ? '-' + navaffix : ''))
  }


 /* AFFIX PLUGIN DEFINITION
  * ======================= */

  var old = $.fn.navaffix

  $.fn.navaffix = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('navaffix')
        , options = typeof option == 'object' && option
      if (!data) $this.data('navaffix', (data = new NavAffix(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.navaffix.Constructor = NavAffix

  $.fn.navaffix.defaults = {
    offset: 0
  }


 /* AFFIX NO CONFLICT
  * ================= */

  $.fn.navaffix.noConflict = function () {
    $.fn.navaffix = old
    return this
  }


 /* AFFIX DATA-API
  * ============== */

  $(window).on('load', function () {
    $('[data-spy="navaffix"]').each(function () {
      var $spy = $(this)
        , data = $spy.data()

      data.offset = data.offset || {}

      data.offsetBottom && (data.offset.bottom = data.offsetBottom)
      data.offsetTop && (data.offset.top = data.offsetTop)

      $spy.navaffix(data)
    })
  })


}(window.jQuery);
}
;
/*1.0*/
if(typeof window.jQuery === 'function') {
!function($) {

  "use strict"

  /////////////////////////////////////////////////////////////////////////////////////////////////////////
  //  General (Global, Domestic & Mobile) Navbar functionality
  /////////////////////////////////////////////////////////////////////////////////////////////////////////
  $UI._BaseNavbar = {
    enableMenuFade: function(elements) {
      elements.off( 'hidden.bs.nav-dropdown' );
      elements.on( 'hidden.bs.nav-dropdown', function() {
        $(this).find('[data-content="nav-dropdown"]').removeClass('u-faded-in');
      });

      elements.off( 'shown.bs.nav-dropdown' );
      elements.on( 'shown.bs.nav-dropdown', function() {
        var reflow = $('body').offset().left; // force reflow
        $(this).find('[data-content="nav-dropdown"]').addClass('u-faded-in');
      });
    },
  };

  $UI._NavigationNavbar = function(params) {
    this.menuItemTemplate = _.template('<li class=" domestic-menus_entry <%- classNames %>"></li>');
    this.menuItemLinkTemplate  = _.template('<a href="<%- url %>"<% if (typeof(linkClass) !== "undefined") { %> class="<%- linkClass %>" <% } %><% if (typeof(target) !== "undefined") { %> target="<%- target %>" <% } %><% if (typeof(rel) !== "undefined") { %> rel="<%- rel %>" <% } %>></a>');

    this.menuItemIconTemplate  = _.template('<% if( typeof(icon) != "undefined" ) { %><i class="sui-icon sui-icon-<%- icon %> sui-icon--light sui-icon--16"></i><% } %>');
    this.menuItemTextTemplate  = _.template('<% if( typeof(html_safe_content) != "undefined" ) { %><%= html_safe_content %><% } else { %><%- text %><% } %>')

    this.menuDropdownTriggerTemplate = _.template('<a href="javascript:void(0)" data-toggle="nav-dropdown" role="button"></a>');
    this.menuDropdownSubMenuTemplate = _.template('<ul class="domestic-menus_submenu domestic-menus_submenu_items sui-u-fadeable u-faded-in" data-content="nav-dropdown"></ul>')

    this.secondaryMenusTemplate = _.template('<ul class="secondary-menus"></ul>');

    this.appsMenuIconLinkTemplate  = _.template('<i class="platform-app-icon <%- icon_class %>"><div class="platform-app-icon_inner-icon"></div></i>');
    this.appsMenuImageLinkTemplate = _.template('<img class="apps-menu-image-icon" src="<%- image_url %>"></img>');
    this.appsMenuLinkTextTemplate  = _.template('<span class="<%- label_class %>"><%- text %></span>')
    this.appsMenuEntryTemplate     = _.template('<li class="apps-menu-entry_<%- unique_name %>"><%= html_safe_content %></li>');

    this.params = params;
    this.urlFor = params.urlFor;
    this.isActiveMenu = params.isActiveMenu;
    this.onRoute = params.onRoute;
  };

  $UI._NavigationNavbar.prototype = {

    menusTemplate: '<ul class="domestic-menus"></ul>',

    _urlFor: function(menuItem) {
      return ((typeof this.urlFor === 'function') && this.urlFor(menuItem)) || '#';
    },

    _menuItemListHtml: function(items) {
      return _.map( items || [], $.proxy( this._menuItemHtml, this ) )
    },

    _menuItemHtml: function(menuItem) {
      menuItem = _.clone(menuItem);

      menuItem.classNames = (menuItem.classNames || '') + ' ' + (this._itemIsActive(menuItem) ? 'active' : '');

      if( menuItem.items ) {

        var dropdown = $( this.menuItemTemplate({ classNames: menuItem.classNames + ' domestic-menus_dropmenu' + (menuItem.active ? ' active' : '') }) ).append(
          $( this.menuDropdownTriggerTemplate() ).append(
            this.menuItemIconTemplate({ icon: menuItem.icon }),
            this.menuItemTextTemplate({ text: menuItem.text, html_safe_content: menuItem.html })
          ),
          this.menuDropdownSubMenuTemplate()
        );

        $.fn.append.apply( dropdown.find('ul'), _.map( menuItem.items, $.proxy( this._submenuItemHtml, this ) ) );
        return dropdown;
      }
      else {
        menuItem.url = menuItem.url || this._urlFor(menuItem);

        var itemHtml = $( this.menuItemTemplate({ classNames: (menuItem.active ? menuItem.classNames + ' active' : menuItem.classNames) }) ).append(
          $( this.menuItemLinkTemplate({ url: menuItem.url, target: menuItem.target, rel: menuItem.rel }) ).append(
            this.menuItemIconTemplate({ icon: menuItem.icon }),
            this.menuItemTextTemplate({ html_safe_content: menuItem.html, text: menuItem.text })
          )
        );

        itemHtml.find('a').on( 'click', $.proxy( this._menuClicked, this, menuItem ) );
        return itemHtml;
      }
    },

    _submenuItemHtml: function(item) {
      var itemHtml = $('<li>').append(
        $( this.menuItemLinkTemplate({ url: item.url || this._urlFor(item), target: item.target, rel: item.rel, linkClass: item.class }) ).append(
          this.menuItemTextTemplate({ html_safe_content: item.html, text: item.text })
        )
      );

      itemHtml.find('a').on( 'click', $.proxy( this._menuClicked, this, item ) );
      return itemHtml;
    },

    _menuClicked: function(menuItem, event) {
      if( typeof this.onRoute === 'function' ) {
        this.onRoute(menuItem, event);
      }
    },

    _itemIsActive: function(menuItem) {
      var isActive = (typeof this.isActiveMenu === 'function') && this.isActiveMenu(menuItem);
      return ( isActive === null ) ? menuItem.active : isActive;
    },

    appsIconClasses: {
      spiceworks_inventory: 'inventory-icon',
      spiceworks_help_desk: { desktop: 'helpdesk-icon', cloud: 'helpdesk-icon' },
      spiceworks_product_reviews: 'reviews-icon',
      spiceworks_network_monitor: 'monitoring-icon',
      spiceworks_competitor_insights: 'marketview-icon',
      spiceworks_app_center: 'appcenter-icon',
      spiceworks_community: 'community-icon'
    },

    iconClass: function(unique_name, app_type) {
      if( app_type == 'desktop_plugin_dev' || app_type == 'desktop_plugin' ) {
        var signature = unique_name.length;
        if( unique_name != '' ) {
          signature += unique_name.charCodeAt(0);
        }

        var NUM_GRADIENT_CLASSES = 6;
        var gradientClass = 'plugin-icon--gradient' + (signature % NUM_GRADIENT_CLASSES);
        return 'plugin-icon ' + gradientClass;
      }

      var iconClass = this.appsIconClasses[unique_name];

      if( _.isObject(iconClass) ) {
        iconClass = iconClass[app_type];
      }

      return iconClass;
    },

    buildAppEntry: function(entryDef) {
        // don't add active app to dropdown
        if(entryDef.active) {
          return
        }

        var linkTemplate = this.appsMenuIconLinkTemplate;
        if( entryDef.image ) {
          linkTemplate = this.appsMenuImageLinkTemplate;
        }

        var link = $UI_ENV.linkTo(
          linkTemplate({
            unique_name: entryDef.unique_name || '',
            icon_class: this.iconClass( entryDef.unique_name, entryDef.app_type ) || '',
            image_url: (entryDef.image && entryDef.image.url) || ''
          }) + this.appsMenuLinkTextTemplate({
            label_class: 'app-icon_label',
            text: entryDef.display_name || ''
          }),
          entryDef.url,
          {
            target: entryDef.target
          }
        );

        return this.appsMenuEntryTemplate({
          unique_name: entryDef.unique_name || '',
          html_safe_content: link || ''
        });
    },

    addAppsToMenu: function(appsMenu, apps ) {
      apps = apps || [];

      _.each( apps, _.bind( function(entryDef) {
        if( entryDef.url ) {
          appsMenu.append( this.buildAppEntry(entryDef) );
        }
      }, this ));
    }

  };

  ////////////////////////////////////////////////////////////////////////////////////////////////////
  // App Interfaces
  ////////////////////////////////////////////////////////////////////////////////////////////////////

  // Community
  ////////////////

  var CommunityInterface = function(params) {
    this.rootUrl = params.isRunningOnCommunity ? '' : 'http://community.spiceworks.com';

    this.submitSearchAutocomplete = function(query) {
      return $.ajax({
        url: '/teleport/search',
        data: { q: query },
        headers: { Accept: 'text/javascript, text/html, application/xml, text/xml, */*' }
      });
    };

    this.fullSearchPath = function(query) {
      return this.rootUrl + '/search?query=' + encodeURIComponent(query);
    };
  };

  // Desktop
  ////////////////

  var DesktopInterface = function(params) {
    this.rootUrl = params.rootUrl;

    this.submitSearchAutocomplete = function(query) {
     return $.ajax({
        url: '/search',
        data: { query: query, group_results: 1, limit: 20 },
        dataType: 'json'
      });
    };

    this.fullSearchPath = function(query) {
      return this.rootUrl + '/search?query=' + encodeURIComponent(query);
    }
  };


  $(function() {
    $UI.appInterfaces = new function() {
      var isRunningOnCommunity = window.Application && window.Application.name && window.Application.name.toLowerCase() === 'community';

      this.apps = {
        community: new CommunityInterface({ isRunningOnCommunity: isRunningOnCommunity })
      }

      if( !isRunningOnCommunity || (typeof(User) !== 'undefined' && User.desktop_url) ) {
        var rootUrl = (typeof(User) !== 'undefined' && User.desktop_url) ? User.desktop_url : '';
        this.apps.desktop = new DesktopInterface({ rootUrl: rootUrl });
      }

      this.localAppName = isRunningOnCommunity ? 'community' : 'desktop';
    };
  });

}( window.jQuery );
}
;
/*1.0*/
if(typeof window.jQuery === 'function') {
!function($) {

  "use strict"

  var globalNavHeight = 42;
  var domesticNavHeight = 47;

  var GLOBAL_PLACHOLDER_SELECTOR = '[data-placeholder="global-nav"]';
  var DOMESTIC_PLACEHOLDER_SELECTOR = '[data-placeholder="domestic-nav"]';
  var MOBILE_PLACEHOLDER_SELECTOR = '[data-placeholder="mobile-nav"]';
  var MESSAGE_PLACEHOLDER_SELECTOR = '[data-placeholder="nav-message"]';

  var GLOBAL_PLACHOLDER = '<script data-placeholder="global-nav"></script>';
  var DOMESTIC_PLACEHOLDER = '<script data-placeholder="domestic-nav"></script>';
  var MOBILE_PLACEHOLDER = '<script data-placeholder="mobile-nav"></script>';
  var MESSAGE_PLACEHOLDER = '<script data-placeholder="nav-message"></script>';

  var HEADER_SELECTOR = '[data-navbar="site-navigation"]';
  var HEADER_TEMPLATE = '<header class="site-navigation sui-opt-in" data-navbar="site-navigation">' +
                          GLOBAL_PLACHOLDER + DOMESTIC_PLACEHOLDER + MOBILE_PLACEHOLDER + MESSAGE_PLACEHOLDER +
                        '</header>';

  var GEO_IP_PATH = '/api/public/v1/geoip/me';
  var EU_COOKIE_POLICY_COOKIE = 'top_message_hide_eu_cookie_policy';

  /**
   The Navbar (handles configuration & rendering of the navbars).  Please use the `create` method instead of using `new`. You can pass configuration params to `create` or `render` and any passed to `create` will have the ones passed to `render` merged in on each render. So, for convenience, you can pass any unchanging params to `create` and only pass params to `render` which do change.  For example:

   ```
   var myNavbar = $UI.Navbar.create({
     logo_path: '/',
     check_eu_cookie_policy: true,
     apps_menu: myApps,
     navigation_menus: myNavMenus,
     secondary_nav_menus: mySecondaryNavMenus,
     urlFor: mySpecialUrlForFunction,
     onRoute: myRoutingFunction,
     isActiveMenu: myActiveMenuComputingFunction
   });
   ```

   and later

   ```
   myNavbar.render({
      sticky: myStickConfig,
      search: mySearchConfig,
      community_notifications: myCommunityNotifications,
      user_info: myUserInfo,
      user_menus: myUserMenus
   });
   ```

   In a server-side context (e.g. Rails) where you render the navbar once per page load, you probably just want to make both calls at once:

   ```
   $UI.Navbar.create().render({
     //  options
   });
   ```

   @class SuiNavbar.$UI.Navbar
   @constructor
   @param {Object} params Configuration parameters
   */
  $UI.Navbar = function(params) {
    params = params || {};
    this.$element = $(HEADER_SELECTOR);
    this.params = params;
    this.params.refresh_community_notifications = params.refresh_community_notifications !== false;
    this.params.community_url = params.community_url || '';
    this.params.notifications_url = params.notifications_url || '';
    this.params.id_service_url = params.id_service_url || '';

    this.globalNavbar = new $UI._GlobalNavbar( this._globalParams() );
    this.domesticNavbar = new $UI._DomesticNavbar( this._domesticParams() );
    this.mobileNav = new $UI._MobileNav( this._mobileParams() );
    this.navMessage = new $UI._NavMessage( this._messageParams() );
  };

  /**
   Create an instance of the Navbar.

   @method create
   @static
   @param {Object} params Configuration parameters (same as those passed to `render`, see that method for full docs)
   */
  $UI.Navbar.create = function(params) {
    return new $UI.Navbar(params);
  };

  $UI.Navbar.prototype = {

    /**
     @method render

     @param {Object} [params] Configuration parameters (defined below)

     @param {Boolean} [ params.sticky = null] Which navbar to make stick: 'global' or 'domestic'. Any other value results in neither navbar being sticky.

     @param {String} [ params.logo_path = '/'] the href value to place in the top-left spiceworks logo.

     @param {Object} [ params.search = false] An object containing search parameters. This could be true, false or an object describing specific values for search attributes.
     @param {Integer} [ params.search.autocomplete_min_length = 2] How many characters should the user type before triggering auto-complete.
     @param {Boolean} [ params.check_eu_cookie_policy = false] Pass true to perform the EU Cookie Policy. Navbar will display a Message if the user is in the EU requiring acknowledgment of cookie policy.

     @param {Boolean} [ params.refresh_community_notifications = true] The interval (in minutes) to fetch community notifications (or false not to refresh them)
     @param {Object} [ params.community_notifications = {}] An object containing community notifications or 'false' not to display the menu.
     @param {Integer} [ params.community_notifications.unread_count]
     @param {Integer} [ params.community_notifications.inbox_unread_count]
     @param {String} [ params.community_notifications.latest_event_time]
     @param {Object[]} [... params.community_notifications.elements] Array of notification objects with type,timestamps,description properties. For example: {type: 'badge', timestamp: '2015-06-03T13:21:58Z', description: 'You earned the <a href="#">Cool Badge</a>'}

     @param {Object} [ params.community_messages = {}] An object containing community message information or 'false' not to display the menu.
     @param {Integer} [ params.community_messages.count = 0]
     @param {String} [ params.community_messages.url = '/messages/inbox']

     @param {Object} [ params.app_alerts = {}] An object containing alert information to place in the alerts menu or 'false' not to display the menu.
     @param {Integer} [ params.app_alerts.count = 0]
     @param {String} [ params.app_alerts.content = '']

     @param {Object} [ params.user_info = {}] An object containing user information to place in the user menu.
     @param {Boolean} [ params.user_info.guest] set guest to true to display the 'Login/Join' choices on the navbar.
     @param {String} [ params.user_info.name]
     @param {String} [ params.user_info.avatar]

     @param {Object[]} [ params.user_menus] Array of menu item objects with type, href and title attributes. For example: {type: 'my_profile', href: '/profile/show/myprofile', title: 'My Profile', target: '_blank', handler: 'default'}

     @param {Object[]} [ params.navigation_menus = []] Array of menus. Each can have: text, handler, routeName, or url attributes. For example: {text: 'Other Stuff', url: 'http://www.google.com', handler: "default", routeName: 'other'}
     @param {Object[]} [ params.secondary_nav_menus = []] Array of secondary menus. Each can have: text, handler, routeName, or url attributes. For example: {text: 'Other Stuff', url: 'http://www.google.com', handler: "default", routeName: 'other'}

     @param {Object} [ params.apps_menu = {}] An object containing applications to place in the apps menu or 'false' not to display the menu.
     @param {Object[]} [ params.apps_menu.apps = []] Array of apps to display in menu. Each app needs a unique_name,display_name,url and app_type. The currently active app should also have an `active` property. For example {unique_name: "spiceworks_inventory",display_name: "Inventory",url: "/inventory",app_type: "desktop", handler: 'default', active: true}
     @param {Object[]} [ params.apps_menu.localApps = []] Array of local apps to display in menu. Each app needs a unique_name,display_name,url and app_type. The currently active app should also have an `active` property. For example {unique_name: "spiceworks_inventory",display_name: "Inventory",url: "/inventory",app_type: "desktop"}
     @param {Object[]} [ params.apps_menu.localDevApps = []] Array of local development apps to display in menu. The currently active app should also have an `active` property. Each app needs a unique_name,display_name,url and app_type. For example {unique_name: "spiceworks_inventory",display_name: "Inventory",url: "/inventory",app_type: "desktop"}

     @param {Function(menuItem)} [params.urlFor] Define a function that determines the URL to use as the `href` attribute on each navigation menu entry if no `url` attribute was set. The menu entry object definition passed to render is passed to this function so that you can use any attributes you set on that object in determining the correct URL. If no `url` attribute was set and you do not define this function, the `href` will be set to '#'.

     @param {Function(menuItem,event)} [params.onRoute] Define a function that determines what to do when a navigation menu entry is clicked. The menu entry object definition passed to render is passed to this function so that you can use any attributes you set on that object in determining what action to take. The (click) event object is also passed for your use you are responsible for calling `preventDefault()` or `stopPropagation()` if necessary. If you do not define this function no JavaScript action will be taken and the browser will try to perform the default action.

     @param {Function(menuItem)} [params.isActiveMenu] Define a function that determines if a given navigation menu entry should be marked active. Called each time the navigation menus are (re)rendered. Returning a truthy marks an entry active. The menu entry object definition passed to render is passed to this function so that you can use any attributes you set on that object in determining whether it should appear active. If you do not define this method then the `active` attribute on the menu entry object will be used (set to a truthy means the entry is active, set to a falsey value or not set at all means the entry is not active).
     */

    render: function(p) {
      this.params = _.defaults({}, p || {}, this.params );

      this.$element = $(HEADER_SELECTOR);

      // If there is currently no site-navigation element in the dom
      // let's create one right after the body tag
      if( this.$element.length == 0 ) {
        this.$element = $(HEADER_TEMPLATE);
        $('body').prepend(HEADER_TEMPLATE);
      }

      if( !this.globalPlaceholder && this.$element.find(GLOBAL_PLACHOLDER_SELECTOR).length == 0 ) {
        // Can't use jQuery here b/c in versions < 1.9 it won't prepend script tags
        this.$element[0].innerHTML = GLOBAL_PLACHOLDER + this.$element[0].innerHTML;
      }

      if( !this.domesticPlaceholder && this.$element.find(DOMESTIC_PLACEHOLDER_SELECTOR).length == 0 ) {
        // Can't use jQuery here b/c in versions < 1.9 it won't append script tags
        this.$element[0].innerHTML += DOMESTIC_PLACEHOLDER;
      }

      if( !this.mobilePlaceholder && this.$element.find(MOBILE_PLACEHOLDER_SELECTOR).length == 0 ) {
        // Can't use jQuery here b/c in versions < 1.9 it won't append script tags
        this.$element[0].innerHTML += MOBILE_PLACEHOLDER;
      }

      if( !this.navMessagePlaceholder && this.$element.find(MESSAGE_PLACEHOLDER_SELECTOR).length == 0 ) {
        // Can't use jQuery here b/c in versions < 1.9 it won't append script tags
        this.$element[0].innerHTML += MESSAGE_PLACEHOLDER;
      }

      // These are just used for caching so we don't have to `find()` everytime we render
      this.globalPlaceholder   = this.$element.find(GLOBAL_PLACHOLDER_SELECTOR).length;
      this.domesticPlaceholder = this.$element.find(DOMESTIC_PLACEHOLDER_SELECTOR).length;
      this.mobilePlaceholder   = this.$element.find(MOBILE_PLACEHOLDER_SELECTOR).length;
      this.navMessagePlaceholder   = this.$element.find(MESSAGE_PLACEHOLDER_SELECTOR).length;

      this._renderGlobalNav();
      this._renderDomesticNav();
      this._renderMobileNav();
      this._renderNavMessage();
      this._euCookiePolicyInit();
    },

    routeChanged: function() {
      this._renderDomesticNav();
    },

    hideMobileNav: function() {
      if( this.globalNavbar ) {
        this.globalNavbar.hideMobileNav();
      }
    },

    _euCookiePolicyInit: function() {
      var nav = this;

      if (!this.params.check_eu_cookie_policy) {
        return;
      }
      if( nav._getEUCookiePolicyCookie() ) {
        return;
      }
      function isInEU(geoData) {
        var foundInEUList = false;

        if( !geoData || !geoData.country_name ) {
          return true;
        }

        [
          'Austria', 'Belgium', 'Bulgaria',
          'Cyprus', 'Czech Republic', 'Denmark',
          'Estonia', 'Finland', 'France',
          'Germany', 'Greece', 'Hungary',
          'Ireland', 'Italy', 'Latvia',
          'Lithuania', 'Luxembourg', 'Malta',
          'Netherlands', 'Poland', 'Portugal',
          'Romania', 'Slovakia', 'Slovenia',
          'Spain', 'Sweden', 'United Kingdom'
        ].forEach( function(country_name) {
          foundInEUList = foundInEUList || (geoData.country_name === country_name);
        });

        return foundInEUList;
      }

      if(typeof(nav.params.id_service_url) !== 'undefined' && nav.params.id_service_url.length > 0) {
        $.get( nav.params.id_service_url + GEO_IP_PATH )
          .done( function(data) {
            if( isInEU(data) ) {
              nav._showEUCookieMessage();
            }
          })
          .fail( function() {
            nav._showEUCookieMessage();
          });
      } else {
        console.warn('ATTENTION: id_service_url not set. The Navbar requires this parameter to check the EU cookie policy and warn the user. Here are the params used to configure the Navbar: ', nav.params)
        nav._showEUCookieMessage();
      }
    },

    _getEUCookiePolicyCookie: function(){
      // To prevent the for loop in the first place assign an empty array
      // in case there are no cookies at all.
      var cookies = document.cookie ? document.cookie.split('; ') : [];
      var i = 0;
      var result = false;

      for (; i < cookies.length; i++) {
        var parts = cookies[i].split('=');
        var cookie = parts.slice(1).join('=');
        try {
          if (parts[0] === EU_COOKIE_POLICY_COOKIE) {
            result = cookie;
            break;
          }
        } catch (e) {}
      }

      return result;
    },

    _setEUCookiePolicyCookie: function() {
      var exp = new Date();
      exp.setYear(exp.getFullYear() + 1); // expire 1 year after set

      return (document.cookie = [
        EU_COOKIE_POLICY_COOKIE, '=', 'true', '; path=/',
        '; expires=', exp.toUTCString()
      ].join(''));
    },

    _showEUCookieMessage: function() {
      var nav = this;
      $UI.NavMessage('Cookies help us deliver our services. By using our services you agree to our <a href="//www.spiceworks.com/privacy/cookies/">use of cookies</a>.', {
        onConfirm: function() {
          nav._setEUCookiePolicyCookie();
        }
      });
    },

    _renderNavMessage: function() {
      var placeholder = this.$element.find( MESSAGE_PLACEHOLDER_SELECTOR );

      var showDomestic = this.params.apps_menu || this.params.navigation_menus || this.params.secondary_nav_menus;
      var top = (showDomestic && this.params.sticky !== 'domestic') ? (globalNavHeight + domesticNavHeight) : globalNavHeight;

      this.navMessage.render( placeholder, _.extend(this._messageParams(), {top: top}) );
    },

    _renderGlobalNav: function() {
      var placeholder = this.$element.find( GLOBAL_PLACHOLDER_SELECTOR );
      this.globalNavbar.render( placeholder, this._globalParams() );
    },

    _renderDomesticNav: function() {
      var placeholder = this.$element.find( DOMESTIC_PLACEHOLDER_SELECTOR );
      this.domesticNavbar.render( placeholder, this._domesticParams() );
    },

    _renderMobileNav: function() {
      var placeholder = this.$element.find( MOBILE_PLACEHOLDER_SELECTOR );
      this.mobileNav.render( placeholder, this._mobileParams() );
    },

    _globalParams: function() {
      return {
        id_service_url: this.params.id_service_url,
        community_url: this.params.community_url,
        notifications_url: this.params.notifications_url,
        logo_path: this.params.logo_path,
        search: this.params.search,
        sticky: (this.params.sticky === 'global'),
        refresh_community_notifications: this.params.refresh_community_notifications,
        community_notifications: this.params.community_notifications,
        community_messages: this.params.community_messages,
        app_alerts: this.params.app_alerts,
        user_info: this.params.user_info,
        user_menus: this.params.user_menus
      };
    },

    _domesticParams: function() {
      return {
        sticky: (this.params.sticky === 'domestic'),
        apps_menu: this.params.apps_menu,
        navigation_menus: this.params.navigation_menus,
        secondary_nav_menus: this.params.secondary_nav_menus,
        urlFor: this.params.urlFor,
        isActiveMenu: this.params.isActiveMenu,
        onRoute: this.params.onRoute
      };
    },

    _mobileParams: function() {
      return {
        apps_menu: this.params.apps_menu,
        navigation_menus: this.params.navigation_menus,
        secondary_nav_menus: this.params.secondary_nav_menus,
        search: this.params.search,
        user_info: this.params.user_info,
        user_menus: this.params.user_menus,
        urlFor: this.params.urlFor,
        isActiveMenu: this.params.isActiveMenu,
        onRoute: this.params.onRoute
      };
    },

    _messageParams: function() {
      return {
      };
    }
  };

}( window.jQuery );
}
;
/*1.0*/
;
if(typeof window.jQuery === 'function') {
!function($) {

  "use strict"

  /* DROPDOWN CLASS DEFINITION
   * ========================= */

    var dropSelector = '[data-toggle="nav-dropdown"]',
        NavDropdown = function ( element ) {
          var $el = $(element).on('click.nav-dropdown.data-api', this.toggle);
          $('html').on('click.nav-dropdown.data-api', function () {
            $el.parent().removeClass('open');
          });
        };

    NavDropdown.prototype = {

      constructor: NavDropdown,

      toggle: function ( e ) {
        var $this = $(this),
            $parent,
            isActive;

        $parent = $this.parent();
        isActive = $parent.hasClass('open');

        NavDropdown.prototype.clearMenus();
        if (!isActive){
          this.$element = $parent;

          var relatedTarget = { relatedTarget: this }

          $parent
          .toggleClass('open')
          .trigger('shown.bs.nav-dropdown', relatedTarget)
        }

        return false;
      },

      clearMenus: function() {
        $(dropSelector).each( function() {
          var relatedTarget = { relatedTarget: this }
          $(this).parent().removeClass('open').trigger('hidden.bs.nav-dropdown', relatedTarget)
        });
      }
    }


   /* DROPDOWN PLUGIN DEFINITION
    * ========================== */

   $.fn.navDropdown = function ( option ) {
     return this.each(function () {
       var $this = $(this),
           data = $this.data('navDropdown');
       if (!data) $this.data('navDropdown', (data = new NavDropdown(this)));
     });
   }

  $.fn.navDropdown.Constructor = NavDropdown;

}( window.jQuery );
}
;
/*1.0*/
;
if(typeof window.jQuery === 'function') {
  !function($) {

    "use strict"

    var NAV_MESSAGE_SELECTOR = '[data-navbar="message"]';
    var nav_message_template = '<div class="sui-site-message-container" data-navbar="message" style="display: none;"></div>';
    var msgShownBodyClass = 'sui--nav-message-shown';

    $UI._NavMessage = function() {
      var nav = this;
      $(document).off('nav-message:show');
      $(document).on('nav-message:show', function(event,params){
        nav.showMessageHTML(event, params);
      });
    };

    $UI.NavMessage = function(message, params) {
      $(document).trigger( "nav-message:show", _.extend( {msg: message}, params || {} ));
    };

    $UI._NavMessage.prototype = {

      render: function($placeholderEl, params) {
        this.$placeholderEl = $placeholderEl;
        this.$el = $(NAV_MESSAGE_SELECTOR);
        this.$onConfirm = null;

        if( this.$el.length > 0 ) {
          this.$el.remove();
        }
        this.$el = $(nav_message_template);
        $(this.$placeholderEl).after( this.$el );
        this.$el.navaffix({ offset: { top: params.top } });
      },

      confirmMessage: function() {
        this.clearMessage();
        if (typeof this.$onConfirm === 'function') {
          this.$onConfirm();
        }
      },

      clearMessage: function() {
        this.$el.hide().html('');
        $('body').removeClass(msgShownBodyClass);
      },

      showMessageHTML: function(event, options) {
        options = options || {};

        if(options.msg) {
          this.$onConfirm = options.onConfirm;

          var messageText = $('<div class="sui-site-message_text"></div>');
          var messageControl = $('<a href="javascript:void(0);" class="sui-bttn sui-bttn--outline sui-bttn--large sui-site-message_control">Ok</a>');
          var messageEl = $('<div class="sui-site-message"></div>');

          messageText.html(options.msg);
          messageControl.on( 'click', $.proxy( this.confirmMessage, this));

          messageEl.append(messageText);
          messageEl.append(messageControl);

          this.$el.html(messageEl).show();
          $('body').addClass(msgShownBodyClass);
        } else {
          this.clearMessage();
        }
      }
    };


  }( window.jQuery );
};
/*1.0*/
;
if(typeof window.jQuery === 'function') {
!function($) {

  "use strict";

  var navContainerTemplate = '<div class="nav-fluid-container role="banner">';
  var globalBrandTemplate = '<a class="global-nav_brand" href="/">Home</a><span class="global-nav_print-logo"></span>';
  var globalMenusTemplate = '<ul class="global-nav_menus">'
  var searchPlaceholderTemplate = '<li class="global-search-menu global-nav_menu" data-menu-type="search"></li>';
  var notificationsMenuTemplate = '<li class="global-nav_menu global-community-notifications-menu" data-menu-type="community-notifications"></li>'
  var messagesTemplate = '<li class="global-nav_menu" data-menu-type="community-messages"></li>'
  var alertsTemplate = '<li class="global-app-alerts-menu global-nav_menu" data-menu-type="app-alerts"></li>'
  var userMenuTemplate = '<li class="global-user-menu global-nav_menu" data-menu-type="user"></li>'
  var guestUserMenuTemplate = '<li class="guest-user-navmenu global-nav_menu" data-menu-type="guest-user"></li>'
  var mobileNavToggle = '<a href="#" class="global-nav_mobile-nav-toggle global-nav_menu" data-toggle="mobile-nav"><i class="navbar-icon apps-menu-icon"></i></a>'

  var global_contents_template = navContainerTemplate + globalBrandTemplate + globalMenusTemplate + searchPlaceholderTemplate + notificationsMenuTemplate + messagesTemplate + alertsTemplate + userMenuTemplate + guestUserMenuTemplate + '</ul>' + mobileNavToggle + '</div>';
  var global_template = '<nav class="global-nav" data-navbar="global" role="navigation" aria-label="spiceworks">' + global_contents_template + '</nav>';

  var GlobalNavbar = function(params) {
    this.params = params;
    this.mobileNavShown = false;
  };

  var GLOBAL_NAV_SELECTOR = '[data-navbar="global"]';
  var GET_NOTIFICATIONS_PATH = '/api/v1/notifications/summarized_recent';
  var CLEAR_NOTIFICATIONS_PATH = '/api/v1/notifications/clear_unread';
  var INBOX_PATH = '/messages/inbox?source=navbar';

  GlobalNavbar.prototype = {

    render: function($placeholderEl, params) {
      this.$placeholderEl = $placeholderEl;
      this.params = _.defaults({}, params || {}, this.params );

      //templates shared between menus
      this.triggerTemplate = _.template('<a href="#" data-toggle="nav-dropdown"></a>');
      this.iconTemplate = _.template('<i class="navbar-icon <%- icon_class %>"></i>');
      this.statBubbleTemplate = _.template('<small class="stat-bubble" count="<%- count %>"><%- count %></small>');
      this.menuTemplate = _.template('<div class="global-nav_dropdown sui-u-fadeable u-faded-in" data-content="nav-dropdown"></div>');

      this.$el = $(GLOBAL_NAV_SELECTOR);

      if( this.$el.length == 0 ) {
        // If there was no nav element, add it
        this.$el = $(global_template);
        $(this.$placeholderEl).after( this.$el );
      }
      else if( this.$el.find('.global-nav_menus').length == 0 ) {
        // If there was a placeholder only (wrapper & logo) replace it
        this.$el.html(global_contents_template);
      }

      this.mobileNavToggle = this.$el.find('[data-toggle="mobile-nav"]');
      this.mobileNavToggle.off( 'click.mobile-nav-toggle');
      this.mobileNavToggle.on( 'click.mobile-nav-toggle', $.proxy( this.toggleMobileNav, this ) );

      $UI._BaseNavbar.enableMenuFade(this.$el);

      this.initLogo(params.logo_path);
      this.initSticky(params.sticky);
      this.initSearch(params.search);

      this.initCommunityNotifications(params.community_notifications,params.refresh_community_notifications, params.user_info);

      this.initCommunityMessages(params.community_messages);
      this.initAppAlerts(params.app_alerts);
      this.initUserMenu(params.user_info, params.user_menus);

      $('.global-nav [data-toggle="nav-dropdown"]').navDropdown();

      $('body').toggleClass('sui--global-nav-sticky', params.sticky );
    }, // render()

    initLogo: function(logo_path) {
      if( logo_path ) {
        $('a.global-nav_brand').attr('href', logo_path);
      }
    },

    initCommunityNotifications: function(notifications,refresh,user_info) {
      this.$communityNotifMenu = this.$el.find('[data-menu-type="community-notifications"]');

      if (this.refreshFunction) {
        window.clearTimeout(this.refreshFunction);
        this.refreshFunction = null;
      }

      if( !user_info || user_info.guest ) {
        this.$communityNotifMenu.empty();
        return;
      }

      if(notifications || refresh) {
        this.renderCommunityNotifications(notifications || {});
        this.fetchCommunityNotifications(refresh);
      }
    },

    initSticky: function(stickyOrNot) {
      $('nav.global-nav').toggleClass('navaffix', stickyOrNot);
    },

    /////////  Search Menu  ////////////////////////

    initSearch: function(params) {
      this.$searchMenu = this.$el.find('[data-menu-type="search"]');

      if( !params ) {
        this.$searchMenu.empty();
        return;
      }

      if( !this.globalSearch ) {
        this.globalSearch = new $UI.GlobalSearch(this.$searchMenu, params);
      }
      else {
        this.globalSearch.init(this.$searchMenu, params);
      }
    },

    /////////  Community Notifications Menu  ////////////////////////

    fetchCommunityNotifications: function(refresh, fetch_interval_ms) {
      if(!this.params.user_info || this.params.user_info.guest) {
        return;
      }
      if(typeof(this.params.notifications_url) !== 'undefined' && this.params.notifications_url.length > 0) {

        var url = this.params.notifications_url + GET_NOTIFICATIONS_PATH +
          (typeof(fetch_interval_ms) !== 'undefined' ? '?refresh=1' : '');

        $.ajax({
          context: this,
          url: url,
          type: "GET",
          dataType: "json",
          xhrFields: { withCredentials: true },
          timeout: 2000,
          success: function (data) {
            this.renderCommunityNotifications(data);
            this.setupCommunityNotificationsDropdown();
            this.addSourceToNotifications();
          },
          error: function (jqXHR, textStatus, errorThrown) {
            console.warn('Navbar: error refreshing community notifications.');
          },
          complete: function () {
            if (refresh) {
              var frequency = 60 * 60 * 1000; // every 60 minutes
              this.refreshFunction = window.setTimeout($.proxy(function () {
                this.fetchCommunityNotifications(refresh, frequency);
              }, this), frequency);
            }
          }
        });
      }
    },

    setupCommunityNotificationsDropdown: function() {
      var _globalNav = this;
      this.$communityNotifMenu.find('a[data-toggle="nav-dropdown"]').navDropdown();
      this.$communityNotifMenu.on('shown.bs.nav-dropdown', function () {
        var countEl = $(this).find('> a [count]');
        var unread_count = countEl.attr('count');
        if (unread_count !== '0') {
          countEl.attr('count', '0').html('0');
          $.ajax({
            context: this,
            url: _globalNav.params.notifications_url + CLEAR_NOTIFICATIONS_PATH,
            type: "POST",
            dataType: "json",
            xhrFields: { withCredentials: true },
            timeout: 2000,
            success: function (data) {
              _globalNav.$el.trigger('community_notifications:read', _globalNav.notificationsLatestEventTime);
            },
            error: function (jqXHR, textStatus, errorThrown) {
              console.warn('Navbar: error clearing community notifications.', textStatus);
              countEl.attr('count', unread_count).html(unread_count);
            }
          });
        }
      });
    },

    renderCommunityNotifications: function(params) {
      var unread_count = params.unread_count || 0;
      var inbox_unread_count = params.inbox_unread_count || 0;
      var elements = params.elements || [];

      this.notificationsLatestEventTime = params.latest_event_time || (new Date().toISOString());

      if (this.$communityNotifMenu.length === 1) {
        this.$communityNotifMenu.empty();
        var headerTemplate = _.template('<div class="header-bar"><h5>Notifications</h5></div>');
        var unreadCount = _.template('<a count="<%- inbox_unread_count %>" href="<%- community_url %>/messages/inbox?source=navbar-community-notifications">Inbox (<%- inbox_unread_count %>)</a>');
        var listTemplate = _.template('<ul><%= listElementsHtmlSafe %></ul>');
        var footerTemplate = _.template('<div class="global-nav_dropdown_footer"><a href="<%- community_url %>/notifications?source=navbar-community-notifications">See all notifications ›</a></div>');

        var iconTemplate = _.template('<i class="sui-icon sui-icon--16 sui-icon-event-<%- type %>"></i>');
        var descTemplate = _.template('<p><%= html_safe_content %></p>');
        var timeTemplate = _.template('<span class="time" data-js-postprocess="timestamp" data-timestamp-format="from_now" datetime="<%- timestamp %>" title="<%- timestamp_title %>"><%- timestamp_ago %></span>');

        var contents = '';

        _.each(elements, function(element){
          contents += '<li>' +
                      iconTemplate({ type: element.type }) +
                      descTemplate({ html_safe_content: element.description }) +
                      timeTemplate({ timestamp: element.timestamp, timestamp_ago: moment(element.timestamp).fromNow(), timestamp_title: moment(element.timestamp).utc().format('MMM d, YYYY [at] h:mm A') });
        });

        this.$communityNotifMenu.prepend(
          $( this.menuTemplate() ).append(
            $( headerTemplate() ).append( unreadCount({ community_url: this.params.community_url, inbox_unread_count: inbox_unread_count }) ),
            listTemplate({ listElementsHtmlSafe: contents }),
            footerTemplate({ community_url: this.params.community_url })
          )
        );

        this.$communityNotifMenu.prepend(
          $( this.triggerTemplate() ).append(
            this.iconTemplate({ icon_class: 'community-notifications-icon' }),
            this.statBubbleTemplate({ count: unread_count })
          )
        );
      }
    },

    // Since the contents of each notification is specified from the apps as HTML
    // we don't have direct control over the 'src' params on any links. So after
    // rendering we just fix them up.
    addSourceToNotifications: function() {
      var source_param = 'source=navbar-community-notifications';

      this.$communityNotifMenu.find('[data-content="nav-dropdown"] > ul a').each( function(index, el) {
        var href = $(el).attr('href');
        $(el).attr( 'href', href + (href.match(/\?/) ? '&' : '?') + source_param );
      });
    },

    /////////  Community Messages Menu  ////////////////////////
    initCommunityMessages: function(params) {
      var communityMessagesMenu = this.$el.find('[data-menu-type="community-messages"]');

      communityMessagesMenu.empty();

      if( !params || !this.params.user_info || this.params.user_info.guest ) {
        return;
      }

      var inbox_template = _.template('<a href="<%- url %>" data-menu-type="message-count"></a>');
      var msg = $( inbox_template({ url: params.url || (params.community_url + INBOX_PATH) }) ).append(
                  this.iconTemplate({ icon_class: 'community-message-count-icon' }),
                  this.statBubbleTemplate({ count: params.count })
                );
      communityMessagesMenu.prepend(msg);
    },

    /////////  App Alerts Menu  ////////////////////////
    initAppAlerts: function(params) {
      var alertsMenu = this.$el.find('[data-menu-type="app-alerts"]');

      if( !params || !this.params.user_info || this.params.user_info.guest ) {
        alertsMenu.empty();
        return;
      }

      alertsMenu.empty();

      alertsMenu.prepend(
        $( this.triggerTemplate() ).append(
          this.iconTemplate({ icon_class: 'app-alerts-icon' }),
          this.statBubbleTemplate({ count: params.count })
        ),
        $( this.menuTemplate() ).append( params.content )
      );
    },

    /////////  User Menu  ////////////////////////
    initUserMenu: function(user_info, user_menus) {
      var guestMenu = this.$el.find('[data-menu-type="guest-user"]');
      var userMenu = this.$el.find('[data-menu-type="user"]');

      guestMenu.empty();
      userMenu.empty();

      if( !user_info ) {
        return;
      }

      if( user_info.guest ) {
        //TODO: need additional params for guest choices?
        var guest_template = _.template('<a href="#" class="login-link" data-modal-name="login" data-target="#" data-toggle="modal"><span class="login-link_inner">Login</span></a><a href="#" data-modal-name="join" data-target="#" data-toggle="modal" class="join-button"><span class="join-button_inner">Join</span></a>');
        guestMenu.prepend(guest_template());
      }
      else {
        var imgTemplate = _.template('<img alt="<%- name %>" class="avatar-small" height="24" src="<%- avatar %>" style="height:24px; width:24px;" width="24">');
        var nameTemplate = _.template('<span class="usernav-link"><%- name %></span>');

        var menu_item_template = _.template('<li><a class="user-menu-entry--<%- type %>" data-menu-type="<%- type %>" href="<%- href %>" <% if (typeof(target) !== "undefined") { %> target="<%- target %>" <% } %>><%- title %></a></li>');

        var items = '';
        _.each( user_menus, function (element) {
          items += menu_item_template({
            type: element.type,
            href: element.href,
            title: element.title,
            target: element.target
          });
        });

        if( items != '' ) {
          userMenu.prepend(
            $( this.menuTemplate() ).append( '<ul>' + items + '</ul>' )
          );
        }

        userMenu.prepend(
          $( this.triggerTemplate() ).append(
            imgTemplate({ name: user_info.name, avatar: user_info.avatar }),
            nameTemplate({ name: user_info.name })
          )
        );
      }
    },

    toggleMobileNav: function(event) {
      event && event.preventDefault() && event.stopPropagation();

      this.mobileNavShown ? this.hideMobileNav() : this.showMobileNav();
    },

    showMobileNav: function() {
      $('body').addClass( 'mobile-nav-open' );
      this.mobileNavShown = true;
    },

    hideMobileNav: function() {
      $('body').removeClass( 'mobile-nav-open' );
      this.mobileNavShown = false;
    }

  };

  $UI._GlobalNavbar = GlobalNavbar;

}( window.jQuery );
};
/*1.0*/
;
if(typeof window.jQuery === 'function') {
!function($) {

  var globalNavHeight = 42;

  var DOMESTIC_NAV_SELECTOR = '[data-navbar="domestic"]';
  var domestic_template = '<nav class="domestic-nav" data-navbar="domestic" role="navigation" aria-labelledby="aria-domestic-nav"></nav>';
  var navShownBodyClass = 'sui--domestic-nav-shown';
  var navStickyBodyClass = 'sui--domestic-nav-sticky';

  var DomesticNavbar = function(params) {
    this.template               = _.template('<div class="nav-fluid-container"></div>');

    //new domestic brand/apps menu templates - used when apps menu is configured on domestic nav
    this.appsMenuTemplate         = _.template('<li class="domestic-menus_entry domestic-menus_dropmenu domestic-apps-menu domestic-nav_brand"></li>')
    this.appsMenuTriggerTemplate  = _.template('<a class="domestic-nav_title" data-toggle="nav-dropdown" href="#"></a>');
    this.appsSubMenuTemplate      = _.template('<ul class="domestic-menus_submenu domestic-menus_submenu_items sui-u-fadeable u-faded-in" data-content="nav-dropdown" data-nav-menu="apps"></ul>');

    // lodash 3.10.1 only extends an object's own properties, so we need to extend the prototype as well
    _.extend(this, new $UI._NavigationNavbar(params), $UI._NavigationNavbar.prototype);
  };

  DomesticNavbar.prototype = {

    initSticky: function(stickyOrNot) {
      if( stickyOrNot ) {
        $('nav.domestic-nav').navaffix({ offset: {top: globalNavHeight} });
      }
    },

    configure: function(contents) {
      contents = contents || {};
    },

    render: function($placeholderEl, params) {
      var showMyself = params.apps_menu || params.navigation_menus || params.secondary_nav_menus;
      this.$placeholderEl = $placeholderEl;

      this.$el = $(DOMESTIC_NAV_SELECTOR);

      $('body').removeClass(navShownBodyClass);
      $('body').removeClass(navStickyBodyClass);

      if( !showMyself ) {
        this.$el.remove();
        return;
      }

      if( this.$el.length == 0 ) {
        // there is currently no domestic-nav element in the dom.
        // Let's create one inside the site-navigation header
        this.$el = $(domestic_template);
        $(this.$placeholderEl).after( this.$el );
      }

      $UI._BaseNavbar.enableMenuFade(this.$el);

      this.initSticky(params.sticky);

      this.appsMenu = params.apps_menu;
      this.activeApp = this.appsMenu ? this.findActiveApp(this.appsMenu) : null;
      this.menus = params.navigation_menus;
      this.secondaryMenus = params.secondary_nav_menus;

      var html = $( this.template() );

      if( this.menus && this.menus.length ) {
        var menus = $( this.menusTemplate );
        $.fn.append.apply( menus, this._menuItemListHtml(this.menus) );
      } else if(this.appsMenu){
        var menus = $( this.menusTemplate );
      }

      if(menus){
        html.append( menus );
      }

      if( this.secondaryMenus && this.secondaryMenus.length ) {
        var secondaryMenus = $( this.secondaryMenusTemplate() );
        $.fn.append.apply( secondaryMenus, this._menuItemListHtml(this.secondaryMenus) );
        html.append( secondaryMenus );
      }
      this.$el.html( html );

      if(this.appsMenu) {
        this.rebuildAppsMenu(this.appsMenu, '.domestic-menus', '.domestic-apps-menu');
      }

      this.$el.find('[data-toggle="nav-dropdown"]').navDropdown();

      var appsParent = this.$el.find('[data-nav-menu="apps"]').parent(); // Receives dropdown 'shown' events
      appsParent.off('shown.bs.nav-dropdown.apps-analytics');
      appsParent.on( 'shown.bs.nav-dropdown.apps-analytics', function() {
        $(document).trigger('google-analytics:send:event',
          ['Navbar', 'Apps Menu Opened', 'Domestic Apps Menu']
        );
      });

      $('body').addClass(navShownBodyClass);
      $('body').toggleClass(navStickyBodyClass, params.sticky );
    }, // render()

    /////////  Rebuild Apps Menu  ////////////////////////
    // used by both domestic & global nav for backwards compatibility
    rebuildAppsMenu: function( appsMenuDefinition, parentSelector, selector ) {
      var navbar = this;
      var appsMenuContainer = this.$el.find(selector);

      if(!appsMenuDefinition) {
        if(appsMenuDefinition === false) {
          $(selector).remove();
        }
        return;
      }

      if(appsMenuContainer.length === 0 || appsMenuContainer[0].children.length === 0) {
        if(appsMenuContainer.length && appsMenuContainer[0].children.length === 0) {
          appsMenuContainer.remove();
        }
        var parent = this.$el.find( parentSelector );
        parent.prepend(
          $( this.appsMenuTemplate() ).append(
            this.appsMenuTriggerTemplate(),
            this.appsSubMenuTemplate()
          )
        );
      }

      //domestic nav only
      if(this.activeApp) {
        var activeApp = this.$el.find('.domestic-nav_title');
        activeApp.html('');
        this.addActiveApp(activeApp, this.activeApp);
      }

      var appsMenu = this.$el.find('[data-nav-menu="apps"]');
      // Don't clear the menu unless there are valid main apps to add
      if( appsMenuDefinition.apps && appsMenuDefinition.apps.length > 0 ) {
        appsMenu.html(''); // clear the menu so we can start fresh
      }

      // Main apps (ones from the API, including 'Spiceworks' ones)
      this.addAppsToMenu(appsMenu, appsMenuDefinition.apps );

      // Local apps (installed on local desktop but not in API)
      this.addAppsToMenu(appsMenu, appsMenuDefinition.localApps );

      // Developer's local apps (obviously not in the API)
      this.addAppsToMenu(appsMenu, appsMenuDefinition.localDevApps );
    },

    findActiveApp: function( appsMenu ) {
      var activeApp, prop, i, array;
      appsMenu = appsMenu || {};

      for(prop in appsMenu){
        if(appsMenu.hasOwnProperty(prop)){
          array = appsMenu[prop];
          for(i=0; i < array.length; i++){
            if(array[i].active){
              activeApp = array[i]
              break;
            }
          }
        }
      }

      return activeApp || null;
    },

    addActiveApp: function(activeAppOuter, activeApp ) {
      var activeAppTemplate = this.appsMenuIconLinkTemplate,
          activeAppInner;

      if( activeApp.image ) {
        activeAppTemplate = this.appsMenuImageLinkTemplate;
      }

      activeAppInner = activeAppTemplate({
        unique_name: activeApp.unique_name || '',
        icon_class: this.iconClass( activeApp.unique_name, activeApp.app_type ) || '',
        image_url: (activeApp.image && activeApp.image.url) || ''
      }) + this.appsMenuLinkTextTemplate({
        label_class: 'app-icon_label',
        text: activeApp.display_name || ''
      });
      activeAppOuter.append(activeAppInner);
    }

  };

  $UI._DomesticNavbar = DomesticNavbar;

}( window.jQuery );
}
;
/*1.0*/
;
if(typeof window.jQuery === 'function') {
!function($) {

  "use strict"

  var DOMESTIC_MENU_TEMPLATE   = '<ul class="domestic-menus"></ul>';
  var APPS_MENU_TEMPLATE       = '<ul class="apps-listing"></ul>';

  $UI._MobileNav = function(params) {
    // lodash 3.10.1 only extends an object's own properties, so we need to extend the prototype as well
    _.extend( this, new $UI._NavigationNavbar(params), $UI._NavigationNavbar.prototype );
  };

  $UI._MobileNav.prototype = {
    render: function($placeholderEl, params) {
      this.$placeholderEl = $placeholderEl;

      var searchTemplate = _.template('<form accept-charset="UTF-8" action="/search" class="nav-page-search" method="get" role="search">' +
                                        '<div style="display:none">' +
                                          '<input name="utf8" type="hidden" value="✓">' +
                                        '</div>' +
                                        '<div class="nav-search-content">' +
                                          '<input class="nav-search-field init" data-event-enabled="false" name="query" placeholder="Search" type="text">' +
                                          '<button class="global-search-bttn" data-button-type="submit" data-primary="true" type="submit">Search</button>' +
                                        '</div>' +
                                        '</form>');

      var userMenu       = _.template('<div class="user-menu">' +
                                         '<a href="https://community.spiceworks.com/profile/show/myprofile?source=navbar-subnav">' +
                                           '<img alt="<%- name %>" class="avatar-small" height="32" src="<%- avatar %>" style="height:32px; width:32px;" width="32">' +
                                           '<span class="usernav-link"><%- name %></span>' +
                                          '</a>' +
                                        '</div>');

      var guestMenu      = _.template('<div class="guest-user-navmenu">' +
                                        '<a href="#" class="login-link" data-modal-name="login" data-target="#" data-toggle="modal">' +
                                          '<span class="login-link_inner">Login</span>' +
                                        '</a>' +
                                        '<a href="#" data-modal-name="join" data-target="#" data-toggle="modal" class="join-button">' +
                                          '<span class="join-button_inner">Join</span>' +
                                        '</a>' +
                                      '</div>');

      var userMenuContent = _.template('<ul class="user-menu-content"><%= menuItemsHtmlSafe %></ul>');
      var userMenuItem = _.template('<li>' +
                                      '<a class="user-menu-entry--<%- type %>" data-menu-type="<%- type %>" href="<%- href %>" <% if (typeof(target) !== "undefined") { %> target="<%- target %>" <% } %>><%- title %></a>' +
                                    '</li>');

      var mobileMenu = $('[data-navbar="mobile"]');

      mobileMenu.remove(); // Clear the mobile nav in advance of redrawing it

      var template_values = {
        searchTemplateHtmlSafe: searchTemplate(),
      };

      this.$el = $('<nav class="mobile-nav sui-opt-in" data-navbar="mobile"></nav>');

      //Add search menu entry
      if(params.search) {
        var data = { searchTemplateHtmlSafe: searchTemplate() };
        this.$el.append( _.template('<%= searchTemplateHtmlSafe %>')(data) );
      }

      //Add Profile/UserInfo menu entry
      if(params.user_info) {
        if( params.user_info.guest ) {
          var data = { guestMenuHtmlSafe: guestMenu() };
          this.$el.append( _.template('<%= guestMenuHtmlSafe %>')(data) );
        }
        else {
          var data = { userMenuHtmlSafe: userMenu({name: params.user_info.name, avatar: params.user_info.avatar}) };
          this.$el.append( _.template('<%= userMenuHtmlSafe %>')(data) );
        }
      }

      this.$el.append(this.renderNavigationMenus(params.navigation_menus, params.secondary_nav_menus));
      this.$el.append(this.renderAppsMenu(params.apps_menu));

      if( params.user_menus && params.user_menus.length ) {
        var items = _.map(params.user_menus, function (element) {
          return userMenuItem({
            type: element.type,
            href: element.href,
            title: element.title,
            target: element.target
          });
        }).join('');

        this.$el.append( userMenuContent({ menuItemsHtmlSafe: items }) );
      }

      this.$placeholderEl.after( this.$el );

      this.$el.find('[data-toggle="nav-dropdown"]').navDropdown();
    },

    renderNavigationMenus: function(main_menus, secondary_menus) {
      var $menus = $(DOMESTIC_MENU_TEMPLATE);

      if( main_menus && main_menus.length ) {
        var menus = $( this.menusTemplate );
        $.fn.append.apply( menus, this._menuItemListHtml(main_menus) );
        $menus.append( menus );
      }

      if( secondary_menus && secondary_menus.length ) {
        var secondaryMenus = $( this.secondaryMenusTemplate() );
        $.fn.append.apply( secondaryMenus, this._menuItemListHtml(secondary_menus) );
        $menus.append( secondaryMenus );
      }

      return $menus;
    },

    renderAppsMenu: function(apps_menu) {
      var $menus = $(APPS_MENU_TEMPLATE);

      if( apps_menu ) {
        this.addAppsToMenu($menus, apps_menu.apps);
        this.addAppsToMenu($menus, apps_menu.localApps);
        this.addAppsToMenu($menus, apps_menu.localDevApps);
      }

      return $menus;
    }

  };

}( window.jQuery );
};
/*1.0*/
if(typeof window.jQuery === 'function') {
!function($) {

  "use strict"

  ////////////////////////////////////////////////////////////////////////////////////////////////////
  // Nav Search
  ////////////////////////////////////////////////////////////////////////////////////////////////////

  $UI.GlobalSearch = function(element, options) {
    $(document).on( 'global-search:activate', $.proxy( this.activate, this ) );
    $(document).on( 'global-search:deactivate', $.proxy( this.deactivate, this ) );
    $(document).on( 'click.global-search', $.proxy( this.hideOnClickOut, this ) );
    this.init(element,options);
  }

  $UI.GlobalSearch.defaults = {
    autocomplete_min_length: 2,
    next_letter_wait_timeout: 200
  };

  $UI.GlobalSearch.prototype = {

    init: function(element, options) {
      // Don't want to do a lot of work here since most page loads won't see search get used
      this.$el = element;
      this.options = typeof options === 'object' ? options : {};
      this.options = _.defaults( this.options, $UI.GlobalSearch.defaults );

      var searchControls = this.$el.find('.global-search_controls');
      if(searchControls.length == 0) {
        var searchControls = '<div class="global-search_controls" role="search" id="aria-global-search"><form><i class="navbar-icon search-icon icon-search sui-icon sui-icon--16" role="presentation"></i><input type="text" autocomplete="off"/></form></div>';
        this.$el.prepend(searchControls);
      }

      this.$el.off('focusin.global-search');
      this.$el.on('focusin.global-search', $.proxy( this.toggleActiveState, this));

      //i tag is not focusable and therefore cannot bubble focus to $searchMenu, so add click handler
      this.$el.find('.search-icon').off('click.global-search');
      this.$el.find('.search-icon').on('click.global-search', $.proxy(this.toggleActiveState, this));

      this.selectedAppName = $UI.appInterfaces.localAppName;
      this.autocompleteMinLength = this.options.autocomplete_min_length;
      this.loadTemplates();

      this.render();


      this.debouncedAutocomlete = _.debounce( $.proxy( this.autocomplete, this, this.query ),
                                              this.options.next_letter_wait_timeout );
    },

    activate: function() {
      this.$el.on( 'keyup.global-search.query', $.proxy( this.autocompleteIfLongEnough, this ) );

      $(document).on( 'keydown.global-search.navigation', $.proxy( this.handleNavigationKey, this ) );

      $(document).trigger( 'global-search.activated' );

      this.$el.on( 'click.global-search.analytics-capture', '.global-search_result > a', _.bind( function(event) {
        this.analyticsForSelection( $(event.target).parent() );
      }, this ) );

      this.$el.addClass('is-active');
      this.$input.focus();

      this.analyticsEvent('Activated');

      this.$el.one('keydown', $.proxy(this.analyticsEvent, this, 'Keydown') );
    },

    deactivate: function() {
      if( this.$el && this.$el.is(':visible') ) {
        this.$el.off( 'keyup.global-search.query' );
        $(document).off( 'keydown.global-search.navigation' );
        this.$el.off( 'click.global-search.analytics-capture' );

        this.$input.val('');
        this.$input.blur();
        this.query = this.lastAutocompleteQuery = null;
        this.$resultsEl.hide();
        this.$el.removeClass('is-active');

        $(document).trigger( 'global-search.deactivated' );
      }
    },

    toggleActiveState: function(event) {
      //can only click on search icon when search is deactivated, so event will always be activate
      if(event.type === 'click') {
        this.activate();
        return;
      }

      var target = event.target;

      //if search is already focused and element to be focused is within search element, return
      if($.contains(this.$el[0], target) && this.$el.hasClass('is-active')) {
        return;
      }

      var action = event.type === 'focusin' ? 'activate' : 'deactivate';
      this[action]();
    },

    render: function() {
      this.spinnerSize = this.options.spinner_size || 8;

      // Cleanup of event handlers for when re-rendering (harmless first time through)
      this.$el.find('form').off( 'submit.global-search.full-search' );
      this.$el.find('.js-app-selection-list a').off( 'click.global-search.app-select' );

      var templateData = {
        selected_app_icon: this.selectedAppName === 'community' ? 'community-notifications-icon_small' : 'apps-menu-icon_small',
        placeholder: this.selectedAppName === 'community' ? 'Search the community' : 'Search inventory and helpdesk',
        apps_config_class: _.keys( $UI.appInterfaces.apps ).length === 1 ? 'global-search_single-app' : ''
      };

      this.$el.html( this.controlsTemplate( templateData ) );

      this.$input = this.$el.find('input[type="text"]');

      this.$spinnerEl = this.$el.find('.global-search_spinner');
      for(var i = 0; i < this.spinnerSize; i++){
        this.$spinnerEl.append($(this.spinnerTemplate()));
      }

      this.$resultsEl = $( this.resultsTemplate() );
      this.$suggestionsEl = this.$resultsEl.find('[data-content="search-suggestions"]');
      this.$el.append( this.$resultsEl );

      var iconNames = { community: 'community-notifications-icon', desktop: 'apps-menu-icon' };
      var humanNames = { community: 'Community', desktop: 'Apps' };

      var appSelectionList = this.$el.find('[data-content="app-selection-list"]');

      // "Local" app at the top of the list
      appSelectionList.append(
        this.appSelectionTemplate({ icon_name: iconNames[$UI.appInterfaces.localAppName],
                                    internal_name: $UI.appInterfaces.localAppName,
                                    name: humanNames[$UI.appInterfaces.localAppName] })
      );

      // The rest of the apps
      _.each( _.keys($UI.appInterfaces.apps), _.bind( function(appName) {
        if( appName !== $UI.appInterfaces.localAppName ) {
          appSelectionList.append(
            this.appSelectionTemplate({ icon_name: iconNames[appName],
                                        internal_name: appName,
                                        name: humanNames[appName] })
          );
        }
      }, this ) );

      this.$el.find('.search-icon').on('click', $.proxy(this.activate, this));
      this.$el.find('form').on( 'submit.global-search.full-search', $.proxy( this.submitFullSearch, this ) );
      appSelectionList.find('a').on( 'click.global-search_controls.app-select', $.proxy( this.newAppSelected, this ) );

      this.$el.find('[data-toggle="nav-dropdown"]').navDropdown();
    },

    loadTemplates: function() {
      var oldTemplateSettings = _.templateSettings;
      _.templateSettings = { evaluate: /\{\{(.+?)\}\}/g, interpolate: /\{\{=(.+?)\}\}/g, escape: /\{\{-(.+?)\}\}/g };

      this.controlsTemplate       = _.template('<div class="global-search_controls {{- apps_config_class }}" role="search"><form><i class="navbar-icon search-icon icon-search con-search sui-icon sui-icon--16" role="presentation"></i><input type="text" autocomplete="off" /><div class="global-search_spinner sui-spinner sui-u-fadeable"></div></form><div class="global-search_app-selector" data-toggle="nav-dropdown"><a href="#" class="global-search-toggle" data-toggle="nav-dropdown" onclick="return false;"><i class="navbar-icon {{- selected_app_icon }}"></i> <span class="caret"></span></a><ul class="global-search-dropdown-menu" data-content="app-selection-list"></ul></div></div>');
      this.spinnerTemplate      = _.template('<div class="sui-spinner_inner"></div>');
      this.appSelectionTemplate = _.template('<li><a href="#" data-name="{{- internal_name }}"><i class="navbar-icon {{- icon_name }}"></i><span>{{- name }}</span></a></li>');
      this.resultsTemplate      = _.template('<div class="global-search_results"><div class="global-search_result is-selected" data-content="exact-search-result" data-result-type="full-search" data-text=""><a href="" class="global-search_full-search-link"><i class="navbar-icon icon-search sui-icon sui-icon--16"></i><span class="global-search_result-name"></span></a></div><div data-content="search-suggestions"></div><div class="global-search_groups sui-u-collapsible sui-u-collapsed"></div></div>');

      this.groupTemplate        = _.template('<div class="global-search_group sui-u-fadeable u-faded-almost-out"><span class="global-search_group-name">{{- name }}</span><ul class="global-search_group-results"></ul></div>');
      this.resultTemplate       = _.template('<li class="global-search_result"><a href="{{- path }}"><i class="navbar-icon {{- result_icon}}"></i><span class="global-search_result-name">{{- name }}</span><span class="global-search_result-excerpt">{{= excerpt }}</span></a></li>');
      this.suggestionTemplate   = _.template('<div class="global-search_result" data-result-type="full-search" data-text="{{- text }}"><a href="{{- url }}" class="global-search_full-search-link"><i class="navbar-icon icon-search sui-icon sui-icon--16"></i><span class="global-search_result-name">\'{{- text }}\'</span></a></div>');

      _.templateSettings = oldTemplateSettings;
    },

    hideOnClickOut: function(event) {
      if( $(event.target).closest('.global-search_controls').length === 0 ) {
        this.deactivate();
      }
    },

    autocompleteIfLongEnough: function() {
      this.query = this.$input.val();

      if( this.selectedAppName !== $UI.appInterfaces.localAppName ) {
        return; // For now only autocomplete on local app
      }

      if( this.query.length >= this.autocompleteMinLength ) {
        if( this.query !== this.lastAutocompleteQuery ) { // get an event on navigation (up/down) keys so don't autocomplete for those
          this.lastAutocompleteQuery = this.query;
          this.autocompleteXhr && this.autocompleteXhr.abort(); // helps prevent a race condition with fading results in/out

          this.showAutocompletePanel();

          this.debouncedAutocomlete();
        }
      }
      else {
        this.hideAutocompletePanel();
        this.$spinnerEl && this.$spinnerEl.removeClass('u-faded-in');
        this.lastAutocompleteQuery = null;
      }
    },

    showAutocompletePanel: function() {
      if( this.selectedAppName !== $UI.appInterfaces.localAppName ) {
        return; // For now only autocomplete on local app
      }

      if( !this.$el.is(':visible') ) {
        return; // Just in case they closed search in the meantime
      }

      this.$resultsEl.show(); // in case it was hidden by clearing the text field
      this.fadeOutResults();

      var exactResult = this.$resultsEl.find('[data-content="exact-search-result"]');

      exactResult.attr('data-text', this.query);
      exactResult.find('a').attr('href', this.fullSearchPath(this.query) );
      exactResult.find('.global-search_result-name').text("'" + this.query + "'");
      this.selectFullSearchResult();
      this.$el.find('.global-search_app-selector').on('click', $.proxy(this.hideAutocompletePanel, this));
    },

    fullSearchPath: function(query) {
      return $UI.appInterfaces.apps[this.selectedAppName].fullSearchPath(query)
    },

    hideAutocompletePanel: function() {
      if( this.$resultsEl ) {
        this.$resultsEl.hide();
        this.$resultsEl.find('.global-search_groups').addClass('sui-u-collapsed');
      }
      if( this.$suggestionsEl ) {
        this.$suggestionsEl.html('');
      }
      this.$el.find('.global-search_app-selector').off('click');
    },

    autocomplete: function() {
      if( this.selectedAppName !== $UI.appInterfaces.localAppName ) {
        return; // For now only autocomplete on local app
      }

      this.$spinnerEl.addClass('u-faded-in');
      this.autocompleteXhr = $UI.appInterfaces.apps[this.selectedAppName].submitSearchAutocomplete(this.query);
      this.autocompleteXhr.done( $.proxy( this.showAutocompleteResults, this ) );
      this.autocompleteXhr.error( $.proxy( this.showAutocompleteError, this ) );
    },

    showAutocompleteResults: function(json) {
      this.insertSuggestions( json.suggestions );
      this.insertResultGroups( json.result_groups );
    },

    insertSuggestions: function(suggestions) {
      suggestions = suggestions || [];

      this.$suggestionsEl.html('');

      _.each( suggestions || [], _.bind( function(suggestion) {
        this.$suggestionsEl.append( this.suggestionTemplate({ text: suggestion, url: this.fullSearchPath(suggestion) }) );
      }, this ) );
    },

    insertResultGroups: function(result_groups) {
      result_groups = result_groups || [];

      var groups = this.$resultsEl.find('.global-search_groups');

      groups.find('.global-search_group').remove();

      var _this = this;
      _.each( result_groups, function( group ) {
        var groupEl = $( _this.groupTemplate({ name: group.name || '' }) );

        groups.append( groupEl );
        var groupResults = groupEl.find('.global-search_group-results');

        _.each( group.results || [], function( result ) {
          var data = _.extend( { name: '', excerpt: '', path: '#', result_icon: 'page' }, result );
          data.result_icon = ' search-' + data.result_icon + '-icon sui-icon--16';
          groupResults.append( _this.resultTemplate( data ) );
        });
      });

      var reflow = $('body').offset().left; // force reflow
      this.fadeInResults();
      this.$spinnerEl.removeClass('u-faded-in');

      if( result_groups.length ) {
        groups.removeClass('sui-u-collapsed');
      }
      else {
        groups.addClass('sui-u-collapsed'); // Hide the groups list if there are no results
      }
    },

    showAutocompleteError: function() {
      this.$spinnerEl.removeClass('u-faded-in');
    },

    fadeOutResults: function() {
        this.$resultsEl.find('.global-search_group').removeClass('u-faded-in').addClass('u-faded-almost-out');
      },

    fadeInResults: function() {
        this.$resultsEl.find('.global-search_group').removeClass('u-faded-almost-out').addClass('u-faded-in');
    },

    handleNavigationKey: function(event) {
      if( !this.$resultsEl || !this.$resultsEl.is(':visible') ) {
        return; // Just in case they closed search in the meantime
      }

      var navKeys = { down: 40, up: 38, enter: 13 };
      var directions = { down: 1, up: -1 };

      switch( event.keyCode ) {
        case navKeys.down:
          this.selectNewResult(event, directions.down);
          break;

        case navKeys.up:
          this.selectNewResult(event, directions.up);
          break;

        case navKeys.enter:
          if( event.target !== this.$input[0] ) { // Ignore ENTER in input field b/c that will do a submit
            this.navigateToSelectedResult();
          }
          break;
      }
    },

    selectNewResult: function(event, direction) {
      var selectedIndex = _.indexOf( this.resultElements(), this.selectedResult()[0] );
      var newIndex = selectedIndex + direction;

      if( selectedIndex >= 0 && newIndex >= 0 && newIndex < this.resultElements().length ) {
        this.selectedResult().removeClass('is-selected');
        $(this.resultElements()[newIndex]).addClass('is-selected');

        var newSelection = this.selectedResult();

        if( newSelection.attr('data-result-type') === 'full-search' ) {
          this.$input.val( newSelection.attr('data-text') )
          this.query = this.lastAutocompleteQuery = newSelection.attr('data-text');
          this.$input.focus();
          this.moveCursorToEndOfInput();
        }
        else {
          this.$input.blur();
        }

        event.preventDefault();
      }
    },

    selectedResult: function() {
      return this.$resultsEl.find('.global-search_result.is-selected');
    },

    resultElements: function() {
      return this.$resultsEl.find('.global-search_result');
    },

    selectFullSearchResult: function() {
      if( this.$resultsEl ) {
        var results = this.resultElements();
        if( results.length > 0 ) {
          results.removeClass('is-selected');
          $(results[0]).addClass('is-selected');
        }
      }
    },

    navigateToSelectedResult: function() {
      var result = this.selectedResult();
      this.analyticsForSelection(result);
      window.location = result.find('a').attr('href');
    },

    analyticsForSelection: function(result) {
      // We can get here from a click or a form submit (and the autocomplete results may not be showing), thus the weird logic
      var group = result ? result.parents('.global-search_group') : null;

      if( result && group.length ) {
        var type = group.find('.global-search_group-name').text();
        var name = result.find('.global-search_result-name').text();
        this.analyticsEvent('Item selected', name + ' - ' + type + ' - "' + this.query + '"');
      }
      else {
        this.analyticsEvent('Item selected', 'Full search - Search - "' + this.query + '"');
      }
    },

    moveCursorToEndOfInput: function() {
      var el = this.$input[0];
      if (typeof el.selectionStart == "number") {
        el.selectionStart = el.selectionEnd = el.value.length;
      } else if (typeof el.createTextRange != "undefined") {
        el.focus();
        var range = el.createTextRange();
        range.collapse(false);
        range.select();
      }
    },

    submitFullSearch: function(event) {
      event.preventDefault();

      if( this.query ) {
        this.analyticsForSelection();
        window.location = $UI.appInterfaces.apps[this.selectedAppName].fullSearchPath(this.query);
      }
    },

    newAppSelected: function(event) {
      event.preventDefault();
      event.stopPropagation();

      this.selectedAppName = $(event.currentTarget).attr('data-name');
      this.render();
      this.$input.focus(); // Might want to re-render on 'show' instead of having this duplication
      this.$input.val( this.query );

      this.lastAutocompleteQuery = null;
      this.autocompleteIfLongEnough();
    },

    analyticsEvent: function(eventName, eventData1) {
      $(document).trigger('google-analytics:send:event',['QuickNav', eventName, eventData1]);
    }

  };

  ////////////////////////////////////////////////////////////////////////////////////////////////////
  // Hotkey watcher (for Search only right now)
  ////////////////////////////////////////////////////////////////////////////////////////////////////

  // "state machine" for detecting keystroke combination (tab + q)
  var waitingForOldSearchKey = false;

  var oldSearchModifierKey = 9; // TAB
  var oldSearchKey = 81; // 'Q'
  var escapeKey = 27;

  var searchKey = 191; // The forward slash '/'

  // event listener for triggering the dialog
  $(document).keydown(function(event) {
    var keyCode = event.keyCode;
    var $target = $(event.target);

    if( $target.is('input') || $target.is('textarea') || $target.attr('contentEditable') ) {
      return;
    }

    if( keyCode === searchKey ) {
      event.preventDefault();
      $(document).scrollTop(0)
      $(document).trigger( 'global-search:activate');
      waitingForOldSearchKey = false;
    }
    if( keyCode === oldSearchModifierKey) {
      waitingForOldSearchKey = true;
    }
    else {
      if( keyCode === oldSearchKey && waitingForOldSearchKey ) {
        event.preventDefault();
        $(document).trigger( 'global-search:activate');
      }
      waitingForOldSearchKey = false;
    }
  });

  // if they let go of the modifier while waiting for the search key just cancel everything
  $(document).keyup(function(event) {
    if( waitingForOldSearchKey && event.keyCode === oldSearchModifierKey ) {
      waitingForOldSearchKey = false;
    }
  });

  // handle everything key-wise inside the dialog...
  $(document).keydown(function(event) {
    var key = event.keyCode;

    if(key === escapeKey) {
      $(document).trigger( 'global-search:deactivate');
    }
  });

}( window.jQuery );
}

;
/*1.0*/
// Rails composition file










;
/*1.0*/
/* ==========================================================
 * bootstrap-affix.js v2.2.2
 * http://twitter.github.com/bootstrap/javascript.html#affix
 * ==========================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */



;if(typeof window.jQuery === 'function') {
!function ($) {

  "use strict"; // jshint ;_;


 /* AFFIX CLASS DEFINITION
  * ====================== */

  var Affix = function (element, options) {
    this.options = $.extend({}, $.fn.affix.defaults, options)
    this.$window = $(window)
      .on('scroll.affix.data-api', $.proxy(this.checkPosition, this))
      .on('click.affix.data-api',  $.proxy(function () { setTimeout($.proxy(this.checkPosition, this), 1) }, this))
    this.$element = $(element)
    this.checkPosition()
  }

  Affix.prototype.checkPosition = function () {
    if (!this.$element.is(':visible')) return

    var scrollHeight = $(document).height()
      , scrollTop = this.$window.scrollTop()
      , position = this.$element.offset()
      , offset = this.options.offset
      , offsetBottom = offset.bottom
      , offsetTop = offset.top
      , reset = 'affix affix-top affix-bottom'
      , affix

    if (typeof offset != 'object') offsetBottom = offsetTop = offset
    if (typeof offsetTop == 'function') offsetTop = offset.top()
    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom()

    affix = this.unpin != null && (scrollTop + this.unpin <= position.top) ?
      false    : offsetBottom != null && (position.top + this.$element.height() >= scrollHeight - offsetBottom) ?
      'bottom' : offsetTop != null && scrollTop <= offsetTop ?
      'top'    : false

    if (this.affixed === affix) return

    this.affixed = affix
    this.unpin = affix == 'bottom' ? position.top - scrollTop : null

    this.$element.removeClass(reset).addClass('affix' + (affix ? '-' + affix : ''))
  }


 /* AFFIX PLUGIN DEFINITION
  * ======================= */

  var old = $.fn.affix

  $.fn.affix = function (option) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('affix')
        , options = typeof option == 'object' && option
      if (!data) $this.data('affix', (data = new Affix(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.affix.Constructor = Affix

  $.fn.affix.defaults = {
    offset: 0
  }


 /* AFFIX NO CONFLICT
  * ================= */

  $.fn.affix.noConflict = function () {
    $.fn.affix = old
    return this
  }


 /* AFFIX DATA-API
  * ============== */

  $(window).on('load', function () {
    $('[data-spy="affix"]').each(function () {
      var $spy = $(this)
        , data = $spy.data()

      data.offset = data.offset || {}

      data.offsetBottom && (data.offset.bottom = data.offsetBottom)
      data.offsetTop && (data.offset.top = data.offsetTop)

      $spy.affix(data)
    })
  })


}(window.jQuery);
}
;
/*1.0*/
/* ========================================================================
 * Bootstrap: transition.js v3.1.1
 * http://getbootstrap.com/javascript/#transitions
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */



 ;if(typeof window.jQuery === 'function') {
+function ($) {
  'use strict';

  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)
  // ============================================================

  function transitionEnd() {
    var el = document.createElement('bootstrap')

    var transEndEventNames = {
      WebkitTransition : 'webkitTransitionEnd',
      MozTransition    : 'transitionend',
      OTransition      : 'oTransitionEnd otransitionend',
      transition       : 'transitionend'
    }

    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return { end: transEndEventNames[name] }
      }
    }

    return false // explicit for ie8 (  ._.)
  }

  // http://blog.alexmaccaw.com/css-transitions
  $.fn.emulateTransitionEnd = function (duration) {
    var called = false, $el = this
    $(this).one($.support.transition.end, function () { called = true })
    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }
    setTimeout(callback, duration)
    return this
  }

  $(function () {
    $.support.transition = transitionEnd()
  })
}(window.jQuery);
}
;
/*1.0*/
/* =============================================================
 * bootstrap-collapse.js v2.0.0
 * http://twitter.github.com/bootstrap/javascript.html#collapse
 * =============================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================ */


;if(typeof window.jQuery === 'function') {
!function( $ ){

  "use strict"; // jshint ;_;

  var Collapse = function ( element, options ) {
  	this.$element = $(element)
    this.options = $.extend({}, $.fn.collapse.defaults, options)

    if (this.options["parent"]) {
      this.$parent = $(this.options["parent"])
    }

    this.options.toggle && this.toggle()
  }

  Collapse.prototype = {

    constructor: Collapse,

    dimension: function () {
      var hasWidth = this.$element.hasClass('width')
      return hasWidth ? 'width' : 'height'
    },

    show: function () {
      var dimension = this.dimension(),
        scroll = $.camelCase(['scroll', dimension].join('-')),
        actives = this.$parent && this.$parent.find('.in'),
        hasData

      if (actives && actives.length) {
        hasData = actives.data('collapse')
        actives.collapse('hide')
        hasData || actives.data('collapse', null)
      }

      this.$element[dimension](0)
      this.transition('addClass', 'show', 'shown')
      this.$element[dimension](this.$element[0][scroll])

    },

    hide: function () {
      var dimension = this.dimension()
      this.reset(this.$element[dimension]())
      this.transition('removeClass', 'hide', 'hidden')
      this.$element[dimension](0)
    },

    reset: function ( size ) {
      var dimension = this.dimension()

      this.$element
        .removeClass('collapse')
        [dimension](size || 'auto')
        [0].offsetWidth

      this.$element.addClass('collapse')
    },

    transition: function ( method, startEvent, completeEvent ) {
      var that = this,
        complete = function () {
          if (startEvent == 'show') {that.reset();}
          that.$element.trigger(completeEvent)
        }

      this.$element.trigger(startEvent)[method]('in')

      $.support.transition && this.$element.hasClass('collapse') ?
        this.$element.one($.support.transition.end, complete) :
        complete()
  	},

    toggle: function () {
      this[this.$element.hasClass('in') ? 'hide' : 'show']()
  	}

  }

  /* COLLAPSIBLE PLUGIN DEFINITION
  * ============================== */

  $.fn.collapse = function ( option ) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('collapse')
        , options = typeof option == 'object' && option
      if (!data) $this.data('collapse', (data = new Collapse(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  $.fn.collapse.defaults = {
    toggle: true
  }

  $.fn.collapse.Constructor = Collapse

  $.fn.reveal = $.fn.collapse; // alias to reveal

 /* COLLAPSIBLE DATA-API
  * ==================== */

  $(function () {
    $('body').on('click.collapse.data-api', '[data-toggle=collapse], [data-toggle=reveal]', function ( e ) {
      var $this = $(this), href,
        target = $this.attr('data-target') || e.preventDefault() || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '') /*strip for ie7*/,
        option = $(target).data('collapse') ? 'toggle' : $this.data()
      $(target).collapse(option)
    });
  })

}( window.jQuery )
}
;
/*1.0*/
if(typeof window.jQuery === 'function') {
!function( $ ){

  "use strict"

 /* ALERT CLASS DEFINITION
  * ====================== */

  var dismiss = '[data-dismiss="alert"]'
    , Alert = function ( el ) {
        $(el).on('click', dismiss, this.close)
      }

  Alert.prototype = {

    constructor: Alert

  , close: function ( e ) {
      var $this = $(this)
        , selector = $this.attr('data-target')
        , $parent

      if (!selector) {
        selector = $this.attr('href')
        selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') //strip for ie7
      }

      $parent = $(selector)
      $parent.trigger('close')

      e && e.preventDefault()

      $parent.length || ($parent = $this.hasClass('alert') ? $this : $this.parent())

      $parent.removeClass('in')

      function removeElement() {
        $parent.remove()
        $parent.trigger('closed')
      }

      $.support.transition && $parent.hasClass('fade') ?
        $parent.on($.support.transition.end, removeElement) :
        removeElement()
    }

  }


 /* ALERT PLUGIN DEFINITION
  * ======================= */

  $.fn.alert = function ( option ) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('alert')
      if (!data) $this.data('alert', (data = new Alert(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  $.fn.alert.Constructor = Alert


 /* ALERT DATA-API
  * ============== */

  $(function () {
    $('body').on('click.alert.data-api', dismiss, Alert.prototype.close)
  })

}( window.jQuery )
}
;
/*1.0*/
/* ============================================================
 * bootstrap-button.js v2.0.0
 * http://twitter.github.com/bootstrap/javascript.html#buttons
 * ============================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================ */


!function( $ ){

  "use strict"

 /* BUTTON PUBLIC CLASS DEFINITION
  * ============================== */

  /**
    Create stateful buttons.

    @class SuiCoreComponents.Button
    @constructor
    @param {Object} element Button element
    @param {Object} [options] Optional configurations
    @param {String} [options.loadingText = 'loading...'] Text to display when button is in loading state
  */
  var Button = function ( element, options ) {
    this.$element = $(element)
    this.options = $.extend({}, $.fn.button.defaults, options)
  }

  Button.prototype = {

      constructor: Button

      /**
        Set button state - swaps text to any text state defined in data or options object.

        @method setState
        @param {String} state State to set button to
      */
    , setState: function ( state ) {
        var d = 'disabled'
          , $el = this.$element
          , data = $el.data()
          , val = $el.is('input') ? 'val' : 'html'

        state = state + 'Text'
        data.resetText || $el.data('resetText', $el[val]())

        $el[val](data[state] || this.options[state])

        // push to event loop to allow forms to submit
        setTimeout(function () {
          state == 'loadingText' ?
            $el.addClass(d).attr(d, d) :
            $el.removeClass(d).removeAttr(d)
        }, 0)
      }

      /**
        Toggles push state of button.

        @method toggle
      */
    , toggle: function () {
        var $parent = this.$element.parent('[data-toggle="buttons-radio"]')

        $parent && $parent
          .find('.active')
          .removeClass('active')

        this.$element.toggleClass('active')
      }

  }


 /* BUTTON PLUGIN DEFINITION
  * ======================== */

  $.fn.button = function ( option ) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('button')
        , options = typeof option == 'object' && option
      if (!data) $this.data('button', (data = new Button(this, options)))
      if (option == 'toggle') data.toggle()
      else if (option) data.setState(option)
    })
  }

  $.fn.button.defaults = {
    loadingText: 'loading...'
  }

  $.fn.button.Constructor = Button


 /* BUTTON DATA-API
  * =============== */

  $(function () {
    $('body').on('click.button.data-api', '[data-toggle^=button]', function ( e ) {
          var $btn = $(e.target)
          if (!$btn.hasClass('sui-bttn')) $btn = $btn.closest('.sui-bttn')
          $btn.button('toggle')
        })
  })

}( window.jQuery )
;
/*1.0*/
!function( $ ){

  "use strict"

 /* DROPDOWN CLASS DEFINITION
  * ========================= */

  var dropSelector = '[data-toggle="sui_dropdown"]';

  var Dropdown = function ( element ) {
        var $el = $(element).on('click.sui_dropdown.data-api', this.toggle);
        $('html').on('click.sui_dropdown.data-api', function () {
          $el.parent().removeClass('open');
        })
      }

  Dropdown.prototype = {

    constructor: Dropdown,

    toggle: function ( e ) {
      var $this = $(this),
          selector = $this.attr('data-target'),
          $parent,
          isActive,
          contentRect,
          contentPosition,
          contentLeftPosition;

      if (!selector) {
        selector = $this.attr('href');
        selector = selector && selector.replace(/.*(?=#[^\s]*$)/, ''); //strip for ie7
      }

      $parent = $(selector);
      $parent.length || ($parent = $this.parent());

      isActive = $parent.hasClass('is-open');

      Dropdown.prototype.clearMenus();

      if (!isActive){
        this.$element = $parent;
        this.$contentElement = $parent.find('.sui-dropdown_content');

        var relatedTarget = { relatedTarget: this }
        $parent.trigger( 'sui_dropdown:show', relatedTarget );

        $this.toggleClass('active');

        $parent.toggleClass('is-open').toggleClass('is-closed');

        this.$contentElement.addClass('sui-dropdown_content--bottom');

        if( $parent.find('[data-toggle="sui_dropdown"]').hasClass('sui-bttn--small') ) {
          this.$contentElement.css({ top: '42px' });
        }
        else if( $parent.find('[data-toggle="sui_dropdown"]').hasClass('sui-bttn') ) {
          this.$contentElement.css({ top: '52px' });
        }
        else if( $parent.parents('.section-navbar').length ) {
          this.$contentElement.css({ top: '38px' });
        }
        else {
          this.$contentElement.css({ top: '26px' });
        }

        this.$contentElement.toggleClass('is-hidden');
        this.$contentElement.toggleClass('is-shown');

        contentRect = this.$contentElement[0].getBoundingClientRect(),
        contentPosition = this.$contentElement.offset(),
        contentLeftPosition = contentPosition.left + contentRect.width;

        if(contentLeftPosition >= window.innerWidth) {
          this.$contentElement.addClass('sui-dropdown_content--align-right');
        } else if(contentPosition.left < 0) {
          this.$contentElement.addClass('sui-dropdown_content--align-left');
        }

        $parent.trigger('sui_dropdown:shown', relatedTarget)
      }

      return false;
    },

    clearMenus: function() {
      $(dropSelector).each( function() {
        var relatedTarget = { relatedTarget: this }
        var $contentElement = $(this).parent().find('.sui-dropdown_content');

        $(this).removeClass('active');
        $(this).parent().removeClass('is-open').addClass('is-closed');
        $contentElement.removeClass('is-shown').addClass('is-hidden');
        $(this).trigger('sui_dropdown:hidden', relatedTarget)
      });
    }

  }


  /* DROPDOWN PLUGIN DEFINITION
   * ========================== */

  $.fn.sui_dropdown = function ( option ) {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('sui_dropdown');
      if (!data) $this.data('sui_dropdown', (data = new Dropdown(this)));
      if (typeof option == 'string') data[option].call($this);
    })
  }

  $.fn.sui_dropdown.Constructor = Dropdown;


  /* APPLY TO STANDARD DROPDOWN ELEMENTS
   * =================================== */

  $(function () {
    $('html').on('click.sui_dropdown.data-api', Dropdown.prototype.clearMenus);
    $('body').on('click.sui_dropdown.data-api', dropSelector, Dropdown.prototype.toggle);
  })

}( window.jQuery );
/*1.0*/
/* ============================================================
* sui-loadmask.js v1.4.0
* ============================================================
* Copyright © 2006-15 Spiceworks, Inc.  All Rights Reserved.  http://www.spiceworks.com
* ============================================================ */


!function( $ ) {

  "use strict"

  /* SuiLoadMask PUBLIC CLASS DEFINITION
  * =============================== */

  /**
    Create a loadmask.

    @class SuiCoreComponents.SuiLoadMask
    @constructor
    @param {Object} element Element to apply loadmask to
    @param {Object} [options] Optional configurations
    @param {String | Integer} [options.spinnerSize = 100px] Size of loading spinner
    @param {String} [options.spinnerClass] Class to add to spinner element
  */
  var SuiLoadMask = function ( element, options ) {
    this.init('suiLoadMask', element, options)
  };

  SuiLoadMask.prototype = {

    constructor: SuiLoadMask,

    init: function ( type, element, options ) {
      this.type = type;
      this.$element = $(element);
      this.options = this.getOptions(options);

      this.maskDiv = $('<div class="sui-loadmask">');
      this.spinnerDiv = $('<div class="sui-spinner">');

      for (var i=0; i < 8; i++) {
        this.spinnerDiv.append($('<div class="sui-spinner_inner">'));
      }

      if(this.options.spinnerSize) {
        this.spinnerDiv.width(this.options.spinnerSize);
        this.spinnerDiv.height(this.options.spinnerSize);
      }

      if(this.options.spinnerClass) {
        this.spinnerDiv.addClass(this.options.spinnerClass);
      }
    },

    /**
      Get a loadmask's options, and optionally supply additonal configurations.
      Options set via data attributes will override the passed options.

      @method getOptions
      @param {Object} [options] Additional options to set on loadmask
      @return {Object} Returns loadmask's options set
    */
    getOptions: function ( options ) {
      options = $.extend({}, $.fn[this.type].defaults, options, this.$element.data())
      return options;
    },

    /**
      Make loadmask visible.

      @method show
    */
    show: function () {
      this.maskElement();
    },

    /**
      Remove loadmask from view.

      @method hide
    */
    hide: function () {
      this.unmaskElement();
    },

    maskElement: function(){
      var elemHeight, elemWidth, spinnerHeight, spinnerWidth, minDimension;

      if(this.isMasked()) {
        this.unmaskElement();
      }

      if(this.$element.css("position") == "static") {
        this.$element.addClass("sui-loadmask--masked-relative");
      }
      this.$element.addClass("sui-loadmask--masked");

      this.$element.append(this.maskDiv);
      this.$element.append(this.spinnerDiv);

      elemHeight = this.$element.outerHeight();
      elemWidth = this.$element.outerWidth();
      spinnerHeight = this.spinnerDiv.height();
      spinnerWidth = this.spinnerDiv.width();

      this.maskDiv.width(elemWidth);
      this.maskDiv.height(elemHeight);

      //if parent element is rectangular & spinner dimensions are set to percentage, spinner will be oblong instead of circular
      if(spinnerHeight != spinnerWidth){
        minDimension = Math.min(spinnerHeight, spinnerWidth);

        this.spinnerDiv.height(minDimension);
        this.spinnerDiv.width(minDimension);
        spinnerHeight = minDimension;
        spinnerWidth = minDimension;
      }

      //calculate center position
      this.spinnerDiv.css("top", Math.round(elemHeight / 2 - spinnerHeight / 2)+"px");
      this.spinnerDiv.css("left", Math.round(elemWidth / 2 - spinnerWidth / 2)+"px");

      this.maskDiv.css('z-index', this.options.mask_z_index);
      this.spinnerDiv.css('z-index', this.options.img_z_index);
      this.maskDiv.show();
      this.spinnerDiv.show();
    },

    unmaskElement: function(){
      this.maskDiv.detach();
      this.spinnerDiv.detach();
      this.$element.removeClass("sui-loadmask--masked");
      this.$element.removeClass("sui-loadmask--masked-relative");
    },

    /**
      Check if element is currently masked.

      @method isMasked
      @returns {Boolean} Returns true if element is currently masked
    */
    isMasked: function(){
      return this.$element.hasClass("sui-loadmask--masked");
    }
  };


  /* SuiLoadMask PLUGIN DEFINITION
  * ========================= */

  $.fn.suiLoadMask = function ( option ) {
    return this.each(function () {
      var $this = $(this),
      data = $this.data('sui-loadmask'),
      options = typeof option == 'object' && option
      if (!data){ $this.data('sui-loadmask', (data = new SuiLoadMask(this, options)))}
      if (typeof option == 'string') {data[option]()}
    })
  };

  $.fn.suiLoadMask.Constructor = SuiLoadMask;

  $.fn.suiLoadMask.defaults = {
    mask_z_index: 1,
    img_z_index:2
  };

}( window.jQuery )
;
/*1.0*/
/* =========================================================
 * bootstrap-modal.js v2.0.0
 * http://twitter.github.com/bootstrap/javascript.html#modals
 * =========================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================= */



!function( $ ){

  "use strict"

  /* MODAL CLASS DEFINITION
   * ====================== */
  /**
   Create a modal.

   @class SuiCoreComponents.Modal
   @constructor
   @param {Object} content Modal element
   @param {Object} [options] Optional configurations
   @param {Boolean} [options.closeable = true] When true, modal can be closed by pressing the escape or clicking outside
   @param {Boolean} [options.show = true] When true, show modal immediately after activation
   @param {Boolean} [options.destroyOnHide = false] When true, modal is automatically destroyed when hidden
   */
  var Modal = function ( content, options ) {
    this.options = options
    this.$element = $(content);
    this.$element.find('[data-dismiss="modal"]').on( 'click', $.proxy(this.hide, this) );

    this.$element.on( 'click', $.proxy(hideOnOverlayClick, this) );
    $(document).on('keyup.dismiss.sui_modal', $.proxy(hideOnEscapeKey, this) );

    this.options.closeable = this.options.closeable || this.$element.data('closeable');
    this.options.size = this.options.size || this.$element.data('size');
  }

  Modal.prototype = {

    constructor: Modal,

    /**
     Toggle a modal's visibilty.

     @method toggle
     @return Returns modal's show or hide function
     */
    toggle: function () {
      return this[!this.isShown ? 'show' : 'hide']()
    },

    /**
     Make a modal visible.

     @method show
     */
    show: function () {
      if (this.isShown) return

      this.isShown = true

      /**
       Fires when show() is called on a modal.

       @event show
       */
      this.$element.trigger('sui_modal:show')

      this.$element.show();

      setTimeout( _.bind( function() { // Allow reflow
        this.position();
        $(window).off('resize.sui_modal-reposition');
        $(window).on('resize.sui_modal-reposition', _.debounce( $.proxy( this.position, this), 100 ) );

        this.$element.removeClass('is-hidden');
        this.$element.addClass('is-shown u-faded-in');

        /**
         Fires after a modal has been made visible to the user (waits for CSS transitions to complete).

         @event shown
         */
        this.$element.one($.support.transition.end, $.proxy( this.$element.trigger, this.$element, 'sui_modal:shown' ) )
                     .emulateTransitionEnd(200);
      }, this ), 0 );
    },

    contentElement: function() {
      if( !this.$contentElement ) {
        this.$contentElement = this.$element.find('[data-modal-el="content"]');
      }
      return this.$contentElement;
    },

    /**
     Position a modal in the middle of the window.
     Called automatically when a modal is shown, but useful for recentering a modal if necessary.

     @method position
     */
    position: function(){
      var $contentElement = this.contentElement(),
          winHeight = window.innerHeight,
          outerHeight = $contentElement.outerHeight();

      $contentElement.css("left", (window.innerWidth - $contentElement.outerWidth())/2 + "px");
      // keep the title of long modals visible

      // align in the center of the screen
      if( this.options.size === 'mega' ) {
        $contentElement.css("top", '');
      }
      else {
        $contentElement.css("top", (window.innerHeight - $contentElement.outerHeight()) / 2);
      }
    },

    /**
     Remove a modal from view.

     @method hide
     @param {Object} e Event
     */
    hide: function ( e ) {
      e && e.preventDefault()

      if (!this.isShown) return

      var that = this
      this.isShown = false

      /**
       Fires when hide() is called on a modal, before the CSS transition if any.

       @event hide
       */
       this.$element.trigger('sui_modal:hide');

       this.$element.addClass('is-hidden');
       this.$element.removeClass('is-shown u-faded-in');

       this.$element.one($.support.transition.end, _.bind( function() {
         this.$element.hide();

         /**
          Fires when modal is finished hiding, after the CSS transition.

          @event hidden
          */
         this.$element.trigger('sui_modal:hidden');

         if( this.options.destroyOnHide ) {
           this.destroy();
         }
       }, this )).emulateTransitionEnd(200);
    },

    /**
     Destroy a modal.

     @method destroy
     */
    destroy: function() {
      this.$element.remove();
    }

  }


  /* MODAL PRIVATE METHODS
   * ===================== */

   function hideOnOverlayClick(event) {
     if( this.options.closeable && $(event.target).attr('data-modal-el') === 'overlay' ) {
       this.hide(event);
     }
   }

   function hideOnEscapeKey(event) {
     if( this.options.closeable && event.which == 27 ) {
        this.hide(event);
      }
   }

  /* MODAL PLUGIN DEFINITION
   * ======================= */

  $.fn.sui_modal = function ( option ) {
    return this.each(function () {
      var $this = $(this),
        data = $this.data('sui_modal'),
        options = $.extend({}, $.fn.sui_modal.defaults, $this.data(), typeof option == 'object' && option)
      if (!data) $this.data('sui_modal', (data = new Modal(this, options)))
      if (typeof option == 'string') data[option]()
      else if (options.show) data.show()
    })
  }

  $.fn.sui_modal.defaults = {
    closeable: true,
    show: true,
    destroyOnHide: false
  }

  $.fn.sui_modal.Constructor = Modal


  /* MODAL DATA-API
   * ============== */

  $(function () {
    $('body').on('click.sui_modal.data-api', '[data-toggle="sui_modal"]', function ( e ) {
      var $this = $(this), href,
        $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '')) /*strip for ie7*/,
        option = $target.data('sui_modal') ? 'toggle' : $.extend({}, $target.data(), $this.data())
      e.preventDefault()

      $target.sui_modal(option)
    })
  })

}( window.jQuery );
/*1.0*/
/* ========================================================
 * bootstrap-tab.js v2.0.0
 * http://twitter.github.com/bootstrap/javascript.html#tabs
 * ========================================================
 * Copyright 2012 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================== */


!function( $ ){
  "use strict"; // jshint ;_;

 /* TAB CLASS DEFINITION
  * ==================== */
  /**
    Add quick, dynamic tab and pill functionality for transitioning through local content.

    You can activate a tab or pill navigation without writing any JavaScript by specifying data-toggle="tab" or data-toggle="pill" on an element. Expected markup for the tab control is an unordered list, with each list item containing a link with data-toggle specified and either href or data-target targeting a container node in the DOM. Container node should have the class 'tab-content' and each individual tab inside the container should have the class 'tab-pane' and a unique id.

    @class SuiCoreComponents.Tab
    @constructor
    @param {Object} element Tab element
    @example
        <ul class="nav nav-tabs" id="myTab">
          <li class="active"><a href="#home">Home</a></li>
          <li><a href="#profile">Profile</a></li>
          <li><a href="#messages">Messages</a></li>
          <li><a href="#settings">Settings</a></li>
        </ul>

        <div class="tab-content">
          <div class="tab-pane active" id="home">...</div>
          <div class="tab-pane" id="profile">...</div>
          <div class="tab-pane" id="messages">...</div>
          <div class="tab-pane" id="settings">...</div>
        </div>
  */
  var Tab = function ( element ) {
    this.element = $(element);
  }

  Tab.prototype = {
    constructor: Tab,

    /**
      Make tab visible. Fires 'show' event on tab before it is shown and 'shown' event after it is shown.

      @method show
    */
    show: function () {
      var $this = this.element,
          $ul = $this.closest('ul:not(.dropdown-menu)'),
          selector = $this.attr('data-target'),
          previous,
          $target;

      if (!selector) {
        selector = $this.attr('href');
        selector = selector && selector.replace(/.*(?=#[^\s]*$)/, ''); //strip for ie7
      }

      if ( $this.parent('li').hasClass('active') ) return;

      previous = $ul.find('.active a').last()[0];

      /**
        Fires on tab show, just before the new tab is shown.

        @event show
        @param {Object} relatedTarget Previous active tab, if available
      */
      $this.trigger({
        type: 'show',
        relatedTarget: previous
      });

      $target = $(selector);

      this.activate($this.parent('li'), $ul);

      /**
        Fires on tab show, after the tab has been shown.

        @event shown
        @param {Object} relatedTarget Previous active tab, if available
      */
      this.activate($target, $target.parent(), function () {
        $this.trigger({
          type: 'shown',
          relatedTarget: previous
        });
      });
    },

    /**
      Make passed tab the active tab.

      @method activate
      @async
      @param {Object} element Tab element
      @param {Object} container Parent container of tab element
      @param {Function} callback Callback function to be completed after tab is activated
    */
    activate: function ( element, container, callback) {
      var $active = container.find('> .active'),
          transition = callback && $.support.transition && $active.hasClass('fade');

      function next() {
        $active
          .removeClass('active')
          .find('> .dropdown-menu > .active')
          .removeClass('active');

        element.addClass('active');

        if (transition) {
          element[0].offsetWidth; // reflow for transition
          element.addClass('in');
        } else {
          element.removeClass('fade');
        }

        if ( element.parent('.dropdown-menu') ) {
          element.closest('li.dropdown').addClass('active');
        }

        callback && callback();
      }

      transition ?
        $active.one($.support.transition.end, next) :
        next();

      $active.removeClass('in');
    }
  }


 /* TAB PLUGIN DEFINITION
  * ===================== */

  $.fn.tab = function ( option ) {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('tab');
      if (!data) $this.data('tab', (data = new Tab(this)));
      if (typeof option == 'string') data[option]();
    })
  }

  $.fn.tab.Constructor = Tab;


 /* TAB DATA-API
  * ============ */

  $(function () {
    $('body').on('click.tab.data-api', '[data-toggle="tab"], [data-toggle="pill"]', function (e) {
      e.preventDefault();
      $(this).tab('show');
    })

    $('a[data-content-source="pjax"]').on( 'shown', function() {
      var url = $(this).attr('href');
      var container = $( $(this).attr('data-target') );

      $.pjax({url: url, container: container, scrollTo: false, pushstateMandatory: false });
    })

  })

}( window.jQuery )
;
/*1.0*/
!function ($) {

  "use strict"; // jshint ;_;


 /* TOOLTIP PUBLIC CLASS DEFINITION
  * =============================== */

  var tipselector = 'a[rel~=sui_tooltip], button[rel~=sui_tooltip]',

  /**
    Create a tooltip.

    @class SuiCoreComponents.sui_tooltip
    @constructor
    @param {Object} element Tooltip element
    @param {Object} [options] Optional configurations
    @param {Boolean} [options.animation = false] When true, applies a CSS fade transition to the tooltip
    @param {Boolean} [options.html = false] Insert html into the tooltip. If false, jQuery's text method will be used to insert content into the dom. Use text if you're worried about XSS attacks.
    @param {String} [options.placement = 'top'] How to position the tooltip relative to it's element- top|bottom|left|right
    @param {String} [options.selector = false] If a selector is provided, tooltip objects will be delegated to specified targets
    @param {String|Function} [options.title = ''] Default title value if title tag isn't present
    @param {String} [options.trigger = 'hover'] How tooltip is triggered - hover|focus|manual
    @param {Number|Object} [options.delay = 0] Delay showing and hiding the tooltip in milliseconds. If a number is supplied, delay is applied to both hide/show. Object structure is delay: {show: 500, hide: 100}
    @param {String | false} [options.container = 'body'] Appends tooltip to a specific element
    @param {String | false} [options.class = false] Custom class to add to tooltip when shown
    @param {String} [options.template] Template to use when creating tooltip. Defaults to '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>'
  */
  Tooltip = function (element, options) {
    this.init('sui_tooltip', element, options)
  }

  Tooltip.prototype = {

    constructor: Tooltip,

    init: function (type, element, options) {
      var eventIn,
          eventOut,
          triggers,
          trigger,
          i

      this.type = type
      this.$element = $(element)
      this.options = this.getOptions(options)
      this.enabled = true

      triggers = this.options.trigger.split(' ')

      for (i = triggers.length; i--;) {
        trigger = triggers[i]
        if (trigger == 'click') {
          $(document).on('click', _.bind(function(event) {

            if( this.$element[0] === event.target ) {
              event.preventDefault();
              this.toggle();
            }
            else {
              var parents = $(event.target).parents('[data-component="sui-popover"]');
              var noParentsMe = _.every( parents, _.bind(function(parent) { parent !== this.$tip[0]; }, this) );

              if( noParentsMe ) {
                this.hide();
              }
            }
          }, this ));
        } else if (trigger != 'manual') {
          eventIn = trigger == 'hover' ? 'mouseenter' : 'focus'
          eventOut = trigger == 'hover' ? 'mouseleave' : 'blur'
          this.$element.on(eventIn + '.' + this.type, this.options.selector, $.proxy(this.enter, this))
          this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))
        }
      }

      this.options.selector ?
        (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :
        this.fixTitle()
    },

    /**
      Get a tooltip's options and optionally supply additional configurations.
      Passed options will override options set via data attributes.

      @method getOptions
      @param {Object} [options] Additional options to set on tooltip
      @return {Object} Returns tooltip's options set
    */
    getOptions: function (options) {
      options = $.extend({}, $.fn[this.type].defaults, this.$element.data(), options)

      if (options.delay && typeof options.delay == 'number') {
        options.delay = {
          show: options.delay
        , hide: options.delay
        }
      }

      return options
    },

    /**
      Handles transitions and delay before showing tooltip.
      Fires when a tooltip is hovered over or gains focus.

      @method enter
      @param {Object} e Triggering event
    */
    enter: function (e) {
      var defaults = $.fn[this.type].defaults,
          options = {},
          self

      this._options && $.each(this._options, function (key, value) {
        if (defaults[key] != value) options[key] = value
      }, this)

      self = $(e.currentTarget)[this.type](options).data(this.type)

      if (!self.options.delay || !self.options.delay.show) return self.show()

      clearTimeout(this.timeout)
      self.hoverState = 'in'
      this.timeout = setTimeout(function() {
        if (self.hoverState == 'in' && $.contains(document, self.$element[0])) self.show()
      }, self.options.delay.show)
    },

    /**
      Handles transitions and delay before hiding tooltip.
      Fires when mouse leaves tooltip area or tooltip loses focus.

      @method leave
      @param {Object} e Triggering event
    */
    leave: function (e) {
      var self = $(e.currentTarget)[this.type](this._options).data(this.type)

      if (this.timeout) clearTimeout(this.timeout)
      if (!self.options.delay || !self.options.delay.hide) return self.hide()

      self.hoverState = 'out'
      this.timeout = setTimeout(function() {
        if (self.hoverState == 'out') self.hide()
      }, self.options.delay.hide)
    },

    /**
      Make a tooltip visible.

      @method show
    */
    show: function () {
      var $tip,
          pos,
          actualWidth,
          actualHeight,
          placement,
          tp;

      if (this.hasContent() && this.enabled) {
        /**
          Fires when show() is called on a tooltip

          @event show
        */
        this.$element.trigger('sui_tooltip:show')

        $tip = this.tip()
        this.setContent()

        if ( this.options['class'] ) {
          $tip.addClass(this.options['class']);
        }

        if ( this.options.id ) {
          $tip.attr('id', this.options.id );
        }

        placement = typeof this.options.placement == 'function' ?
          this.options.placement.call(this, $tip[0], this.$element[0]) :
          this.options.placement

        $tip
          .detach()
          .css({ top: 0, left: 0 })
          .addClass('is-shown')
          .removeClass('is-hidden');

        this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)

        pos = this.getPosition()

        actualWidth = $tip[0].offsetWidth
        actualHeight = $tip[0].offsetHeight

        var arrowDiff = 5; // Height of arrow for top/bottom, Width for left/right

        switch (placement) {
          case 'bottom':
            tp = {top: pos.top + pos.height + arrowDiff, left: pos.left + pos.width / 2 - actualWidth / 2}
            break
          case 'top':
            tp = {top: pos.top - actualHeight - arrowDiff, left: pos.left + pos.width / 2 - actualWidth / 2}
            break
          case 'left':
            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth - arrowDiff}
            break
          case 'right':
            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width + arrowDiff}
            break
        }

        this.applyPlacement(tp, placement, 'sui-tooltip_content')

        setTimeout( _.bind( function() { // Allow reflow
          $tip.addClass('u-faded-in');

          /**
            Fires when a tooltip has been made visible to the user

            @event tooltip:shown
          */
          this.$element.trigger('sui_tooltip:shown')
        }, this ), 0 );
      }
    },

    /**
      Position a tooltip with offset and placement.
      Called automatically when a tooltip is shown.

      @method applyPlacement
      @param {Object} offset Coordinates for tooltip in relation to document. Uses format {top: 5, left: 10}
      @param {String} placement How to position tooltip in relation to it's element - top|bottom|left|right
    */
    applyPlacement: function(offset, placement, cssModule){
      var $tip = this.tip(),
          width = $tip[0].offsetWidth,
          height = $tip[0].offsetHeight,
          actualWidth,
          actualHeight,
          delta,
          replace

      $tip
        .offset(offset)
        .addClass('in');

      $tip.addClass( cssModule ? (cssModule + '--' + placement) : placement );

      actualWidth = $tip[0].offsetWidth
      actualHeight = $tip[0].offsetHeight

      if (placement == 'top' && actualHeight != height) {
        offset.top = offset.top + height - actualHeight
        replace = true
      }

      if (placement == 'bottom' || placement == 'top') {
        delta = 0

        if (offset.left < 0){
          offset.left = 0
          $tip.offset(offset)
        }
      }

      if (replace) $tip.offset(offset)
    },

    /**
      Set the content of a tooltip to it's title.

      @method setContent
    */
    setContent: function () {
      var $tip = this.tip(),
          title = this.getTitle()

      $tip[this.options.html ? 'html' : 'text'](title)
      $tip.removeClass('fade in top bottom left right')
    },

    /**
      Hide a tooltip.

      @method hide
      @return {Object} Returns this
    */
    hide: function () {
      var $tip = this.tip();

      /**
        Triggers when hide() is called on a tooltip.

        @event tooltip:hide
      */
      this.$element.trigger('sui_tooltip:hide')

      $tip.removeClass('u-faded-in');

      $tip.one($.support.transition.end, _.bind( function() {
        $tip.addClass('is-hidden');
        $tip.removeClass('is-shown');

        /**
          Fires when a tooltip has been removed from view.

          @event tooltip:hidden
        */
        this.$element.trigger('sui_tooltip:hidden')
      }, this )).emulateTransitionEnd(200);

      return this;
    },

    fixTitle: function () {
      var $e = this.$element
      if ($e.attr('title') || typeof($e.attr('data-original-title')) != 'string') {
        $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')
      }
    },

    /**
    Check if a tooltip has content.

    @method hasContent
    @return Returns the tooltip's title
    */
    hasContent: function () {
      return this.getTitle()
    },

    /**
      Get the coordinates and dimensions of tooltip's element.
      Used to help calculate the position of the tooltip.

      @method getPosition
      @return {Object} Returns element's width, height, and offset
    */
    getPosition: function () {
      var el = this.$element[0]
      return $.extend({}, (typeof el.getBoundingClientRect == 'function') ? el.getBoundingClientRect() : {
        width: el.offsetWidth,
        height: el.offsetHeight
      }, this.$element.offset())
    },

    /**
      Get the title of a tooltip.

      @method getTitle
      @return Returns the tooltip's title
    */
    getTitle: function () {
      var title,
          $e = this.$element,
          o = this.options;

      title = $e.attr('data-original-title')
        || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)

      return title
    },

    /**
      Get the tooltip element.

      @method tip
      @return Returns the existing tooltip element, or if one does not exist, creates one from the supplied template
    */
    tip: function () {
      return this.$tip = this.$tip || $(this.options.template)
    },

    /**
      Check if tooltip has a parentNode, and if not, hide the tooltip.

      @method validate
    */
    validate: function () {
      if (!this.$element[0].parentNode) {
        this.hide()
        this.$element = null
        this.options = null
      }
    },

    /**
      Enable a tooltip.

      @method enable
    */
    enable: function () {
      this.enabled = true
    },

    /**
      Disable a tooltip.

      @method disable
    */
    disable: function () {
      this.enabled = false
    },

    /**
      Toggle a tooltip's enabled state.

      @method toggleEnabled
    */
    toggleEnabled: function () {
      this.enabled = !this.enabled
    },

    /**
      Toggle the visibilty of a tooltip.

      @method toggle
      @param {Object} [e] Optional triggering event
    */
    toggle: function (e) {
      var self = e ? $(e.currentTarget)[this.type](this._options).data(this.type) : this
      self.tip().hasClass('is-shown') ? self.hide() : self.show()
    },

    /**
      Destroy a tooltip.

      @method destroy
    */
    destroy: function () {
      this.hide();
      this.$element.off('.' + this.type).removeData(this.type);
    },

    /**
      Remove a tooltip from the DOM.

      @method clear
    */
    clear: function(){
      var that = this, $tip = this.tip();
      $tip.remove();
    }

  }


 /* TOOLTIP PLUGIN DEFINITION
  * ========================= */

  var old = $.fn.sui_tooltip;

  $.fn.sui_tooltip = function ( option ) {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('sui_tooltip'),
          options = typeof option == 'object' && option;
      if (!data) $this.data('sui_tooltip', (data = new Tooltip(this, options)));
      if (typeof option == 'string') data[option]();
    })
  }

  $.fn.sui_tooltip.Constructor = Tooltip;

  $.fn.sui_tooltip.defaults = {
    selector: false,
    placement: 'top',
    template: '<div role="tooltip" aria-live="polite" aria-hidden="true" class="is-hidden sui-tooltip_content sui-u-fadeable"></div>',
    trigger: 'hover focus',
    title: '',
    delay: 0,
    html: false,
    container: 'body',
    'class': false,
    id: false
  };

  // add global method to clear tooltips on the $UI toolkit
  function clearTooltips() {
    $(tipselector).sui_tooltip('hide');
  }
  window.$UI.clearTooltips = clearTooltips;

}(window.jQuery);

jQuery(document).ready(function(){
  jQuery('.sui-body a[rel~=sui_tooltip]').sui_tooltip({});
});
/*1.0*/
!function ($) {

  "use strict"; // jshint ;_;


 /* POPOVER PUBLIC CLASS DEFINITION
  * =============================== */

  var popoverselector = "a[rel=sui_popover], button[rel=sui_popover]";

  var Popover = function ( element, options ) {
    this.init('sui_popover', element, options)
  }

  /* NOTE: POPOVER EXTENDS SUI_TOOLTIP.js
     ========================================== */

  Popover.prototype = $.extend({}, $.fn.sui_tooltip.Constructor.prototype, {

    constructor: Popover,

    setContent: function () {
      var $tip = this.tip(),
          title,
          content,
          footer;

      if(!this.options.target) {
        title = this.getTitle(),
        content = this.getContent(),
        footer = this.getFooter();

        $tip.find('[data-sui-popover-el="title"]')[this.options.html ? 'html' : 'text'](title)
        $tip.find('[data-sui-popover-el="body"]')[this.options.html ? 'html' : 'text'](content)
        $tip.find('[data-sui-popover-el="footer"]')[this.options.html ? 'html' : 'text'](footer)
      }

      // TODO: Support animation - this thing used to remove 'fade' and even position signifiers
      $tip.removeClass('is-shown');
    },

    hasContent: function () {
      return this.getTitle() || this.getContent() || this.getFooter();
    },

    getContent: function () {
      var content, $content,
          $e = this.$element,
          o = this.options

      $content = this.$element.find('.popover');
      if($content.length) {
        return $content;
      }

      content = (typeof o.content == 'function' ? o.content.call($e[0]) :  o.content)
        || $e.attr('data-content')

      return content
    },

    /**
      Remove a popover from view.

      @method hide
      @param {Object} e Hide event
    */
    hide: function ( e ) {
      var that = this,
          $tip = this.tip();

      e && e.preventDefault();

      if (!this.isShown) return;

      this.isShown = false;

      escape.call(this);

      /**
        Fires when hide() is called on a popover.

        @event hide
      */
      this.$element.trigger('sui_popover:hide');

      var transitionLength = $tip.hasClass('sui-u-fadeable') ? 200 : 0;

      $tip.removeClass('u-faded-in');

      $tip.one($.support.transition.end, _.bind( function() {
        $tip.addClass('is-hidden');
        $tip.removeClass('is-shown');

        /**
          Fires when a tooltip has been removed from view.

          @event tooltip:hidden
        */
        this.$element.trigger('sui_popover:hidden');
        $tip.detach();
      }, this )).emulateTransitionEnd(transitionLength);
    },

    getFooter: function() {
      var footer,
          $e = this.$element,
          o = this.options

      footer = (typeof o.footer == 'function' ? o.footer.call($e[0]) : o.footer)
        || $e.attr('data-footer')

      return footer
    },

    tip: function () {
      if (!this.$tip) {
        this.$tip = this.options.target ? $(this.options.target) : $(this.options.template);
      }
      return this.$tip
    },

    /**
      Make a tooltip visible.

      @method show
    */
    show: function () {
      var $tip,
          pos,
          actualWidth,
          actualHeight,
          placement,
          tp;

      if (this.options.target || (this.hasContent() && this.enabled)) {
        /**
          Fires when show() is called on a tooltip

          @event show
        */
        this.$element.trigger('sui_popover:show');

        $tip = this.tip()

        this.setContent();

        if ( this.options['class'] ) {
          $tip.addClass(this.options['class']);
        }

        if ( this.options.id ) {
          $tip.attr('id', this.options.id );
        }

        placement = typeof this.options.placement == 'function' ?
          this.options.placement.call(this, $tip[0], this.$element[0]) :
          this.options.placement;

        $tip
          .detach()
          .css({ top: 0, left: 0 })
          .addClass('is-shown')
          .removeClass('is-hidden');

        this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)

        this.attached = true;
        pos = this.getPosition()
        actualWidth = $tip[0].offsetWidth
        actualHeight = $tip[0].offsetHeight

        var arrowDiff = 11; // Height of arrow for top/bottom, Width for left/right

        switch (placement) {
          case 'bottom':
            tp = {top: pos.top + pos.height + arrowDiff, left: pos.left + pos.width / 2 - actualWidth / 2};
            break
          case 'top':
            tp = {top: pos.top - actualHeight - arrowDiff, left: pos.left + pos.width / 2 - actualWidth / 2};
            break
          case 'left':
            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth - arrowDiff};
            break
          case 'right':
            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width + arrowDiff};
            break
        }

        this.applyPlacement(tp, placement, 'sui-popover_content');

        this.isShown = true;
        setTimeout( _.bind( function() { // Allow reflow
          $tip.addClass('u-faded-in');

          escape.call(this);

          /**
            Fires when a tooltip has been made visible to the user

            @event tooltip:shown
          */
          this.$element.trigger('sui_popover:shown')
        }, this ), 0 );
      }
    }
  });

  function escape() {
    var that = this;
    if (this.isShown && this.options.keyboard) {
      $(document).on('keyup.dismiss.sui_popover', function ( e ) {
        e.which == 27 && that.hide();
      })
    } else if (!this.isShown) {
      $(document).off('keyup.dismiss.sui_popover');
    }
  }

 /* POPOVER PLUGIN DEFINITION
  * ======================= */

  $.fn.sui_popover = function (option) {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('sui_popover'),
          options = $.extend( {},
                              $.fn.sui_popover.defaults,
                              $this.data(),
                              (typeof option == 'object' && option) );

      if (!data) {
        data = new Popover(this, options);
        $this.data('sui_popover', data);
      }

      if(typeof option == 'string') {
        data[option]();
      } else if(options.show && options.target) {
        data.show();
      }
    });
  }

  $.fn.sui_popover.Constructor = Popover

  $.fn.sui_popover.defaults = $.extend({} , $.fn.sui_tooltip.defaults, {
    placement: 'right',
    trigger: 'click',
    content: '',
    footer: '',
    html: true,
    template: '<div role="tooltip" class="sui-popover_content--align-center sui-popover_content sui-u-fadeable">' +
                '<div class="sui-popover_title" data-sui-popover-el="title"></div>' +
                '<div class="sui-popover_content-body" data-sui-popover-el="body"></div>' +
                '<div class="sui-popover_footer" data-sui-popover-el="footer"></div>' +
              '</div>'
  });

  $(function() {
    $('[data-toggle="sui_popover"]').each( function() {
      var $this = $(this),
          href = $this.attr('href'),
          target = $this.attr('data-target' || href);

      if( !$this.data('sui_popover') ) {
        $this.sui_popover( $.extend( { target: target },
                                     $(target).data() ) );
      }
    });
  });
}(window.jQuery);

// init popovers on document load
jQuery(document).ready(function(){
  jQuery('.sui-body a[rel~=sui_popover]').sui_popover({});
});
/*1.0*/
!function( $ ){

  "use strict"

  /* JsonForm PUBLIC CLASS DEFINITION
   * ============================== */

  /**
   * Submits a form via AJAX and handles success & error results. Uses jQuery Form plugin.
   *
   *  @class SuiCoreComponents.JsonForm
   *  @constructor
   *  @param {Object} element Form element to attach new JsonForm to
   *  @param {Object} [options] Optional configurations
   *  @param {String} [options.loadingText] Text to display while form is loading
   *  @param {Boolean} [options.showCannedFieldErrorMessage] When true, will display a default error message if none is provided
   */
  var JsonForm = function ( element, options ) {
    this.$element = $(element)
    this.options = $.extend({}, $.fn.json_form.defaults, options)
    init.call(this);
  }

  JsonForm.prototype = {
    constructor: JsonForm,

    /**
     *  Destroys the JsonForm object attached to a form.
     *
     *  @method destroy
     */
    destroy: function() {
      this.$element.off('submit');
      this.$element.data('json_form',null);
    },

    /**
     *  Handles display of errors at both field and form level.
     *
     *  @method handleError
     *  @param {Object} params
     *  @param {Object} params.jqXHR jQuery XHR object
     *  @param {Integer} params.status Request status
     *  @param {String} params.error
     */
    handleError: function( params ) {
      handleError.call( this, params.jqXHR, params.status, params.error );
    }
  }

  /* JsonForm PRIVATE METHODS
   * ===================== */

  function init() {
    var self = this;

    self.$form = self.$element;
    self.$submitButton = self.$form.find('[data-button-type="submit"]');

    self.$form.ajaxForm({
      beforeSubmit: $.proxy(clearErrorsAndShowBusyIndicator, this),
      dataType: 'json',
      success: $.proxy(ajaxSuccess, this),
      error: $.proxy(ajaxError, this)
    });
  }

  function clearErrorsAndShowBusyIndicator() {
    clearFormErrors.call(this);
    showBusyIndicator.call(this);
  }

  function clearFormErrors() {
    this.baseErrorMessage = null;
    this.$form.find('.control-group').removeClass('error');
    this.$form.find('.sui-control-group').removeClass('is-error');

    this.$form.find('.generic-error').hide();
    this.$form.find('.sui-alert--hidden-unless-active').hide();

    this.$form.find('.control-group .help-inline').remove();
    this.$form.find('.sui-control-group .sui-input-validity_message').remove();
  }

  function showBusyIndicator() {
    this.$submitButton && this.$submitButton.button('loading');
  }

  function hideBusyIndicator() {
    this.$submitButton && this.$submitButton.button('reset');
  }

  function ajaxSuccess(data, textStatus, jqXHR) {
    /* Sometimes it's necessary to have a plain-text response (eg IE with file upload) */
    if( data._http_status >= 400 ) {
      textStatus = 'error';
      jqXHR.status = data._http_status;
      handleError.call( this, jqXHR, status, 'Unknown (' + data._http_status + ')' );
      return;
    }

    handleSuccess.call( this, data, textStatus, jqXHR );
  }

  function ajaxError(jqXHR, status, error) {
    /* Sometimes it's necessary to have a non-JSON response (eg IE with file upload) */
    /* This is the old way of handling this, we can remove this after #41545 is merged to community develop */
    if( jqXHR.responseText && jqXHR.responseText.toLocaleLowerCase() == 'success' ) {
      handleSuccess.call( this );
      return;
    }

    handleError.call( this, jqXHR, status, error );
  }

  function handleSuccess( data, textStatus, jqXHR ) {
    this.$form.trigger('ajax:success', [data, textStatus, jqXHR]);

    if( data && data.redirect_to ) {
      window.location.href = data.redirect_to;
    }
    else {
      hideBusyIndicator.call(this);

      if( data && data.message ) {
        showGenericMessage.call( this, data.message, (data && data.html_safe === true) );
      }
    }
  }

  function handleError( jqXHR, status, error ) {
    var json = loadJsonForError( jqXHR.responseText );

    if( json && json.redirect_to ) {
      window.location.href = json.redirect_to;
      return;
    }

    hideBusyIndicator.call(this);

    if( json && json.errors !== null && json.errors !== undefined ) {
      showFieldErrors.call( this, json.errors, (json && json.html_safe === true) );
    }

    showGenericError.call( this, (json && json.message) || this.baseErrorMessage, jqXHR.status, (json && json.html_safe === true));

    this.$form.trigger('ajax:error', jqXHR, status, error );
  }

  function showAlert($alert) {
    $alert.show().css('display', 'flex');
  }

  function showGenericMessage( message, html_safe ) {
    var message_container = this.$form.find('.generic-error'); // TODO: Rename the section to generic-message or something
    message_container.removeClass('sui-alert--error').addClass('sui-alert--success');
    message_container.find('.sui-alert_body').html( html_safe ? message : _.escape(message) );
    showAlert(message_container);

    // Toolkit 3
    var message_container = this.$form.find('.sui-alert--hidden-unless-active');
    message_container.removeClass('sui-alert--error').addClass('sui-alert--success');
    message_container.find('.sui-alert_body').html( html_safe ? message : _.escape(message) );
    showAlert(message_container);
  }

  function showGenericError(message, http_status, html_safe) {
    var generic_error_container = this.$form.find('.generic-error');

    var messageToShow = message || http_status_to_error_message(http_status, this.options);

    if( messageToShow ) {
      generic_error_container.removeClass('sui-alert--success').addClass('sui-alert--error');
      generic_error_container.find('.sui-alert_body').html( html_safe ? messageToShow : _.escape(messageToShow) );
      showAlert(generic_error_container)
    }
  }

  function showFieldErrors( field_errors, html_safe ) {
    var self = this;

    _.each( field_errors, function(error_msgs,field_name) {

      // Capture the non-field-related messages for putting at thte top
      if( field_name == 'base' ) {
        self.baseErrorMessage = error_msgs.join('<br />');
        return; // next
      }

      addErrorsToField.call( self, field_name, error_msgs, html_safe );
    });
  }

  function addErrorsToField( field_name, error_msgs, html_safe ) {
    var self = this;

    var error_msg = error_msgs[0];

    if( error_msg != '' ) {
      var selectors = [ ':input[name*="[' + field_name + ']"]',  // Rails style input names (eg name="user[email_address]")
        ':input[name*="[' + field_name + '("]',  // Rails style date field names (eg name="user[birthday(3i)]")
        ':input[name="' + field_name + '"]' ];   // Exact field name (eg name="email_address")

      var field_selector = _.find( selectors, function(selector) {
        return self.$form.find(selector).length;
      });

      if( !field_selector ) return;

      var control_group = self.$form.find(field_selector).parents('.control-group');

      if( control_group.length ) {
        control_group.addClass('error');

        var label = control_group.find(".control-label").text();
        if (label) {
          error_msg = label + " " + error_msg;
        }

        if( control_group.find('.controls .help-inline').size() == 0 ) {
          control_group.find('.controls').append('<span class="help-inline"></span>');
        }

        control_group.find('.controls .help-inline').html(html_safe ? error_msg : _.escape(error_msg));
      }
      else {
        // Toolkit 3
        control_group = self.$form.find(field_selector).parents('.sui-control-group');

        control_group.addClass('is-error');

        var label = control_group.find(".sui-control-group_label").text();
        if (label) {
          error_msg = label + " " + error_msg;
        }

        if( control_group.find('.sui-control-group_controls .sui-input-validity_message').size() == 0 ) {
          control_group.find('.sui-control-group_controls').append('<div class="sui-input-validity_message"></div>');
        }

        control_group.find('.sui-control-group_controls .sui-input-validity_message').html(html_safe ? error_msg : _.escape(error_msg));
      }
    }
  }

  var ERROR_MSG_4XX = "Oops, something's wrong below.";
  var ERROR_MSG_5XX = "Well, that didn't work as expected. Contact support if this happens again.";

  function http_status_to_error_message(http_status, options) {
    if( http_status >= 400 && http_status < 500 )
    {
      if( options.showCannedFieldErrorMessage ) return ERROR_MSG_4XX;
      else return null;
    }

    return ERROR_MSG_5XX;
  }

  /* JsonForm Static Private Methods
   * =============================== */

  function loadJsonForError( responseText ) {
    var json = null;
    try { json = jQuery.parseJSON(responseText); }
    catch(err) {}
    return json;
  }

  /* JsonForm PLUGIN DEFINITION
   * ======================== */

  $.fn.json_form = function ( option, params ) {
    return this.each(function () {
      var $this = $(this)
        , data = $this.data('json_form')
        , options = typeof option == 'object' && option
      if (!data) $this.data('json_form', (data = new JsonForm(this, options)))
      else if( data[option] && typeof data[option] == 'function' ) {
        data[option]( params || {} );
      }
    })
  }

  $.fn.json_form.defaults = {
    loadingText: 'loading...',
    showCannedFieldErrorMessage: true
  }

  $.fn.json_form.Constructor = JsonForm

  $(function () {
    jQuery('form[data-remote-json]').each( function(index,el) {
      $(el).json_form();
    });
  });

}( window.jQuery );
/*1.0*/
/**
  Create and manage growl messages

  @class SuiCoreComponents.Growler
  @static
*/


if(typeof window.jQuery === 'function') {
(function($) {
  window.$UI = window.$UI || {};

  var Growler = {
    defaults: {
      displayTime: 1500,
      processingMessage: 'Processing...',
      successMessage: 'Complete',
      errorMessage: 'Looks like we ran into some trouble. Give it another shot.'
    }
  }
  $UI.Growler = Growler;

  var compiledTemplate = null;

  var growlTemplate = function growlTemplate(params) {
    compiledTemplate = compiledTemplate || _.template('<div class="growl-container sui-opt-in"><div class="growl"><i class="sui-icon sui-icon--24 sui-icon--blue sui-icon-<%- type %>-circular"></i><span class="message"><%- caption %></span><span class="growl-close"><a data-dismiss="growl"><i class="sui-icon sui-icon--16 sui-icon--gray sui-icon-close"></i></a></span></div></div>');

    return compiledTemplate(params);
  };

  var $growlWrapper = $('<div>').addClass('growl-wrapper');

  var showGrowl = function showGrowl(options) {
    var growlTimer = null;

    var type = options.type;
    var caption = options.caption;
    var append = options.append;

    var autoCloseTime = Growler.defaults.displayTime;

    if(!append){
      $('.growl-container').remove(); // Only way to get transitions to work reliably is to start over every show
    }

    var $growl = $( growlTemplate({ type: type, caption: caption }) );

    if(!$('body').find('.growl-wrapper').length){
      $('body').append($growlWrapper);
    }

    $('.growl-wrapper').append($growl);

    $growl.on( 'click', function(e){
      $UI.closeGrowl($(e.currentTarget));
    } );

    $growl.show();

    var reflow = $growl.offsetWidth; reflow = reflow; // force reflow (and shut up jshint)
    $growl.find('.growl').addClass('in');

    if( growlTimer ) {
      window.clearTimeout( growlTimer );
    }
    if( type !== 'error' ) {
      growlTimer = setTimeout( $UI.closeGrowl, autoCloseTime, $growl );
    }
  };

  var failCallback = function failCallback() {
    if( $UI.app && $UI.app.vent && typeof($UI.app.vent.trigger) == 'function' ) {
      $UI.app.vent.trigger("growler:asyncError", this);
    }
  };

  /**
    Display a growl message

    @method growl
    @param {Object} [options={}] Optional parameter to specify options for growl message
      @param {String} [options.caption] Text to include in growl message
      @param {String} [options.type='info'] Type of growl message - info, success, or error
      @param {Boolean} [options.append=false] When true, growl message will stack vertically with any existing growl messages
      @param {Boolean} [options.clearExisting=false] When true, will force error messages off the screen
    @param {Object} [deferred] Optional deferred object
  */
  $UI.growl = function growl(options, deferred) {
    var defaultType = 'info';

    var defaultCaptions = {
      'info': 'Processing...',
      'success': 'Complete',
      'error': 'Looks like we ran into some trouble. Give it another shot.'
    };

    var defaultAppend = false;

    var type = options.type || defaultType;
    var caption = options.caption || defaultCaptions[type];
    var append = options.append || defaultAppend;

    if(!append && !options.clearExisting && $('.growl-container .growl.in .sui-icon-error-circular').length ) {
      return; // Don't show a new growl if an error is showing
    }

    var growlDeferred;

    if(deferred) {
      growlDeferred = deferred
      .done(function(caption){ showGrowl({type: "success", caption: caption }); })
      .fail(function(caption){ showGrowl({type: "error", caption: caption}); });
    }
    else {
      growlDeferred = (type === 'error' ? $.Deferred().reject() : $.Deferred().resolve());
      showGrowl({ type: type, caption: caption, append: append });
    }

    growlDeferred
    .fail(failCallback);

    if(deferred){
      showGrowl({ type: type, caption: caption, append: append});
    }
  };

  /**
    Closes all growl messages

    @method closeGrowls
  */
  $UI.closeGrowls = function closeGrowls() {
    $('.growl-container').find('.growl').removeClass('in');
    $('.growl-container').html('');
  }

  /**
    Closes a single growl message

    @method closeGrowl
    @param {Object} $growl Growl message to close
  */
  $UI.closeGrowl = function closeGrowl($growl){
    $growl.find('.growl').removeClass('in');
    $growl.html('');
  }

  /**
    Allow success & error callbacks with growl messages

    @method withGrowlMessages
    @param {object} [options] Options object to pass success and error functions
  */
  $UI.withGrowlMessages = function withGrowlMessages(options) {
    var deferred = $.Deferred(),
    defaults = {
      caption: Growler.defaults.processingMessage,
      success: Growler.defaults.successMessage,
      error: Growler.defaults.errorMessage
    };

    $UI.growl({caption: options.caption || defaults.caption}, deferred.promise());

    return _.extend({}, options, {
      success: function() {
        var args = arguments,
        success = options.success;
        _.isFunction(success) && (options.success = function() { return success.apply(this, args); });
        var caption = _.result(options, "success") || defaults.success;
        deferred.resolve(caption);
      },
      error: function() {
        var args = arguments,
        error = options.error;
        _.isFunction(error) && (options.error = function() { return error.apply(this, args); });
        var caption = _.result(options, "error") || defaults.error;
        deferred.reject(caption);
      }
    });
  };

  // Patch jQuery Deferred and Promise objects to include a growl method.
  // This allows us to call the growler from ajax requests, model syncs, etc.
  // For example:
  //
  //   1.  $.get(url).growl({caption: "Loading..."});
  //   2.  backbone_model.save().growl({caption: "Saving...", success: "Saved"});
  var showGrowlMessages = function(options){
    var defaults = {
      caption: Growler.defaults.processingMessage,
      success: Growler.defaults.successMessage,
      error: Growler.defaults.errorMessage
    };
    options = options || {};
    options = _.defaults(options, defaults);
    $UI.growl(options, this.pipe(function(){ return options.success; }, function(){ return options.error; }));
    return this;
  };

  var deferredWithoutGrowl = $.Deferred;
  var deferredWithGrowl    = function(beforeStart){
    var dfd = deferredWithoutGrowl(beforeStart);
    dfd.growl = showGrowlMessages;

    var promiseWithoutGrowl = dfd.promise;
    var promiseWithGrowl    = function(e){
      var promise   = promiseWithoutGrowl(e);
      promise.growl = showGrowlMessages;
      return promise;
    }

    dfd.promise = promiseWithGrowl;
    return dfd;
  };

  $.Deferred = deferredWithGrowl;
})(jQuery);
}
;
/*1.0*/
/* ============================================================
 * sui-spicebutton.js v1.4.0
 * ============================================================
 * Copyright © 2006-15 Spiceworks, Inc.  All Rights Reserved.  http://www.spiceworks.com
 * ============================================================ */

/* ============================================================
 * OPTIONS
 * spicecount : The current # of spices, default = 0
 * spicedstate : Whether the current user has spiced this item and in what direction
 *               use the struct:  SpicedState = { up:1, unspiced:0, down:-1 }
 * user_can_downspice : Whether the current user can down spice an item, default = false
 *
 * ============================================================
 * EVENTS
 *
 * spiced(event, SpiceButton, direction) -  the spiced event handler passes the following:
 *                        event - the jQuery Event
 *                        SpiceButton - the instance of the SpiceButton that was spiced
 *                        direction - the direction the item was spiced -1/1
 * USAGE:  $('#elm').on('spiced', function(event, spicebutton, direction){
 *           if (direction == 1){ alert('hey spiced up')}
 *           else { alert('boo, spiced down')}
 *         });
 * ============================================================ */
// Global Struct for the various states of the SpiceButtons
var SpicedState = {
  up: true,
  unspiced: undefined,
  down: false,
  toInt: function(state) { return state == this.unspiced ? 0 : (state ? 1 : -1); },
  fromNativeType: function(state) {
    if( state === SpicedState.up || state === SpicedState.unspiced || state === SpicedState.down ) {
      return state;
    }
    if( state > 0 || parseInt(state) > 0 || state == 'true' )       { return SpicedState.up; }
    else if( state < 0 || parseInt(state) < 0 || state == 'false' ) { return SpicedState.down; }
    return SpicedState.unspiced;
  }
};

!function( $ ){

  "use strict"
  // Plugin Control definition
  /**
    Create a spice button or link, allowing users to spice an element up or down.
    Buttons should be used only once on a page and on the page-level element (i.e. spicing up a topic).
    Links are for repeated items, like posts, comments, or reviews.

    @class SuiCoreComponents.SpiceButton
    @constructor
    @param {Object} element Spice button or link element
    @param {Object} [options] Optional configurations.
    @param {Integer} [options.spicecount = 0] The current number of spices
    @param {Object} [options.spicedstate] Whether the current user has spices this item and in what direction. Uses the format: SpicedState = {up:1, unspiced:0, down: -1}
    @param {Boolean} [options.user_can_downspice = false] Whether the current user can down spice an item
  */
  var SpiceButton = function ( element, options ) {
    this.init('spicebutton', element, options)
  }

  SpiceButton.prototype = {

    constructor : SpiceButton,

    init: function(type, element, options){
      // basic plugin setup
      this.type = type;
      this.$elm = $(element);
      this.$parent = this.$elm.parent('div.sui-spicebttn-wrap')
      this.options = this._getOptions(options);
      this.can_downspice = false;
      this.attached = false;
      this.spice_tip = "Spice this!"; // TODO - localize this
      this.count_tip = "See who spiced this"; // TODO - localize this
      this.spice_text = "Spice"; // TODO - localize this
      this.unspice_text = "Unspice" // TODO - localize this
      this.spice_format = _.template("(<%- count %>)");
      this.status_text_spiced = "Spiced" // TODO -localize this
      this.status_text_unspiced = "Spice" // TODO -localize this
      this.spiced_up_tip = "You spiced this up!" // TODO - localize this
      this.spiced_down_tip = "You spiced this down!" // TODO - localize this

      this.$countelm = this.$elm.find('.sui-spicelink-count');
      this.$icon = this.$elm.find('i');
      this.$downelm = null;
      this.$downlink = null;

      // disable tooltips on touch enabled devices
      if (!(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch)) {
        this.$elm.attr('rel','');
      }

      // Try to pull some options out of the HTML if they weren't set by JS
      if( this.options.spiceable_class == null || this.options.spiceable_class == undefined ) {
        this.options.spiceable_class = this.$elm.attr('data-spiceable-class');
      }

      if( this.options.spiceable_id == null || this.options.spiceable_id == undefined ) {
        this.options.spiceable_id = parseInt( this.$elm.attr('data-spiceable-id'), 10 );
      }

      if( this.options.spicecount == null || this.options.spicecount == undefined ) {
        this.options.spicecount = parseInt( this.$elm.attr('data-spicecount'), 10 );
      }

      if( this.options.spicedstate == null || this.options.spicedstate == undefined ) {
        this.options.spicedstate = this.$elm.attr('data-spicedstate');
      }
      this.options.spicedstate = SpicedState.fromNativeType( this.options.spicedstate );

      // attach the events or modify style for "status only"
      // unregister handlers first to ensure no doubles, esp. when processing a second init with different options
      this.$elm.off('click').off('keydown');

      if( this.options.status_only ) {
        this.$elm.addClass( 'status-only' );
      }
      else {
        this.$elm.on('click', null, $.proxy(this._click, this));
        this.$elm.on('keydown', null, $.proxy(this._keydown, this));
      }

      if( this.$countelm.size() == 0 ) {
        // If the count is outside the 'Spice' link (ie it's a spicelink not spicebutton) attach a separate handler
        this.$countelm = this.$parent.find('.sui-spicelink-count');
        if(this.$countelm.data('tooltip')) {
          // if tooltip has already been initiated, modify data-original-title instead of title
          this.$countelm.attr('data-original-title', this.count_tip);
        } else {
          this.$countelm.attr('title', this.count_tip);
        }
        this.$countelm.off('click');
        this.$countelm.on('click', null, $.proxy(this._count_click, this));
      }

      // spicebuttons still allow privileged spicedown
      if(!this.$elm.hasClass('sui-spicelink')){
        this.$downelm = this.$parent.find('div.sui-spicebttn-menu');
        this.$downlink = this.$downelm.find('a.sui-spicebttn-down');
        // attach events to the downspice stuff
        this.$parent.off('mouseenter').off('mouseleave');
        this.$downlink.off('click');

        if( !this.options.status_only ) {
          this.$parent.hover($.proxy(this._mouseover, this), $.proxy(this._mouseout, this));
          this.$downlink.on('click', null, $.proxy(this._click, this));
          this.can_downspice = true;
        }

        this.is_button = true;
        this.spice_format = _.template("<%= count %>");
      }

      this._dospice(SpicedState.unspiced); //assume the options have the proper values, just setup the controls
    },

    /**
      Set options on a SpiceButton.

      @method setOptions
      @param {Object} options Configuration options.
      @param {Integer} [options.spicecount = 0] The current number of spices
      @param {Object} [options.spicedstate] Whether the current user has spices this item and in what direction. Uses the format: SpicedState = {up:1, unspiced:0, down: -1}
      @param {Boolean} [options.user_can_downspice = false] Whether the current user can down spice an item
    */
    setOptions: function(options){
      this.options = $.extend(this.options, options);
      this._dospice(SpicedState.unspiced); //assume the options have the proper values, just setup the controls
    },

    /**
      Get a SpiceButton's data id.

      @method dataId
      @return Returns this element's data id
    */
    dataId: function(){
      return this.$elm.data('id');
    },

    /**
      Get the spiced state of a SpiceButton.

      @method getSpicedState
      @return {Object} Returns spiced state
    */
    getSpicedState: function(){
      return this.options.spicedstate;
    },

    _getOptions: function(options){
      options = $.extend({}, $.fn[this.type].defaults, options, this.$elm.data());
      return options;
    },

    _downspiceable: function(){
      return (this.can_downspice && this.options.user_can_downspice);
    },

    _dospice: function(dir){
      dir = SpicedState.toInt(dir);
      this._set_spicecount(this.options.spicecount + dir);
      var attr = (typeof(this.$elm.attr('data-original-title')) == 'undefined')? 'title' : 'data-original-title';
      var text;
      if( this.options.status_only ) {
        text = (this.options.spicecount == 0) ? this.status_text_unspiced : this.status_text_spiced;
        this.$elm.attr(attr, this.options.status_only_tip || '');
      }
      else {
        switch(this.options.spicedstate){
          case SpicedState.up :
            this.$elm.attr(attr, this.spiced_up_tip);
            text = this.unspice_text;
            this.$elm.addClass('active');
            break;
          case SpicedState.unspiced :
            this.$elm.attr(attr, this.spice_tip);
            text = this.spice_text
            this.$elm.removeClass('active');
            break;
          case SpicedState.down :
            this.$elm.attr(attr, this.spiced_down_tip);
            text = this.unspice_text;
            this.$elm.addClass('active');
            break;
        }
      }
      if(!this.is_button) { // links get their text changed
        this.$elm.find("span.sui-spicelink-text").text(text);
        if(this.options.spicecount == 0) {
          this.$icon.hide();
          if( this.options.status_only ) {
            this.$countelm.hide();
          }
        } else {
          this.$icon.show();
        }
      }
    },

    /**
      Set state on a SpiceButton.
      Replace `setOptions` which is broken, esp WRT `spicedstate`

      @method setState
      @param {Object} options Configuration options.
      @param {Integer} [options.spicecount = 0] The current number of spices
      @param {Object} [options.spicedstate] Whether the current user has spices this item and in what direction. Uses the format: SpicedState = {up:1, unspiced:0, down: -1}
    */
    setState: function(options) {
      options = options || {};
      this.options.spicecount = options.spicecount;
      this.options.spicedstate = SpicedState.fromNativeType(options.spicedstate);

      this._render_spicecount();
      this._render_spicedstate();
    },

    _set_spicecount: function(c){
      this.options.spicecount = c;
      this._render_spicecount();
    },

    _render_spicecount: function() {
      var c = this.options.spicecount;
      if( !this.is_button && c == 0 ) {
        this.$countelm.html('');
      }
      else {
        this.$countelm.html( this.spice_format({ count: this.options.spicecount }) );
      }
    },

    // This method is a copy of the logic in `_dospice` except that it only handles
    // actually setting the state & rendering (doesn't modify the state according to
    // the "direction"). It also leaves out the complexity of `status_only`.
    // In a later update we should use this function as a primitive & refactor this
    // logic out of `_dospice` (don't want to do that now b/c I'm doing a patch).
    _render_spicedstate: function() {
      var text = null;
      var attr = (typeof(this.$elm.attr('data-original-title')) == 'undefined')? 'title' : 'data-original-title';

      switch(this.options.spicedstate){
        case SpicedState.up :
          this.$elm.attr(attr, this.spiced_up_tip);
          text = this.unspice_text;
          this.$elm.addClass('active');
          break;
        case SpicedState.unspiced :
          this.$elm.attr(attr, this.spice_tip);
          text = this.spice_text
          this.$elm.removeClass('active');
          break;
        case SpicedState.down :
          this.$elm.attr(attr, this.spiced_down_tip);
          text = this.unspice_text;
          this.$elm.addClass('active');
          break;
      }

      if( !this.is_button ) { // links get their text changed
        this.$elm.find("span.sui-spicelink-text").text(text);
        if( this.options.spicecount == 0 ) {
          this.$icon.hide();
        } else {
          this.$icon.show();
        }
      }
    },

    _spicechange: function(e){
      var t = $(e.currentTarget), newstate, dir;
      var targetDirection = (t.attr('data-dir') == 'true');
      if(targetDirection != SpicedState.down){
        if(this.options.spicedstate == SpicedState.unspiced){
          newstate = SpicedState.up;
          dir = SpicedState.up;
        } else if (this.options.spicedstate == SpicedState.down) {
          newstate = SpicedState.unspiced;
          dir = SpicedState.up;
        } else {
          newstate = SpicedState.unspiced;
          dir = SpicedState.down;
        }
      } else { // -1 is downspicing
        if(this.options.spicedstate == SpicedState.unspiced){
          newstate = SpicedState.down;
          dir = SpicedState.down;
        } else {
          return false;
        }
      }

      if( this.options.user_can_spice || this.options.user_can_spice == null || this.options.user_can_spice == undefined ) {
        this.options.spicedstate = newstate;
        this._dospice(dir);
      }

      /**
        Fires when a SpiceButton has been spiced.

        @param {Object} SpiceButton the instance of the SpiceButton that was spiced
        @param {Integer} direction The direction the item was spiced -1/1
        @event spiced
      */
      this.$elm.trigger('spiced', [this, dir] );

      return false;
    },


    _hide_spicedown: function(){
      this.$downelm.hide();
    },

    _click: function(e){
      this._spicechange(e);
      return false;
    },

    _keydown: function(e){
      if(e.which == 13 ){
        this._spicechange(e);
        return false;
      }
    },

    _count_click: function(e){
      /**
        Fires when a spice link's count element has been clicked

        @event count_click
        @param {Object} SpiceButton SpiceButton instance that was clicked
      */
      this.$elm.trigger('count_click', this );
      return false;
    },

    _mouseover: function(e){
      if(this.options.spicedstate == SpicedState.unspiced && this._downspiceable()){
        var w = (this.$elm.outerWidth() - this.$downelm.outerWidth()) / 2;
        this.$downelm.css('left',  w + 'px');
        this.$downelm.show();
      }
    },

    _mouseout: function(e){
      this._hide_spicedown();
    }
  }

  // jQuery Plugin method
  $.fn.spicebutton = function ( option, arg ) {
    return this.each(function () {
      var $this = $(this);
      var old_data = $this.data('spicebutton');
      var options = typeof option == 'object' && option;
      if( options.spicecount != undefined && options.spicecount != null ) {
        options.spicecount = parseInt( options.spicecount, 10 );
      }
      var data = new SpiceButton( this, $.extend( old_data && old_data.options, options ) )
      $this.data('spicebutton', data );
      if (typeof option == 'string'){
        var v = arg;
        data[option](v);
      }
    });
  }

  $.fn.spicebutton.Constructor = SpiceButton;

  $.fn.spicebutton.defaults = {
    spicecount : 0,
    spicedstate : SpicedState.unspiced,
    user_can_downspice : true
  };

  $(document).ready(function(){
    $('a.sui-spicebttn').spicebutton();
  });

}( window.jQuery);
/*1.0*/
// Rails composition file
/* sui-core_components.js */





// Components











;
/*1.0*/
(function($) {

  jQuery.fn.center = function () {
      this.css("position","absolute");
      this.css("top", Math.max(0, (($(window).height() - this.outerHeight()) / 2) +
                                                  $(window).scrollTop()) + "px");
      this.css("left", Math.max(0, (($(window).width() - this.outerWidth()) / 2) +
                                                  $(window).scrollLeft()) + "px");
      return this;
  };

  // Create popover registry
  window.$UI.registerPopover = function(popover, closeFunc) {
    // bind to popover context
    var selector = '.popover.in, .tooltip.in, .sui-dropdown.open, .sui-date.in',
        $element = popover.$tip||popover.$el||jQuery(popover),
        $parents = $element.parents(selector),
        $children = $element.find(selector);
    if ($parents.length>0) { popover._parentPopover = $UI.activePopover; }
    if (closeFunc){
      closeFunc = _.bind(closeFunc, popover);
      closeFunc = _.wrap(closeFunc, function(cFunc) {
        var returns = cFunc();
        this.popover._parentPopover && this.popover._parentPopover.close();
        return returns;
      });
    } else {
      closeFunc = function(){return null;};
    }

    // Dropdowns are odd beasts that don't have references back to the data object
    // so for now, clear all Dropdown menus when a popover is registered
    $('html').trigger('click.dropdown.data-api');

    // close any active popover before registering new one, unless it is in my ancestry
    if ($parents.length===0 && $children.length===0) {$UI.finalizePopover();}
    $UI.activePopover = {popover: popover, element: $element, close: closeFunc};
    return $UI.activePopover;
  }

  window.$UI.unregisterPopover = function() {
    $UI.activePopover = null;
  }

  window.$UI.receivePopoverClose = function(popover){
    if($UI.activePopover && $UI.activePopover.popover == popover){
      $UI.finalizePopover();
    }
  }

  // unregister when closed
  window.$UI.finalizePopover = function() {
    if ($UI.activePopover) $UI.activePopover.close();
    $UI.unregisterPopover();
  }

})(jQuery)

;
/*1.0*/
(function($, toolkit) {
   function make(tagName, attributes, content) {
      var el = document.createElement(tagName);
      if (attributes) $(el).attr(attributes);
      if (content) $(el).html(content);
      return el;
    }

    function linkTo(text, url, options) {
      options['href'] = url
      return make('a', options, text);
    }

    function button(text, url, options) {
      options = options || {};
      options['class'] = (options['class'] || '') + ' sui-bttn';
      return toolkit.linkTo(text, url, options );
    }

    function spice_button() {
      if(CurrentUser.permissionClass === "guest") {
        return '<div class="sui-spicebttn-wrap"><a href="javascript:void(0)" class="sui-bttn sui-spicebttn" data-dir="true" data-toggle="spicebttn" onclick="return false;" rel="tooltip" title="Spice This!"><i class="sui-icon sui-icon-pepper sui-icon--16"></i><span class="sui-spicelink-count">0</span></a></div>';
      }
      else {
        return '<div class="sui-spicebttn-wrap"><a href="javascript:void(0)" class="sui-bttn sui-spicebttn" data-dir="true" data-toggle="spicebttn" onclick="return false;" rel="tooltip" title="Spice This!"><i class="sui-icon sui-icon-pepper sui-icon--16"></i><span class="sui-spicelink-count">0</span></a><div class="sui-spicebttn-container"><div class="sui-spicebttn-menu"><a href="#" class="sui-spicebttn-down" data-dir="false" onclick="return false;">Spice Down</a></div></div></div>';
      }
    }

    toolkit.button = button;
    toolkit.linkTo = linkTo;
    toolkit.spice_button = spice_button;

})(jQuery, window.$UI);
/*1.0*/
/* ============================================================
 * sui-followbutton.js v1.4.0
 * ============================================================
 * Copyright © 2006-15 Spiceworks, Inc.  All Rights Reserved.  http://www.spiceworks.com
 * ============================================================ */

/* ============================================================
 * OPTIONS
 * following : The current # of spices, default = 0
 * buttonText : The text to display in certain states:
 *              follow: The command to follow
 *              following: The state of following
 *              unfollow: The command to un-follow
 *
 * ============================================================
 * EVENTS
 *
 * follow(event, FollowButton) -  the follow event handler passes the following:
 *                        event - the jQuery Event
 *                        FollowButton - the instance of the FollowButton that was clicked
 * USAGE:  $('#elm').on('follow', function(event, followbutton){
 *           alert('hey, I was followed')
 *         });
 *
 * unfollow(event, FollowButton) -  the follow event handler passes the following:
 *                        event - the jQuery Event
 *                        FollowButton - the instance of the FollowButton that was clicked
 * USAGE:  $('#elm').on('unfollow', function(event, followbutton){
 *           alert('hey, I was unfollowed')
 *         });
 * ============================================================ */

!function($) {
  FollowButton = function(element, options) {
    this.init('followbutton', element, options);
  };

  FollowButton.prototype = {
    constructor: FollowButton,

    init: function(type, element, options){
      this.type = type;
      this.$elm = $(element);
      this.options = this._initOptions(options);

      this._setState();
    },

    setOptions: function(options){
      this.options = $.extend(this.options, options);
      this._setState();
    },

    _initOptions: function(options){
      options = $.extend({}, $.fn[this.type].defaults, options, this.$elm.data());
      // Try to pull some options out of the HTML if they weren't set by JS
      if( options.followable_class == null || options.followable_class == undefined ) {
        options.followable_class = this.$elm.attr('data-followable-class');
      }
      if( options.followable_id == null || options.followable_id == undefined ) {
        options.followable_id = parseInt( this.$elm.attr('data-followable-id'), 10 );
      }
      return options;
    },

    dataId: function(){
      return this.$elm.data('followable-id');
    },

    dataFollowClass: function(){
      return this.$elm.data('followable-class');
    },

    toggle: function() {
      if (!this.options.statusOnly) {
        this.options.following ? this.unfollow() : this.follow();
        this._setState();
      }
    },

    follow: function() {
      this.options.following = true;
      this.$elm.trigger("follow", this);
    },

    unfollow: function() {
      this.options.following = false;
      this.$elm.trigger("unfollow", this);
    },

    _setState: function() {
      this._setButtonClass();
      this._setButtonText();
      this._setTooltip();
    },

    _setButtonClass: function() {
      this.$elm.toggleClass("following", this.options.following);
    },

    _setButtonText: function() {
      this.$elm.find('.button-text')
        .text(this.options.following ?
          this.options.buttonText.following :
          this.options.buttonText.follow);
    },

    _setTooltip: function() {
      var attr = (typeof(this.$elm.attr('data-original-title')) == 'undefined')? 'title' : 'data-original-title';
      if(this.options.following){
        this.$elm.attr(attr, this.options.buttonText.unfollow);
        this.$elm.sui_tooltip('enable');
      } else {
        this.$elm.sui_tooltip('hide').sui_tooltip('disable');
      }
    }
  };

  $.fn.followbutton = function(option) {
    return this.each(function() {
      var $this = $(this);
      var options = typeof option == 'object' && option;
      var data = $this.data("followbutton");
      if(!data){
        data = new FollowButton( this, options);
        $this.data('followbutton', data);
      } else {
        data.setOptions(options);
      }
      if (typeof option == 'string'){
        data[option]();
      }
    });
  };

  $.fn.followbutton.Constructor = FollowButton;

  $.fn.followbutton.defaults = {
    following: false,
    buttonText: {
      follow: "Follow",
      following: "Following",
      unfollow: "Unfollow"
    },
    statusOnly: false
  };

  $(document).ready(function(){
    $('a.sui-followbttn, a.sui-followlink').followbutton();
  });

 /* FOLLOWBUTTON DATA-API
  * ============ */

  $(function () {
    $('body').on('click.followbttn.data-api', '[data-toggle="followbttn"]', function (e) {
      e.preventDefault();
      $(this).followbutton('toggle');
    })
  })

}(jQuery);


/* Quick Demo Code  -- REMOVE ONCE YOU'VE GOT THE HTML HELPERS IN PLACE */
// $('body').append($UI.button($('<span class="button-text"></span>')));
// $('body').append($('<div><a class="follow-button"><span class="button-text"></span></a></div>').followbutton());
// $('.sui-bttn').last().followbutton({following: true}).addClass("follow-button");
// $('.follow-button').click(function() { $(this).followbutton("toggle"); });
// $('.follow-button').on("follow unfollow", function(e) { console.log(e); });
/*1.0*/
!function( $ ){
  /**
    Displays a timestamp, optimized for caching.
    Generated HTML content displays time in UTC but is post-processed by Javascript to adjust for the user's timezone.

    @class timestamp
    @constructor
    @param {String} datetime Date and time of timestamp. Should be a valid date with an optional time string. Set via the datetime attribute.
    @param {Boolean} utc If true, timestamp will display in UTC when format is not 'from_now'. Set via utc attribute.
    @param {String} format How to format timestamp - should be 'from_now', or a strftime formatted string. Any text that should be treated as static should be surrounded by [ and ]. Set via data-timestamp-format
  */
  $.fn.timestamp = function() {
    return this.each(function() {
      var $this = $(this),
          timestamp = $this.attr('datetime'),
          utc = $this.attr('utc'),
          format = $this.attr('data-timestamp-format') || '%b %e, %Y [at] %l:%M %p';
      if( format == 'from_now' ) {
        timestamp = moment(timestamp).fromNow();
      }
      else if (utc)
        timestamp = moment(timestamp).utc().strftime(format);
      else {
        timestamp = moment(timestamp).strftime(format);
      }

      $this.text(timestamp);
    });
  };

  $(function() {
    $('[data-js-postprocess="timestamp"]').timestamp();
    $(document).on("ajaxSuccess", function() {
      $('[data-js-postprocess="timestamp"]').timestamp();
    });
  });

}( window.jQuery );
/*1.0*/
!function($) {
  window.JST = (window.JST || {});
  window.JST.helpers = {}; // javascript template helpers
  $UI.Views = {};

  window.$UI.mobileView = function() {
    return $('.global-nav_mobile-nav-toggle').is(':visible');
  }
}(window.jQuery);
/*1.0*/
!function ($) {
  "use strict"; // jshint ;_;

  //***************************************************************************
  // Spiceworks global Marionette application.  All other "applications" are
  // Marionette modules off of this central app.  This gives us a central app
  // for lifecycle and event management.
  // Author: georger@spiceworks.com
  //***************************************************************************
	$UI.app = new Backbone.Marionette.Application();

  _.extend($UI.app, {
    _adContext: '',
    _autoRefreshAds: true,
    _showDeprecationMsg: true,
    pluginEventBus: new Backbone.Wreqr.EventAggregator(),

    init: function(){
      this.registerEventHandlers();
    },

    disableAdRefresh: function(){
      this._autoRefreshAds = false;
    },

    enableAdRefresh: function(){
      this._autoRefreshAds = true;
    },

    trackPageView: function(url){
      // Update the GA page view stats with the current url.  If this is a Backbone
      // app with history, the # is replaced with a / so that the url matches what
      // would otherwise be used if pushState were being used with history

      var ctx = null;
      if (location.pathname !== '/') {
        ctx = location.href.substr(location.href.indexOf(location.pathname));
        ctx = ctx.replace('/#', '\/').replace('#', '\/');
      }
      else {
        ctx = '/' + location.search;
      }

      if(Backbone.history.ctx != ctx || Backbone.history.ctx == null){
        if(typeof GoogleAnalytics !== 'undefined' && typeof GoogleAnalytics.trackPageview === 'function'){
          GoogleAnalytics.trackPageview();
        } else if(window._gaq) {
          window._gaq.push(['_trackPageview', ctx]);
        } else if(window._gua) { // universal analytics
          window._gua('send', {'hitType': 'pageview', 'page': ctx});
        }
        Backbone.history.ctx = ctx;
      }
    },

    trackPageEvent: function(data){
      if(!data || !data.eventCategory || !data.eventAction){
        throw new Error('google events require category and action arguments');
      }
      if(window._gua){
        _.extend(data, {'hitType':'event'});
        window._gua('send', data);
      }
    },

    setGADimension: function(dim, val){
      if(window._gua){
        console.log("set ga dim %O, val %O", dim, val);
        window._gua('set',dim,val);
      }
    },

    updateAds: function(url){
      if(window.Application === undefined || !Application || _.isUndefined(Application) || _.isUndefined(Application.refreshAd) ){ return; }

      var ctx = location.href.replace('#', '\/');
      Application.refreshAd({ref: ctx});
    },

    registerEventHandlers: function(){

      // Start Backbone.history after the app has been initialized
      this.on('initialize:after', function() {
        if(!Backbone.History.started){
          Backbone.history.start();
        }
      });

      // Track the page view and optionally trigger ad refreshes once the navigate event is 
      // handled.  Navigate events refresh ads by default but can be optionally configured 
      // not to by calling the enableAdRefresh/disableAdRefresh methods.
      this.on('navigate', function(url){
        this.trackPageView(url);
        if(this._autoRefreshAds){
          this.trigger('ads:refresh', url);
        }
      });

      this.on('ads:refresh', function(url){
        var uri = url || '';
        $UI.app.updateAds(url);
      });

      // Track google universal analytics events
      this.on('ga:event', function(){
        this.trackPageEvent.apply(this, arguments);
      });

      // Set google universal analytics dimensions
      this.on('ga:dimension', function(){
        this.setGADimension.apply(this, arguments);
      });
    }
  });

  $UI.app.addInitializer(function(){
    //Tell Backbone Relational to look on our app for Module/Model storage.
    // By default, it only knows about the window scope, which typically we
    // shouldn't be storing anything in.
    Backbone.Relational.store.addModelScope($UI.app);

    $UI.app.init();
  });

  //***************************************************************************
  // Setup the history navigate event to broadcast on the global event bus
  // Author: georger@spiceworks.com
  //***************************************************************************
  Backbone.history.on('navigate', function(url){
    $UI.app.trigger('navigate', url);
  });

  //***************************************************************************
  // Setup the history route event to broadcast a 'navigate' event on the global event bus
  // Author: georger@spiceworks.com
  //***************************************************************************
  Backbone.history.on('route', function(router, name, args){
    $UI.app.trigger('navigate', args);
  });

  //***************************************************************************
  // Start the global application on document ready.  This creates some race conditions
  // where routes on the initial URL do no load because history has been started before
  // module routers have registered (the fragment has been matched and no handlers called
  // because they weren't there yet)
  // Author: georger@spiceworks.com
  //***************************************************************************
  $(function(){
		$UI.app.start({});
	});

}(window.jQuery);
/*1.0*/
$UI.app.module("SUI_Shared", function (SUI_Shared, App, Backbone, Marionette, $, _) {
  SUI_Shared.Constants = SUI_Shared.Constants || {};

  _.extend(SUI_Shared.Constants, {
    Commands: {
      Stats: {
        Register: {
          AppStat: 'sui:stats:register:appstat',
          GAStat: 'sui:stats:register:gastat'
        },
        Unregister: 'sui:stats:unregister'
      }
    }
  });
});
/*1.0*/
$UI.app.module("SUI_Shared.Stats", function (Stats, App, Backbone, Marionette, $, _) {
  var NS_SUI_Shared = App.module("SUI_Shared");

  //Worker methods...

  var _recordAppStat = function (name) {
    name = name.replace(/:/g, '_');
//    console.log("Recording App Stat: " + name);
    SPICEWORKS.stats.record_app_stat(name);
  };
  var _recordGAStat = function (name, options) {
    name = name.replace(/:/g, '_');
//    console.log("Recording GA Stat: " + name + ' ' + options);
    SPICEWORKS.stats.record(name, options);
  };

  /************************************************************************************************************
  * Registration Methods
  ************************************************************************************************************/

  // Record an app stat every time one of the events registered is fired...
  var _delegateAppStatEvents = function (module, statEvents) {
    _.map(statEvents, function (event) {
      Stats.listenTo(module, event, function(){
        _recordAppStat(event);
      })
    });
  };

  // Record a Google Analytics on event, accepting options to pass with event name...
  var _delegateGAStatEvents = function (module, statEvents) {
    _.map(statEvents, function (event) {
      Stats.listenTo(module, event, function(options){
        _recordGAStat(event, options);
      })
    });
  };

  var _unregister = function(module) {
    Stats.stopListening(module);
  }

	App.commands.setHandler(NS_SUI_Shared.Constants.Commands.Stats.Register.AppStat, _delegateAppStatEvents);
	App.commands.setHandler(NS_SUI_Shared.Constants.Commands.Stats.Register.GAStat,  _delegateGAStatEvents);
	App.commands.setHandler(NS_SUI_Shared.Constants.Commands.Stats.Unregister,       _unregister);
});
/*1.0*/
!(function($){
  /* Bootstrap style plugin for updating progress bars on the page */

  $UI.progressBar = function(percent, options) {
    if (!options) options = {};
    if (percent) options.progress = percent;
    return jQuery(new $UI.Views.ProgressBar(options).render().el);
  }

  JST.helpers.progressBar = function(percent, options) {
    return $('<div>').append($UI.progressBar(percent, options)).html();
  }

  var ProgressBar = function ( element ) {
    this.$element = $(element);
    this.options = $.fn.progressBar.defaults;
  };

  ProgressBar.prototype = {
    constructor: ProgressBar,
    update: function(percentage) {
      percentage = parseInt(percentage)

      if (percentage > 100) percentage = 100;
      if (percentage < 0 || !percentage)   percentage = 0;

      this.$element.find('.bar').css("width", I18n.toPercentage(percentage, {precision: 0}));
      this.$element.find('.percent').html(I18n.toPercentage(percentage, {precision: 0}));
    },
    activate: function() {
      this.$element.addClass('active')
    },
    deactivate: function() {
      this.$element.removeClass('active')
    }
  };

  $.fn.progressBar = function(method, option) {
    return this.each(function () {
      var $this = $(this),
      data = $this.data('progress');
      if (!data) $this.data('progress', (data = new ProgressBar(this)));

      if (typeof(method) == 'string') data[method](option);
    });
  };

  $.fn.progressBar.defaults = {};
  $.fn.progressBar.Constructor = ProgressBar;

  /* Backbone view for backbone apps and for HTML creation */
  $UI.Views.ProgressBar = Backbone.Marionette.ItemView.extend({
    template: _.template('<div class="bar sui-progress-bar_bar" style="width: <%- percent %>">\
  <% if(showPercent) { %><span class="percent moving"><%- percent %></span><% } %>\
</div>'),
    className: function() {
      return 'progress sui-progress-bar sui-progress-bar--' + this.options.size;
    },
    modelEvents: {
      'change:progress': 'update'
    },
    initialize: function(options){
      if (!options) options = {};
      defaults = {showPercent: true, active: false, progress: 0};
      this.options = _.extend(defaults, options);
    },
    percentage: function() {
      var progress;
      if (this.model) progress = this.model.get('progress');
      else if (this.options.progress) progress = this.options.progress;

      var percentage = parseFloat(progress);
      if (percentage > 100) percentage = 100;
      if (percentage < 0)   percentage = 0;

      return percentage + "%";
    },
    serializeData: function() {
      return {
        percent: this.percentage(),
        showPercent: this.options.showPercent,
      };
    },
    update: function() {
      $(this.el).progressBar('update', this.percentage())
    }
  });
}(jQuery));
/*1.0*/
$UI.Views.Builder = Backbone.Marionette.ItemView.extend({
	template: _.template(""),

	constructor: function(){
		this.cid = _.uniqueId('view');
		this._ensureElement();
		this.initialize.apply(this, arguments);
		this.delegateEvents();
	},

	initialize: function(){
		this.contents = [];
	},

	serializeData: function(){
		return {};
	},

	onRender: function(){
		var that = this;
		_.each(this.contents, function(view){
			view.render();
			that.appendHtml(view.el);
		});
	},

	onClose: function(){
		_.each(this.contents, function(view){
			view.close();
		});
	},

	appendHtml: function(el){
		this.$el.append(el);
	},

	concat: function(){
		return this.render().el.outerHTML;
	}
});
/*1.0*/
(function(){
	var build = function(constructor, args) {
		function F() { return constructor.apply(this, args); }
		F.prototype = constructor.prototype;
		return new F();
	};

	//Pass the arguments 'args' to the constructor, then concat the result
	var buildWithArgs = function(constructor, args){
		var builder = build(constructor, args);
		return builder.concat();
	};

	//Special case of buildWithArgs where the last argument is taken to be a callback
	var buildWithArgsAndCallback = function(constructor, args){
		var callback = _.last(args);
		args = _.initial(args);

		var builder = build(constructor, args);
		callback(builder);

		return builder.concat();
	};

})();
/*1.0*/
(function(){
	// Shadow line
	$UI.Views.ShadowLine = $UI.Views.Builder.extend({
		tagName: "div",
		className: "shadow-line",
		template: _.template('&nbsp;'),
    initialize: function(){
    }
	});

	//Icon
	var icon_types =
  [
    "alert-bell", "bookmark", "calculator", "calendar", "cart", "certificate", "check", "clock",
    "close-circular", "close", "compare", "copy", "down-chevron", "down", "download", "drag",
    "edit", "email", "exclamation-triangle", "exclamation", "eye-closed", "file", "flag", "gear",
    "globe", "group", "hourglass", "info", "laptop", "left-chevron", "left", "location", "lock",
    "message", "minus", "next-circular", "paperclip", "plus", "previous-circular", "printer", "question",
    "refresh", "reply-bubble", "reply", "right-chevron", "right", "scan", "screwdriver", "search", "server",
    "share", "stats", "trash", "up-chevron", "up", "user-portal", "viewcolumns", "viewicons", "viewlist",
    "viewtiles", "visible", "alert-error", "alert-info", "alert-neutral", "alert-success", "alert-warning",
    "error-circular", "error", "event-spice", "info-circular", "pepper", "ribbon", "star-empty", "star-filled",
    "star-half", "success-circular", "success", "topic-flag", "event-badge", "event-best-answer",
    "event-follow", "event-helpful-post", "event-message", "event-reply", "event-tag"
  ]

	var icon_colors = ["gray", "blue", "white"];

	$UI.Views.Icon = $UI.Views.Builder.extend({
		tagName: "i",

		initialize: function(type, color){
			this.type  = type;
			this.color = color || "gray";

			if(!_.contains(icon_types, this.type))
				throw new Error("Unrecognized icon type: '" + this.type + "'.");
			if(!_.contains(icon_colors, this.color))
				throw new Error("Unrecognized icon color: '" + this.color + "'.");

			$UI.Builder.prototype.initialize.apply(this, []);
		},

		onRender: function(){
			if(this.color !== "gray")
				this.$el.addClass("sui-icon sui-icon--" + this.color);
			this.$el.addClass("sui-icon sui-icon-" + this.type);
		}
	});
})();
/*1.0*/
// A modal dialog view
//
// Users of this class should subclass it and provide these attributes:
//   - title:     the text that will appear at the top of the modal
//   - template:  a template that will be rendered inside the modal body
//

$UI.Views.BaseModal = Backbone.Marionette.Layout.extend({
	opts: {}, // options is reserved for Marionette
	initialize: function(option){
		this.init(option);
	},

	init: function(option){
			if(!_.isObject(option)){ throw "$UI.Views.BaseModal invoked with non-object options."}
		var temp = _.clone($UI.Views.Defaults.Modal);
		_.extend(temp, this.opts, option);
		this.opts = temp;
		// process options as needed
		this.contents = (_.isFunction(this.opts.contents))? this.opts.contents() : this.opts.contents;
		this.title = (_.isFunction(this.opts.title))? this.opts.title() : this.opts.title;
		this.className = this.build_classes();
		this.attributes = this.build_attributes();
	},

	_baseTemplate: _.template('<div class="modal-header">\
  <% if(_options.closable){\
      print(\'<button class="close" data-dismiss="modal">×</button>\');\
    } %>\
        <h3><%- _title %></h3>\
</div>\
<div class="modal-body">\
        <%= _template(subclassTemplateHelpers) %>\
</div>'),


	_baseTemplateHelpers: function(){
		return {
			_title: this.title,
			_contents: this.contents,
			_template: this.opts.template,
			_options: this.opts
		};
	},

	getTemplate: function(){
		return Marionette.getOption(this, "_baseTemplate");
	},

	mixinTemplateHelpers: function(target){
		target = Backbone.Marionette.View.prototype.mixinTemplateHelpers.call(this, target);

		var baseTemplateHelpers = this._baseTemplateHelpers;
		if (_.isFunction(baseTemplateHelpers)){
			baseTemplateHelpers = baseTemplateHelpers.call(this);
		}

		return _.extend(baseTemplateHelpers, {subclassTemplateHelpers: target});
	},

	//Convenience functions to show/hide this view
	show: function(){
		//We haven't ever rendered (isClosed is dynamically set),
		// or we were manually closed at some point...
		if (typeof this.isClosed === 'undefined' || true === this.isClosed) {
			this.render();
		}

		this.$el.modal("show");
	},

	hide: function(){
		this.$el.modal("hide");
	},

	//Modals are always attached directly to the 'body' element
	onRender: function(){
		jQuery('body').append(this.$el);
		// have to manually apply attrs & classes at render time
		this.$el.addClass(this.build_classes());
		this.$el.attr(this.build_attributes());
	},

	onClose: function(){
		this.$el.modal("hide");
		this.$el.remove();
	},

	build_classes: function(){
		var css_classes = ['modal', 'hide', 'sui-opt-in', 'in'];
		if(this.opts.type != $UI.ModalTypes.MODAL){
			css_classes.push('modal-' + this.opts.type);
		}
		(!this.opts.show)? css_classes.push('hide') : null;
		(!_.isNull(this.opts.size))? css_classes.push('dialog-size' + this.opts.size) : null;
		(!_.isNull(this.opts.css_class))? css_classes.push(this.opts.css_class) : null;
		(this.$('.footer-actions').length > 0) ? css_classes.push('has-footer-in-body') : null;
		return css_classes.join(' ');
	},

	build_attributes: function(){
		var attrs = {};
		attrs['data-isdraggable'] = this.opts.draggable;
		attrs['data-keyboard'] = this.opts.closable;
		attrs['data-backdrop'] = this.opts.backdrop;
		(this.opts.dismissable) ? attrs['data-dismissable'] = this.opts.dismissable : null;
		(this.opts.id) ? attrs['id'] = this.opts.id : null;
		return attrs;
	}

});

$UI.ModalTypes = {
	MODAL: 'modal',
	DIALOG: 'dialog',
	SHEET: 'sheet',
	ALERT: 'alert'
}

// default options for dialogs
$UI.Views.Defaults = {};
$UI.Views.Defaults.Modal = {
	id: "",
	title: "",
	contents: "",
	template: _.template("<%= _contents %>"),
	draggable: false,
	closable: true,
	backdrop: true,
	show: false,
	size: null,
	modal: true,
	css_class: null,
	type: $UI.ModalTypes.MODAL
}

$UI.Views.Modal = $UI.Views.BaseModal.extend({
	templateHelpers: function(){
		return {
			_contents: this.contents
		};
	}
});

//A modal that renders as a dialog
$UI.Views.ModalDialog = $UI.Views.BaseModal.extend({
	init: function(option){
		if(_.isObject(option)){
			$UI.Views.BaseModal.prototype.init.call(this, _.extend(option, {type: $UI.ModalTypes.DIALOG, backdrop:false}))
		} else {
			throw "$UI.Views.ModalSheet invoked with non-object options."
		}
	},
	templateHelpers: function(){
		return {
			_contents: this.contents
		};
	}
});

//A modal that renders as a sheet
$UI.Views.ModalSheet = $UI.Views.BaseModal.extend({
	initialize: function(option){
		if(_.isObject(option)){
			$UI.Views.BaseModal.prototype.initialize.call(this, _.extend(option, {type: $UI.ModalTypes.SHEET}))
		} else {
			throw "$UI.Views.ModalSheet invoked with non-object options."
		}
	},
	templateHelpers: function(){
		return {
			_contents: this.contents
		};
	}
});

//A modal that renders as an alert window
//This modal cannot be dismissed
$UI.Views.ModalAlert = $UI.Views.BaseModal.extend({
	initialize: function(option){
		if(_.isObject(option)){
			$UI.Views.BaseModal.prototype.initialize.call(this, _.extend(option, {type: $UI.ModalTypes.ALERT, closable: false}))
		} else {
			throw "$UI.Views.ModalAlert invoked with non-object options."
		}
	},
	templateHelpers: function(){
		return {
			_contents: this.contents
		};
	}
});
/*1.0*/
$UI._delegates = {};
$UI._delegates.modal = function(modal_type, id, title, contents, options){
	// helper validations
	if(!_.isString(id)){ throw "$UI.modal: Invalid Argument: 'id' must be a string.";}
	if(arguments.length == 5 && !_.isObject(options)){ throw "$UI.modal: Invalid Argument: 'options' must be an object.";}
	opts = options || {};
	// everything is an option so merge them all
	opts.id = id;
	opts.title = title;
	opts.contents = contents;
	return new modal_type(opts);
}

$UI.modal = function(id, title, contents, options){
	return $UI._delegates.modal($UI.Views.Modal, id, title, contents, (options || {}));
}

$UI.dialog = function(id, title, contents, options){
	return $UI._delegates.modal($UI.Views.ModalDialog, id, title, contents, (options || {}));
}

$UI.sheet = function(id, contents, options){
	return $UI._delegates.modal($UI.Views.ModalSheet, id, "", contents, (options || {}));
}

$UI.alert = function(id, contents, options){
	return $UI._delegates.modal($UI.Views.ModalAlert, id, "", contents, (options || {}));
}
;
/*1.0*/
/* ============================================================
 * sui-paginator.js v1.0
 * ============================================================
 * Copyright © 2006-16 Spiceworks, Inc.  All Rights Reserved.  https://www.spiceworks.com
 * ============================================================ */


!function( $ ) {

  "use strict"

 /* PAGINATOR PUBLIC CLASS DEFINITION
  * =============================== */

  var Paginator = function ( element, options ) {
    this.init('paginator', element, options)
  };

  Paginator.prototype = {

    constructor: Paginator,

    init: function ( type, element, options ) {
      // initializes the Paginator instance and renders where appropriate
      this.type = type;
      this.$element = $(element);
      this.options = this.getOptions(options);
      this.applyOptions();

      var that = this;
      this.$element.on('click', '.sui-previous, .sui-next, .sui-pagination_page-link ', function(e){ that._click(e) });
      this.render();
    },

    getOptions: function ( options ) {
      // get options boilerplate
      options = $.extend({}, $.fn[this.type].defaults, options, this.$element.data())
      return options;
    },

    applyOptions: function(){
      this.collection = null;
      this.hasCollection =  this.options.collection != null;

      if(this.hasCollection){
        // bind to a Backbone.Paginator collection if there is one
        this.collection = this.options.collection;
        if( !_.isUndefined(this.collection.state) ){
          this.pages = this.collection.state.totalPages;
          this.index = this.collection.state.currentPage;
        }
      } else {
        this.pages = this.options.page_count;
        this.index = Math.min(Math.max(1, this.options.current_page), this.options.page_count);
      }
    },

    update: function ( options ){
      this.options = $.extend({}, $.fn[this.type].defaults, options );
      this.applyOptions();
      this.render();
    },

    render: function () {
      // no visibility for empty pages
      if(this.pages <= 1){return;}
      var prev, next, items = "";

      prev = this.options.templates.previous.format(this.index > 1 ?  "" : " disabled");
      next = this.options.templates.next.format(this.index < this.pages ?  "" : " disabled");

      if(this.pages <= 10){
        // we show all the items
        for(var i = 1; i <= this.pages; i++){
          items += this.options.templates.item.format(i, this._isActive(i));
        }
      } else {
        var lbound = Math.max(1, (this.index - 2) );
        var ubound = Math.min(this.pages - 1, lbound + 4);
        lbound = (ubound - lbound == 4)? lbound : ubound - 4;

        if(lbound > 1){
          // always show the first item
          items += this.options.templates.item.format(1, this._isActive(1));
        }

        if(this.index >= 5) {
          // render the prev ellipses
          items += this.options.templates.ellipses;
        }

        for(var i = lbound; i <= ubound; i++){
          // render the items within the 5 slot interval
          items += this.options.templates.item.format(i, this._isActive(i));
        }

        if(ubound <= this.pages - 2) {
          // render the next ellipses
          items += this.options.templates.ellipses;
        }

        if(ubound < this.pages){
          // always show the last item
          items += this.options.templates.item.format(this.pages , this._isActive(this.pages));
        }
      }
      this.$element.html( this.options.templates.container.format(prev + items + next, "pagination-" + this.options.alignment) );
    },

    _isActive: function(i){
      var v = (i == this.index) ? 'active' : "";
      return v
    },

    _click: function(e){
      e.preventDefault();
      e.stopPropagation();

      var $src = $(e.currentTarget);
      if($src.attr('disabled')){
        return
      }
      if($src.hasClass('sui-previous')){
        this.index--;
      }
      else if($src.hasClass('sui-next')){
        this.index++;
      }
      else {
        var data = $src.data("index");
        this.index = data;
      }

      this.gotoPage(this.index);
    },

    gotoPage: function(idx){
      this.index = idx;

      this.render();
      if(this.collection != null){
        // navigate the associated Backbone.Paginator collection
        var promise = this.collection.getPage(this.index, {
          error: function(collection){
            console.log("PaginatorCollection change failed.");
          }
        });

        if(promise && promise.growl && this.options.growl){
          promise.growl(this.options.growl);
        }
      }
      this.$element.trigger("paginator:change", this.index);
    }
  };


 /* TOOLTIP PLUGIN DEFINITION
  * ========================= */

  $.fn.paginator = function ( option, arg ) {
    return this.each(function () {
      var $this = $(this),
        data = $this.data('paginator'),
        options = typeof option == 'object' && option
      if (!data){ $this.data('paginator', (data = new Paginator(this, options)))}
      else if (typeof option == 'object' && option){
        // re-initialize the control
        data.update(option);
      }

      if (typeof option == 'string'){
        var v = arg;
        data[option](v);
      }
    })
  };

  $.fn.paginator.Constructor = Paginator;

  $.fn.paginator.defaults = {
    page_count: 1,
    current_page:1, /* current page is 0-based */
    collection: null,
    templates: {
      container:  '<div class="sui-pagination {1}"><ul>{0}</ul></div>',
      previous:   '<li class="sui-pagination_entry"><a href="#" class="sui-previous" {0} data-index="-1"><span class="sui-pagination_navigation-label">prev</span></a></li>',
      item:       '<li class="sui-pagination_entry"><a href="#" class="sui-pagination_page-link {1}" data-index="{0}">{0}</a></li>',
      ellipses:   '<li class="sui-pagination_entry"><span class="sui-pagination_ellipses">...</span></li>',
      next:       '<li class="sui-pagination_entry"><a href="#" class="sui-next" {0} data-index="+1"><span class="sui-pagination_navigation-label">next</span></a></li>'
    },
    growl: undefined, /* Options to pass to $UI.app.growl (for requestPager collections) */
    selected_class: 'active',
    alignment: 'center' /* left, center, right */
  };

}( window.jQuery )
;
/*1.0*/







;
/*1.0*/
/*
 * Modified by Spiceworks on 2016-05-03 to remove:
 *   - C3.js Adapter
 *   - Chart.js Adapter
 *   - Google Charts Adapter
 *
 * We don't nee any of this charting stuff.
 * Worse, some of it makes async calls to other scripts.
 * The code is still here just not run.
 *
 */


(function e(b,g,d){function c(n,k){if(!g[n]){if(!b[n]){var j=typeof require=="function"&&require;if(!k&&j){return j(n,!0)}if(a){return a(n,!0)}var m=new Error("Cannot find module '"+n+"'");throw m.code="MODULE_NOT_FOUND",m}var h=g[n]={exports:{}};b[n][0].call(h.exports,function(l){var o=b[n][1][l];return c(o?o:l)},h,h.exports,e,b,g,d)}return g[n].exports}var a=typeof require=="function"&&require;for(var f=0;f<d.length;f++){c(d[f])}return c})({1:[function(c,d,b){d.exports=f;function f(g){if(g){return a(g)}}function a(h){for(var g in f.prototype){h[g]=f.prototype[g]}return h}f.prototype.on=f.prototype.addEventListener=function(h,g){this._callbacks=this._callbacks||{};(this._callbacks["$"+h]=this._callbacks["$"+h]||[]).push(g);return this};f.prototype.once=function(j,h){function g(){this.off(j,g);h.apply(this,arguments)}g.fn=h;this.on(j,g);return this};f.prototype.off=f.prototype.removeListener=f.prototype.removeAllListeners=f.prototype.removeEventListener=function(l,j){this._callbacks=this._callbacks||{};if(0==arguments.length){this._callbacks={};return this}var k=this._callbacks["$"+l];if(!k){return this}if(1==arguments.length){delete this._callbacks["$"+l];return this}var g;for(var h=0;h<k.length;h++){g=k[h];if(g===j||g.fn===j){k.splice(h,1);break}}return this};f.prototype.emit=function(l){this._callbacks=this._callbacks||{};var h=[].slice.call(arguments,1),k=this._callbacks["$"+l];if(k){k=k.slice(0);for(var j=0,g=k.length;j<g;++j){k[j].apply(this,h)}}return this};f.prototype.listeners=function(g){this._callbacks=this._callbacks||{};return this._callbacks["$"+g]||[]};f.prototype.hasListeners=function(g){return !!this.listeners(g).length}},{}],2:[function(b,c,a){
/*!
  * domready (c) Dustin Diaz 2012 - License MIT
  */
!function(d,f){if(typeof c!="undefined"){c.exports=f()}else{if(typeof define=="function"&&typeof define.amd=="object"){define(f)}else{this[d]=f()}}}("domready",function(n){var s=[],m,l=false,o=document,g=o.documentElement,r=g.doScroll,d="DOMContentLoaded",h="addEventListener",q="onreadystatechange",k="readyState",t=r?/^loaded|^c/:/^loaded|c/,j=t.test(o[k]);function p(u){j=1;while(u=s.shift()){u()}}o[h]&&o[h](d,m=function(){o.removeEventListener(d,m,l);p()},l);r&&o.attachEvent(q,m=function(){if(/^c/.test(o[k])){o.detachEvent(q,m);p()}});return(n=r?function(f){self!=top?j?f():s.push(f):function(){try{g.doScroll("left")}catch(u){return setTimeout(function(){n(f)},50)}f()}()}:function(f){j?f():s.push(f)})})},{}],3:[function(b,c,a){(function(d){
/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */
(function(){var g=typeof define==="function"&&define.amd;var j={"function":true,object:true};var m=j[typeof a]&&a&&!a.nodeType&&a;var n=j[typeof window]&&window||this,f=m&&j[typeof c]&&c&&!c.nodeType&&typeof d=="object"&&d;if(f&&(f.global===f||f.window===f||f.self===f)){n=f}function o(ag,aa){ag||(ag=n.Object());aa||(aa=n.Object());var P=ag.Number||n.Number,W=ag.String||n.String,C=ag.Object||n.Object,X=ag.Date||n.Date,Y=ag.SyntaxError||n.SyntaxError,af=ag.TypeError||n.TypeError,O=ag.Math||n.Math,ad=ag.JSON||n.JSON;if(typeof ad=="object"&&ad){aa.stringify=ad.stringify;aa.parse=ad.parse}var s=C.prototype,z=s.toString,w,r,Q;var G=new X(-3509827334573292);try{G=G.getUTCFullYear()==-109252&&G.getUTCMonth()===0&&G.getUTCDate()===1&&G.getUTCHours()==10&&G.getUTCMinutes()==37&&G.getUTCSeconds()==6&&G.getUTCMilliseconds()==708}catch(A){}function t(ah){if(t[ah]!==Q){return t[ah]}var ai;if(ah=="bug-string-char-index"){ai="a"[0]!="a"}else{if(ah=="json"){ai=t("json-stringify")&&t("json-parse")}else{var ap,am='{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';if(ah=="json-stringify"){var an=aa.stringify,ao=typeof an=="function"&&G;if(ao){(ap=function(){return 1}).toJSON=ap;try{ao=an(0)==="0"&&an(new P())==="0"&&an(new W())=='""'&&an(z)===Q&&an(Q)===Q&&an()===Q&&an(ap)==="1"&&an([ap])=="[1]"&&an([Q])=="[null]"&&an(null)=="null"&&an([Q,z,null])=="[null,null,null]"&&an({a:[ap,true,false,null,"\x00\b\n\f\r\t"]})==am&&an(null,ap)==="1"&&an([1,2],null,1)=="[\n 1,\n 2\n]"&&an(new X(-8640000000000000))=='"-271821-04-20T00:00:00.000Z"'&&an(new X(8640000000000000))=='"+275760-09-13T00:00:00.000Z"'&&an(new X(-62198755200000))=='"-000001-01-01T00:00:00.000Z"'&&an(new X(-1))=='"1969-12-31T23:59:59.999Z"'}catch(aj){ao=false}}ai=ao}if(ah=="json-parse"){var al=aa.parse;if(typeof al=="function"){try{if(al("0")===0&&!al(false)){ap=al(am);var ak=ap.a.length==5&&ap.a[0]===1;if(ak){try{ak=!al('"\t"')}catch(aj){}if(ak){try{ak=al("01")!==1}catch(aj){}}if(ak){try{ak=al("1.")!==1}catch(aj){}}}}}catch(aj){ak=false}}ai=ak}}}return t[ah]=!!ai}if(!t("json")){var Z="[object Function]",V="[object Date]",S="[object Number]",T="[object String]",J="[object Array]",F="[object Boolean]";var K=t("bug-string-char-index");if(!G){var x=O.floor;var ae=[0,31,59,90,120,151,181,212,243,273,304,334];var I=function(ah,ai){return ae[ai]+365*(ah-1970)+x((ah-1969+(ai=+(ai>1)))/4)-x((ah-1901+ai)/100)+x((ah-1601+ai)/400)}}if(!(w=s.hasOwnProperty)){w=function(aj){var ah={},ai;if((ah.__proto__=null,ah.__proto__={toString:1},ah).toString!=z){w=function(am){var al=this.__proto__,ak=am in (this.__proto__=null,this);this.__proto__=al;return ak}}else{ai=ah.constructor;w=function(al){var ak=(this.constructor||ai).prototype;return al in this&&!(al in ak&&this[al]===ak[al])}}ah=null;return w.call(this,aj)}}r=function(aj,am){var ak=0,ah,ai,al;(ah=function(){this.valueOf=0}).prototype.valueOf=0;ai=new ah();for(al in ai){if(w.call(ai,al)){ak++}}ah=ai=null;if(!ak){ai=["valueOf","toString","toLocaleString","propertyIsEnumerable","isPrototypeOf","hasOwnProperty","constructor"];r=function(ao,at){var ar=z.call(ao)==Z,aq,ap;var an=!ar&&typeof ao.constructor!="function"&&j[typeof ao.hasOwnProperty]&&ao.hasOwnProperty||w;for(aq in ao){if(!(ar&&aq=="prototype")&&an.call(ao,aq)){at(aq)}}for(ap=ai.length;aq=ai[--ap];an.call(ao,aq)&&at(aq)){}}}else{if(ak==2){r=function(ao,ar){var an={},aq=z.call(ao)==Z,ap;for(ap in ao){if(!(aq&&ap=="prototype")&&!w.call(an,ap)&&(an[ap]=1)&&w.call(ao,ap)){ar(ap)}}}}else{r=function(ao,ar){var aq=z.call(ao)==Z,ap,an;for(ap in ao){if(!(aq&&ap=="prototype")&&w.call(ao,ap)&&!(an=ap==="constructor")){ar(ap)}}if(an||w.call(ao,(ap="constructor"))){ar(ap)}}}}return r(aj,am)};if(!t("json-stringify")){var v={92:"\\\\",34:'\\"',8:"\\b",12:"\\f",10:"\\n",13:"\\r",9:"\\t"};var N="000000";var y=function(ah,ai){return(N+(ai||0)).slice(-ah)};var E="\\u00";var H=function(an){var ai='"',al=0,am=an.length,ah=!K||am>10;var ak=ah&&(K?an.split(""):an);for(;al<am;al++){var aj=an.charCodeAt(al);switch(aj){case 8:case 9:case 10:case 12:case 13:case 34:case 92:ai+=v[aj];break;default:if(aj<32){ai+=E+y(2,aj.toString(16));break}ai+=ah?ak[al]:an.charAt(al)}}return ai+'"'};var u=function(an,aF,al,aq,aC,ah,ao){var ay,aj,av,aE,aD,ap,aB,az,aw,at,ax,ai,am,ak,aA,au;try{ay=aF[an]}catch(ar){}if(typeof ay=="object"&&ay){aj=z.call(ay);if(aj==V&&!w.call(ay,"toJSON")){if(ay>-1/0&&ay<1/0){if(I){aD=x(ay/86400000);for(av=x(aD/365.2425)+1970-1;I(av+1,0)<=aD;av++){}for(aE=x((aD-I(av,0))/30.42);I(av,aE+1)<=aD;aE++){}aD=1+aD-I(av,aE);ap=(ay%86400000+86400000)%86400000;aB=x(ap/3600000)%24;az=x(ap/60000)%60;aw=x(ap/1000)%60;at=ap%1000}else{av=ay.getUTCFullYear();aE=ay.getUTCMonth();aD=ay.getUTCDate();aB=ay.getUTCHours();az=ay.getUTCMinutes();aw=ay.getUTCSeconds();at=ay.getUTCMilliseconds()}ay=(av<=0||av>=10000?(av<0?"-":"+")+y(6,av<0?-av:av):y(4,av))+"-"+y(2,aE+1)+"-"+y(2,aD)+"T"+y(2,aB)+":"+y(2,az)+":"+y(2,aw)+"."+y(3,at)+"Z"}else{ay=null}}else{if(typeof ay.toJSON=="function"&&((aj!=S&&aj!=T&&aj!=J)||w.call(ay,"toJSON"))){ay=ay.toJSON(an)}}}if(al){ay=al.call(aF,an,ay)}if(ay===null){return"null"}aj=z.call(ay);if(aj==F){return""+ay}else{if(aj==S){return ay>-1/0&&ay<1/0?""+ay:"null"}else{if(aj==T){return H(""+ay)}}}if(typeof ay=="object"){for(ak=ao.length;ak--;){if(ao[ak]===ay){throw af()}}ao.push(ay);ax=[];aA=ah;ah+=aC;if(aj==J){for(am=0,ak=ay.length;am<ak;am++){ai=u(am,ay,al,aq,aC,ah,ao);ax.push(ai===Q?"null":ai)}au=ax.length?(aC?"[\n"+ah+ax.join(",\n"+ah)+"\n"+aA+"]":("["+ax.join(",")+"]")):"[]"}else{r(aq||ay,function(aH){var aG=u(aH,ay,al,aq,aC,ah,ao);if(aG!==Q){ax.push(H(aH)+":"+(aC?" ":"")+aG)}});au=ax.length?(aC?"{\n"+ah+ax.join(",\n"+ah)+"\n"+aA+"}":("{"+ax.join(",")+"}")):"{}"}ao.pop();return au}};aa.stringify=function(ah,aj,ak){var ai,aq,ao,an;if(j[typeof aj]&&aj){if((an=z.call(aj))==Z){aq=aj}else{if(an==J){ao={};for(var am=0,al=aj.length,ap;am<al;ap=aj[am++],((an=z.call(ap)),an==T||an==S)&&(ao[ap]=1)){}}}}if(ak){if((an=z.call(ak))==S){if((ak-=ak%1)>0){for(ai="",ak>10&&(ak=10);ai.length<ak;ai+=" "){}}}else{if(an==T){ai=ak.length<=10?ak:ak.slice(0,10)}}}return u("",(ap={},ap[""]=ah,ap),aq,ao,ai,"",[])}}if(!t("json-parse")){var R=W.fromCharCode;var q={92:"\\",34:'"',47:"/",98:"\b",116:"\t",110:"\n",102:"\f",114:"\r"};var L,ac;var M=function(){L=ac=null;throw Y()};var D=function(){var am=ac,ak=am.length,al,aj,ah,an,ai;while(L<ak){ai=am.charCodeAt(L);switch(ai){case 9:case 10:case 13:case 32:L++;break;case 123:case 125:case 91:case 93:case 58:case 44:al=K?am.charAt(L):am[L];L++;return al;case 34:for(al="@",L++;L<ak;){ai=am.charCodeAt(L);if(ai<32){M()}else{if(ai==92){ai=am.charCodeAt(++L);switch(ai){case 92:case 34:case 47:case 98:case 116:case 110:case 102:case 114:al+=q[ai];L++;break;case 117:aj=++L;for(ah=L+4;L<ah;L++){ai=am.charCodeAt(L);if(!(ai>=48&&ai<=57||ai>=97&&ai<=102||ai>=65&&ai<=70)){M()}}al+=R("0x"+am.slice(aj,L));break;default:M()}}else{if(ai==34){break}ai=am.charCodeAt(L);aj=L;while(ai>=32&&ai!=92&&ai!=34){ai=am.charCodeAt(++L)}al+=am.slice(aj,L)}}}if(am.charCodeAt(L)==34){L++;return al}M();default:aj=L;if(ai==45){an=true;ai=am.charCodeAt(++L)}if(ai>=48&&ai<=57){if(ai==48&&((ai=am.charCodeAt(L+1)),ai>=48&&ai<=57)){M()}an=false;for(;L<ak&&((ai=am.charCodeAt(L)),ai>=48&&ai<=57);L++){}if(am.charCodeAt(L)==46){ah=++L;for(;ah<ak&&((ai=am.charCodeAt(ah)),ai>=48&&ai<=57);ah++){}if(ah==L){M()}L=ah}ai=am.charCodeAt(L);if(ai==101||ai==69){ai=am.charCodeAt(++L);if(ai==43||ai==45){L++}for(ah=L;ah<ak&&((ai=am.charCodeAt(ah)),ai>=48&&ai<=57);ah++){}if(ah==L){M()}L=ah}return +am.slice(aj,L)}if(an){M()}if(am.slice(L,L+4)=="true"){L+=4;return true}else{if(am.slice(L,L+5)=="false"){L+=5;return false}else{if(am.slice(L,L+4)=="null"){L+=4;return null}}}M()}}return"$"};var ab=function(ai){var ah,aj;if(ai=="$"){M()}if(typeof ai=="string"){if((K?ai.charAt(0):ai[0])=="@"){return ai.slice(1)}if(ai=="["){ah=[];for(;;aj||(aj=true)){ai=D();if(ai=="]"){break}if(aj){if(ai==","){ai=D();if(ai=="]"){M()}}else{M()}}if(ai==","){M()}ah.push(ab(ai))}return ah}else{if(ai=="{"){ah={};for(;;aj||(aj=true)){ai=D();if(ai=="}"){break}if(aj){if(ai==","){ai=D();if(ai=="}"){M()}}else{M()}}if(ai==","||typeof ai!="string"||(K?ai.charAt(0):ai[0])!="@"||D()!=":"){M()}ah[ai.slice(1)]=ab(D())}return ah}}M()}return ai};var U=function(aj,ai,ak){var ah=B(aj,ai,ak);if(ah===Q){delete aj[ai]}else{aj[ai]=ah}};var B=function(ak,aj,al){var ai=ak[aj],ah;if(typeof ai=="object"&&ai){if(z.call(ai)==J){for(ah=ai.length;ah--;){U(ai,ah,al)}}else{r(ai,function(am){U(ai,am,al)})}}return al.call(ak,aj,ai)};aa.parse=function(aj,ak){var ah,ai;L=0;ac=""+aj;ah=ab(D());if(D()!="$"){M()}L=ac=null;return ak&&z.call(ak)==Z?B((ai={},ai[""]=ah,ai),"",ak):ah}}}aa.runInContext=o;return aa}if(m&&!g){o(n,m)}else{var k=n.JSON,p=n.JSON3,h=false;var l=o(n,(n.JSON3={noConflict:function(){if(!h){h=true;n.JSON=k;n.JSON3=p;k=p=null}return l}}));n.JSON={parse:l.parse,stringify:l.stringify}}if(g){define(function(){return l})}}).call(this)}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{}],4:[function(b,c,a){(function(d,f){if(typeof a=="object"){c.exports=f()}else{if(typeof define=="function"&&define.amd){define(f)}else{d.Spinner=f()}}}(this,function(){var j=["webkit","Moz","ms","O"],t={},s,n;function l(u,x){var v=document.createElement(u||"div"),w;for(w in x){v[w]=x[w]}return v}function m(v){for(var u=1,w=arguments.length;u<w;u++){v.appendChild(arguments[u])}return v}function g(y,u,A,D){var v=["opacity",u,~~(y*100),A,D].join("-"),w=0.01+A/D*100,C=Math.max(1-(1-y)/u*(100-w),y),B=s.substring(0,s.indexOf("Animation")).toLowerCase(),x=B&&"-"+B+"-"||"";if(!t[v]){n.insertRule("@"+x+"keyframes "+v+"{0%{opacity:"+C+"}"+w+"%{opacity:"+y+"}"+(w+0.01)+"%{opacity:1}"+(w+u)%100+"%{opacity:"+y+"}100%{opacity:"+C+"}}",n.cssRules.length);t[v]=1}return v}function q(x,y){var w=x.style,u,v;y=y.charAt(0).toUpperCase()+y.slice(1);if(w[y]!==undefined){return y}for(v=0;v<j.length;v++){u=j[v]+y;if(w[u]!==undefined){return u}}}function k(u,w){for(var v in w){u.style[q(u,v)||v]=w[v]}return u}function o(w){for(var u=1;u<arguments.length;u++){var v=arguments[u];for(var x in v){if(w[x]===undefined){w[x]=v[x]}}}return w}function r(v,u){return typeof v=="string"?v:v[u%v.length]}var h={lines:12,length:7,width:5,radius:10,scale:1,corners:1,color:"#000",opacity:1/4,rotate:0,direction:1,speed:1,trail:100,fps:20,zIndex:2000000000,className:"spinner",top:"50%",left:"50%",shadow:false,hwaccel:false,position:"absolute"};function f(u){this.opts=o(u||{},f.defaults,h)}f.defaults={};o(f.prototype,{spin:function(D){this.stop();var F=this,v=F.opts,w=F.el=l(null,{className:v.className});k(w,{position:v.position,width:0,zIndex:v.zIndex,left:v.left,top:v.top});if(D){D.insertBefore(w,D.firstChild||null)}w.setAttribute("role","progressbar");F.lines(w,F.opts);if(!s){var A=0,u=(v.lines-1)*(1-v.direction)/2,z,x=v.fps,C=x/v.speed,B=(1-v.opacity)/(C*v.trail/100),E=C/v.lines;(function y(){A++;for(var G=0;G<v.lines;G++){z=Math.max(1-(A+(v.lines-G)*E)%C*B,v.opacity);F.opacity(w,G*v.direction+u,z,v)}F.timeout=F.el&&setTimeout(y,~~(1000/x))})()}return F},stop:function(){var u=this.el;if(u){clearTimeout(this.timeout);if(u.parentNode){u.parentNode.removeChild(u)}this.el=undefined}return this},lines:function(w,y){var v=0,z=(y.lines-1)*(1-y.direction)/2,u;function x(A,B){return k(l(),{position:"absolute",width:y.scale*(y.length+y.width)+"px",height:y.scale*y.width+"px",background:A,boxShadow:B,transformOrigin:"left",transform:"rotate("+~~(360/y.lines*v+y.rotate)+"deg) translate("+y.scale*y.radius+"px,0)",borderRadius:(y.corners*y.scale*y.width>>1)+"px"})}for(;v<y.lines;v++){u=k(l(),{position:"absolute",top:1+~(y.scale*y.width/2)+"px",transform:y.hwaccel?"translate3d(0,0,0)":"",opacity:y.opacity,animation:s&&g(y.opacity,y.trail,z+v*y.direction,y.lines)+" "+1/y.speed+"s linear infinite"});if(y.shadow){m(u,k(x("#000","0 0 4px #000"),{top:"2px"}))}m(w,m(u,x(r(y.color,v),"0 0 1px rgba(0,0,0,.1)")))}return w},opacity:function(v,u,w){if(u<v.childNodes.length){v.childNodes[u].style.opacity=w}}});function p(){function u(w,v){return l("<"+w+' xmlns="urn:schemas-microsoft.com:vml" class="spin-vml">',v)}n.addRule(".spin-vml","behavior:url(#default#VML)");f.prototype.lines=function(x,w){var v=w.scale*(w.length+w.width),D=w.scale*2*v;function C(){return k(u("group",{coordsize:D+" "+D,coordorigin:-v+" "+-v}),{width:D,height:D})}var y=-(w.width+w.length)*w.scale*2+"px",B=k(C(),{position:"absolute",top:y,left:y}),A;function z(F,E,G){m(B,m(k(C(),{rotation:360/w.lines*F+"deg",left:~~E}),m(k(u("roundrect",{arcsize:w.corners}),{width:v,height:w.scale*w.width,left:w.scale*w.radius,top:-w.scale*w.width>>1,filter:G}),u("fill",{color:r(w.color,F),opacity:w.opacity}),u("stroke",{opacity:0}))))}if(w.shadow){for(A=1;A<=w.lines;A++){z(A,-2,"progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)")}}for(A=1;A<=w.lines;A++){z(A)}return m(x,B)};f.prototype.opacity=function(w,v,y,x){var z=w.firstChild;x=x.shadow&&x.lines||0;if(z&&v+x<z.childNodes.length){z=z.childNodes[v+x];z=z&&z.firstChild;z=z&&z.firstChild;if(z){z.opacity=y}}}}if(typeof document!=="undefined"){n=(function(){var u=l("style",{type:"text/css"});m(document.getElementsByTagName("head")[0],u);return u.sheet||u.styleSheet}());var d=k(l("group"),{behavior:"url(#default#VML)"});if(!q(d,"transform")&&d.adj){p()}else{s=q(d,"animation")}}return f}))},{}],5:[function(j,b,u){var m=j("emitter");var l=j("reduce");var q="undefined"==typeof window?this:window;function f(){}function n(v){var w={}.toString.call(v);switch(w){case"[object File]":case"[object Blob]":case"[object FormData]":return true;default:return false}}function o(){if(q.XMLHttpRequest&&("file:"!=q.location.protocol||!q.ActiveXObject)){return new XMLHttpRequest}else{try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(v){}try{return new ActiveXObject("Msxml2.XMLHTTP.6.0")}catch(v){}try{return new ActiveXObject("Msxml2.XMLHTTP.3.0")}catch(v){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(v){}}return false}var s="".trim?function(v){return v.trim()}:function(v){return v.replace(/(^\s*|\s*$)/g,"")};function k(v){return v===Object(v)}function p(x){if(!k(x)){return x}var w=[];for(var v in x){if(null!=x[v]){w.push(encodeURIComponent(v)+"="+encodeURIComponent(x[v]))}}return w.join("&")}d.serializeObject=p;function h(B){var z={};var x=B.split("&");var y;var A;for(var w=0,v=x.length;w<v;++w){A=x[w];y=A.split("=");z[decodeURIComponent(y[0])]=decodeURIComponent(y[1])}return z}d.parseString=h;d.types={html:"text/html",json:"application/json",xml:"application/xml",urlencoded:"application/x-www-form-urlencoded",form:"application/x-www-form-urlencoded","form-data":"application/x-www-form-urlencoded"};d.serialize={"application/x-www-form-urlencoded":p,"application/json":JSON.stringify};d.parse={"application/x-www-form-urlencoded":h,"application/json":JSON.parse};function c(A){var C=A.split(/\r?\n/);var x={};var z;var D;var B;var v;C.pop();for(var w=0,y=C.length;w<y;++w){D=C[w];z=D.indexOf(":");B=D.slice(0,z).toLowerCase();v=s(D.slice(z+1));x[B]=v}return x}function g(v){return v.split(/ *; */).shift()}function t(v){return l(v.split(/ *; */),function(y,A){var x=A.split(/ *= */),w=x.shift(),z=x.shift();if(w&&z){y[w]=z}return y},{})}function a(w,v){v=v||{};this.req=w;this.xhr=this.req.xhr;this.text=this.req.method!="HEAD"?this.xhr.responseText:null;this.setStatusProperties(this.xhr.status);this.header=this.headers=c(this.xhr.getAllResponseHeaders());this.header["content-type"]=this.xhr.getResponseHeader("content-type");this.setHeaderProperties(this.header);this.body=this.req.method!="HEAD"?this.parseBody(this.text):null}a.prototype.get=function(v){return this.header[v.toLowerCase()]};a.prototype.setHeaderProperties=function(y){var w=this.header["content-type"]||"";this.type=g(w);var x=t(w);for(var v in x){this[v]=x[v]}};a.prototype.parseBody=function(w){var v=d.parse[this.type];return v&&w&&w.length?v(w):null};a.prototype.setStatusProperties=function(v){var w=v/100|0;this.status=v;this.statusType=w;this.info=1==w;this.ok=2==w;this.clientError=4==w;this.serverError=5==w;this.error=(4==w||5==w)?this.toError():false;this.accepted=202==v;this.noContent=204==v||1223==v;this.badRequest=400==v;this.unauthorized=401==v;this.notAcceptable=406==v;this.notFound=404==v;this.forbidden=403==v};a.prototype.toError=function(){var x=this.req;var z=x.method;var v=x.url;var y="cannot "+z+" "+v+" ("+this.status+")";var w=new Error(y);w.status=this.status;w.method=z;w.url=v;return w};d.Response=a;function r(x,w){var v=this;m.call(this);this._query=this._query||[];this.method=x;this.url=w;this.header={};this._header={};this.on("end",function(){var z=null;var y=null;try{y=new a(v)}catch(A){z=new Error("Parser is unable to parse the response");z.parse=true;z.original=A}v.callback(z,y)})}m(r.prototype);r.prototype.use=function(v){v(this);return this};r.prototype.timeout=function(v){this._timeout=v;return this};r.prototype.clearTimeout=function(){this._timeout=0;clearTimeout(this._timer);return this};r.prototype.abort=function(){if(this.aborted){return}this.aborted=true;this.xhr.abort();this.clearTimeout();this.emit("abort");return this};r.prototype.set=function(w,x){if(k(w)){for(var v in w){this.set(v,w[v])}return this}this._header[w.toLowerCase()]=x;this.header[w]=x;return this};r.prototype.unset=function(v){delete this._header[v.toLowerCase()];delete this.header[v];return this};r.prototype.getHeader=function(v){return this._header[v.toLowerCase()]};r.prototype.type=function(v){this.set("Content-Type",d.types[v]||v);return this};r.prototype.accept=function(v){this.set("Accept",d.types[v]||v);return this};r.prototype.auth=function(v,w){var x=btoa(v+":"+w);this.set("Authorization","Basic "+x);return this};r.prototype.query=function(v){if("string"!=typeof v){v=p(v)}if(v){this._query.push(v)}return this};r.prototype.field=function(v,w){if(!this._formData){this._formData=new FormData()}this._formData.append(v,w);return this};r.prototype.attach=function(x,w,v){if(!this._formData){this._formData=new FormData()}this._formData.append(x,w,v);return this};r.prototype.send=function(x){var y=k(x);var w=this.getHeader("Content-Type");if(y&&k(this._data)){for(var v in x){this._data[v]=x[v]}}else{if("string"==typeof x){if(!w){this.type("form")}w=this.getHeader("Content-Type");if("application/x-www-form-urlencoded"==w){this._data=this._data?this._data+"&"+x:x}else{this._data=(this._data||"")+x}}else{this._data=x}}if(!y){return this}if(!w){this.type("json")}return this};r.prototype.callback=function(x,v){var w=this._callback;this.clearTimeout();if(2==w.length){return w(x,v)}if(x){return this.emit("error",x)}w(v)};r.prototype.crossDomainError=function(){var v=new Error("Origin is not allowed by Access-Control-Allow-Origin");v.crossDomain=true;this.callback(v)};r.prototype.timeoutError=function(){var w=this._timeout;var v=new Error("timeout of "+w+"ms exceeded");v.timeout=w;this.callback(v)};r.prototype.withCredentials=function(){this._withCredentials=true;return this};r.prototype.end=function(x){var v=this;var C=this.xhr=o();var A=this._query.join("&");var z=this._timeout;var y=this._formData||this._data;this._callback=x||f;C.onreadystatechange=function(){if(4!=C.readyState){return}if(0==C.status){if(v.aborted){return v.timeoutError()}return v.crossDomainError()}v.emit("end")};if(C.upload){C.upload.onprogress=function(D){D.percent=D.loaded/D.total*100;v.emit("progress",D)}}if(z&&!this._timer){this._timer=setTimeout(function(){v.abort()},z)}if(A){A=d.serializeObject(A);this.url+=~this.url.indexOf("?")?"&"+A:"?"+A}C.open(this.method,this.url,true);if(this._withCredentials){C.withCredentials=true}if("GET"!=this.method&&"HEAD"!=this.method&&"string"!=typeof y&&!n(y)){var w=d.serialize[this.getHeader("Content-Type")];if(w){y=w(y)}}for(var B in this.header){if(null==this.header[B]){continue}C.setRequestHeader(B,this.header[B])}this.emit("request",this);C.send(y);return this};d.Request=r;function d(w,v){if("function"==typeof v){return new r("GET",w).end(v)}if(1==arguments.length){return new r("GET",w)}return new r(w,v)}d.get=function(v,y,w){var x=d("GET",v);if("function"==typeof y){w=y,y=null}if(y){x.query(y)}if(w){x.end(w)}return x};d.head=function(v,y,w){var x=d("HEAD",v);if("function"==typeof y){w=y,y=null}if(y){x.send(y)}if(w){x.end(w)}return x};d.del=function(v,w){var x=d("DELETE",v);if(w){x.end(w)}return x};d.patch=function(v,y,w){var x=d("PATCH",v);if("function"==typeof y){w=y,y=null}if(y){x.send(y)}if(w){x.end(w)}return x};d.post=function(v,y,w){var x=d("POST",v);if("function"==typeof y){w=y,y=null}if(y){x.send(y)}if(w){x.end(w)}return x};d.put=function(v,y,w){var x=d("PUT",v);if("function"==typeof y){w=y,y=null}if(y){x.send(y)}if(w){x.end(w)}return x};b.exports=d},{emitter:6,reduce:7}],6:[function(c,d,b){d.exports=f;function f(g){if(g){return a(g)}}function a(h){for(var g in f.prototype){h[g]=f.prototype[g]}return h}f.prototype.on=f.prototype.addEventListener=function(h,g){this._callbacks=this._callbacks||{};(this._callbacks[h]=this._callbacks[h]||[]).push(g);return this};f.prototype.once=function(k,j){var h=this;this._callbacks=this._callbacks||{};function g(){h.off(k,g);j.apply(this,arguments)}g.fn=j;this.on(k,g);return this};f.prototype.off=f.prototype.removeListener=f.prototype.removeAllListeners=f.prototype.removeEventListener=function(l,j){this._callbacks=this._callbacks||{};if(0==arguments.length){this._callbacks={};return this}var k=this._callbacks[l];if(!k){return this}if(1==arguments.length){delete this._callbacks[l];return this}var g;for(var h=0;h<k.length;h++){g=k[h];if(g===j||g.fn===j){k.splice(h,1);break}}return this};f.prototype.emit=function(l){this._callbacks=this._callbacks||{};var h=[].slice.call(arguments,1),k=this._callbacks[l];if(k){k=k.slice(0);for(var j=0,g=k.length;j<g;++j){k[j].apply(this,h)}}return this};f.prototype.listeners=function(g){this._callbacks=this._callbacks||{};return this._callbacks[g]||[]};f.prototype.hasListeners=function(g){return !!this.listeners(g).length}},{}],7:[function(b,c,a){c.exports=function(g,j,h){var f=0;var d=g.length;var k=arguments.length==3?h:g[f++];while(f<d){k=j.call(null,k,g[f],++f,g)}return k}},{}],8:[function(c,d,b){var a=c("./index"),f=c("./utils/each");d.exports=function(){var h=window.Keen||null,k=window._Keen||null,g,j;if(h&&k){g=k.clients||{},j=k.ready||[];f(g,function(m,o){f(a.prototype,function(q,p){h.prototype[p]=q});f(["Query","Request","Dataset","Dataviz"],function(p){h[p]=(a[p])?a[p]:function(){}});if(m._config){m.configure.call(m,m._config)}if(m._setGlobalProperties){f(m._setGlobalProperties,function(p){m.setGlobalProperties.apply(m,p)})}if(m._addEvent){f(m._addEvent,function(p){m.addEvent.apply(m,p)})}var n=m._on||[];if(m._on){f(m._on,function(p){m.on.apply(m,p)});m.trigger("ready")}f(["_config","_setGlobalProperties","_addEvent","_on"],function(p){if(m[p]){m[p]=undefined;try{delete m[p]}catch(q){}}})});f(j,function(m,n){a.once("ready",m)})}window._Keen=undefined;try{delete window._Keen}catch(l){}}},{"./index":16,"./utils/each":28}],9:[function(b,c,a){c.exports=function(){return"undefined"==typeof window?"server":"browser"}},{}],10:[function(b,d,a){var f=b("../utils/each"),c=b("../utils/json-shim");d.exports=function(h){var g=[];f(h,function(k,j){if("string"!==typeof k){k=c.stringify(k)}g.push(j+"="+encodeURIComponent(k))});return"?"+g.join("&")}},{"../utils/each":28,"../utils/json-shim":31}],11:[function(b,c,a){c.exports=function(){return new Date().getTimezoneOffset()*-60}},{}],12:[function(b,c,a){c.exports=function(){if("undefined"!==typeof window){if(navigator.userAgent.indexOf("MSIE")!==-1||navigator.appVersion.indexOf("Trident/")>0){return 2000}}return 16000}},{}],13:[function(b,c,a){c.exports=function(){var d="undefined"==typeof window?this:window;if(d.XMLHttpRequest&&("file:"!=d.location.protocol||!d.ActiveXObject)){return new XMLHttpRequest}else{try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(f){}try{return new ActiveXObject("Msxml2.XMLHTTP.6.0")}catch(f){}try{return new ActiveXObject("Msxml2.XMLHTTP.3.0")}catch(f){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(f){}}return false}},{}],14:[function(b,c,a){c.exports=function(h,g,j){var f=j||function(){};if(g&&!g.ok){var d=g.body&&g.body.error_code;h=new Error(d?g.body.message:"Unknown error occurred");h.code=d?g.body.error_code:"UnknownError"}if(h){f(h,null)}else{f(null,g.body)}return}},{}],15:[function(f,b,g){var o=f("superagent");var m=f("../utils/each"),a=f("./get-xhr-object");b.exports=function(p,q){return function(r){var s=r.constructor.prototype.end;if("undefined"===typeof window){return}r.requestType=r.requestType||{};r.requestType.type=p;r.requestType.options=r.requestType.options||{async:true,success:{responseText:'{ "created": true }',status:201},error:{responseText:'{ "error_code": "ERROR", "message": "Request failed" }',status:404}};if(q){if("boolean"===typeof q.async){r.requestType.options.async=q.async}if(q.success){extend(r.requestType.options.success,q.success)}if(q.error){extend(r.requestType.options.error,q.error)}}r.end=function(v){var u=this,t=(this.requestType)?this.requestType.type:"xhr",x,w;if(("GET"!==u.method||"xhr"===t)&&u.requestType.options.async){s.call(u,v);return}x=u._query.join("&");w=u._timeout;u._callback=v||noop;if(w&&!u._timer){u._timer=setTimeout(function(){h.call(u)},w)}if(x){x=o.serializeObject(x);u.url+=~u.url.indexOf("?")?"&"+x:"?"+x}u.emit("request",u);if(!u.requestType.options.async){l.call(u)}else{if("jsonp"===t){k.call(u)}else{if("beacon"===t){j.call(u)}}}return u};return r}};function l(){var p=a();if(p){p.open("GET",this.url,false);p.send(null)}return this}function k(){var q=this,u=new Date().getTime(),p=document.createElement("script"),t=document.getElementsByTagName("head")[0],v="keenJSONPCallback",r=false;v+=u;while(v in window){v+="a"}window[v]=function(w){if(r===true){return}r=true;d.call(q,w);s()};p.src=q.url+"&jsonp="+v;t.appendChild(p);p.onreadystatechange=function(){if(r===false&&q.readyState==="loaded"){r=true;c.call(q);s()}};p.onerror=function(){if(r===false){r=true;c.call(q);s()}};function s(){window[v]=undefined;try{delete window[v]}catch(w){}t.removeChild(p)}}function j(){var q=this,p=document.createElement("img"),r=false;p.onload=function(){r=true;if("naturalHeight" in this){if(this.naturalHeight+this.naturalWidth===0){this.onerror();return}}else{if(this.width+this.height===0){this.onerror();return}}d.call(q)};p.onerror=function(){r=true;c.call(q)};p.src=q.url+"&c=clv1"}function d(q){var r=this.requestType.options["success"],p="";n.call(this,r);if(q){try{p=JSON.stringify(q)}catch(s){}}else{p=r.responseText}this.xhr.responseText=p;this.xhr.status=r.status;this.emit("end")}function c(){var p=this.requestType.options["error"];n.call(this,p);this.xhr.responseText=p.responseText;this.xhr.status=p.status;this.emit("end")}function h(){this.aborted=true;this.clearTimeout();this.emit("abort")}function n(p){this.xhr={getAllResponseHeaders:function(){return""},getResponseHeader:function(){return"application/json"},responseText:p.responseText,status:p.status};return this}},{"../utils/each":28,"./get-xhr-object":13,superagent:5}],16:[function(d,f,c){var b="undefined"!==typeof window?window:this;var h=b.Keen;var g=d("./utils/emitter-shim");function a(j){this.configure(j||{});a.trigger("client",this)}a.debug=false;a.enabled=true;a.loaded=true;a.version="3.2.7";g(a);g(a.prototype);a.prototype.configure=function(j){var k=j||{};if(k.host){k.host.replace(/.*?:\/\//g,"")}if(k.protocol&&k.protocol==="auto"){k.protocol=location.protocol.replace(/:/g,"")}this.config={projectId:k.projectId,writeKey:k.writeKey,readKey:k.readKey,masterKey:k.masterKey,requestType:k.requestType||"jsonp",host:k.host||"api.keen.io/3.0",protocol:k.protocol||"https",globalProperties:null};if(a.debug){this.on("error",a.log)}this.trigger("ready")};a.prototype.projectId=function(j){if(!arguments.length){return this.config.projectId}this.config.projectId=(j?String(j):null);return this};a.prototype.masterKey=function(j){if(!arguments.length){return this.config.masterKey}this.config.masterKey=(j?String(j):null);return this};a.prototype.readKey=function(j){if(!arguments.length){return this.config.readKey}this.config.readKey=(j?String(j):null);return this};a.prototype.writeKey=function(j){if(!arguments.length){return this.config.writeKey}this.config.writeKey=(j?String(j):null);return this};a.prototype.url=function(j){if(!this.projectId()){this.trigger("error","Client is missing projectId property");return}return this.config.protocol+"://"+this.config.host+"/projects/"+this.projectId()+j};a.log=function(j){if(a.debug&&typeof console=="object"){console.log("[Keen IO]",j)}};a.noConflict=function(){b.Keen=h;return a};a.ready=function(j){if(a.loaded){j()}else{a.once("ready",j)}};f.exports=a},{"./utils/emitter-shim":29}],17:[function(f,c,h){var q=f("../utils/json-shim");var g=f("superagent");var j=f("../index");var k=f("../utils/base64"),n=f("../utils/each"),o=f("../helpers/get-context"),d=f("../helpers/get-query-string"),b=f("../helpers/get-url-max-length"),a=f("../helpers/get-xhr-object"),l=f("../helpers/superagent-request-types"),p=f("../helpers/superagent-handle-response");c.exports=function(y,B,C,u){var D=this,w=this.url("/events/"+encodeURIComponent(y)),r=this.config.requestType,v={},t=C,s,A;s=("boolean"===typeof u)?u:true;if(!j.enabled){z.call(D,"Keen.enabled = false");return}if(!D.projectId()){z.call(D,"Missing projectId property");return}if(!D.writeKey()){z.call(D,"Missing writeKey property");return}if(!y||typeof y!=="string"){z.call(D,"Collection name must be a string");return}if(D.config.globalProperties){v=D.config.globalProperties(y)}n(B,function(F,E){v[E]=F});if(!a()&&"xhr"===r){r="jsonp"}if("xhr"!==r||!s){A=m.call(D,w,v)}if(A&&o()==="browser"){g.get(A).use(l(r,{async:s})).end(x)}else{if(a()||o()==="server"){g.post(w).set("Content-Type","application/json").set("Authorization",D.writeKey()).send(v).end(x)}else{D.trigger("error","Request not sent: URL length exceeds current browser limit, and XHR (POST) is not supported.")}}function x(F,E){p(F,E,t);t=C=null}function z(F){var E="Event not recorded: "+F;D.trigger("error",E);if(t){t.call(D,E,null);t=C=null}}return};function m(r,s){r+=d({api_key:this.writeKey(),data:k.encode(q.stringify(s)),modified:new Date().getTime()});return(r.length<b())?r:false}},{"../helpers/get-context":9,"../helpers/get-query-string":10,"../helpers/get-url-max-length":12,"../helpers/get-xhr-object":13,"../helpers/superagent-handle-response":14,"../helpers/superagent-request-types":15,"../index":16,"../utils/base64":26,"../utils/each":28,"../utils/json-shim":31,superagent:5}],18:[function(c,b,f){var g=c("../index");var d=c("superagent");var j=c("../utils/each"),k=c("../helpers/get-context"),a=c("../helpers/get-xhr-object"),h=c("../helpers/superagent-request-types"),l=c("../helpers/superagent-handle-response");b.exports=function(q,s){var o=this,n=this.url("/events"),p={},m=s;if(!g.enabled){r.call(o,"Keen.enabled = false");return}if(!o.projectId()){r.call(o,"Missing projectId property");return}if(!o.writeKey()){r.call(o,"Missing writeKey property");return}if(arguments.length>2){r.call(o,"Incorrect arguments provided to #addEvents method");return}if(typeof q!=="object"||q instanceof Array){r.call(o,"Request payload must be an object");return}if(o.config.globalProperties){j(q,function(t,u){j(t,function(v,w){var x=o.config.globalProperties(u);j(v,function(z,y){x[y]=z});p[u].push(x)})})}else{p=q}if(a()||k()==="server"){d.post(n).set("Content-Type","application/json").set("Authorization",o.writeKey()).send(p).end(function(u,t){l(u,t,m);m=s=null})}else{o.trigger("error","Events not recorded: XHR support is required for batch upload")}function r(u){var t="Events not recorded: "+u;o.trigger("error",t);if(m){m.call(o,t,null);m=s=null}}return}},{"../helpers/get-context":9,"../helpers/get-xhr-object":13,"../helpers/superagent-handle-response":14,"../helpers/superagent-request-types":15,"../index":16,"../utils/each":28,superagent:5}],19:[function(d,f,c){var h=d("superagent");var b=d("../helpers/get-query-string"),g=d("../helpers/superagent-handle-response"),a=d("../helpers/superagent-request-types");f.exports=function(k,n,m,o){var j=this.config.requestType,l=n||{};if(j==="beacon"){j="jsonp"}l.api_key=l.api_key||m;h.get(k+b(l)).use(a(j)).end(function(q,p){g(q,p,o);o=null})}},{"../helpers/get-query-string":10,"../helpers/superagent-handle-response":14,"../helpers/superagent-request-types":15,superagent:5}],20:[function(b,c,a){var f=b("superagent");var d=b("../helpers/superagent-handle-response");c.exports=function(g,j,h,k){f.post(g).set("Content-Type","application/json").set("Authorization",h).send(j||{}).end(function(m,l){d(m,l,k);k=null})}},{"../helpers/superagent-handle-response":14,superagent:5}],21:[function(b,d,a){var c=b("../request");d.exports=function(j,k){var g=[],f=k,h;if(j instanceof Array){g=j}else{g.push(j)}h=new c(this,g,f).refresh();f=k=null;return h}},{"../request":25}],22:[function(b,c,a){c.exports=function(d){if(d&&typeof(d)=="function"){this.config.globalProperties=d}else{this.trigger("error","Invalid value for global properties: "+d)}}},{}],23:[function(b,c,a){var d=b("./addEvent");c.exports=function(l,f,o,m,n){var p=l,k=(p.currentTarget)?p.currentTarget:(p.srcElement||p.target),g=m||500,h=false,r="",q,j;if(k.getAttribute!==void 0){r=k.getAttribute("target")}else{if(k.target){r=k.target}}if((r=="_blank"||r=="blank")&&!p.metaKey){j=window.open("about:blank");j.document.location=k.href}if(k.nodeName==="A"){q=function(){if(!h&&!p.metaKey&&(r!=="_blank"&&r!=="blank")){h=true;window.location=k.href}}}else{if(k.nodeName==="FORM"){q=function(){if(!h){h=true;k.submit()}}}else{this.trigger("error","#trackExternalLink method not attached to an <a> or <form> DOM element")}}if(n){q=function(){if(!h){h=true;n()}}}d.call(this,f,o,q);setTimeout(q,g);if(!p.metaKey){return false}}},{"./addEvent":17}],24:[function(c,a,d){var k=c("./utils/each"),h=c("./utils/extend"),g=c("./helpers/get-timezone-offset"),b=c("./helpers/get-query-string");var j=c("./utils/emitter-shim");function f(){this.configure.apply(this,arguments)}j(f.prototype);f.prototype.configure=function(l,m){this.analysis=l;this.params=this.params||{};this.set(m);if(this.params.timezone===void 0){this.params.timezone=g()}return this};f.prototype.set=function(m){var l=this;k(m,function(o,n){var p=n,q=o;if(n.match(new RegExp("[A-Z]"))){p=n.replace(/([A-Z])/g,function(r){return"_"+r.toLowerCase()})}l.params[p]=q;if(q instanceof Array){k(q,function(s,r){if(s instanceof Array==false&&typeof s==="object"){k(s,function(u,t){if(t.match(new RegExp("[A-Z]"))){var v=t.replace(/([A-Z])/g,function(w){return"_"+w.toLowerCase()});delete l.params[p][r][t];l.params[p][r][v]=u}})}})}});return l};f.prototype.get=function(m){var l=m;if(l.match(new RegExp("[A-Z]"))){l=l.replace(/([A-Z])/g,function(n){return"_"+n.toLowerCase()})}if(this.params){return this.params[l]||null}};f.prototype.addFilter=function(n,l,m){this.params.filters=this.params.filters||[];this.params.filters.push({property_name:n,operator:l,property_value:m});return this};a.exports=f},{"./helpers/get-query-string":10,"./helpers/get-timezone-offset":11,"./utils/each":28,"./utils/emitter-shim":29,"./utils/extend":30}],25:[function(c,b,d){var k=c("./utils/each"),h=c("./utils/extend"),g=c("./utils/sendQuery");var f=c("./");var j=c("./utils/emitter-shim");function a(m,n,o){var l=o;this.config={timeout:300*1000};this.configure(m,n,l);l=o=null}j(a.prototype);a.prototype.configure=function(m,n,o){var l=o;h(this,{client:m,queries:n,data:{},callback:l});l=o=null;return this};a.prototype.timeout=function(l){if(!arguments.length){return this.config.timeout}this.config.timeout=(!isNaN(parseInt(l))?parseInt(l):null);return this};a.prototype.refresh=function(){var n=this,l=0,m=[],p=false;var o=function(s,r,q){if(p){return}if(s){n.trigger("error",s);if(n.callback){n.callback(s,null)}p=true;return}m[q]=r;l++;if(l==n.queries.length&&!p){n.data=(n.queries.length==1)?m[0]:m;n.trigger("complete",null,n.data);if(n.callback){n.callback(null,n.data)}}};k(n.queries,function(t,r){var u;var q=function(w,v){o(w,v,r)};if(t instanceof f.Query){u="/queries/"+t.analysis;g.call(n,u,t.params,q)}else{if(Object.prototype.toString.call(t)==="[object String]"){u="/saved_queries/"+encodeURIComponent(t)+"/result";g.call(n,u,null,q)}else{var s={statusText:"Bad Request",responseText:{message:"Error: Query "+(+r+1)+" of "+n.queries.length+" for project "+n.client.projectId()+" is not a valid request"}};n.trigger("error",s.responseText.message);if(n.callback){n.callback(s.responseText.message,null)}}}});return this};b.exports=a},{"./":16,"./utils/each":28,"./utils/emitter-shim":29,"./utils/extend":30,"./utils/sendQuery":33}],26:[function(b,c,a){c.exports={map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(f){var d="",l=0,h=this.map,k,j,g,s,r,q,p;f=this.utf8.encode(f);while(l<f.length){k=f.charCodeAt(l++);j=f.charCodeAt(l++);g=f.charCodeAt(l++);s=(k>>2);r=(((k&3)<<4)|(j>>4));q=(isNaN(j)?64:((j&15)<<2)|(g>>6));p=(isNaN(j)||isNaN(g))?64:g&63;d=d+h.charAt(s)+h.charAt(r)+h.charAt(q)+h.charAt(p)}return d},decode:function(f){var d="",p=0,h=this.map,g=String.fromCharCode,t,s,r,q,l,k,j;f=f.replace(/[^A-Za-z0-9\+\/\=]/g,"");while(p<f.length){t=h.indexOf(f.charAt(p++));s=h.indexOf(f.charAt(p++));r=h.indexOf(f.charAt(p++));q=h.indexOf(f.charAt(p++));l=(t<<2)|(s>>4);k=((s&15)<<4)|(r>>2);j=((r&3)<<6)|q;d=d+(g(l)+((r!=64)?g(k):""))+(((q!=64)?g(j):""))}return this.utf8.decode(d)},utf8:{encode:function(j){var f="",d=0,h=String.fromCharCode,g;while(d<j.length){g=j.charCodeAt(d++);f=f+((g<128)?h(g):((g>127)&&(g<2048))?(h((g>>6)|192)+h((g&63)|128)):(h((g>>12)|224)+h(((g>>6)&63)|128)+h((g&63)|128)))}return f},decode:function(k){var g="",f=0,j=String.fromCharCode,d,h;while(f<k.length){h=k.charCodeAt(f);g=g+((h<128)?[j(h),f++][0]:((h>191)&&(h<224))?[j(((h&31)<<6)|((d=k.charCodeAt(f+1))&63)),(f+=2)][0]:[j(((h&15)<<12)|(((d=k.charCodeAt(f+1))&63)<<6)|((c3=k.charCodeAt(f+2))&63)),(f+=3)][0])}return g}}}},{}],27:[function(b,d,a){var c=b("./json-shim");d.exports=function(f){return c.parse(c.stringify(f))}},{"./json-shim":31}],28:[function(b,c,a){c.exports=function(g,d,f){var h;if(!g){return 0}f=!f?g:f;if(g instanceof Array){for(h=0;h<g.length;h++){if(d.call(f,g[h],h,g)===false){return 0}}}else{for(h in g){if(g.hasOwnProperty(h)){if(d.call(f,g[h],h,g)===false){return 0}}}}return 1}},{}],29:[function(b,c,a){var d=b("component-emitter");d.prototype.trigger=d.prototype.emit;c.exports=d},{"component-emitter":1}],30:[function(b,c,a){c.exports=function(f){for(var d=1;d<arguments.length;d++){for(var g in arguments[d]){f[g]=arguments[d][g]}}return f}},{}],31:[function(b,c,a){c.exports=("undefined"!==typeof window&&window.JSON)?window.JSON:b("json3")},{json3:3}],32:[function(b,c,a){function d(m){var f={},g,j=/\+/g,h=/([^&=]+)=?([^&]*)/g,l=function(n){return decodeURIComponent(n.replace(j," "))},k=m.split("?")[1];while(!!(g=h.exec(k))){f[l(g[1])]=l(g[2])}return f}c.exports=d},{}],33:[function(f,c,h){var g=f("superagent");var k=f("../helpers/get-context"),d=f("../helpers/get-query-string"),b=f("../helpers/get-url-max-length"),a=f("../helpers/get-xhr-object"),j=f("../helpers/superagent-request-types"),l=f("../helpers/superagent-handle-response");c.exports=function(r,s,t){var p=this,o=this.client.url(r),n=this.client.config.requestType,m=t;t=null;if(!p.client.projectId()){p.client.trigger("error","Query not sent: Missing projectId property");return}if(!p.client.readKey()){p.client.trigger("error","Query not sent: Missing readKey property");return}if(a()||k()==="server"){g.post(o).set("Content-Type","application/json").set("Authorization",p.client.readKey()).timeout(p.timeout()).send(s||{}).end(q)}else{extend(s,{api_key:p.client.readKey()});o+=d(s);if(o.length<b()){g.get(o).timeout(p.timeout()).use(j("jsonp")).end(q)}else{p.client.trigger("error","Query not sent: URL length exceeds current browser limit, and XHR (POST) is not supported.")}}function q(v,u){l(v,u,m);m=t=null}return}},{"../helpers/get-context":9,"../helpers/get-query-string":10,"../helpers/get-url-max-length":12,"../helpers/get-xhr-object":13,"../helpers/superagent-handle-response":14,"../helpers/superagent-request-types":15,superagent:5}],34:[function(g,c,j){var n=g("../core/utils/clone"),p=g("../core/utils/each"),a=g("./utils/flatten"),h=g("./utils/parse");var o=g("../core/utils/emitter-shim");function b(){this.data={input:{},output:[["index"]]};this.meta={schema:{},method:undefined};if(arguments.length>0){this.parse.apply(this,arguments)}}b.defaults={delimeter:" -> "};o(b);o(b.prototype);b.prototype.input=function(q){if(!arguments.length){return this["data"]["input"]}this["data"]["input"]=(q?n(q):null);return this};b.prototype.output=function(q){if(!arguments.length){return this["data"].output}this["data"].output=(q instanceof Array?q:null);return this};b.prototype.method=function(q){if(!arguments.length){return this.meta.method}this.meta.method=(q?String(q):null);return this};b.prototype.schema=function(q){if(!arguments.length){return this.meta.schema}this.meta.schema=(q?q:null);return this};b.prototype.parse=function(r,s){var q;if(r){this.input(r)}if(s){this.schema(s)}this.output([[]]);if(this.meta.schema.select){this.method("select");q=m({records:"",select:true},this.schema());f.call(this,d(q))}else{if(this.meta.schema.unpack){this.method("unpack");q=m({records:"",unpack:{index:false,value:false,label:false}},this.schema());l.call(this,d(q))}}return this};function f(s){var t=this,u=s||{},v=[],w=[];var r,q;if(u.records===""||!u.records){r=[t.input()]}else{q=u.records.split(b.defaults.delimeter);r=h.apply(t,[t.input()].concat(q))[0]}p(u.select,function(y){v.push(y.path.split(b.defaults.delimeter))});if(v.length==0){p(r,function(y,z){var B=a(y);for(var A in B){if(B.hasOwnProperty(A)&&w.indexOf(A)==-1){w.push(A);v.push([A])}}})}var x=[[]];p(v,function(z,y){if(v.length==1){x[0].push("label","value")}else{x[0].push(z.join("."))}});p(r,function(y,z){var A=a(y);if(v.length==1){x.push([v.join("."),A[v.join(".")]])}else{x.push([]);p(v,function(C,B){var D=C.join(".");x[z+1].push(A[D])})}});t.output(x);t.format(u.select);return t}function l(z){var y=this,u=[];var s=(z.unpack.value)?z.unpack.value.path.split(b.defaults.delimeter):false,r=(z.unpack.label)?z.unpack.label.path.split(b.defaults.delimeter):false,t=(z.unpack.index)?z.unpack.index.path.split(b.defaults.delimeter):false;var v=(s[s.length-1]!=="")?s[s.length-1]:"Value",q=(r[r.length-1]!=="")?r[r.length-1]:"Label",x=(t[t.length-1]!=="")?t[t.length-1]:"Index";var w=(function(){var A;if(z.records==""){A=[y.input()]}else{A=h.apply(y,[y.input()].concat(z.records.split(b.defaults.delimeter)))}return A[0]})();if(w instanceof Array==false){w=[w]}p(w,function(A,B){var C=(r)?h.apply(y,[A].concat(r)):[];if(C){u=C}});p(w,function(B,C){var D=(s)?h.apply(y,[B].concat(s)):false,A=(t)?h.apply(y,[B].concat(t)):false;if(A){p(A,function(){y.data.output.push([])})}else{y.data.output.push([])}if(A){if(C==0){y.data.output[0].push(x);if(u.length>0){p(u,function(F,E){y.data.output[0].push(F)})}else{y.data.output[0].push(v)}}if(w.length<y.data.output.length-1){if(C==0){p(y.data.output,function(F,E){if(E>0){y.data.output[E].push(A[E-1])}})}}else{y.data.output[C+1].push(A[0])}}if(!A&&u.length>0){if(C==0){y.data.output[0].push(q);y.data.output[0].push(v)}y.data.output[C+1].push(u[0])}if(!A&&u.length==0){y.data.output[0].push("")}if(D){if(w.length<y.data.output.length-1){if(C==0){p(y.data.output,function(F,E){if(E>0){y.data.output[E].push(D[E-1])}})}}else{p(D,function(E){y.data.output[C+1].push(E)})}}else{p(y.data.output[0],function(E,F){var G=(A)?0:-1;if(F>G){y.data.output[C+1].push(null)}})}});y.format(z.unpack);return this}function d(q){p(q.unpack,function(t,s,r){if(t&&k(t,"string")){q.unpack[s]={path:q.unpack[s]}}});return q}function k(r,q){r=typeof(r);if(!q){return r!="undefined"}return r==q}function m(r,q){p(q,function(s,t){if(k(r[t],"object")&&k(s,"object")){r[t]=m(r[t],s)}else{if(s!==null){r[t]=s}}});return r}c.exports=b},{"../core/utils/clone":27,"../core/utils/each":28,"../core/utils/emitter-shim":29,"./utils/flatten":47,"./utils/parse":48}],35:[function(b,c,a){var f=b("../core/utils/extend"),d=b("./dataset");f(d.prototype,b("./lib/append"));f(d.prototype,b("./lib/delete"));f(d.prototype,b("./lib/filter"));f(d.prototype,b("./lib/insert"));f(d.prototype,b("./lib/select"));f(d.prototype,b("./lib/set"));f(d.prototype,b("./lib/sort"));f(d.prototype,b("./lib/update"));f(d.prototype,b("./lib/analyses"));f(d.prototype,{format:b("./lib/format")});c.exports=d},{"../core/utils/extend":30,"./dataset":34,"./lib/analyses":36,"./lib/append":37,"./lib/delete":38,"./lib/filter":39,"./lib/format":40,"./lib/insert":41,"./lib/select":42,"./lib/set":43,"./lib/sort":44,"./lib/update":45}],36:[function(d,f,c){var g=d("../../core/utils/each"),a=["Average","Maximum","Minimum","Sum"],b={};b.average=function(h,n,j){var m=h.slice(n||0,(j?j+1:h.length)),k=0,l=null;g(m,function(p,o){if(typeof p==="number"&&!isNaN(parseFloat(p))){k+=parseFloat(p)}});return k/m.length};b.maximum=function(h,m,j){var l=h.slice(m||0,(j?j+1:h.length)),k=[];g(l,function(o,n){if(typeof o==="number"&&!isNaN(parseFloat(o))){k.push(parseFloat(o))}});return Math.max.apply(Math,k)};b.minimum=function(h,m,j){var l=h.slice(m||0,(j?j+1:h.length)),k=[];g(l,function(o,n){if(typeof o==="number"&&!isNaN(parseFloat(o))){k.push(parseFloat(o))}});return Math.min.apply(Math,k)};b.sum=function(h,m,j){var l=h.slice(m||0,(j?j+1:h.length)),k=0;g(l,function(o,n){if(typeof o==="number"&&!isNaN(parseFloat(o))){k+=parseFloat(o)}});return k};g(a,function(h,j){b["getColumn"+h]=b["getRow"+h]=function(k){return this[h.toLowerCase()](k,1)}});b.getColumnLabel=b.getRowIndex=function(h){return h[0]};f.exports=b},{"../../core/utils/each":28}],37:[function(d,f,c){var h=d("../../core/utils/each");var b=d("../utils/create-null-list");f.exports={appendColumn:g,appendRow:a};function g(n,k){var j=this,m=Array.prototype.slice.call(arguments,2),l=(n!==undefined)?n:null;if(typeof k==="function"){j.data.output[0].push(l);h(j.output(),function(q,p){var o;if(p>0){o=k.call(j,q,p);if(typeof o==="undefined"){o=null}j.data.output[p].push(o)}})}else{if(!k||k instanceof Array){k=k||[];if(k.length<=j.output().length-1){k=k.concat(b(j.output().length-1-k.length))}else{h(k,function(p,o){if(j.data.output.length-1<k.length){a.call(j,String(j.data.output.length))}})}j.data.output[0].push(l);h(k,function(p,o){j.data.output[o+1][j.data.output[0].length-1]=p})}}return j}function a(o,k){var j=this,n=Array.prototype.slice.call(arguments,2),m=(o!==undefined)?o:null,l=[];l.push(m);if(typeof k==="function"){h(j.data.output[0],function(r,s){var q,p;if(s>0){q=j.selectColumn(s);p=k.call(j,q,s);if(typeof p==="undefined"){p=null}l.push(p)}});j.data.output.push(l)}else{if(!k||k instanceof Array){k=k||[];if(k.length<=j.data.output[0].length-1){k=k.concat(b(j.data.output[0].length-1-k.length))}else{h(k,function(q,p){if(j.data.output[0].length-1<k.length){g.call(j,String(j.data.output[0].length))}})}j.data.output.push(l.concat(k))}}return j}},{"../../core/utils/each":28,"../utils/create-null-list":46}],38:[function(d,f,c){var g=d("../../core/utils/each");f.exports={deleteColumn:a,deleteRow:b};function a(k){var h=this,j=(typeof k==="number")?k:this.data.output[0].indexOf(k);if(j>-1){g(h.data.output,function(m,l){h.data.output[l].splice(j,1)})}return h}function b(j){var h=(typeof j==="number")?j:this.selectColumn(0).indexOf(j);if(h>-1){this.data.output.splice(h,1)}return this}},{"../../core/utils/each":28}],39:[function(c,d,b){var f=c("../../core/utils/each");d.exports={filterColumns:a,filterRows:g};function a(j){var h=this,k=new Array();f(h.data.output,function(m,l){k.push([])});f(h.data.output[0],function(l,m){var n=h.selectColumn(m);if(m==0||j.call(h,n,m)){f(n,function(o,p){k[p].push(o)})}});h.output(k);return h}function g(j){var h=this,k=[];f(h.output(),function(m,l){if(l==0||j.call(h,m,l)){k.push(m)}});h.output(k);return h}},{"../../core/utils/each":28}],40:[function(c,d,b){var f=c("../../core/utils/each");d.exports=function(h){var g=this;if(this.method()==="select"){f(g.output(),function(k,j){if(j==0){f(k,function(l,m){if(h[m]&&h[m].label){g.data.output[j][m]=h[m].label}})}else{f(k,function(l,m){g.data.output[j][m]=a(g.data.output[j][m],h[m])})}})}if(this.method()==="unpack"){if(h.index){f(g.output(),function(k,j){if(j==0){if(h.index.label){g.data.output[j][0]=h.index.label}}else{g.data.output[j][0]=a(g.data.output[j][0],h.index)}})}if(h.label){if(h.index){f(g.output(),function(k,j){f(k,function(l,m){if(j==0&&m>0){g.data.output[j][m]=a(g.data.output[j][m],h.label)}})})}else{f(g.output(),function(k,j){if(j>0){g.data.output[j][0]=a(g.data.output[j][0],h.label)}})}}if(h.value){if(h.index){f(g.output(),function(k,j){f(k,function(l,m){if(j>0&&m>0){g.data.output[j][m]=a(g.data.output[j][m],h.value)}})})}else{f(g.output(),function(k,j){f(k,function(l,m){if(j>0){g.data.output[j][m]=a(g.data.output[j][m],h.value)}})})}}}return g};function a(k,j){var g=k,h=j||{};if(h.replace){f(h.replace,function(m,l){if(g==l||String(g)==String(l)||parseFloat(g)==parseFloat(l)){g=m}})}if(h.type&&h.type=="date"){if(h.format&&moment&&moment(k).isValid()){g=moment(g).format(h.format)}else{g=new Date(g)}}if(h.type&&h.type=="string"){g=String(g)}if(h.type&&h.type=="number"&&!isNaN(parseFloat(g))){g=parseFloat(g)}return g}},{"../../core/utils/each":28}],41:[function(f,b,g){var j=f("../../core/utils/each");var h=f("../utils/create-null-list");var c=f("./append");var l=c.appendRow,d=c.appendColumn;b.exports={insertColumn:a,insertRow:k};function a(p,q,n){var m=this,o;o=(q!==undefined)?q:null;if(typeof n==="function"){m.data.output[0].splice(p,0,o);j(m.output(),function(t,s){var r;if(s>0){r=n.call(m,t,s);if(typeof r==="undefined"){r=null}m.data.output[s].splice(p,0,r)}})}else{if(!n||n instanceof Array){n=n||[];if(n.length<=m.output().length-1){n=n.concat(h(m.output().length-1-n.length))}else{j(n,function(s,r){if(m.data.output.length-1<n.length){l.call(m,String(m.data.output.length))}})}m.data.output[0].splice(p,0,o);j(n,function(s,r){m.data.output[r+1].splice(p,0,s)})}}return m}function k(q,r,n){var m=this,p,o=[];p=(r!==undefined)?r:null;o.push(p);if(typeof n==="function"){j(m.output()[0],function(u,v){var t,s;if(v>0){t=m.selectColumn(v);s=n.call(m,t,v);if(typeof s==="undefined"){s=null}o.push(s)}});m.data.output.splice(q,0,o)}else{if(!n||n instanceof Array){n=n||[];if(n.length<=m.data.output[0].length-1){n=n.concat(h(m.data.output[0].length-1-n.length))}else{j(n,function(t,s){if(m.data.output[0].length-1<n.length){d.call(m,String(m.data.output[0].length))}})}m.data.output.splice(q,0,o.concat(n))}}return m}},{"../../core/utils/each":28,"../utils/create-null-list":46,"./append":37}],42:[function(d,f,c){var g=d("../../core/utils/each");f.exports={selectColumn:b,selectRow:a};function b(k){var h=new Array(),j=(typeof k==="number")?k:this.data.output[0].indexOf(k);if(j>-1&&"undefined"!==typeof this.data.output[0][j]){g(this.data.output,function(m,l){h.push(m[j])})}return h}function a(k){var h=new Array(),j=(typeof k==="number")?k:this.selectColumn(0).indexOf(k);if(j>-1&&"undefined"!==typeof this.data.output[j]){h=this.data.output[j]}return h}},{"../../core/utils/each":28}],43:[function(d,f,c){var g=d("../../core/utils/each");var b=d("./append");var a=d("./select");f.exports={set:h};function h(n,m){if(arguments.length<2||n.length<2){throw Error("Incorrect arguments provided for #set method")}var j="number"===typeof n[0]?n[0]:this.data.output[0].indexOf(n[0]),o="number"===typeof n[1]?n[1]:a.selectColumn.call(this,0).indexOf(n[1]);var l=a.selectColumn.call(this,n[0]),k=a.selectRow.call(this,n[1]);if(l.length<1){b.appendColumn.call(this,n[0]);j=this.data.output[0].length-1}if(k.length<1){b.appendRow.call(this,n[1]);o=this.data.output.length-1}this.data.output[o][j]=m;return this}},{"../../core/utils/each":28,"./append":37,"./select":42}],44:[function(d,f,c){var g=d("../../core/utils/each");f.exports={sortColumns:b,sortRows:a};function b(n,j){var h=this,k=this.output()[0].slice(1),m=[],o=[],l=j||this.getColumnLabel;g(k,function(p,q){m.push(h.selectColumn(q+1).slice(0))});m.sort(function(q,p){var r=l.call(h,q)>l.call(h,p);if(r){return(n==="asc"?1:-1)}else{if(!r){return(n==="asc"?-1:1)}else{return 0}}});g(m,function(p,q){h.deleteColumn(q+1).insertColumn(q+1,p[0],p.slice(1))});return h}function a(n,k){var j=this,l=this.output().slice(0,1),h=this.output().slice(1),m=k||this.getRowIndex;h.sort(function(p,o){var q=m.call(j,p)>m.call(j,o);if(q){return(n==="asc"?1:-1)}else{if(!q){return(n==="asc"?-1:1)}else{return 0}}});j.output(l.concat(h));return j}},{"../../core/utils/each":28}],45:[function(f,a,g){var k=f("../../core/utils/each");var h=f("../utils/create-null-list");var b=f("./append");var l=b.appendRow,d=b.appendColumn;a.exports={updateColumn:j,updateRow:c};function j(p,n){var m=this,o=(typeof p==="number")?p:this.data.output[0].indexOf(p);if(o>-1){if(typeof n==="function"){k(m.output(),function(s,r){var q;if(r>0){q=n.call(m,s[o],r,s);if(typeof q!=="undefined"){m.data.output[r][o]=q}}})}else{if(!n||n instanceof Array){n=n||[];if(n.length<=m.output().length-1){n=n.concat(h(m.output().length-1-n.length))}else{k(n,function(r,q){if(m.data.output.length-1<n.length){l.call(m,String(m.data.output.length))}})}k(n,function(r,q){m.data.output[q+1][o]=r})}}}return m}function c(p,n){var m=this,o=(typeof p==="number")?p:this.selectColumn(0).indexOf(p);if(o>-1){if(typeof n==="function"){k(m.output()[o],function(t,s){var r=m.selectColumn(s),q=n.call(m,t,s,r);if(typeof q!=="undefined"){m.data.output[o][s]=q}})}else{if(!n||n instanceof Array){n=n||[];if(n.length<=m.data.output[0].length-1){n=n.concat(h(m.data.output[0].length-1-n.length))}else{k(n,function(r,q){if(m.data.output[0].length-1<n.length){d.call(m,String(m.data.output[0].length))}})}k(n,function(r,q){m.data.output[o][q+1]=r})}}}return m}},{"../../core/utils/each":28,"../utils/create-null-list":46,"./append":37}],46:[function(b,c,a){c.exports=function(d){var f=new Array();for(i=0;i<d;i++){f.push(null)}return f}},{}],47:[function(b,c,a){c.exports=d;function d(g){var k={};for(var h in g){if(!g.hasOwnProperty(h)){continue}if((typeof g[h])=="object"&&g[h]!==null){var j=d(g[h]);for(var f in j){if(!j.hasOwnProperty(f)){continue}k[h+"."+f]=j[f]}}else{k[h]=g[h]}}return k}},{}],48:[function(b,c,a){var d=b("../../core/utils/each");c.exports=function(){var f=[];var g=function(){var h=arguments[0];var j=Array.prototype.slice.call(arguments,1);var k=j.pop();if(j.length===0){if(h instanceof Array){j=h}else{if(typeof h==="object"){j.push(h)}}}d(j,function(l){if(k==""){if(typeof l=="number"||l==null){return f.push(l)}}if(l[k]||l[k]===0||l[k]!==void 0){if(l[k]===null){return f.push(null)}else{return f.push(l[k])}}else{if(h[l]){if(h[l] instanceof Array){d(h[l],function(p,o){var m=[h[l]].concat(h[l][o]).concat(j.slice(1)).concat(k);return g.apply(this,m)})}else{if(h[l][k]){return f.push(h[l][k])}else{return g.apply(this,[h[l]].concat(j.splice(1)).concat(k))}}}else{if(typeof h==="object"&&h instanceof Array===false&&!h[k]){throw new Error("Target property does not exist",k)}else{return g.apply(this,[l].concat(j.splice(1)).concat(k))}}}return});if(f.length>0){return f}};return g.apply(this,arguments)}},{"../../core/utils/each":28}],49:[function(b,c,a){
/*!
 * ----------------------
 * C3.js Adapter
 * ----------------------
 */
var f=b("../dataviz"),d=b("../../core/utils/each"),g=b("../../core/utils/extend");c.exports=function(){var j={singular:["gauge"],categorical:["donut","pie"],"cat-interval":["area-step","step","bar","area","area-spline","spline","line"],"cat-ordinal":["bar","area","area-spline","spline","line","step","area-step"],chronological:["area","area-spline","spline","line","bar","step","area-step"],"cat-chronological":["line","spline","area","area-spline","bar","step","area-step"]};var k={};d(["gauge","donut","pie","bar","area","area-spline","spline","line","step","area-step"],function(n,m){k[n]={render:function(){var o=h.call(this,n);this.view._artifacts.c3=c3.generate(o);this.update()},update:function(){var o=this,p=[];if(n==="gauge"){o.view._artifacts.c3.load({columns:[[o.title(),o.data()[1][1]]]})}else{if(n==="pie"||n==="donut"){o.view._artifacts.c3.load({columns:o.dataset.data.output.slice(1)})}else{if(this.dataType().indexOf("chron")>-1){p.push(o.dataset.selectColumn(0));p[0][0]="x"}d(o.data()[0],function(r,q){if(q>0){p.push(o.dataset.selectColumn(q))}});if(o.stacked()){o.view._artifacts.c3.groups([o.labels()])}o.view._artifacts.c3.load({columns:p})}}},destroy:function(){l.call(this)}}});function h(n){var m={axis:{},bindto:this.el(),data:{columns:[]},color:{pattern:this.colors()},size:{height:this.height(),width:this.width()}};m.data["type"]=n;if(n==="gauge"){}else{if(n==="pie"||n==="donut"){m[n]={title:this.title()}}else{if(this.dataType().indexOf("chron")>-1){m.data["x"]="x";m.axis["x"]={type:"timeseries",tick:{format:"%Y-%m-%d"}}}else{if(this.dataType()==="cat-ordinal"){m.axis["x"]={type:"category",categories:this.labels()}}}if(this.title()){m.axis["y"]={label:this.title()}}}}return g(m,this.chartOptions())}function l(){if(this.view._artifacts.c3){this.view._artifacts.c3.destroy();this.view._artifacts.c3=null}}f.register("c3",k,{capabilities:j})}},{"../../core/utils/each":28,"../../core/utils/extend":30,"../dataviz":53}],50:[function(b,c,a){
/*!
 * ----------------------
 * Chart.js Adapter
 * ----------------------
 */
var f=b("../dataviz"),d=b("../../core/utils/each"),g=b("../../core/utils/extend");c.exports=function(){if(typeof Chart!=="undefined"){Chart.defaults.global.responsive=true}var q={categorical:["doughnut","pie","polar-area","radar"],"cat-interval":["bar","line"],"cat-ordinal":["bar","line"],chronological:["line","bar"],"cat-chronological":["line","bar"]};var o={radar:"Radar","polar-area":"PolarArea",pie:"Pie",doughnut:"Doughnut",line:"Line",bar:"Bar"};var m={doughnut:p,pie:p,"polar-area":p,radar:n,line:n,bar:n};function p(){var u=this,t=[];d(u.dataset.selectColumn(0).slice(1),function(v,w){t.push({value:u.dataset.selectColumn(1).slice(1)[w],color:u.colors()[+w],hightlight:u.colors()[+w+9],label:v})});return t}function n(){var u=this,v,t={labels:[],datasets:[]};v=this.dataset.selectColumn(0).slice(1);d(v,function(w,x){if(w instanceof Date){t.labels.push((w.getMonth()+1)+"-"+w.getDate()+"-"+w.getFullYear())}else{t.labels.push(w)}});d(u.dataset.selectRow(0).slice(1),function(w,x){var y={r:r(u.colors()[x]),g:j(u.colors()[x]),b:l(u.colors()[x])};t.datasets.push({label:w,fillColor:"rgba("+y.r+","+y.g+","+y.b+",0.2)",strokeColor:"rgba("+y.r+","+y.g+","+y.b+",1)",pointColor:"rgba("+y.r+","+y.g+","+y.b+",1)",pointStrokeColor:"#fff",pointHighlightFill:"#fff",pointHighlightStroke:"rgba("+y.r+","+y.g+","+y.b+",1)",data:u.dataset.selectColumn(+x+1).slice(1)})});return t}var k={};d(["doughnut","pie","polar-area","radar","bar","line"],function(u,t){k[u]={initialize:function(){if(this.el().nodeName.toLowerCase()!=="canvas"){var v=document.createElement("canvas");this.el().innerHTML="";this.el().appendChild(v);this.view._artifacts.ctx=v.getContext("2d")}else{this.view._artifacts.ctx=this.el().getContext("2d")}if(this.height()){this.view._artifacts.ctx.canvas.height=this.height();this.view._artifacts.ctx.canvas.style.height=String(this.height()+"px")}if(this.width()){this.view._artifacts.ctx.canvas.width=this.width();this.view._artifacts.ctx.canvas.style.width=String(this.width()+"px")}return this},render:function(){var x=o[u],v=g({},this.chartOptions()),w=m[u].call(this);if(this.view._artifacts.chartjs){this.view._artifacts.chartjs.destroy()}this.view._artifacts.chartjs=new Chart(this.view._artifacts.ctx)[x](w,v);return this},destroy:function(){s.call(this)}}});function s(){if(this.view._artifacts.chartjs){this.view._artifacts.chartjs.destroy();this.view._artifacts.chartjs=null}}function r(t){return parseInt((h(t)).substring(0,2),16)}function j(t){return parseInt((h(t)).substring(2,4),16)}function l(t){return parseInt((h(t)).substring(4,6),16)}function h(t){return(t.charAt(0)=="#")?t.substring(1,7):t}f.register("chartjs",k,{capabilities:q})}},{"../../core/utils/each":28,"../../core/utils/extend":30,"../dataviz":53}],51:[function(c,d,b){
/*!
 * ----------------------
 * Google Charts Adapter
 * ----------------------
 */
var g=c("../dataviz"),f=c("../../core/utils/each"),h=c("../../core/utils/extend"),a=c("../../core");d.exports=function(){a.loaded=false;var j={"Data column(s) for axis #0 cannot be of type string":"No results to visualize"};var l=["AreaChart","BarChart","ColumnChart","LineChart","PieChart","Table"];var o={};var n={categorical:["piechart","barchart","columnchart","table"],"cat-interval":["columnchart","barchart","table"],"cat-ordinal":["barchart","columnchart","areachart","linechart","table"],chronological:["areachart","linechart","table"],"cat-chronological":["linechart","columnchart","barchart","areachart"],nominal:["table"],extraction:["table"]};f(l,function(q){var p=q.toLowerCase();o[p]={initialize:function(){},render:function(){if(typeof google==="undefined"){this.error("The Google Charts library could not be loaded.");return}var r=this;if(r.view._artifacts.googlechart){this.destroy()}r.view._artifacts.googlechart=r.view._artifacts.googlechart||new google.visualization[q](r.el());google.visualization.events.addListener(r.view._artifacts.googlechart,"error",function(s){k.call(r,s)});this.update()},update:function(){var r=m.call(this,q);h(r,this.chartOptions(),this.attributes());r.isStacked=(this.stacked()||r.isStacked);this.view._artifacts.datatable=google.visualization.arrayToDataTable(this.data());if(this.view._artifacts.googlechart){this.view._artifacts.googlechart.draw(this.view._artifacts.datatable,r)}},destroy:function(){if(this.view._artifacts.googlechart){google.visualization.events.removeAllListeners(this.view._artifacts.googlechart);this.view._artifacts.googlechart.clearChart();this.view._artifacts.googlechart=null;this.view._artifacts.datatable=null}}}});g.register("google",o,{capabilities:n,dependencies:[{type:"script",url:"https://www.google.com/jsapi",cb:function(p){if(typeof google==="undefined"){this.trigger("error","Problem loading Google Charts library. Please contact us!");p()}else{google.load("visualization","1.1",{packages:["corechart","table"],callback:function(){p()}})}}}]});function k(p){var q=j[p.message]||p.message||"An error occurred";this.error(q)}function m(q){var p={};switch(q.toLowerCase()){case"areachart":p.lineWidth=2;p.hAxis={baselineColor:"transparent",gridlines:{color:"transparent"}};p.vAxis={viewWindow:{min:0}};if(this.dataType()==="chronological"||this.dataType()==="cat-ordinal"){p.legend="none";p.chartArea={width:"85%"}}break;case"barchart":p.hAxis={viewWindow:{min:0}};p.vAxis={baselineColor:"transparent",gridlines:{color:"transparent"}};if(this.dataType()==="chronological"||this.dataType()==="cat-ordinal"){p.legend="none"}break;case"columnchart":p.hAxis={baselineColor:"transparent",gridlines:{color:"transparent"}};p.vAxis={viewWindow:{min:0}};if(this.dataType()==="chronological"||this.dataType()==="cat-ordinal"){p.legend="none";p.chartArea={width:"85%"}}break;case"linechart":p.lineWidth=2;p.hAxis={baselineColor:"transparent",gridlines:{color:"transparent"}};p.vAxis={viewWindow:{min:0}};if(this.dataType()==="chronological"||this.dataType()==="cat-ordinal"){p.legend="none";p.chartArea={width:"85%"}}break;case"piechart":p.sliceVisibilityThreshold=0.01;break;case"table":break}return p}}},{"../../core":16,"../../core/utils/each":28,"../../core/utils/extend":30,"../dataviz":53}],52:[function(d,b,f){
/*!
* ----------------------
* Keen IO Adapter
* ----------------------
*/
var g=d("../../core"),a=d("../dataviz");var j=d("../../core/utils/clone"),k=d("../../core/utils/each"),h=d("../../core/utils/extend"),c=d("../utils/prettyNumber");b.exports=function(){var l,o,n;g.Error={defaults:{backgroundColor:"",borderRadius:"4px",color:"#ccc",display:"block",fontFamily:"Helvetica Neue, Helvetica, Arial, sans-serif",fontSize:"21px",fontWeight:"light",textAlign:"center"}};g.Spinner.defaults={height:138,lines:10,length:8,width:3,radius:10,corners:1,rotate:0,direction:1,color:"#4d4d4d",speed:1.67,trail:60,shadow:false,hwaccel:false,className:"keen-spinner",zIndex:2000000000,top:"50%",left:"50%"};var m={singular:["metric"]};l={initialize:function(){var p=document.createElement("style"),q="#49c5b1";p.id="keen-widgets";p.type="text/css";p.innerHTML="  .keen-metric { \n  background: "+q+"; \n  border-radius: 4px; \n  color: #fff; \n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; \n  padding: 10px 0; \n  text-align: center; \n}   .keen-metric-value { \n  display: block; \n  font-size: 84px; \n  font-weight: 700; \n  line-height: 84px; \n}   .keen-metric-title { \n  display: block; \n  font-size: 24px; \n  font-weight: 200; \n}";if(!document.getElementById(p.id)){document.body.appendChild(p)}},render:function(){var u=(this.colors().length==1)?this.colors()[0]:"#49c5b1",t=this.title()||"Result",v=this.data()[1][1]||0,r=this.width(),q=this.chartOptions()||{},s="",w="";var x={width:(r)?r+"px":"auto"};var p=v;if(typeof q.prettyNumber==="undefined"||q.prettyNumber==true){if(!isNaN(parseInt(v))){p=c(v)}}if(q.prefix){s='<span class="keen-metric-prefix">'+q.prefix+"</span>"}if(q.suffix){w='<span class="keen-metric-suffix">'+q.suffix+"</span>"}this.el().innerHTML='<div class="keen-widget keen-metric" style="background-color: '+u+"; width:"+x.width+';" title="'+v+'"><span class="keen-metric-value">'+s+p+w+'</span><span class="keen-metric-title">'+t+"</span></div>"}};o={initialize:function(){},render:function(t,q){var r,s;var u=j(g.Error.defaults);var p=h(u,q);r=document.createElement("div");r.className="keen-error";k(p,function(w,v){r.style[v]=w});r.style.height=String(this.height()+"px");r.style.paddingTop=(this.height()/2-15)+"px";r.style.width=String(this.width()+"px");s=document.createElement("span");s.innerHTML=t||"Yikes! An error occurred!";r.appendChild(s);this.el().innerHTML="";this.el().appendChild(r)},destroy:function(){this.el().innerHTML=""}};n={initialize:function(){},render:function(){var q=document.createElement("div");var p=this.height()||g.Spinner.defaults.height;q.className="keen-loading";q.style.height=String(p+"px");q.style.position="relative";q.style.width=String(this.width()+"px");this.el().innerHTML="";this.el().appendChild(q);this.view._artifacts.spinner=new g.Spinner(g.Spinner.defaults).spin(q)},destroy:function(){this.view._artifacts.spinner.stop();this.view._artifacts.spinner=null}};g.Dataviz.register("keen-io",{metric:l,error:o,spinner:n},{capabilities:m})}},{"../../core":16,"../../core/utils/clone":27,"../../core/utils/each":28,"../../core/utils/extend":30,"../dataviz":53,"../utils/prettyNumber":92}],53:[function(f,d,g){var k=f("../core/utils/clone"),m=f("../core/utils/each"),j=f("../core/utils/extend"),a=f("./utils/loadScript"),n=f("./utils/loadStyle");var h=f("../core");var l=f("../core/utils/emitter-shim");var c=f("../dataset");function b(){this.dataset=new c();this.view={_prepared:false,_initialized:false,_rendered:false,_artifacts:{},adapter:{library:undefined,chartOptions:{},chartType:undefined,defaultChartType:undefined,dataType:undefined},attributes:k(b.defaults),defaults:k(b.defaults),el:undefined,loader:{library:"keen-io",chartType:"spinner"}};b.visuals.push(this)}j(b,{dataTypeMap:{singular:{library:"keen-io",chartType:"metric"},categorical:{library:"google",chartType:"piechart"},"cat-interval":{library:"google",chartType:"columnchart"},"cat-ordinal":{library:"google",chartType:"barchart"},chronological:{library:"google",chartType:"areachart"},"cat-chronological":{library:"google",chartType:"linechart"},extraction:{library:"google",chartType:"table"},nominal:{library:"google",chartType:"table"}},defaults:{colors:["#00bbde","#fe6672","#eeb058","#8a8ad6","#ff855c","#00cfbb","#5a9eed","#73d483","#c879bb","#0099b6","#d74d58","#cb9141","#6b6bb6","#d86945","#00aa99","#4281c9","#57b566","#ac5c9e","#27cceb","#ff818b","#f6bf71","#9b9be1","#ff9b79","#26dfcd","#73aff4","#87e096","#d88bcb"],indexBy:"timeframe.start",stacked:false},dependencies:{loading:0,loaded:0,urls:{}},libraries:{},visuals:[]});l(b);l(b.prototype);b.register=function(r,p,q){var o=this;var s=function(t){t.loaded++;if(t.loaded===t.loading){h.loaded=true;h.trigger("ready")}};b.libraries[r]=b.libraries[r]||{};m(p,function(u,t){b.libraries[r][t]=u});if(q&&q.capabilities){b.libraries[r]._defaults=b.libraries[r]._defaults||{};m(q.capabilities,function(t,u){b.libraries[r]._defaults[u]=t})}if(q&&q.dependencies){m(q.dependencies,function(v,u,w){var t=b.dependencies;if(!t.urls[v.url]){t.urls[v.url]=true;t.loading++;var x=v.type==="script"?a:n;x(v.url,function(){if(v.cb){v.cb.call(o,function(){s(t)})}else{s(t)}})}})}};b.find=function(q){if(!arguments.length){return b.visuals}var p=q.nodeName?q:document.querySelector(q),o;m(b.visuals,function(r){if(p==r.el()){o=r;return false}});if(o){return o}};d.exports=b},{"../core":16,"../core/utils/clone":27,"../core/utils/each":28,"../core/utils/emitter-shim":29,"../core/utils/extend":30,"../dataset":35,"./utils/loadScript":90,"./utils/loadStyle":91}],54:[function(b,d,a){var h=b("../../core/utils/clone"),g=b("../../core/utils/extend"),f=b("../dataviz"),c=b("../../core/request");d.exports=function(p,m,j){var l=h(f.defaults),o=new f(),n=new c(this,[p]),k=j?h(j):{};if(k.chartType){o.chartType(k.chartType);delete k.chartType}if(k.library){o.library(k.library);delete k.library}if(k.chartOptions){o.chartOptions(k.chartOptions);delete k.chartOptions}o.attributes(g(l,k)).el(m).prepare();n.refresh();n.on("complete",function(){o.parseRequest(this).call(function(){if(k.labels){this.labels(k.labels)}}).render()});n.on("error",function(q){o.error(q.message)});return o}},{"../../core/request":25,"../../core/utils/clone":27,"../../core/utils/extend":30,"../dataviz":53}],55:[function(b,c,a){var d=b("../dataviz"),f=b("../../core/utils/extend");c.exports=function(){var k=f({},d.dataTypeMap),h=this.dataType(),g=this.library(),j=this.chartType()||this.defaultChartType();if(!g&&k[h]){g=k[h].library}if(g&&!j&&h){j=d.libraries[g]._defaults[h][0]}if(g&&!j&&k[h]){j=k[h].chartType}return(g&&j)?d.libraries[g][j]:{}}},{"../../core/utils/extend":30,"../dataviz":53}],56:[function(c,d,b){var g=c("../../core/utils/each"),f=c("../../dataset");d.exports={extraction:a};function a(j){var k=(j.data instanceof Array?j.data[0]:j.data),l=j.queries[0].get("property_names")||[],h={records:"result",select:true};if(l){h.select=[];g(l,function(m){h.select.push({path:m})})}return new f(k,h)}},{"../../core/utils/each":28,"../../dataset":35}],57:[function(b,c,a){c.exports=function(f){var h=f.queries[0].analysis.replace("_"," "),g=f.queries[0].get("event_collection"),d;d=h.replace(/\b./g,function(j){return j.toUpperCase()});if(g){d+=" - "+g}return d}},{}],58:[function(b,c,a){c.exports=function(g){var h=typeof g.params.interval==="string",f=typeof g.params.group_by==="string",j=g.params.group_by instanceof Array,d;if(!f&&!h){d="singular"}if(f&&!h){d="categorical"}if(h&&!f){d="chronological"}if(h&&f){d="cat-chronological"}if(!h&&j){d="categorical"}if(h&&j){d="cat-chronological"}if(g.analysis==="funnel"){d="cat-ordinal"}if(g.analysis==="extraction"){d="extraction"}if(g.analysis==="select_unique"){d="nominal"}return d}},{}],59:[function(b,c,a){var f=b("../core/utils/extend"),d=b("./dataviz");f(d.prototype,{adapter:b("./lib/adapter"),attributes:b("./lib/attributes"),call:b("./lib/call"),chartOptions:b("./lib/chartOptions"),chartType:b("./lib/chartType"),colorMapping:b("./lib/colorMapping"),colors:b("./lib/colors"),data:b("./lib/data"),dataType:b("./lib/dataType"),defaultChartType:b("./lib/defaultChartType"),el:b("./lib/el"),height:b("./lib/height"),indexBy:b("./lib/indexBy"),labelMapping:b("./lib/labelMapping"),labels:b("./lib/labels"),library:b("./lib/library"),parseRawData:b("./lib/parseRawData"),parseRequest:b("./lib/parseRequest"),prepare:b("./lib/prepare"),sortGroups:b("./lib/sortGroups"),sortIntervals:b("./lib/sortIntervals"),stacked:b("./lib/stacked"),title:b("./lib/title"),width:b("./lib/width")});f(d.prototype,{destroy:b("./lib/actions/destroy"),error:b("./lib/actions/error"),initialize:b("./lib/actions/initialize"),render:b("./lib/actions/render"),update:b("./lib/actions/update")});c.exports=d},{"../core/utils/extend":30,"./dataviz":53,"./lib/actions/destroy":60,"./lib/actions/error":61,"./lib/actions/initialize":62,"./lib/actions/render":63,"./lib/actions/update":64,"./lib/adapter":65,"./lib/attributes":66,"./lib/call":67,"./lib/chartOptions":68,"./lib/chartType":69,"./lib/colorMapping":70,"./lib/colors":71,"./lib/data":72,"./lib/dataType":73,"./lib/defaultChartType":74,"./lib/el":75,"./lib/height":76,"./lib/indexBy":77,"./lib/labelMapping":78,"./lib/labels":79,"./lib/library":80,"./lib/parseRawData":81,"./lib/parseRequest":82,"./lib/prepare":83,"./lib/sortGroups":84,"./lib/sortIntervals":85,"./lib/stacked":86,"./lib/title":87,"./lib/width":88}],60:[function(b,c,a){var d=b("../../helpers/getAdapterActions");c.exports=function(){var f=d.call(this);if(f.destroy){f.destroy.apply(this,arguments)}if(this.el()){this.el().innerHTML=""}this.view._prepared=false;this.view._initialized=false;this.view._rendered=false;this.view._artifacts={};return this}},{"../../helpers/getAdapterActions":55}],61:[function(b,c,a){var f=b("../../helpers/getAdapterActions"),d=b("../../dataviz");c.exports=function(){var g=f.call(this);if(g.error){g.error.apply(this,arguments)}else{d.libraries["keen-io"]["error"].render.apply(this,arguments)}return this}},{"../../dataviz":53,"../../helpers/getAdapterActions":55}],62:[function(b,c,a){var f=b("../../helpers/getAdapterActions"),d=b("../../dataviz");c.exports=function(){var h=f.call(this);var g=d.libraries[this.view.loader.library][this.view.loader.chartType];if(this.view._prepared){if(g.destroy){g.destroy.apply(this,arguments)}}else{if(this.el()){this.el().innerHTML=""}}if(h.initialize){h.initialize.apply(this,arguments)}this.view._initialized=true;return this}},{"../../dataviz":53,"../../helpers/getAdapterActions":55}],63:[function(c,d,b){var f=c("../../helpers/getAdapterActions"),a=c("../../utils/applyTransforms");d.exports=function(){var g=f.call(this);a.call(this);if(!this.view._initialized){this.initialize()}if(this.el()&&g.render){g.render.apply(this,arguments);this.view._rendered=true}return this}},{"../../helpers/getAdapterActions":55,"../../utils/applyTransforms":89}],64:[function(c,d,b){var f=c("../../helpers/getAdapterActions"),a=c("../../utils/applyTransforms");d.exports=function(){var g=f.call(this);a.call(this);if(g.update){g.update.apply(this,arguments)}else{if(g.render){this.render()}}return this}},{"../../helpers/getAdapterActions":55,"../../utils/applyTransforms":89}],65:[function(b,c,a){var d=b("../../core/utils/each");c.exports=function(g){if(!arguments.length){return this.view.adapter}var f=this;d(g,function(j,h){f.view.adapter[h]=(j?j:null)});return this}},{"../../core/utils/each":28}],66:[function(b,c,a){var d=b("../../core/utils/each");var f=b("./chartOptions");c.exports=function(h){if(!arguments.length){return this.view.attributes}var g=this;d(h,function(k,j){if(j==="chartOptions"){f.call(g,k)}else{g.view.attributes[j]=k}});return this}},{"../../core/utils/each":28,"./chartOptions":68}],67:[function(b,c,a){c.exports=function(d){d.call(this);return this}},{}],68:[function(b,c,a){var d=b("../../core/utils/extend");c.exports=function(f){if(!arguments.length){return this.view.adapter.chartOptions}d(this.view.adapter.chartOptions,f);return this}},{"../../core/utils/extend":30}],69:[function(b,c,a){c.exports=function(d){if(!arguments.length){return this.view.adapter.chartType}this.view.adapter.chartType=(d?String(d):null);return this}},{}],70:[function(b,c,a){var d=b("../../core/utils/each");c.exports=function(g){if(!arguments.length){return this.view.attributes.colorMapping}this.view.attributes.colorMapping=(g?g:null);f.call(this);return this};function f(){var g=this,l=this.dataset.schema,m=this.dataset.output(),j=this.view.defaults.colors.slice(),h=this.colorMapping(),k=this.dataType()||"";if(h){if(k.indexOf("chronological")>-1||(l.unpack&&m[0].length>2)){d(m[0].slice(1),function(o,p){var n=h[o];if(n&&j[p]!==n){j.splice(p,0,n)}})}else{d(g.dataset.selectColumn(0).slice(1),function(o,p){var n=h[o];if(n&&j[p]!==n){j.splice(p,0,n)}})}g.view.attributes.colors=j}}},{"../../core/utils/each":28}],71:[function(b,c,a){c.exports=function(d){if(!arguments.length){return this.view.attributes.colors}this.view.attributes.colors=(d instanceof Array?d:null);this.view.defaults.colors=(d instanceof Array?d:null);return this}},{}],72:[function(b,d,a){var f=b("../../dataset"),c=b("../../core/request");d.exports=function(g){if(!arguments.length){return this.dataset.output()}if(g instanceof f){this.dataset=g}else{if(g instanceof c){this.parseRequest(g)}else{this.parseRawData(g)}}return this}},{"../../core/request":25,"../../dataset":35}],73:[function(b,c,a){c.exports=function(d){if(!arguments.length){return this.view.adapter.dataType}this.view.adapter.dataType=(d?String(d):null);return this}},{}],74:[function(b,c,a){c.exports=function(d){if(!arguments.length){return this.view.adapter.defaultChartType}this.view.adapter.defaultChartType=(d?String(d):null);return this}},{}],75:[function(b,c,a){c.exports=function(d){if(!arguments.length){return this.view.el}this.view.el=d;return this}},{}],76:[function(b,c,a){c.exports=function(d){if(!arguments.length){return this.view.attributes["height"]}this.view.attributes["height"]=(!isNaN(parseInt(d))?parseInt(d):null);return this}},{}],77:[function(b,d,a){var f=b("../../dataset"),h=b("../dataviz"),g=b("../../core/utils/each");d.exports=function(j){if(!arguments.length){return this.view.attributes.indexBy}this.view.attributes.indexBy=(j?String(j):h.defaults.indexBy);c.call(this);return this};function c(){var l=this,k=this.dataset.meta.schema||this.dataset.meta.unpack,j=this.indexBy().split(".").join(f.defaults.delimeter);g(k,function(n,m){if(m==="select"&&n instanceof Array){g(n,function(p,o){if(p.path.indexOf("timeframe -> ")>-1){l.dataset.meta.schema[m][o].path=j}})}else{if(m==="unpack"&&typeof n==="object"){l.dataset.meta.schema[m]["index"].path=j}}});this.dataset.parse()}},{"../../core/utils/each":28,"../../dataset":35,"../dataviz":53}],78:[function(b,c,a){var f=b("../../core/utils/each");c.exports=function(g){if(!arguments.length){return this.view.attributes.labelMapping}this.view.attributes.labelMapping=(g?g:null);d.call(this);return this};function d(){var g=this,k=this.labelMapping(),j=this.dataset.schema()||{},h=this.dataType()||"";if(k){if(h.indexOf("chronological")>-1||(j.unpack&&g.dataset.output()[0].length>2)){f(g.dataset.output()[0],function(m,l){if(l>0){g.dataset.data.output[0][l]=k[m]||m}})}else{if(j.select&&g.dataset.output()[0].length===2){g.dataset.updateColumn(0,function(m,l){return k[m]||m})}}}}},{"../../core/utils/each":28}],79:[function(c,d,b){var f=c("../../core/utils/each");d.exports=function(h){if(!arguments.length){if(!this.view.attributes.labels||!this.view.attributes.labels.length){return g.call(this)}else{return this.view.attributes.labels}}else{this.view.attributes.labels=(h instanceof Array?h:null);a.call(this);return this}};function a(){var h=this,m=this.labels()||null,k=this.dataset.schema()||{},l=this.dataset.output(),j=this.dataType()||"";if(m){if(j.indexOf("chronological")>-1||(k.unpack&&l[0].length>2)){f(l[0],function(n,o){if(o>0&&m[o-1]){h.dataset.data.output[0][o]=m[o-1]}})}else{f(l,function(o,n){if(n>0&&m[n-1]){h.dataset.data.output[n][0]=m[n-1]}})}}}function g(){var j=this.dataset.schema()||{},k=this.dataset.output(),h=this.dataType()||"",l;if(h.indexOf("chron")>-1||(j.unpack&&k[0].length>2)){l=this.dataset.selectRow(0).slice(1)}else{l=this.dataset.selectColumn(0).slice(1)}return l}},{"../../core/utils/each":28}],80:[function(b,c,a){c.exports=function(d){if(!arguments.length){return this.view.adapter.library}this.view.adapter.library=(d?String(d):null);return this}},{}],81:[function(b,c,a){var g=b("../dataviz"),d=b("../../dataset");var f=b("../../core/utils/each");c.exports=function(j){this.dataset=h.call(this,j);return this};function h(m){var t=this,l={},o,j,q,k,p,r,n;o=t.indexBy()?t.indexBy():g.defaults.indexBy;j=d.defaults.delimeter;q=o.split(".").join(j);k=t.labels()||null;p=t.labelMapping()||null;if(typeof m.result=="number"){r="singular";l={records:"",select:[{path:"result",type:"string",label:"Metric"}]}}if(m.result instanceof Array&&m.result.length>0){if(m.result[0].timeframe&&(typeof m.result[0].value=="number"||m.result[0].value==null)){r="chronological";l={records:"result",select:[{path:q,type:"date"},{path:"value",type:"number"}]}}if(typeof m.result[0].result=="number"){r="categorical";l={records:"result",select:[]};for(var s in m.result[0]){if(m.result[0].hasOwnProperty(s)&&s!=="result"){l.select.push({path:s,type:"string"});break}}l.select.push({path:"result",type:"number"})}if(m.result[0].value instanceof Array){r="cat-chronological";l={records:"result",unpack:{index:{path:q,type:"date"},value:{path:"value -> result",type:"number"}}};for(var s in m.result[0].value[0]){if(m.result[0].value[0].hasOwnProperty(s)&&s!=="result"){l.unpack.label={path:"value -> "+s,type:"string"};break}}}if(typeof m.result[0]=="number"&&typeof m.result.steps!=="undefined"){r="cat-ordinal";l={records:"",unpack:{index:{path:"steps -> event_collection",type:"string"},value:{path:"result -> ",type:"number"}}}}if(typeof m.result[0]=="string"||typeof m.result[0]=="number"){r="nominal";n=new d();n.appendColumn("unique values",[]);f(m.result,function(u,v){n.appendRow(u)})}if(r===void 0){r="extraction";l={records:"result",select:true}}}n=n instanceof d?n:new d(m,l);if(r){t.dataType(r)}return n}},{"../../core/utils/each":28,"../../dataset":35,"../dataviz":53}],82:[function(c,d,a){var j=c("../helpers/getDatasetSchemas"),b=c("../helpers/getDefaultTitle"),f=c("../helpers/getQueryDataType");var g=c("../../dataset"),h=c("./parseRawData");d.exports=function(l){var k=f(l.queries[0]);if(k==="extraction"){this.dataset=j.extraction(l)}else{this.parseRawData(l.data instanceof Array?l.data[0]:l.data)}this.dataType(k);this.view.defaults.title=b.call(this,l);if(!this.title()){this.title(this.view.defaults.title)}return this}},{"../../dataset":35,"../helpers/getDatasetSchemas":56,"../helpers/getDefaultTitle":57,"../helpers/getQueryDataType":58,"./parseRawData":81}],83:[function(b,c,a){var d=b("../dataviz");c.exports=function(){var f;if(this.view._rendered){this.destroy()}if(this.el()){this.el().innerHTML="";f=d.libraries[this.view.loader.library][this.view.loader.chartType];if(f.initialize){f.initialize.apply(this,arguments)}if(f.render){f.render.apply(this,arguments)}this.view._prepared=true}return this}},{"../dataviz":53}],84:[function(b,c,a){c.exports=function(f){if(!arguments.length){return this.view.attributes.sortGroups}this.view.attributes.sortGroups=(f?String(f):null);d.call(this);return this};function d(){var f=this.dataType();if(!this.sortGroups()){return}if((f&&f.indexOf("chronological")>-1)||this.data()[0].length>2){this.dataset.sortColumns(this.sortGroups(),this.dataset.getColumnSum)}else{if(f&&(f.indexOf("cat-")>-1||f.indexOf("categorical")>-1)){this.dataset.sortRows(this.sortGroups(),this.dataset.getRowSum)}}return}},{}],85:[function(b,c,a){c.exports=function(f){if(!arguments.length){return this.view.attributes.sortIntervals}this.view.attributes.sortIntervals=(f?String(f):null);d.call(this);return this};function d(){if(!this.sortIntervals()){return}this.dataset.sortRows(this.sortIntervals());return}},{}],86:[function(b,c,a){c.exports=function(d){if(!arguments.length){return this.view.attributes["stacked"]}this.view.attributes["stacked"]=d?true:false;return this}},{}],87:[function(b,c,a){c.exports=function(d){if(!arguments.length){return this.view.attributes["title"]}this.view.attributes["title"]=(d?String(d):null);return this}},{}],88:[function(b,c,a){c.exports=function(d){if(!arguments.length){return this.view.attributes["width"]}this.view.attributes["width"]=(!isNaN(parseInt(d))?parseInt(d):null);return this}},{}],89:[function(b,c,a){c.exports=function(){if(this.labelMapping()){this.labelMapping(this.labelMapping())}if(this.colorMapping()){this.colorMapping(this.colorMapping())}if(this.sortGroups()){this.sortGroups(this.sortGroups())}if(this.sortIntervals()){this.sortIntervals(this.sortIntervals())}}},{}],90:[function(b,c,a){c.exports=function(f,d){var j=document;var h;var g=j.head||j.getElementsByTagName("head");setTimeout(function(){if("item" in g){if(!g[0]){setTimeout(arguments.callee,25);return}g=g[0]}var k=j.createElement("script"),l=false;k.onload=k.onreadystatechange=function(){if((k.readyState&&k.readyState!=="complete"&&k.readyState!=="loaded")||l){return false}k.onload=k.onreadystatechange=null;l=true;d()};k.src=f;g.insertBefore(k,g.firstChild)},0);if(j.readyState===null&&j.addEventListener){j.readyState="loading";j.addEventListener("DOMContentLoaded",h=function(){j.removeEventListener("DOMContentLoaded",h,false);j.readyState="complete"},false)}}},{}],91:[function(b,c,a){c.exports=function(f,d){var g=document.createElement("link");g.setAttribute("rel","stylesheet");g.type="text/css";g.href=f;d();document.head.appendChild(g)}},{}],92:[function(b,c,a){c.exports=function(k){var d=Number(k),h=d.toPrecision(3),j="",f=["","k","M","B","T"];if(Number(h)==d&&String(d).length<=4){return String(d)}if(d>=1||d<=-1){if(d<0){d=-d;j="-"}return j+g(d,0)}else{return d.toPrecision(3)}function g(l,n){var l=String(l);var m=l.split(".");if(m.length>1){l=m[0];var p=m[1];if(l.length==2&&p.length>0){if(p.length>0){l=l+"."+p.charAt(0)}else{l+="0"}}else{if(l.length==1&&p.length>0){l=l+"."+p.charAt(0);if(p.length>1){l+=p.charAt(1)}else{l+="0"}}}}var o=l.length;if(l.split(".").length>1){o--}if(o<=3){return String(l)+f[n]}else{return g(Number(l)/1000,n+1)}}}},{}],93:[function(b,c,a){(function(d){(function(j){if(typeof define==="function"&&define.amd){define("keen",[],function(){return j()})}if(typeof a==="object"&&typeof c!=="undefined"){c.exports=j()}var h=null;if(typeof window!=="undefined"){h=window}else{if(typeof d!=="undefined"){h=d}else{if(typeof self!=="undefined"){h=self}}}if(h){h.Keen=j()}})(function(){var f=b("./core"),g=b("./core/utils/extend");g(f.prototype,{addEvent:b("./core/lib/addEvent"),addEvents:b("./core/lib/addEvents"),setGlobalProperties:b("./core/lib/setGlobalProperties"),trackExternalLink:b("./core/lib/trackExternalLink"),get:b("./core/lib/get"),post:b("./core/lib/post"),put:b("./core/lib/post"),run:b("./core/lib/run"),draw:b("./dataviz/extensions/draw")});f.Query=b("./core/query");f.Request=b("./core/request");f.Dataset=b("./dataset");f.Dataviz=b("./dataviz");f.Base64=b("./core/utils/base64");f.Spinner=b("spin.js");f.utils={domready:b("domready"),each:b("./core/utils/each"),extend:g,parseParams:b("./core/utils/parseParams"),prettyNumber:b("./dataviz/utils/prettyNumber")};b("./dataviz/adapters/keen-io")();if(f.loaded){setTimeout(function(){f.utils.domready(function(){f.emit("ready")})},0)}b("./core/async")();c.exports=f;return f})}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"./core":16,"./core/async":8,"./core/lib/addEvent":17,"./core/lib/addEvents":18,"./core/lib/get":19,"./core/lib/post":20,"./core/lib/run":21,"./core/lib/setGlobalProperties":22,"./core/lib/trackExternalLink":23,"./core/query":24,"./core/request":25,"./core/utils/base64":26,"./core/utils/each":28,"./core/utils/extend":30,"./core/utils/parseParams":32,"./dataset":35,"./dataviz":59,"./dataviz/adapters/c3":49,"./dataviz/adapters/chartjs":50,"./dataviz/adapters/google":51,"./dataviz/adapters/keen-io":52,"./dataviz/extensions/draw":54,"./dataviz/utils/prettyNumber":92,domready:2,"spin.js":4}]},{},[93]);
/*1.0*/
// keen.min.js is required in application-jquery.js

/**
 * Track JS event to Keen.io.
 * Note: <key> must be a string, but <message> can be JSON.
 * Note: This is behind a feature flipper. If disabled, all public methods return false.
 *
 * Example usage: JsLogger.[level](<key>, <message>);
 *
 * JsLogger.chaos('test-file.js:functionName', 'Optional message');
 * JsLogger.warn('test-file.js:functionName', 'Optional message');
 * JsLogger.info('test-file.js:functionName', 'Optional message');
 * JsLogger.error('test-file.js:functionName', 'Optional message');
 * JsLogger.debug('test-file.js:functionName', 'Optional message');
 */


var JsLogger = (function() {
  var LEVELS = { DEBUG: 0, INFO: 1, WARN: 3, ERROR: 5, CHAOS: 10 };
  var client = new Keen({
    projectId: "5613f50259949a4d7fd36f83",
    writeKey: "06de9e1a84e29000bd7f190f4e576f9f7016002a10e7b047905ceb209183e6abcba5fe4fdd203a7e3924a56400fca0588473cdc2b62d6b0b4c468aae0458342d59094580e3e2fa9607d380e22d5030462a5260c685607502d224f8fe9b255d378fb1f22506adcf50008df914d39b117d"
  });
  var queue = [];
  var timer; // used for debouncing in `log`
  var delay = 1000; // ms

  // Debounced means of sending data points to Keen. Will queue quickly firing
  // events and send data as a batch.
  function log(level, key, message) {
    if(typeof JsLoggerEnabled !== 'undefined' && JsLoggerEnabled) {
      var payload = {
        level: level,
        keen: { timestamp: new Date().toISOString() },
        key: key || 'no.key',
        message: message || null,
        location: (window && window.location) ? window.location.href : null
      };

      // Add to queue and debounce request to Keen
      queue.push(payload);
      clearTimeout(timer);
      timer = setTimeout(sendData, delay);

      return payload;
    }
    else {
      return false;
    }
  }

  // Send to Keen
  function sendData() {
    client.addEvents({ 'community-js': queue });
    queue = []; // reset
  }

  // Different levels of logging
  function chaos(key, message) { return log(LEVELS.CHAOS, key, message); }
  function error(key, message) { return log(LEVELS.ERROR, key, message); }
  function warn(key, message) { return log(LEVELS.WARN, key, message); }
  function info(key, message) { return log(LEVELS.INFO, key, message); }
  function debug(key, message) { return log(LEVELS.DEBUG, key, message); }

  // Expose public methods
  return {
    chaos: chaos,
    error: error,
    warn: warn,
    info: info,
    debug: debug
  };
})();

/**
 * Track CSS event to Keen.io.
 * Note: <selector> must be a string, <used> and <valid> are a 0 or 1 boolean
 *
 * Example usage: CssLogger.[level](<selector>, <used>, <stylesheet>, <valid>);
 *
 * CssLogger.chaos('.selector h1', 1, );
 * CssLogger.warn('test-file.js:functionName', 'Optional message');
 * CssLogger.info('test-file.js:functionName', 'Optional message');
 * CssLogger.error('test-file.js:functionName', 'Optional message');
 * CSsLogger.debug('test-file.js:functionName', 'Optional message');
 */

var CssLogger = (function() {
  var LEVELS = { DEBUG: 0, INFO: 1, WARN: 3, ERROR: 5, CHAOS: 10 };
  var client = new Keen({
    projectId: "5613f50259949a4d7fd36f83",
    writeKey: "06de9e1a84e29000bd7f190f4e576f9f7016002a10e7b047905ceb209183e6abcba5fe4fdd203a7e3924a56400fca0588473cdc2b62d6b0b4c468aae0458342d59094580e3e2fa9607d380e22d5030462a5260c685607502d224f8fe9b255d378fb1f22506adcf50008df914d39b117d"
  });
  var queue = [];
  var timer; // used for debouncing in `log`
  var delay = 1000; // ms

  // Debounced means of sending data points to Keen. Will queue quickly firing
  // events and send data as a batch.
  function log(level, selector, used, stylesheet, valid, fromAjax, ajaxUrl) {
    var payload = {
      level: level,
      keen: { timestamp: new Date().toISOString() },
      key: selector || 'no.key',
      used: used || 0,
      stylesheet: stylesheet || 'no_stylesheet',
      valid: valid || 1,
      fromAjax: fromAjax || 0,
      ajaxUrl: ajaxUrl || '',
      location: (window && window.location) ? window.location.href : null
    };

    // Add to queue and debounce request to Keen
    queue.push(payload);
    clearTimeout(timer);
    timer = setTimeout(sendData, delay);

    return payload;
  }

  // Send to Keen
  function sendData() {
    client.addEvents({ 'community-css': queue });
    queue = []; // reset
  }

  // Different levels of logging
  function chaos(selector, used, stylesheet, valid, fromAjax, ajaxUrl) { return log(LEVELS.CHAOS, selector, used, stylesheet, valid, fromAjax, ajaxUrl); }
  function error(selector, used, stylesheet, valid, fromAjax, ajaxUrl) { return log(LEVELS.ERROR, selector, used, stylesheet, valid, fromAjax, ajaxUrl); }
  function warn(selector, used, stylesheet, valid, fromAjax, ajaxUrl) { return log(LEVELS.WARN, selector, used, stylesheet, valid, fromAjax, ajaxUrl); }
  function info(selector, used, stylesheet, valid, fromAjax, ajaxUrl) { return log(LEVELS.INFO, selector, used, stylesheet, valid, fromAjax, ajaxUrl); }
  function debug(selector, used, stylesheet, valid, fromAjax, ajaxUrl) { return log(LEVELS.DEBUG, selector, used, stylesheet, valid, fromAjax, ajaxUrl); }

  // Expose public methods
  return {
    chaos: chaos,
    error: error,
    warn: warn,
    info: info,
    debug: debug
  };
})();
/*1.0*/
(function($) {
  window.Browser = _.extend({
    IE6:false,
    IE7:false,
    IE8:false,
    hasStylesheet: function (stylesheet) {
      var document_stylesheets;
      var count;
      var sheet;
      document_stylesheets = document.styleSheets;
      if (!document_stylesheets){
        return false;
      }
      count = document_stylesheets.length;
      while(count){
        --count;
        sheet = document_stylesheets[count];
        if(sheet.href){
          if(sheet.href.indexOf(stylesheet) > 0){
            return true;
          }
        }
      }
      return false;
    }
  }, window.Browser);

  window.User = window.User || {};
  window.UserPermissions = window.UserPermissions || {};

  window.SpiceworksApplication = window.SpiceworksApplication || {};

  window.Application = _.extend({
    runMode:'production',
    narrowLayout: function(){
      $(document.body).addClass('narrow');
      Application.narrow = true;
    },
    updatePageUri: function(hard_link){
      var my_href = location.href.toString(), matches = null;
      matches = my_href.match(/#(.+)/);
      if (matches){
        my_href = my_href.replace(matches[0], hard_link);
        location.href = my_href;
      } else {
        location.href += hard_link;
      }
    },
    inDevelopment: function() {
      return this.runMode == 'development';
    },
    inProduction: function() {
      return this.runMode == 'production';
    },
    // Simple refresh, just reset the iframe src to the same thing (will load another random ad with the same context)
    // Add &jsr=1 if needed (javascript refresh!)
    refreshAd: function () {
      var frame = $('#sidebar_box_frame') || $('#adframe');
      if (frame && frame.length) {
        var src = frame[0].src.toString();
        if (!src.match(/jsr\=1/)) {
          src = src + "&jsr=1";
        }
        frame[0].src = src;
      } else if (typeof(gekko) != 'undefined') {
        if (gekko.refresh) {
          gekko.refresh();
        }
      }
    }
  }, window.Application );

  window.CurrentUser = _.extend({
    permissionClass:'guest',
    guest: function(){
      return this.permissionClass == 'guest';
    },
    unverified: function(){
      return this.permissionClass == 'unverified';
    },
    anonymous: function(){
      return this.permissionClass == 'anonymous';
    },
    verified: function(){
      return this.permissionClass == 'verified';
    },
    employee: function() {
      return User.kind === 'employee' || User.kind === 'admin' || User.kind === 'spiceuser';
    }
  }, window.CurrentUser );

})(jQuery);
/*1.0*/
(function($) {
  $(document).ready(function() {
    var $notice = $("[data-unverified-notice]");
    if($notice.length > 0) {
      $notice.each(function() {
        $(this).data("noticeHandler", new UnverifiedNotice($(this)));
      });
    }
  });

  TopicType = function($selectField) {
    this.init($selectField);
  }

  TopicType.prototype = {
    init: function($selectField) {
      this.$topicTypeSelect = $selectField;
      this.$topicTypeData = $("[data-topic-type='boombox']");
      this.setupTopicTypeData();
    },
    setupTopicTypeData: function() {
      if(this.$topicTypeSelect.length > 0) {
        var _this = this;
        this.$topicTypeSelect.change(function() {
          if(_this.$topicTypeSelect.val() === "boombox") {
            _this.$topicTypeData.slideDown();
          }
          else {
            _this.$topicTypeData.slideUp();
          }
        });
      }
    },
    checkTopicTypeData: function() {
      if(this.$topicTypeData.length > 0) {
        this.clearErrors();
        if(this.$topicTypeSelect.val() === "boombox" && this.$topicTypeData.find("input[name='boombox_quiz_id']").val().length <= 0) {
          this.$topicTypeData.addClass("input-error");
          this.$topicTypeData.append("<span class='help-inline'>Quiz ID can't be blank</span>");
          return false;
        }
      }
      return true;
    },
    clearErrors: function() {
      this.$topicTypeData.removeClass("input-error");
      this.$topicTypeData.find(".help-inline").remove();
    }
  }
})(jQuery);
/*1.0*/
/* ======================================================================== */
/*                                                                          */
/*   Topic data validation                                                  */
/*                                                                          */
/* ======================================================================== */


window.TopicValidation = function(tabView, groupTagging) {
  this.init(tabView, groupTagging);
};

TopicValidation.prototype = {
  init: function(tabView, groupTagging) {
    this.topicTabView = tabView;
    this.groupTagging = groupTagging;
    this.topicTypeControl = new TopicType($("[data-field='topic-type']"));

    this.$subject = $("[data-post-subject]");
    this.$subjectStatus = $("[data-subject-error]");

    this.$postText = $('[data-post-text]');
    this.$textStatus = $("[data-text-error]");

    this.$hasPoll = $("[data-has-poll]");
    this.$pollStatus = $("[data-poll-error]");

    this.$groupTagging = $("[data-topic-group-tagging]");
    this.$groupStatus = $("[data-group-error]");

    this.$submitBttn = $("[data-topic-submit]");
    this.$submitBttn.prepend("<span class='disabled-overlay'></span>");

    this.subjectValid = !this.$subject.length || this.$subject.val().length;
    this.textValid = this.$postText.val().length;
    this.topicTypeValid = this.validateTopicType(false);
    this.pollValid = this.validatePoll(false);
    this.groupValid = this.validateGroup(false);

    this.bindValidationEvents();
  },

  bindValidationEvents: function() {
    var _this = this,
        debounceTime = 500;

    //--------------- Validate subject events ---------------//

    this.$subject.on('keyup change', _.debounce(function(event) {
      _this.validateSubject(true);
    }, debounceTime));

    //--------------- Validate text events ---------------//

    if($UI.useMobile){
      this.$postText.on('keyup change', _.debounce(function(){
        _this.validateText(true);
      }, debounceTime));
    }
    else {
      $(document).on('editor_ready.wysihtml5', function() {
        this.$postText = $('[data-post-text]');

        var $editor = this.$postText.data('wysihtml5').editor;
        $editor.on('change', _.debounce(function() {
          _this.validateText(true);
        }, debounceTime));

        // this looks weird but it's the documented way to go about it
        $('.wysihtml5-sandbox').contents().find('body').on('keyup',  _.debounce(function() {
          _this.validateText(true);
        }, debounceTime));
      });
    }

    //--------------- Validate group events ---------------//

    this.$groupTagging.on('change', function(){
      _this.validateGroup(true);
    });

    //--------------- Validate topic types events ---------------//

    $("[data-field='topic-type'], [data-field='topic-type-data']").change(function() {
      _this.validateTopicType(true);
    });

    //--------------- Validate poll events ---------------//

    $('.topic-type-tabs a').click(function (e) {
      _this.validatePoll(false);
    });

    $(document).on('focus', ".poll-choice-add:last-child input[type='text']", _.once(function () {
      $(document).on('change keyup', ".poll-choice-add input[type='text']", _.debounce(function(){
        _this.validatePoll(true);
      }, debounceTime));
    }));

    //--------------- Validate everything ---------------//

    $(document).ready(function() {
      $("[data-form-submit-wrapper], [data-topic-submit] .disabled-overlay").hover(_.throttle(function() {
        _this.validateAll();
      }, 3000, {trailing: false}));
    });
  },

  isNotBlank: function(string) {
    return (typeof(string) === "string" && string && string.trim().length > 0);
  },

  validateAll: function() {
    this.subjectValid = this.validateSubject(true);
    this.textValid = this.validateText(true);
    this.topicTypeValid = this.validateTopicType(true);
    this.pollValid = this.validatePoll(true);
    this.groupValid = this.validateGroup(true);

    var $firstError = $(".topic-form-error:visible:first");
    if($firstError.length) {
      $('html, body').animate({
          scrollTop: $firstError.offset().top - 60
      }, 500);
    }
  },

  validateSubject: function(showErrors) {
    if(!this.$subject.length) {
      var error = false;
    }
    else {
      var value = this.$subject.val(),
          lettersOnly = value.replace(/[^a-zA-Z]/g, ""),
          message = "",
          errors = false;

      if (value.length && value.length < 3) {
        message += 'Subject must be at least 3 characters.';
        errors = true;
      }
      if(value.length > 80) {
        message += 'Subject must be fewer than 80 characters.';
        errors = true;
      }
      if(!this.isNotBlank(value)) {
        message += ' Subject cannot be blank.';
        errors = true;
      }
      if(this.isNotBlank(lettersOnly) && lettersOnly === lettersOnly.toUpperCase()) {
        message += " Using all caps is considered bad form. For the best results, please try posting in normal case.";
        errors = true;
      }
    }

    if(this.topicTabView) {
      this.topicTabView.toggleSubjectTopicTip(value.trim().split(' ').length);
    }

    this.subjectValid = !errors;
    this.toggleErrorsAndValidate(this.$subjectStatus, showErrors, errors, message);
    return this.subjectValid;
  },

  validateText: function(showErrors) {
    var message = "",
        errors = false,
        text = "",
        length = 0;

    if ($UI.useMobile) {
      text = this.$postText.val();
      length = 3;
    }
    else {
      text = this.$postText.data('wysihtml5').editor.getValue()
      length = 10; // count the hidden <p> tag in the wysiwyg
    }

    if (text === "") {
      message += "Post text cannot be blank.";
      errors = true;
    }
    if (text.length < length) {
      message += " Post text must contain at least 3 characters.";
      errors = true;
    }

    if (!$UI.useMobile && this.topicTabView) {
      this.topicTabView.toggleBodyTopicTip(text.trim().split(' ').length);
    }

    this.textValid = !errors;
    this.toggleErrorsAndValidate(this.$textStatus, showErrors, errors, message);
    return this.textValid;
  },

  validatePoll: function(showErrors) {
    if (this.$hasPoll.val() !== "true"){
      var error = false;
    }
    else {
      var _this = this;
      var message = "",
          errors = false,
          blankInputCount = $(".poll-choice-add input[type='text']").filter(function() {
            return !_this.isNotBlank($(this).val());
          }).length;

      if(blankInputCount) {
        message += ' Poll choices cannot be blank.';
        errors = true;
      }
    }

    this.pollValid = !errors;
    this.toggleErrorsAndValidate(this.$pollStatus, showErrors, errors, message);
    return this.pollValid;
  },

  validateGroup: function(showErrors){
    var message = this.groupTagging.groupErrors(),
        errors = message.length;

    this.groupValid = !errors;
    this.toggleErrorsAndValidate(this.$groupStatus, showErrors, errors, message);
    return this.groupValid;
  },

  toggleErrorsAndValidate: function($status, showErrors, errors, message) {
    if (showErrors && errors) {
      $status.html(message).show();
    }
    if (!errors){
      $status.hide().empty();
    }
    this.validateForm();
  },

  validateTopicType: function() {
    this.topicTypeValid = this.topicTypeControl.checkTopicTypeData();
    return this.topicTypeValid;
  },

  formValid: function() {
    return this.subjectValid && this.textValid && this.pollValid && this.groupValid && this.topicTypeValid;
  },

  validateForm: function() {
    this.setButtonState(this.formValid());
  },

  setButtonState: function(enabled) {
    this.$submitBttn.prop('disabled', !enabled);
  },
};
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["discussions-form/topic_tips_template"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div class="sui-alert sui-alert--info">\n  <div class="sui-alert_body">\n    <div class="sui-alert_title">',(''+ tipTitle ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'</div>\n    <div class="sui-alert_text">\n      <div class="topic-tips">\n        ');  for(var i=0; i < tipsList.length; i++) { ; __p.push('\n          <div class="topic-tip">\n            <div class="topic-tip-status ',  tipsList[i]['checked'] ? 'checked' : '' ,'" data-status-id="',(''+ i ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'">\n              <div class="checked-outline"></div>\n              <div class="checkmark-stem"></div>\n              <div class="checkmark-kick"></div>\n            </div>\n            <div class="topic-tip-content">\n              <div class="topic-tip-header" data-header-id="',(''+ i ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'">\n                ',(''+ tipsList[i]["header"] ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'\n              </div>\n\n              <div class="topic-tip-body" data-body-id="',(''+ i ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'">\n                ',(''+ tipsList[i]["body"] ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'\n              </div>\n            </div>\n          </div>\n        ');  } ; __p.push('\n      </div>\n    </div>\n  </div>\n</div>\n');}return __p.join('');};
}).call(this);
/*1.0*/


/* ======================================================================== */
/*                                                                          */
/*   Handle topic tips display                                              */
/*                                                                          */
/* ======================================================================== */


window.TopicTips = function(currentTab) {
  this.init(currentTab);
};

TopicTips.prototype = {
  init: function(currentTab) {
    this.$wrapper = $("[data-target='tips-wrapper']");
    if(this.$wrapper.length) {
      this.currentTab = currentTab;
      this.values = {};
      this.setTips();
      for(var i=0; i < this.values.tipsList.length; i++) {
        this.values.tipsList[i]["checked"] = false;
      }
      this.tipsTemplate = JST['discussions-form/topic_tips_template'];
      this.renderTemplate();
    }
  },

  setTips: function() {
    switch(this.currentTab) {
      case "Question":
        this.values.tipsList = [
          { "header": "Start with a good question title", "body": "Don’t just type “Help!”, give important details right away so experts can quickly find your question." },
          { "header": "Be descriptive", "body": "The more information you can give, especially technical details, the better answers you can get from the Community." }
        ];
        break;
      case "Discussion":
        this.values.tipsList = [
          { "header": "Start with a good title", "body": "Your title helps people find your post and know what it's about." },
          { "header": "Share your thought", "body": "Instead of just linking out, give some context to your post." }
        ];
        break;
      case "Poll":
        this.values.tipsList = [
          { "header": "Start with a good title", "body": "Your title helps people find your poll and know what it's about." },
          { "header": "Add context", "body": "Tell the community why you're making a poll." }
        ];
        break;
      default:
        this.values.tipsList = [];
    }
    this.values.tipTitle = this.currentTab + " tips";
    this.values.tipsList.push({ "header": "Don't forget to tag!", "body": "Tagging people notifies them and tagging products help readers learn more about the tech you're talking about." });
  },

  renderTemplate: function() {
    this.$wrapper.html(this.tipsTemplate(this.values));
  },

  changeTipsTab: function(newTab) {
    if(this.values) {
      this.currentTab = newTab;
      this.setTips();
      this.renderTemplate();
    }
  },

  changeTipsChecked: function(index, value) {
    if(this.values) {
      if(this.values.tipsList[index]) {
        this.values.tipsList[index]["checked"] = value;
      }
      this.renderTemplate();
    }
  },
};
/*1.0*/


/* ======================================================================== */
/*                                                                          */
/*   Handle changing of topit type tab                                      */
/*                                                                          */
/* ======================================================================== */


window.TopicTabView = function(currentTab) {
  this.init(currentTab);
};

TopicTabView.prototype = {
  init: function(currentTab) {
    this.currentTab = currentTab;
    this.topicTips = new TopicTips(currentTab);

    this.$subject = $("[data-post-subject]");
    this.$needAnswer = $("[data-need-answer]");
    this.$hasPoll = $("[data-has-poll]");
    this.$pollLocked = $("[data-poll-locked]");
    this.$postForm = $("[data-new-post-form]");
    this.$pollControls = $("[data-poll-controls]");

    var _this = this;
    $(document).on("dynamicTagListChanged", function() {
      _this.toggleTaggingTopicTip($('.tag-editor li').length > 1);
    });

    $('.topic-type-tabs a').click(function (e) {
      _this.changeTab($(this).text());
    });
  },

  updateTabContents: function() {
    this.updateNeedsAnswer();
    this.updatePollForm();
    this.updatePlaceHolderText();
    this.updateTopicTips();
  },

  updateNeedsAnswer: function() {
    if(this.currentTab === "Question"){
      this.$needAnswer.val("yes");
    } else {
      this.$needAnswer.val("no");
    }
  },

  updatePollForm: function() {
    if(this.currentTab === "Poll"){
      if(this.$pollLocked.length){
        this.$postForm.hide();
        this.$pollLocked.show();
      } else {
        this.$pollControls.show();
        this.$hasPoll.val("true");
      }
    } else {
      this.$hasPoll.val("false");
      this.$pollControls.hide();
      this.$postForm.show();
      this.$pollLocked.hide();
    }
  },

  updatePlaceHolderText: function() {
    var placeHolderValue = "";
    switch(this.currentTab) {
      case "Question":
        var placeHolderValue = "What is your question?";
        break;
      case "Discussion":
        var placeHolderValue = "Give your discussion a title";
        break;
      case "Poll":
        var placeHolderValue = "Give your poll a title";
        break;
    }
    this.$subject.attr("placeholder", placeHolderValue);
  },

  updateTopicTips: function() {
    this.topicTips.changeTipsTab(this.currentTab);
  },

  changeTab: function(newTab) {
    this.currentTab = newTab;
    this.updateTabContents();
  },

  toggleSubjectTopicTip: function(wordsCount) {
    this.topicTips.changeTipsChecked(0, wordsCount >= 10);
  },

  toggleBodyTopicTip: function(wordsCount) {
    var cutoff = 100;

    switch(this.currentTab) {
      case "Discussion":
        var cutoff = 50;
        break;
      case "Poll":
        var cutoff = 25;
        break;
    }
    this.topicTips.changeTipsChecked(1, wordsCount >= cutoff);
  },

  toggleTaggingTopicTip: function(hasTags) {
    this.topicTips.changeTipsChecked(2, hasTags);
  },
};
/*1.0*/
/* ======================================================================== */
/*                                                                          */
/*   Handle group tagging selection and errors                              */
/*                                                                          */
/* ======================================================================== */


window.TopicGroupTagging = function() {
  this.init();
};

TopicGroupTagging.prototype = {
  init: function() {
    this.$groupTagging = $("[data-topic-group-tagging]");

    if(this.$groupTagging.length) {
      $.get("/topic/group_autocomplete")
      .done( $.proxy( this.processTaggingGroups, this ) );
    }
  },

  processTaggingGroups: function(groupsJson) {
    var groupings = {};
    for(var i=0; i < groupsJson.length; i++) {
      var groupType = groupsJson[i].type_for_tagging;
      groupings[groupType] = groupings[groupType] || [];
      groupings[groupType].push(groupsJson[i]);
    }

    var groupingPriority = ["Special", "Technology", "Industry", "Beta", "SpiceCorps", "Location", "User Group", "Other"];
    this.taggingGroups = [];
    for(var i=0; i < groupingPriority.length; i++) {
      var groupsForType = groupings[groupingPriority[i]];
      if(groupsForType && groupsForType.length) {
        this.taggingGroups.push({
          text: groupingPriority[i],
          children: groupsForType.map(function (group) {
            group.text = group.name;
            return group;
          })
        });
      }
    }

    this.renderGroupsSelect();
  },

  renderGroupsSelect: function() {
    this.$groupTagging.select2({
      data: this.taggingGroups,
      multiple: this.$groupTagging.data('can-multi-tag'),
      maximumSelectionSize: 3,
      formatSelection: function(group) {
        if(group.private) {
          return group.text + "<span class='private-group'> (Private)</span>";
        }
        else {
          return group.text;
        }
      },
      formatResult: function(group) {
        if(group.private) {
          return group.text + "<span class='private-group'> - Private</span>";
        }
        else {
          return group.text;
        }
      },
      escapeMarkup: function(m) { return m; }
    });

    if(this.$groupTagging.data('default-group-id')) {
      this.$groupTagging.select2("val", this.$groupTagging.data('default-group-id'));
    }
  },

  groupErrors: function() {
    if (this.$groupTagging.length && !this.$groupTagging.val().length){
      return "A topic must have at least 1 group.";
    }

    var taggedGroups = this.$groupTagging.select2("data");

    if(taggedGroups.length > 1) {
      for(var i=0; i < taggedGroups.length; i++) {
        if(taggedGroups[i].private) {
          return "Sorry, you can't multi-tag to a private group.";
        }
      }
    }

    return "";
  },
};
/*1.0*/





+(function($) {
  'use strict';

  window.AskQuestion = {
    initialize: function(forum_id) {
      JsLogger.info('ask_question.js.erb:initialize');
      this.forumID = forum_id;
      this.subject = "";
      this.resultsTimerOn = false;
      this.$subject = $("[data-post-subject]");
      this.$searchResults = $("[data-search-results]");

      this.setupSearchResults();
      this.groupTagging = new TopicGroupTagging();

      if($(".topic-type-tabs").length) {
        this.topicTabView = new TopicTabView($('.topic-type-tabs .active a').text());
      }
      else {
        this.topicTabView = false;
      }
      this.validator = new TopicValidation(this.topicTabView, this.groupTagging);
    },

    setupSearchResults: function() {
      var _this = this;

      if(this.$searchResults.length) {
        this.$subject.keyup(function(e) {
          // if space
          if(e.keyCode === 32) {
            AskQuestion.findResults();
          }
          // set timeout to check if they stop typing
          _this.lastKeyPress = new Date().getTime();
          if(_this.resultsTimerOn) {
            clearTimeout(_this.resultsTimer);
          }
          else {
            _this.resultsTimerOn = true;
          }
          AskQuestion.setResultsTimer();

          return undefined;
        });

        window.setTimeout(function() {
          _this.$subject.focus();
        }, 100);

        // when tab is pressed, focus the rich text editor!
        this.$subject.keydown(function(event) {
          if(event.keyCode === 9) {
            event.preventDefault();
            RichTextEditor.focus('post_text');
            _this.$searchResults.hide();
            jQuery("[data-search-result-topics]").empty();
          }
        });
      }

      $(document).mouseup(function (e){
        if (!_this.$searchResults.is(e.target) // if the target of the click isn't the container...
          && !_this.$searchResults.has(e.target).length) // ... nor a descendant of the container
        {
          _this.$searchResults.hide();
          jQuery("[data-search-result-topics]").empty();
        }
      });
    },

    findResults: function() {
      var _this = this;
      if(this.$subject.val() != this.subject) {
        this.subject = this.$subject.val();
        var url = "/topic/find_results_for_subject?question=" + this.subject + "&forum_id=" + this.forumID;
        $.ajax({
          url: url,
          success: function(data) {
            if (data.num_topics && _this.$subject.is(':focus')){
              $("[data-search-result-topics]").html(data.partial);
              $("[data-search-results]").fadeIn( 500 )
            }
            else {
              $("[data-search-results]").hide();
            }
          }
        });
      }
    },

    setResultsTimer: function() {
      var _this = this;
      this.resultsTimer = setTimeout(function() {
        var currentTime = new Date().getTime();
        if(currentTime - _this.lastKeyPress > 250) {
          AskQuestion.findResults();
        }
        AskQuestion.setResultsTimer();
      }, 1000);
    },
  };

  if( window.AskQuestionSetup ) {
    var setup = window.AskQuestionSetup;
    AskQuestion.initialize( setup.formIsOpen, setup.forum_id );
  }

})(window.jQuery);
/*1.0*/
(function($) {

  $(document).on('ready', function() {

    /////////////////////
    // Navbar Init
    var navConfig = $('[data-menu-config="suiNavbarConfig"]');

    if( navConfig.length ) {
      $UI.Navbar.create().render( JSON.parse( navConfig.text() ) );
    }
    /////////////////////
  });

})(jQuery);
/*1.0*/

var SPICE = window.SPICE || {};

(function($) {

  $(document).on('ready', function() {

    if( window.jstz && window.Cookie ) {
      var timezone = jstz.determine().name();
      Cookie.set('timezone_name', timezone);
    }

    jQuery('body').on('focus', '[data-init="datepicker"]', function(){
      jQuery(this).datepicker();
    })

  });

})(jQuery);

!function($) {
  $(document).on("spiced.spicebutton.sui", '.votable[data-toggle="spicebttn"]', function(event, btn) {
      JsLogger.info('init.js:spiced.spicebutton.sui handler');
      var httpMethod =  btn.options.spicedstate == SpicedState.unspiced ? "DELETE" : "POST",
          url = ["/votes", btn.options.spiceable_class, btn.options.spiceable_id].join('/');
      $.ajax(url, {type: httpMethod, data: btn.options});
    }).on("count_click.spicebutton.sui", '.votable[data-toggle="spicebttn"]', function(event, btn) {
      JsLogger.info('init.js:count_click.spicebutton.sui handler');
      var url = ["/votes", btn.options.spiceable_class, btn.options.spiceable_id].join('/');
      $.get(url, function(data) { $(data).modal(); });
    });
}(jQuery);

jQuery( function($) {
  $('[data-toggle="followbttn"]').each(function() {
    // being used on Recommended Groups card on /start page
    var $this = $(this),
        klass = $this.data("followableClass"),
        id = $this.data("followableId");
    if(User.following && _(User.following[klass]).contains(id)) {
      $this.data("followbutton").setOptions({following: true});
    }
  });

  /* Clear notification unread count on navbar 'read' message */
  $(document).on( 'community_notifications:read', '[data-navbar="global"]', function() {
    GoogleAnalytics.trackEvent('Notifications', 'Unread Opened');
  });
  $('nav.navbar .community-notifications a').on( 'click', function() {
    GoogleAnalytics.trackEvent('Notifications', 'Opened');
  });
});

// Mix underscore.string functions into underscore namespace so
// that we can use _.method instead of _.str.method
_.mixin(_.str.exports());
/*1.0*/
// Moved from spiceworks.js

var Cookie = {
  get: function( name ){
    var nameEQ = escape(name) + "=", ca = document.cookie.split(';');
    for (var i = 0, c; i < ca.length; i++) {
      c = ca[i];
      while (c.charAt(0) == ' ') { c = c.substring(1, c.length); }
      if (c.indexOf(nameEQ) === 0) { return c.substring(nameEQ.length, c.length); }
    }
    return null;
  },
  set: function( name, value, options ){
    options = (options || {});
    if ( options.expiresInOneYear ){
      var today = new Date();
      today.setFullYear(today.getFullYear()+1, today.getMonth(), today.getDay());
      options.expires = today;
    }
    var curCookie = escape(name) + "=" + escape(value) +
      ((options.expires) ? "; expires=" + options.expires.toGMTString() : "") +
      ((options.path)    ? "; path="    + options.path : "") +
      ((options.domain)  ? "; domain="  + options.domain : "") +
      ((options.secure)  ? "; secure" : "");
    document.cookie = curCookie;
  },
  removeCookie: function ( key, options ) {
    options = (options || {});
    var date = new Date();
    date.setTime(date.getTime()-(1*24*60*60*1000));
    options.expires = date;
    this.set(key, '', options);
  },
  hasCookie: function( name ){
    return document.cookie.indexOf( escape(name) ) > -1;
  },
  checkSupport: function(){
    return this.hasCookie('compatibility_test');
  }
};
/*1.0*/
var AdHelper = {
  checkResolutionAndRenderAds: function(){
    var screenWidth = screen.width;
    var resolution = 'normal';
    if (screenWidth && parseInt(screenWidth, 10) < 1200){
      resolution = 'narrow';
      Application.narrowLayout();
    }

    Cookie.set('screen_resolution', resolution);
  }
};

/* Manage the ad refreshing for the app
 * Reload when user comes back to the app from another tab/application
 * Watches for window focus to do the reloading.
 * (Wrapped to keep this all out of the global NS)
 */
(function () {
  var timeout = null,
  allowSwap = false,
  swapDelay = 3000, // 3 Seconds before swapping
  showAtLeast = 60000; // 60 Seconds per ad (at least)

  // Set Allow Swap to true after some time.
  function startCountdownToSwap() {
    allowSwap = false;
    setTimeout(doAllowSwap, showAtLeast);
  }
  function doAllowSwap() {
    allowSwap = true;
  }

  function onTabFocus () {
    clearTimeout(timeout);
    timeout = setTimeout(function () {
      if (allowSwap) {
        startCountdownToSwap();
        Application.refreshAd();
      }
    }, swapDelay);
  }

  // if we leave, just clear the timeout so we don't reload
  function onTabBlur () {
    clearTimeout(timeout);
  }

  jQuery(window).bind('focus', onTabFocus);
  jQuery(window).bind('blur', onTabBlur);
  startCountdownToSwap();

  // Duplicate old in-page call in engines/discussions/app/views/topic/sidebar/_generic.html.erb
  if( window.AdHelperConfig && window.AdHelperConfig.checkResolutionAndRenderAds ) {
    AdHelper.checkResolutionAndRenderAds();
  }
})();
/*1.0*/
/**
*	@name							Elastic
*	@descripton						Elastic is jQuery plugin that grow and shrink your textareas automatically
*	@version						1.6.11
*	@requires						jQuery 1.2.6+
*
*	@author							Jan Jarfalk
*	@author-email					jan.jarfalk@unwrongest.com
*	@author-website					http://www.unwrongest.com
*
*	@licence						MIT License - http://www.opensource.org/licenses/mit-license.php
*/


(function($){ 
	jQuery.fn.extend({  
		elastic: function() {
		
			//	We will create a div clone of the textarea
			//	by copying these attributes from the textarea to the div.
			var mimics = [
				'paddingTop',
				'paddingRight',
				'paddingBottom',
				'paddingLeft',
				'fontSize',
				'lineHeight',
				'fontFamily',
				'width',
				'fontWeight',
				'border-top-width',
				'border-right-width',
				'border-bottom-width',
				'border-left-width',
				'borderTopStyle',
				'borderTopColor',
				'borderRightStyle',
				'borderRightColor',
				'borderBottomStyle',
				'borderBottomColor',
				'borderLeftStyle',
				'borderLeftColor'
				];
			
			return this.each( function() {

				// Elastic only works on textareas
				if ( this.type !== 'textarea' ) {
					return false;
				}
					
			var $textarea	= jQuery(this),
				$twin		= jQuery('<div />').css({
					'position'		: 'absolute',
					'display'		: 'none',
					'word-wrap'		: 'break-word',
					'white-space'	:'pre-wrap'
				}),
				lineHeight	= parseInt($textarea.css('line-height'),10) || parseInt($textarea.css('font-size'),'10'),
				minheight	= parseInt($textarea.css('height'),10) || lineHeight*3,
				maxheight	= parseInt($textarea.css('max-height'),10) || Number.MAX_VALUE,
				goalheight	= 0;
				
				// Opera returns max-height of -1 if not set
				if (maxheight < 0) { maxheight = Number.MAX_VALUE; }
					
				// Append the twin to the DOM
				// We are going to meassure the height of this, not the textarea.
				$twin.appendTo($textarea.parent());
				
				// Copy the essential styles (mimics) from the textarea to the twin
				var i = mimics.length;
				while(i--){
					$twin.css(mimics[i].toString(),$textarea.css(mimics[i].toString()));
				}
				
				// Updates the width of the twin. (solution for textareas with widths in percent)
				function setTwinWidth(){
					var curatedWidth = Math.floor(parseInt($textarea.width(),10));
					if($twin.width() !== curatedWidth){
						$twin.css({'width': curatedWidth + 'px'});
						
						// Update height of textarea
						update(true);
					}
				}
				
				// Sets a given height and overflow state on the textarea
				function setHeightAndOverflow(height, overflow){
				
					var curratedHeight = Math.floor(parseInt(height,10));
					if($textarea.height() !== curratedHeight){
						$textarea.css({'height': curratedHeight + 'px','overflow':overflow});
					}
				}
				
				// This function will update the height of the textarea if necessary 
				function update(forced) {
					
					// Get curated content from the textarea.
					var textareaContent = $textarea.val().replace(/&/g,'&amp;').replace(/ {2}/g, '&nbsp;').replace(/<|>/g, '&gt;').replace(/\n/g, '<br />');
					
					// Compare curated content with curated twin.
					var twinContent = $twin.html().replace(/<br>/ig,'<br />');
					
					if(forced || textareaContent+'&nbsp;' !== twinContent){
					
						// Add an extra white space so new rows are added when you are at the end of a row.
						$twin.html(textareaContent+'&nbsp;');
						
						// Change textarea height if twin plus the height of one line differs more than 3 pixel from textarea height
						if(Math.abs($twin.height() + lineHeight - $textarea.height()) > 3){
							
							var goalheight = $twin.height()+lineHeight;
							if(goalheight >= maxheight) {
								setHeightAndOverflow(maxheight,'auto');
							} else if(goalheight <= minheight) {
								setHeightAndOverflow(minheight,'hidden');
							} else {
								setHeightAndOverflow(goalheight,'hidden');
							}
							
						}
						
					}
					
				}
				
				// Hide scrollbars
				$textarea.css({'overflow':'hidden'});
				
				// Update textarea size on keyup, change, cut and paste
				$textarea.bind('keyup change cut paste', function(){
					update(); 
				});
				
				// Update width of twin if browser or textarea is resized (solution for textareas with widths in percent)
				$(window).bind('resize', setTwinWidth);
				$textarea.bind('resize', setTwinWidth);
				$textarea.bind('update', update);
				
				// Compact textarea on blur
				/*
				$textarea.bind('blur',function(){
					if($twin.height() < maxheight){
						if($twin.height() > minheight) {
							$textarea.height($twin.height());
						} else {
							$textarea.height(minheight);
						}
					}
				});
				*/
				
				// And this line is to catch the browser paste event
				$textarea.bind('input paste',function(e){ setTimeout( update, 250); });				
				
				// Run update once when elastic is initialized
				update();
				
			});
			
        } 
    }); 
})(jQuery);
/*1.0*/
/*
Copyright 2012 Igor Vaynberg

Version: 3.5.2 Timestamp: Sat Nov  1 14:43:36 EDT 2014

This software is licensed under the Apache License, Version 2.0 (the "Apache License") or the GNU
General Public License version 2 (the "GPL License"). You may choose either license to govern your
use of this software only upon the condition that you accept all of the terms of either the Apache
License or the GPL License.

You may obtain a copy of the Apache License and the GPL License at:

    http://www.apache.org/licenses/LICENSE-2.0
    http://www.gnu.org/licenses/gpl-2.0.html

Unless required by applicable law or agreed to in writing, software distributed under the
Apache License or the GPL License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the Apache License and the GPL License for
the specific language governing permissions and limitations under the Apache License and the GPL License.
*/

(function ($) {
    if(typeof $.fn.each2 == "undefined") {
        $.extend($.fn, {
            /*
            * 4-10 times faster .each replacement
            * use it carefully, as it overrides jQuery context of element on each iteration
            */
            each2 : function (c) {
                var j = $([0]), i = -1, l = this.length;
                while (
                    ++i < l
                    && (j.context = j[0] = this[i])
                    && c.call(j[0], i, j) !== false //"this"=DOM, i=index, j=jQuery object
                );
                return this;
            }
        });
    }
})(jQuery);

(function ($, undefined) {
    "use strict";
    /*global document, window, jQuery, console */

    if (window.Select2 !== undefined) {
        return;
    }

    var AbstractSelect2, SingleSelect2, MultiSelect2, nextUid, sizer,
        lastMousePosition={x:0,y:0}, $document, scrollBarDimensions,

    KEY = {
        TAB: 9,
        ENTER: 13,
        ESC: 27,
        SPACE: 32,
        LEFT: 37,
        UP: 38,
        RIGHT: 39,
        DOWN: 40,
        SHIFT: 16,
        CTRL: 17,
        ALT: 18,
        PAGE_UP: 33,
        PAGE_DOWN: 34,
        HOME: 36,
        END: 35,
        BACKSPACE: 8,
        DELETE: 46,
        isArrow: function (k) {
            k = k.which ? k.which : k;
            switch (k) {
            case KEY.LEFT:
            case KEY.RIGHT:
            case KEY.UP:
            case KEY.DOWN:
                return true;
            }
            return false;
        },
        isControl: function (e) {
            var k = e.which;
            switch (k) {
            case KEY.SHIFT:
            case KEY.CTRL:
            case KEY.ALT:
                return true;
            }

            if (e.metaKey) return true;

            return false;
        },
        isFunctionKey: function (k) {
            k = k.which ? k.which : k;
            return k >= 112 && k <= 123;
        }
    },
    MEASURE_SCROLLBAR_TEMPLATE = "<div class='select2-measure-scrollbar'></div>",

    DIACRITICS = {"\u24B6":"A","\uFF21":"A","\u00C0":"A","\u00C1":"A","\u00C2":"A","\u1EA6":"A","\u1EA4":"A","\u1EAA":"A","\u1EA8":"A","\u00C3":"A","\u0100":"A","\u0102":"A","\u1EB0":"A","\u1EAE":"A","\u1EB4":"A","\u1EB2":"A","\u0226":"A","\u01E0":"A","\u00C4":"A","\u01DE":"A","\u1EA2":"A","\u00C5":"A","\u01FA":"A","\u01CD":"A","\u0200":"A","\u0202":"A","\u1EA0":"A","\u1EAC":"A","\u1EB6":"A","\u1E00":"A","\u0104":"A","\u023A":"A","\u2C6F":"A","\uA732":"AA","\u00C6":"AE","\u01FC":"AE","\u01E2":"AE","\uA734":"AO","\uA736":"AU","\uA738":"AV","\uA73A":"AV","\uA73C":"AY","\u24B7":"B","\uFF22":"B","\u1E02":"B","\u1E04":"B","\u1E06":"B","\u0243":"B","\u0182":"B","\u0181":"B","\u24B8":"C","\uFF23":"C","\u0106":"C","\u0108":"C","\u010A":"C","\u010C":"C","\u00C7":"C","\u1E08":"C","\u0187":"C","\u023B":"C","\uA73E":"C","\u24B9":"D","\uFF24":"D","\u1E0A":"D","\u010E":"D","\u1E0C":"D","\u1E10":"D","\u1E12":"D","\u1E0E":"D","\u0110":"D","\u018B":"D","\u018A":"D","\u0189":"D","\uA779":"D","\u01F1":"DZ","\u01C4":"DZ","\u01F2":"Dz","\u01C5":"Dz","\u24BA":"E","\uFF25":"E","\u00C8":"E","\u00C9":"E","\u00CA":"E","\u1EC0":"E","\u1EBE":"E","\u1EC4":"E","\u1EC2":"E","\u1EBC":"E","\u0112":"E","\u1E14":"E","\u1E16":"E","\u0114":"E","\u0116":"E","\u00CB":"E","\u1EBA":"E","\u011A":"E","\u0204":"E","\u0206":"E","\u1EB8":"E","\u1EC6":"E","\u0228":"E","\u1E1C":"E","\u0118":"E","\u1E18":"E","\u1E1A":"E","\u0190":"E","\u018E":"E","\u24BB":"F","\uFF26":"F","\u1E1E":"F","\u0191":"F","\uA77B":"F","\u24BC":"G","\uFF27":"G","\u01F4":"G","\u011C":"G","\u1E20":"G","\u011E":"G","\u0120":"G","\u01E6":"G","\u0122":"G","\u01E4":"G","\u0193":"G","\uA7A0":"G","\uA77D":"G","\uA77E":"G","\u24BD":"H","\uFF28":"H","\u0124":"H","\u1E22":"H","\u1E26":"H","\u021E":"H","\u1E24":"H","\u1E28":"H","\u1E2A":"H","\u0126":"H","\u2C67":"H","\u2C75":"H","\uA78D":"H","\u24BE":"I","\uFF29":"I","\u00CC":"I","\u00CD":"I","\u00CE":"I","\u0128":"I","\u012A":"I","\u012C":"I","\u0130":"I","\u00CF":"I","\u1E2E":"I","\u1EC8":"I","\u01CF":"I","\u0208":"I","\u020A":"I","\u1ECA":"I","\u012E":"I","\u1E2C":"I","\u0197":"I","\u24BF":"J","\uFF2A":"J","\u0134":"J","\u0248":"J","\u24C0":"K","\uFF2B":"K","\u1E30":"K","\u01E8":"K","\u1E32":"K","\u0136":"K","\u1E34":"K","\u0198":"K","\u2C69":"K","\uA740":"K","\uA742":"K","\uA744":"K","\uA7A2":"K","\u24C1":"L","\uFF2C":"L","\u013F":"L","\u0139":"L","\u013D":"L","\u1E36":"L","\u1E38":"L","\u013B":"L","\u1E3C":"L","\u1E3A":"L","\u0141":"L","\u023D":"L","\u2C62":"L","\u2C60":"L","\uA748":"L","\uA746":"L","\uA780":"L","\u01C7":"LJ","\u01C8":"Lj","\u24C2":"M","\uFF2D":"M","\u1E3E":"M","\u1E40":"M","\u1E42":"M","\u2C6E":"M","\u019C":"M","\u24C3":"N","\uFF2E":"N","\u01F8":"N","\u0143":"N","\u00D1":"N","\u1E44":"N","\u0147":"N","\u1E46":"N","\u0145":"N","\u1E4A":"N","\u1E48":"N","\u0220":"N","\u019D":"N","\uA790":"N","\uA7A4":"N","\u01CA":"NJ","\u01CB":"Nj","\u24C4":"O","\uFF2F":"O","\u00D2":"O","\u00D3":"O","\u00D4":"O","\u1ED2":"O","\u1ED0":"O","\u1ED6":"O","\u1ED4":"O","\u00D5":"O","\u1E4C":"O","\u022C":"O","\u1E4E":"O","\u014C":"O","\u1E50":"O","\u1E52":"O","\u014E":"O","\u022E":"O","\u0230":"O","\u00D6":"O","\u022A":"O","\u1ECE":"O","\u0150":"O","\u01D1":"O","\u020C":"O","\u020E":"O","\u01A0":"O","\u1EDC":"O","\u1EDA":"O","\u1EE0":"O","\u1EDE":"O","\u1EE2":"O","\u1ECC":"O","\u1ED8":"O","\u01EA":"O","\u01EC":"O","\u00D8":"O","\u01FE":"O","\u0186":"O","\u019F":"O","\uA74A":"O","\uA74C":"O","\u01A2":"OI","\uA74E":"OO","\u0222":"OU","\u24C5":"P","\uFF30":"P","\u1E54":"P","\u1E56":"P","\u01A4":"P","\u2C63":"P","\uA750":"P","\uA752":"P","\uA754":"P","\u24C6":"Q","\uFF31":"Q","\uA756":"Q","\uA758":"Q","\u024A":"Q","\u24C7":"R","\uFF32":"R","\u0154":"R","\u1E58":"R","\u0158":"R","\u0210":"R","\u0212":"R","\u1E5A":"R","\u1E5C":"R","\u0156":"R","\u1E5E":"R","\u024C":"R","\u2C64":"R","\uA75A":"R","\uA7A6":"R","\uA782":"R","\u24C8":"S","\uFF33":"S","\u1E9E":"S","\u015A":"S","\u1E64":"S","\u015C":"S","\u1E60":"S","\u0160":"S","\u1E66":"S","\u1E62":"S","\u1E68":"S","\u0218":"S","\u015E":"S","\u2C7E":"S","\uA7A8":"S","\uA784":"S","\u24C9":"T","\uFF34":"T","\u1E6A":"T","\u0164":"T","\u1E6C":"T","\u021A":"T","\u0162":"T","\u1E70":"T","\u1E6E":"T","\u0166":"T","\u01AC":"T","\u01AE":"T","\u023E":"T","\uA786":"T","\uA728":"TZ","\u24CA":"U","\uFF35":"U","\u00D9":"U","\u00DA":"U","\u00DB":"U","\u0168":"U","\u1E78":"U","\u016A":"U","\u1E7A":"U","\u016C":"U","\u00DC":"U","\u01DB":"U","\u01D7":"U","\u01D5":"U","\u01D9":"U","\u1EE6":"U","\u016E":"U","\u0170":"U","\u01D3":"U","\u0214":"U","\u0216":"U","\u01AF":"U","\u1EEA":"U","\u1EE8":"U","\u1EEE":"U","\u1EEC":"U","\u1EF0":"U","\u1EE4":"U","\u1E72":"U","\u0172":"U","\u1E76":"U","\u1E74":"U","\u0244":"U","\u24CB":"V","\uFF36":"V","\u1E7C":"V","\u1E7E":"V","\u01B2":"V","\uA75E":"V","\u0245":"V","\uA760":"VY","\u24CC":"W","\uFF37":"W","\u1E80":"W","\u1E82":"W","\u0174":"W","\u1E86":"W","\u1E84":"W","\u1E88":"W","\u2C72":"W","\u24CD":"X","\uFF38":"X","\u1E8A":"X","\u1E8C":"X","\u24CE":"Y","\uFF39":"Y","\u1EF2":"Y","\u00DD":"Y","\u0176":"Y","\u1EF8":"Y","\u0232":"Y","\u1E8E":"Y","\u0178":"Y","\u1EF6":"Y","\u1EF4":"Y","\u01B3":"Y","\u024E":"Y","\u1EFE":"Y","\u24CF":"Z","\uFF3A":"Z","\u0179":"Z","\u1E90":"Z","\u017B":"Z","\u017D":"Z","\u1E92":"Z","\u1E94":"Z","\u01B5":"Z","\u0224":"Z","\u2C7F":"Z","\u2C6B":"Z","\uA762":"Z","\u24D0":"a","\uFF41":"a","\u1E9A":"a","\u00E0":"a","\u00E1":"a","\u00E2":"a","\u1EA7":"a","\u1EA5":"a","\u1EAB":"a","\u1EA9":"a","\u00E3":"a","\u0101":"a","\u0103":"a","\u1EB1":"a","\u1EAF":"a","\u1EB5":"a","\u1EB3":"a","\u0227":"a","\u01E1":"a","\u00E4":"a","\u01DF":"a","\u1EA3":"a","\u00E5":"a","\u01FB":"a","\u01CE":"a","\u0201":"a","\u0203":"a","\u1EA1":"a","\u1EAD":"a","\u1EB7":"a","\u1E01":"a","\u0105":"a","\u2C65":"a","\u0250":"a","\uA733":"aa","\u00E6":"ae","\u01FD":"ae","\u01E3":"ae","\uA735":"ao","\uA737":"au","\uA739":"av","\uA73B":"av","\uA73D":"ay","\u24D1":"b","\uFF42":"b","\u1E03":"b","\u1E05":"b","\u1E07":"b","\u0180":"b","\u0183":"b","\u0253":"b","\u24D2":"c","\uFF43":"c","\u0107":"c","\u0109":"c","\u010B":"c","\u010D":"c","\u00E7":"c","\u1E09":"c","\u0188":"c","\u023C":"c","\uA73F":"c","\u2184":"c","\u24D3":"d","\uFF44":"d","\u1E0B":"d","\u010F":"d","\u1E0D":"d","\u1E11":"d","\u1E13":"d","\u1E0F":"d","\u0111":"d","\u018C":"d","\u0256":"d","\u0257":"d","\uA77A":"d","\u01F3":"dz","\u01C6":"dz","\u24D4":"e","\uFF45":"e","\u00E8":"e","\u00E9":"e","\u00EA":"e","\u1EC1":"e","\u1EBF":"e","\u1EC5":"e","\u1EC3":"e","\u1EBD":"e","\u0113":"e","\u1E15":"e","\u1E17":"e","\u0115":"e","\u0117":"e","\u00EB":"e","\u1EBB":"e","\u011B":"e","\u0205":"e","\u0207":"e","\u1EB9":"e","\u1EC7":"e","\u0229":"e","\u1E1D":"e","\u0119":"e","\u1E19":"e","\u1E1B":"e","\u0247":"e","\u025B":"e","\u01DD":"e","\u24D5":"f","\uFF46":"f","\u1E1F":"f","\u0192":"f","\uA77C":"f","\u24D6":"g","\uFF47":"g","\u01F5":"g","\u011D":"g","\u1E21":"g","\u011F":"g","\u0121":"g","\u01E7":"g","\u0123":"g","\u01E5":"g","\u0260":"g","\uA7A1":"g","\u1D79":"g","\uA77F":"g","\u24D7":"h","\uFF48":"h","\u0125":"h","\u1E23":"h","\u1E27":"h","\u021F":"h","\u1E25":"h","\u1E29":"h","\u1E2B":"h","\u1E96":"h","\u0127":"h","\u2C68":"h","\u2C76":"h","\u0265":"h","\u0195":"hv","\u24D8":"i","\uFF49":"i","\u00EC":"i","\u00ED":"i","\u00EE":"i","\u0129":"i","\u012B":"i","\u012D":"i","\u00EF":"i","\u1E2F":"i","\u1EC9":"i","\u01D0":"i","\u0209":"i","\u020B":"i","\u1ECB":"i","\u012F":"i","\u1E2D":"i","\u0268":"i","\u0131":"i","\u24D9":"j","\uFF4A":"j","\u0135":"j","\u01F0":"j","\u0249":"j","\u24DA":"k","\uFF4B":"k","\u1E31":"k","\u01E9":"k","\u1E33":"k","\u0137":"k","\u1E35":"k","\u0199":"k","\u2C6A":"k","\uA741":"k","\uA743":"k","\uA745":"k","\uA7A3":"k","\u24DB":"l","\uFF4C":"l","\u0140":"l","\u013A":"l","\u013E":"l","\u1E37":"l","\u1E39":"l","\u013C":"l","\u1E3D":"l","\u1E3B":"l","\u017F":"l","\u0142":"l","\u019A":"l","\u026B":"l","\u2C61":"l","\uA749":"l","\uA781":"l","\uA747":"l","\u01C9":"lj","\u24DC":"m","\uFF4D":"m","\u1E3F":"m","\u1E41":"m","\u1E43":"m","\u0271":"m","\u026F":"m","\u24DD":"n","\uFF4E":"n","\u01F9":"n","\u0144":"n","\u00F1":"n","\u1E45":"n","\u0148":"n","\u1E47":"n","\u0146":"n","\u1E4B":"n","\u1E49":"n","\u019E":"n","\u0272":"n","\u0149":"n","\uA791":"n","\uA7A5":"n","\u01CC":"nj","\u24DE":"o","\uFF4F":"o","\u00F2":"o","\u00F3":"o","\u00F4":"o","\u1ED3":"o","\u1ED1":"o","\u1ED7":"o","\u1ED5":"o","\u00F5":"o","\u1E4D":"o","\u022D":"o","\u1E4F":"o","\u014D":"o","\u1E51":"o","\u1E53":"o","\u014F":"o","\u022F":"o","\u0231":"o","\u00F6":"o","\u022B":"o","\u1ECF":"o","\u0151":"o","\u01D2":"o","\u020D":"o","\u020F":"o","\u01A1":"o","\u1EDD":"o","\u1EDB":"o","\u1EE1":"o","\u1EDF":"o","\u1EE3":"o","\u1ECD":"o","\u1ED9":"o","\u01EB":"o","\u01ED":"o","\u00F8":"o","\u01FF":"o","\u0254":"o","\uA74B":"o","\uA74D":"o","\u0275":"o","\u01A3":"oi","\u0223":"ou","\uA74F":"oo","\u24DF":"p","\uFF50":"p","\u1E55":"p","\u1E57":"p","\u01A5":"p","\u1D7D":"p","\uA751":"p","\uA753":"p","\uA755":"p","\u24E0":"q","\uFF51":"q","\u024B":"q","\uA757":"q","\uA759":"q","\u24E1":"r","\uFF52":"r","\u0155":"r","\u1E59":"r","\u0159":"r","\u0211":"r","\u0213":"r","\u1E5B":"r","\u1E5D":"r","\u0157":"r","\u1E5F":"r","\u024D":"r","\u027D":"r","\uA75B":"r","\uA7A7":"r","\uA783":"r","\u24E2":"s","\uFF53":"s","\u00DF":"s","\u015B":"s","\u1E65":"s","\u015D":"s","\u1E61":"s","\u0161":"s","\u1E67":"s","\u1E63":"s","\u1E69":"s","\u0219":"s","\u015F":"s","\u023F":"s","\uA7A9":"s","\uA785":"s","\u1E9B":"s","\u24E3":"t","\uFF54":"t","\u1E6B":"t","\u1E97":"t","\u0165":"t","\u1E6D":"t","\u021B":"t","\u0163":"t","\u1E71":"t","\u1E6F":"t","\u0167":"t","\u01AD":"t","\u0288":"t","\u2C66":"t","\uA787":"t","\uA729":"tz","\u24E4":"u","\uFF55":"u","\u00F9":"u","\u00FA":"u","\u00FB":"u","\u0169":"u","\u1E79":"u","\u016B":"u","\u1E7B":"u","\u016D":"u","\u00FC":"u","\u01DC":"u","\u01D8":"u","\u01D6":"u","\u01DA":"u","\u1EE7":"u","\u016F":"u","\u0171":"u","\u01D4":"u","\u0215":"u","\u0217":"u","\u01B0":"u","\u1EEB":"u","\u1EE9":"u","\u1EEF":"u","\u1EED":"u","\u1EF1":"u","\u1EE5":"u","\u1E73":"u","\u0173":"u","\u1E77":"u","\u1E75":"u","\u0289":"u","\u24E5":"v","\uFF56":"v","\u1E7D":"v","\u1E7F":"v","\u028B":"v","\uA75F":"v","\u028C":"v","\uA761":"vy","\u24E6":"w","\uFF57":"w","\u1E81":"w","\u1E83":"w","\u0175":"w","\u1E87":"w","\u1E85":"w","\u1E98":"w","\u1E89":"w","\u2C73":"w","\u24E7":"x","\uFF58":"x","\u1E8B":"x","\u1E8D":"x","\u24E8":"y","\uFF59":"y","\u1EF3":"y","\u00FD":"y","\u0177":"y","\u1EF9":"y","\u0233":"y","\u1E8F":"y","\u00FF":"y","\u1EF7":"y","\u1E99":"y","\u1EF5":"y","\u01B4":"y","\u024F":"y","\u1EFF":"y","\u24E9":"z","\uFF5A":"z","\u017A":"z","\u1E91":"z","\u017C":"z","\u017E":"z","\u1E93":"z","\u1E95":"z","\u01B6":"z","\u0225":"z","\u0240":"z","\u2C6C":"z","\uA763":"z","\u0386":"\u0391","\u0388":"\u0395","\u0389":"\u0397","\u038A":"\u0399","\u03AA":"\u0399","\u038C":"\u039F","\u038E":"\u03A5","\u03AB":"\u03A5","\u038F":"\u03A9","\u03AC":"\u03B1","\u03AD":"\u03B5","\u03AE":"\u03B7","\u03AF":"\u03B9","\u03CA":"\u03B9","\u0390":"\u03B9","\u03CC":"\u03BF","\u03CD":"\u03C5","\u03CB":"\u03C5","\u03B0":"\u03C5","\u03C9":"\u03C9","\u03C2":"\u03C3"};

    $document = $(document);

    nextUid=(function() { var counter=1; return function() { return counter++; }; }());


    function reinsertElement(element) {
        var placeholder = $(document.createTextNode(''));

        element.before(placeholder);
        placeholder.before(element);
        placeholder.remove();
    }

    function stripDiacritics(str) {
        // Used 'uni range + named function' from http://jsperf.com/diacritics/18
        function match(a) {
            return DIACRITICS[a] || a;
        }

        return str.replace(/[^\u0000-\u007E]/g, match);
    }

    function indexOf(value, array) {
        var i = 0, l = array.length;
        for (; i < l; i = i + 1) {
            if (equal(value, array[i])) return i;
        }
        return -1;
    }

    function measureScrollbar () {
        var $template = $( MEASURE_SCROLLBAR_TEMPLATE );
        $template.appendTo(document.body);

        var dim = {
            width: $template.width() - $template[0].clientWidth,
            height: $template.height() - $template[0].clientHeight
        };
        $template.remove();

        return dim;
    }

    /**
     * Compares equality of a and b
     * @param a
     * @param b
     */
    function equal(a, b) {
        if (a === b) return true;
        if (a === undefined || b === undefined) return false;
        if (a === null || b === null) return false;
        // Check whether 'a' or 'b' is a string (primitive or object).
        // The concatenation of an empty string (+'') converts its argument to a string's primitive.
        if (a.constructor === String) return a+'' === b+''; // a+'' - in case 'a' is a String object
        if (b.constructor === String) return b+'' === a+''; // b+'' - in case 'b' is a String object
        return false;
    }

    /**
     * Splits the string into an array of values, transforming each value. An empty array is returned for nulls or empty
     * strings
     * @param string
     * @param separator
     */
    function splitVal(string, separator, transform) {
        var val, i, l;
        if (string === null || string.length < 1) return [];
        val = string.split(separator);
        for (i = 0, l = val.length; i < l; i = i + 1) val[i] = transform(val[i]);
        return val;
    }

    function getSideBorderPadding(element) {
        return element.outerWidth(false) - element.width();
    }

    function installKeyUpChangeEvent(element) {
        var key="keyup-change-value";
        element.on("keydown", function () {
            if ($.data(element, key) === undefined) {
                $.data(element, key, element.val());
            }
        });
        element.on("keyup", function () {
            var val= $.data(element, key);
            if (val !== undefined && element.val() !== val) {
                $.removeData(element, key);
                element.trigger("keyup-change");
            }
        });
    }


    /**
     * filters mouse events so an event is fired only if the mouse moved.
     *
     * filters out mouse events that occur when mouse is stationary but
     * the elements under the pointer are scrolled.
     */
    function installFilteredMouseMove(element) {
        element.on("mousemove", function (e) {
            var lastpos = lastMousePosition;
            if (lastpos === undefined || lastpos.x !== e.pageX || lastpos.y !== e.pageY) {
                $(e.target).trigger("mousemove-filtered", e);
            }
        });
    }

    /**
     * Debounces a function. Returns a function that calls the original fn function only if no invocations have been made
     * within the last quietMillis milliseconds.
     *
     * @param quietMillis number of milliseconds to wait before invoking fn
     * @param fn function to be debounced
     * @param ctx object to be used as this reference within fn
     * @return debounced version of fn
     */
    function debounce(quietMillis, fn, ctx) {
        ctx = ctx || undefined;
        var timeout;
        return function () {
            var args = arguments;
            window.clearTimeout(timeout);
            timeout = window.setTimeout(function() {
                fn.apply(ctx, args);
            }, quietMillis);
        };
    }

    function installDebouncedScroll(threshold, element) {
        var notify = debounce(threshold, function (e) { element.trigger("scroll-debounced", e);});
        element.on("scroll", function (e) {
            if (indexOf(e.target, element.get()) >= 0) notify(e);
        });
    }

    function focus($el) {
        if ($el[0] === document.activeElement) return;

        /* set the focus in a 0 timeout - that way the focus is set after the processing
            of the current event has finished - which seems like the only reliable way
            to set focus */
        window.setTimeout(function() {
            var el=$el[0], pos=$el.val().length, range;

            $el.focus();

            /* make sure el received focus so we do not error out when trying to manipulate the caret.
                sometimes modals or others listeners may steal it after its set */
            var isVisible = (el.offsetWidth > 0 || el.offsetHeight > 0);
            if (isVisible && el === document.activeElement) {

                /* after the focus is set move the caret to the end, necessary when we val()
                    just before setting focus */
                if(el.setSelectionRange)
                {
                    el.setSelectionRange(pos, pos);
                }
                else if (el.createTextRange) {
                    range = el.createTextRange();
                    range.collapse(false);
                    range.select();
                }
            }
        }, 0);
    }

    function getCursorInfo(el) {
        el = $(el)[0];
        var offset = 0;
        var length = 0;
        if ('selectionStart' in el) {
            offset = el.selectionStart;
            length = el.selectionEnd - offset;
        } else if ('selection' in document) {
            el.focus();
            var sel = document.selection.createRange();
            length = document.selection.createRange().text.length;
            sel.moveStart('character', -el.value.length);
            offset = sel.text.length - length;
        }
        return { offset: offset, length: length };
    }

    function killEvent(event) {
        event.preventDefault();
        event.stopPropagation();
    }
    function killEventImmediately(event) {
        event.preventDefault();
        event.stopImmediatePropagation();
    }

    function measureTextWidth(e) {
        if (!sizer){
            var style = e[0].currentStyle || window.getComputedStyle(e[0], null);
            sizer = $(document.createElement("div")).css({
                position: "absolute",
                left: "-10000px",
                top: "-10000px",
                display: "none",
                fontSize: style.fontSize,
                fontFamily: style.fontFamily,
                fontStyle: style.fontStyle,
                fontWeight: style.fontWeight,
                letterSpacing: style.letterSpacing,
                textTransform: style.textTransform,
                whiteSpace: "nowrap"
            });
            sizer.attr("class","select2-sizer");
            $(document.body).append(sizer);
        }
        sizer.text(e.val());
        return sizer.width();
    }

    function syncCssClasses(dest, src, adapter) {
        var classes, replacements = [], adapted;

        classes = $.trim(dest.attr("class"));

        if (classes) {
            classes = '' + classes; // for IE which returns object

            $(classes.split(/\s+/)).each2(function() {
                if (this.indexOf("select2-") === 0) {
                    replacements.push(this);
                }
            });
        }

        classes = $.trim(src.attr("class"));

        if (classes) {
            classes = '' + classes; // for IE which returns object

            $(classes.split(/\s+/)).each2(function() {
                if (this.indexOf("select2-") !== 0) {
                    adapted = adapter(this);

                    if (adapted) {
                        replacements.push(adapted);
                    }
                }
            });
        }

        dest.attr("class", replacements.join(" "));
    }


    function markMatch(text, term, markup, escapeMarkup) {
        var match=stripDiacritics(text.toUpperCase()).indexOf(stripDiacritics(term.toUpperCase())),
            tl=term.length;

        if (match<0) {
            markup.push(escapeMarkup(text));
            return;
        }

        markup.push(escapeMarkup(text.substring(0, match)));
        markup.push("<span class='select2-match'>");
        markup.push(escapeMarkup(text.substring(match, match + tl)));
        markup.push("</span>");
        markup.push(escapeMarkup(text.substring(match + tl, text.length)));
    }

    function defaultEscapeMarkup(markup) {
        var replace_map = {
            '\\': '&#92;',
            '&': '&amp;',
            '<': '&lt;',
            '>': '&gt;',
            '"': '&quot;',
            "'": '&#39;',
            "/": '&#47;'
        };

        return String(markup).replace(/[&<>"'\/\\]/g, function (match) {
            return replace_map[match];
        });
    }

    /**
     * Produces an ajax-based query function
     *
     * @param options object containing configuration parameters
     * @param options.params parameter map for the transport ajax call, can contain such options as cache, jsonpCallback, etc. see $.ajax
     * @param options.transport function that will be used to execute the ajax request. must be compatible with parameters supported by $.ajax
     * @param options.url url for the data
     * @param options.data a function(searchTerm, pageNumber, context) that should return an object containing query string parameters for the above url.
     * @param options.dataType request data type: ajax, jsonp, other datatypes supported by jQuery's $.ajax function or the transport function if specified
     * @param options.quietMillis (optional) milliseconds to wait before making the ajaxRequest, helps debounce the ajax function if invoked too often
     * @param options.results a function(remoteData, pageNumber, query) that converts data returned form the remote request to the format expected by Select2.
     *      The expected format is an object containing the following keys:
     *      results array of objects that will be used as choices
     *      more (optional) boolean indicating whether there are more results available
     *      Example: {results:[{id:1, text:'Red'},{id:2, text:'Blue'}], more:true}
     */
    function ajax(options) {
        var timeout, // current scheduled but not yet executed request
            handler = null,
            quietMillis = options.quietMillis || 100,
            ajaxUrl = options.url,
            self = this;

        return function (query) {
            window.clearTimeout(timeout);
            timeout = window.setTimeout(function () {
                var data = options.data, // ajax data function
                    url = ajaxUrl, // ajax url string or function
                    transport = options.transport || $.fn.select2.ajaxDefaults.transport,
                    // deprecated - to be removed in 4.0  - use params instead
                    deprecated = {
                        type: options.type || 'GET', // set type of request (GET or POST)
                        cache: options.cache || false,
                        jsonpCallback: options.jsonpCallback||undefined,
                        dataType: options.dataType||"json"
                    },
                    params = $.extend({}, $.fn.select2.ajaxDefaults.params, deprecated);

                data = data ? data.call(self, query.term, query.page, query.context) : null;
                url = (typeof url === 'function') ? url.call(self, query.term, query.page, query.context) : url;

                if (handler && typeof handler.abort === "function") { handler.abort(); }

                if (options.params) {
                    if ($.isFunction(options.params)) {
                        $.extend(params, options.params.call(self));
                    } else {
                        $.extend(params, options.params);
                    }
                }

                $.extend(params, {
                    url: url,
                    dataType: options.dataType,
                    data: data,
                    success: function (data) {
                        // TODO - replace query.page with query so users have access to term, page, etc.
                        // added query as third paramter to keep backwards compatibility
                        var results = options.results(data, query.page, query);
                        query.callback(results);
                    },
                    error: function(jqXHR, textStatus, errorThrown){
                        var results = {
                            hasError: true,
                            jqXHR: jqXHR,
                            textStatus: textStatus,
                            errorThrown: errorThrown
                        };

                        query.callback(results);
                    }
                });
                handler = transport.call(self, params);
            }, quietMillis);
        };
    }

    /**
     * Produces a query function that works with a local array
     *
     * @param options object containing configuration parameters. The options parameter can either be an array or an
     * object.
     *
     * If the array form is used it is assumed that it contains objects with 'id' and 'text' keys.
     *
     * If the object form is used it is assumed that it contains 'data' and 'text' keys. The 'data' key should contain
     * an array of objects that will be used as choices. These objects must contain at least an 'id' key. The 'text'
     * key can either be a String in which case it is expected that each element in the 'data' array has a key with the
     * value of 'text' which will be used to match choices. Alternatively, text can be a function(item) that can extract
     * the text.
     */
    function local(options) {
        var data = options, // data elements
            dataText,
            tmp,
            text = function (item) { return ""+item.text; }; // function used to retrieve the text portion of a data item that is matched against the search

         if ($.isArray(data)) {
            tmp = data;
            data = { results: tmp };
        }

         if ($.isFunction(data) === false) {
            tmp = data;
            data = function() { return tmp; };
        }

        var dataItem = data();
        if (dataItem.text) {
            text = dataItem.text;
            // if text is not a function we assume it to be a key name
            if (!$.isFunction(text)) {
                dataText = dataItem.text; // we need to store this in a separate variable because in the next step data gets reset and data.text is no longer available
                text = function (item) { return item[dataText]; };
            }
        }

        return function (query) {
            var t = query.term, filtered = { results: [] }, process;
            if (t === "") {
                query.callback(data());
                return;
            }

            process = function(datum, collection) {
                var group, attr;
                datum = datum[0];
                if (datum.children) {
                    group = {};
                    for (attr in datum) {
                        if (datum.hasOwnProperty(attr)) group[attr]=datum[attr];
                    }
                    group.children=[];
                    $(datum.children).each2(function(i, childDatum) { process(childDatum, group.children); });
                    if (group.children.length || query.matcher(t, text(group), datum)) {
                        collection.push(group);
                    }
                } else {
                    if (query.matcher(t, text(datum), datum)) {
                        collection.push(datum);
                    }
                }
            };

            $(data().results).each2(function(i, datum) { process(datum, filtered.results); });
            query.callback(filtered);
        };
    }

    // TODO javadoc
    function tags(data) {
        var isFunc = $.isFunction(data);
        return function (query) {
            var t = query.term, filtered = {results: []};
            var result = isFunc ? data(query) : data;
            if ($.isArray(result)) {
                $(result).each(function () {
                    var isObject = this.text !== undefined,
                        text = isObject ? this.text : this;
                    if (t === "" || query.matcher(t, text)) {
                        filtered.results.push(isObject ? this : {id: this, text: this});
                    }
                });
                query.callback(filtered);
            }
        };
    }

    /**
     * Checks if the formatter function should be used.
     *
     * Throws an error if it is not a function. Returns true if it should be used,
     * false if no formatting should be performed.
     *
     * @param formatter
     */
    function checkFormatter(formatter, formatterName) {
        if ($.isFunction(formatter)) return true;
        if (!formatter) return false;
        if (typeof(formatter) === 'string') return true;
        throw new Error(formatterName +" must be a string, function, or falsy value");
    }

  /**
   * Returns a given value
   * If given a function, returns its output
   *
   * @param val string|function
   * @param context value of "this" to be passed to function
   * @returns {*}
   */
    function evaluate(val, context) {
        if ($.isFunction(val)) {
            var args = Array.prototype.slice.call(arguments, 2);
            return val.apply(context, args);
        }
        return val;
    }

    function countResults(results) {
        var count = 0;
        $.each(results, function(i, item) {
            if (item.children) {
                count += countResults(item.children);
            } else {
                count++;
            }
        });
        return count;
    }

    /**
     * Default tokenizer. This function uses breaks the input on substring match of any string from the
     * opts.tokenSeparators array and uses opts.createSearchChoice to create the choice object. Both of those
     * two options have to be defined in order for the tokenizer to work.
     *
     * @param input text user has typed so far or pasted into the search field
     * @param selection currently selected choices
     * @param selectCallback function(choice) callback tho add the choice to selection
     * @param opts select2's opts
     * @return undefined/null to leave the current input unchanged, or a string to change the input to the returned value
     */
    function defaultTokenizer(input, selection, selectCallback, opts) {
        var original = input, // store the original so we can compare and know if we need to tell the search to update its text
            dupe = false, // check for whether a token we extracted represents a duplicate selected choice
            token, // token
            index, // position at which the separator was found
            i, l, // looping variables
            separator; // the matched separator

        if (!opts.createSearchChoice || !opts.tokenSeparators || opts.tokenSeparators.length < 1) return undefined;

        while (true) {
            index = -1;

            for (i = 0, l = opts.tokenSeparators.length; i < l; i++) {
                separator = opts.tokenSeparators[i];
                index = input.indexOf(separator);
                if (index >= 0) break;
            }

            if (index < 0) break; // did not find any token separator in the input string, bail

            token = input.substring(0, index);
            input = input.substring(index + separator.length);

            if (token.length > 0) {
                token = opts.createSearchChoice.call(this, token, selection);
                if (token !== undefined && token !== null && opts.id(token) !== undefined && opts.id(token) !== null) {
                    dupe = false;
                    for (i = 0, l = selection.length; i < l; i++) {
                        if (equal(opts.id(token), opts.id(selection[i]))) {
                            dupe = true; break;
                        }
                    }

                    if (!dupe) selectCallback(token);
                }
            }
        }

        if (original!==input) return input;
    }

    function cleanupJQueryElements() {
        var self = this;

        $.each(arguments, function (i, element) {
            self[element].remove();
            self[element] = null;
        });
    }

    /**
     * Creates a new class
     *
     * @param superClass
     * @param methods
     */
    function clazz(SuperClass, methods) {
        var constructor = function () {};
        constructor.prototype = new SuperClass;
        constructor.prototype.constructor = constructor;
        constructor.prototype.parent = SuperClass.prototype;
        constructor.prototype = $.extend(constructor.prototype, methods);
        return constructor;
    }

    AbstractSelect2 = clazz(Object, {

        // abstract
        bind: function (func) {
            var self = this;
            return function () {
                func.apply(self, arguments);
            };
        },

        // abstract
        init: function (opts) {
            var results, search, resultsSelector = ".select2-results";

            // prepare options
            this.opts = opts = this.prepareOpts(opts);

            this.id=opts.id;

            // destroy if called on an existing component
            if (opts.element.data("select2") !== undefined &&
                opts.element.data("select2") !== null) {
                opts.element.data("select2").destroy();
            }

            this.container = this.createContainer();

            this.liveRegion = $('.select2-hidden-accessible');
            if (this.liveRegion.length == 0) {
                this.liveRegion = $("<span>", {
                        role: "status",
                        "aria-live": "polite"
                    })
                    .addClass("select2-hidden-accessible")
                    .appendTo(document.body);
            }

            this.containerId="s2id_"+(opts.element.attr("id") || "autogen"+nextUid());
            this.containerEventName= this.containerId
                .replace(/([.])/g, '_')
                .replace(/([;&,\-\.\+\*\~':"\!\^#$%@\[\]\(\)=>\|])/g, '\\$1');
            this.container.attr("id", this.containerId);

            this.container.attr("title", opts.element.attr("title"));

            this.body = $(document.body);

            syncCssClasses(this.container, this.opts.element, this.opts.adaptContainerCssClass);

            this.container.attr("style", opts.element.attr("style"));
            this.container.css(evaluate(opts.containerCss, this.opts.element));
            this.container.addClass(evaluate(opts.containerCssClass, this.opts.element));

            this.elementTabIndex = this.opts.element.attr("tabindex");

            // swap container for the element
            this.opts.element
                .data("select2", this)
                .attr("tabindex", "-1")
                .before(this.container)
                .on("click.select2", killEvent); // do not leak click events

            this.container.data("select2", this);

            this.dropdown = this.container.find(".select2-drop");

            syncCssClasses(this.dropdown, this.opts.element, this.opts.adaptDropdownCssClass);

            this.dropdown.addClass(evaluate(opts.dropdownCssClass, this.opts.element));
            this.dropdown.data("select2", this);
            this.dropdown.on("click", killEvent);

            this.results = results = this.container.find(resultsSelector);
            this.search = search = this.container.find("input.select2-input");

            this.queryCount = 0;
            this.resultsPage = 0;
            this.context = null;

            // initialize the container
            this.initContainer();

            this.container.on("click", killEvent);

            installFilteredMouseMove(this.results);

            this.dropdown.on("mousemove-filtered", resultsSelector, this.bind(this.highlightUnderEvent));
            this.dropdown.on("touchstart touchmove touchend", resultsSelector, this.bind(function (event) {
                this._touchEvent = true;
                this.highlightUnderEvent(event);
            }));
            this.dropdown.on("touchmove", resultsSelector, this.bind(this.touchMoved));
            this.dropdown.on("touchstart touchend", resultsSelector, this.bind(this.clearTouchMoved));

            // Waiting for a click event on touch devices to select option and hide dropdown
            // otherwise click will be triggered on an underlying element
            this.dropdown.on('click', this.bind(function (event) {
                if (this._touchEvent) {
                    this._touchEvent = false;
                    this.selectHighlighted();
                }
            }));

            installDebouncedScroll(80, this.results);
            this.dropdown.on("scroll-debounced", resultsSelector, this.bind(this.loadMoreIfNeeded));

            // do not propagate change event from the search field out of the component
            $(this.container).on("change", ".select2-input", function(e) {e.stopPropagation();});
            $(this.dropdown).on("change", ".select2-input", function(e) {e.stopPropagation();});

            // if jquery.mousewheel plugin is installed we can prevent out-of-bounds scrolling of results via mousewheel
            if ($.fn.mousewheel) {
                results.mousewheel(function (e, delta, deltaX, deltaY) {
                    var top = results.scrollTop();
                    if (deltaY > 0 && top - deltaY <= 0) {
                        results.scrollTop(0);
                        killEvent(e);
                    } else if (deltaY < 0 && results.get(0).scrollHeight - results.scrollTop() + deltaY <= results.height()) {
                        results.scrollTop(results.get(0).scrollHeight - results.height());
                        killEvent(e);
                    }
                });
            }

            installKeyUpChangeEvent(search);
            search.on("keyup-change input paste", this.bind(this.updateResults));
            search.on("focus", function () { search.addClass("select2-focused"); });
            search.on("blur", function () { search.removeClass("select2-focused");});

            this.dropdown.on("mouseup", resultsSelector, this.bind(function (e) {
                if ($(e.target).closest(".select2-result-selectable").length > 0) {
                    this.highlightUnderEvent(e);
                    this.selectHighlighted(e);
                }
            }));

            // trap all mouse events from leaving the dropdown. sometimes there may be a modal that is listening
            // for mouse events outside of itself so it can close itself. since the dropdown is now outside the select2's
            // dom it will trigger the popup close, which is not what we want
            // focusin can cause focus wars between modals and select2 since the dropdown is outside the modal.
            this.dropdown.on("click mouseup mousedown touchstart touchend focusin", function (e) { e.stopPropagation(); });

            this.nextSearchTerm = undefined;

            if ($.isFunction(this.opts.initSelection)) {
                // initialize selection based on the current value of the source element
                this.initSelection();

                // if the user has provided a function that can set selection based on the value of the source element
                // we monitor the change event on the element and trigger it, allowing for two way synchronization
                this.monitorSource();
            }

            if (opts.maximumInputLength !== null) {
                this.search.attr("maxlength", opts.maximumInputLength);
            }

            var disabled = opts.element.prop("disabled");
            if (disabled === undefined) disabled = false;
            this.enable(!disabled);

            var readonly = opts.element.prop("readonly");
            if (readonly === undefined) readonly = false;
            this.readonly(readonly);

            // Calculate size of scrollbar
            scrollBarDimensions = scrollBarDimensions || measureScrollbar();

            this.autofocus = opts.element.prop("autofocus");
            opts.element.prop("autofocus", false);
            if (this.autofocus) this.focus();

            this.search.attr("placeholder", opts.searchInputPlaceholder);
        },

        // abstract
        destroy: function () {
            var element=this.opts.element, select2 = element.data("select2"), self = this;

            this.close();

            if (element.length && element[0].detachEvent && self._sync) {
                element.each(function () {
                    if (self._sync) {
                        this.detachEvent("onpropertychange", self._sync);
                    }
                });
            }
            if (this.propertyObserver) {
                this.propertyObserver.disconnect();
                this.propertyObserver = null;
            }
            this._sync = null;

            if (select2 !== undefined) {
                select2.container.remove();
                select2.liveRegion.remove();
                select2.dropdown.remove();
                element
                    .show()
                    .removeData("select2")
                    .off(".select2")
                    .prop("autofocus", this.autofocus || false);
                if (this.elementTabIndex) {
                    element.attr({tabindex: this.elementTabIndex});
                } else {
                    element.removeAttr("tabindex");
                }
                element.show();
            }

            cleanupJQueryElements.call(this,
                "container",
                "liveRegion",
                "dropdown",
                "results",
                "search"
            );
        },

        // abstract
        optionToData: function(element) {
            if (element.is("option")) {
                return {
                    id:element.prop("value"),
                    text:element.text(),
                    element: element.get(),
                    css: element.attr("class"),
                    disabled: element.prop("disabled"),
                    locked: equal(element.attr("locked"), "locked") || equal(element.data("locked"), true)
                };
            } else if (element.is("optgroup")) {
                return {
                    text:element.attr("label"),
                    children:[],
                    element: element.get(),
                    css: element.attr("class")
                };
            }
        },

        // abstract
        prepareOpts: function (opts) {
            var element, select, idKey, ajaxUrl, self = this;

            element = opts.element;

            if (element.get(0).tagName.toLowerCase() === "select") {
                this.select = select = opts.element;
            }

            if (select) {
                // these options are not allowed when attached to a select because they are picked up off the element itself
                $.each(["id", "multiple", "ajax", "query", "createSearchChoice", "initSelection", "data", "tags"], function () {
                    if (this in opts) {
                        throw new Error("Option '" + this + "' is not allowed for Select2 when attached to a <select> element.");
                    }
                });
            }

            opts = $.extend({}, {
                populateResults: function(container, results, query) {
                    var populate, id=this.opts.id, liveRegion=this.liveRegion;

                    populate=function(results, container, depth) {

                        var i, l, result, selectable, disabled, compound, node, label, innerContainer, formatted;

                        results = opts.sortResults(results, container, query);

                        // collect the created nodes for bulk append
                        var nodes = [];
                        for (i = 0, l = results.length; i < l; i = i + 1) {

                            result=results[i];

                            disabled = (result.disabled === true);
                            selectable = (!disabled) && (id(result) !== undefined);

                            compound=result.children && result.children.length > 0;

                            node=$("<li></li>");
                            node.addClass("select2-results-dept-"+depth);
                            node.addClass("select2-result");
                            node.addClass(selectable ? "select2-result-selectable" : "select2-result-unselectable");
                            if (disabled) { node.addClass("select2-disabled"); }
                            if (compound) { node.addClass("select2-result-with-children"); }
                            node.addClass(self.opts.formatResultCssClass(result));
                            node.attr("role", "presentation");

                            label=$(document.createElement("div"));
                            label.addClass("select2-result-label");
                            label.attr("id", "select2-result-label-" + nextUid());
                            label.attr("role", "option");

                            formatted=opts.formatResult(result, label, query, self.opts.escapeMarkup);
                            if (formatted!==undefined) {
                                label.html(formatted);
                                node.append(label);
                            }


                            if (compound) {

                                innerContainer=$("<ul></ul>");
                                innerContainer.addClass("select2-result-sub");
                                populate(result.children, innerContainer, depth+1);
                                node.append(innerContainer);
                            }

                            node.data("select2-data", result);
                            nodes.push(node[0]);
                        }

                        // bulk append the created nodes
                        container.append(nodes);
                        liveRegion.text(opts.formatMatches(results.length));
                    };

                    populate(results, container, 0);
                }
            }, $.fn.select2.defaults, opts);

            if (typeof(opts.id) !== "function") {
                idKey = opts.id;
                opts.id = function (e) { return e[idKey]; };
            }

            if ($.isArray(opts.element.data("select2Tags"))) {
                if ("tags" in opts) {
                    throw "tags specified as both an attribute 'data-select2-tags' and in options of Select2 " + opts.element.attr("id");
                }
                opts.tags=opts.element.data("select2Tags");
            }

            if (select) {
                opts.query = this.bind(function (query) {
                    var data = { results: [], more: false },
                        term = query.term,
                        children, placeholderOption, process;

                    process=function(element, collection) {
                        var group;
                        if (element.is("option")) {
                            if (query.matcher(term, element.text(), element)) {
                                collection.push(self.optionToData(element));
                            }
                        } else if (element.is("optgroup")) {
                            group=self.optionToData(element);
                            element.children().each2(function(i, elm) { process(elm, group.children); });
                            if (group.children.length>0) {
                                collection.push(group);
                            }
                        }
                    };

                    children=element.children();

                    // ignore the placeholder option if there is one
                    if (this.getPlaceholder() !== undefined && children.length > 0) {
                        placeholderOption = this.getPlaceholderOption();
                        if (placeholderOption) {
                            children=children.not(placeholderOption);
                        }
                    }

                    children.each2(function(i, elm) { process(elm, data.results); });

                    query.callback(data);
                });
                // this is needed because inside val() we construct choices from options and their id is hardcoded
                opts.id=function(e) { return e.id; };
            } else {
                if (!("query" in opts)) {

                    if ("ajax" in opts) {
                        ajaxUrl = opts.element.data("ajax-url");
                        if (ajaxUrl && ajaxUrl.length > 0) {
                            opts.ajax.url = ajaxUrl;
                        }
                        opts.query = ajax.call(opts.element, opts.ajax);
                    } else if ("data" in opts) {
                        opts.query = local(opts.data);
                    } else if ("tags" in opts) {
                        opts.query = tags(opts.tags);
                        if (opts.createSearchChoice === undefined) {
                            opts.createSearchChoice = function (term) { return {id: $.trim(term), text: $.trim(term)}; };
                        }
                        if (opts.initSelection === undefined) {
                            opts.initSelection = function (element, callback) {
                                var data = [];
                                $(splitVal(element.val(), opts.separator, opts.transformVal)).each(function () {
                                    var obj = { id: this, text: this },
                                        tags = opts.tags;
                                    if ($.isFunction(tags)) tags=tags();
                                    $(tags).each(function() { if (equal(this.id, obj.id)) { obj = this; return false; } });
                                    data.push(obj);
                                });

                                callback(data);
                            };
                        }
                    }
                }
            }
            if (typeof(opts.query) !== "function") {
                throw "query function not defined for Select2 " + opts.element.attr("id");
            }

            if (opts.createSearchChoicePosition === 'top') {
                opts.createSearchChoicePosition = function(list, item) { list.unshift(item); };
            }
            else if (opts.createSearchChoicePosition === 'bottom') {
                opts.createSearchChoicePosition = function(list, item) { list.push(item); };
            }
            else if (typeof(opts.createSearchChoicePosition) !== "function")  {
                throw "invalid createSearchChoicePosition option must be 'top', 'bottom' or a custom function";
            }

            return opts;
        },

        /**
         * Monitor the original element for changes and update select2 accordingly
         */
        // abstract
        monitorSource: function () {
            var el = this.opts.element, observer, self = this;

            el.on("change.select2", this.bind(function (e) {
                if (this.opts.element.data("select2-change-triggered") !== true) {
                    this.initSelection();
                }
            }));

            this._sync = this.bind(function () {

                // sync enabled state
                var disabled = el.prop("disabled");
                if (disabled === undefined) disabled = false;
                this.enable(!disabled);

                var readonly = el.prop("readonly");
                if (readonly === undefined) readonly = false;
                this.readonly(readonly);

                if (this.container) {
                    syncCssClasses(this.container, this.opts.element, this.opts.adaptContainerCssClass);
                    this.container.addClass(evaluate(this.opts.containerCssClass, this.opts.element));
                }

                if (this.dropdown) {
                    syncCssClasses(this.dropdown, this.opts.element, this.opts.adaptDropdownCssClass);
                    this.dropdown.addClass(evaluate(this.opts.dropdownCssClass, this.opts.element));
                }

            });

            // IE8-10 (IE9/10 won't fire propertyChange via attachEventListener)
            if (el.length && el[0].attachEvent) {
                el.each(function() {
                    this.attachEvent("onpropertychange", self._sync);
                });
            }

            // safari, chrome, firefox, IE11
            observer = window.MutationObserver || window.WebKitMutationObserver|| window.MozMutationObserver;
            if (observer !== undefined) {
                if (this.propertyObserver) { delete this.propertyObserver; this.propertyObserver = null; }
                this.propertyObserver = new observer(function (mutations) {
                    $.each(mutations, self._sync);
                });
                this.propertyObserver.observe(el.get(0), { attributes:true, subtree:false });
            }
        },

        // abstract
        triggerSelect: function(data) {
            var evt = $.Event("select2-selecting", { val: this.id(data), object: data, choice: data });
            this.opts.element.trigger(evt);
            return !evt.isDefaultPrevented();
        },

        /**
         * Triggers the change event on the source element
         */
        // abstract
        triggerChange: function (details) {

            details = details || {};
            details= $.extend({}, details, { type: "change", val: this.val() });
            // prevents recursive triggering
            this.opts.element.data("select2-change-triggered", true);
            this.opts.element.trigger(details);
            this.opts.element.data("select2-change-triggered", false);

            // some validation frameworks ignore the change event and listen instead to keyup, click for selects
            // so here we trigger the click event manually
            this.opts.element.click();

            // ValidationEngine ignores the change event and listens instead to blur
            // so here we trigger the blur event manually if so desired
            if (this.opts.blurOnChange)
                this.opts.element.blur();
        },

        //abstract
        isInterfaceEnabled: function()
        {
            return this.enabledInterface === true;
        },

        // abstract
        enableInterface: function() {
            var enabled = this._enabled && !this._readonly,
                disabled = !enabled;

            if (enabled === this.enabledInterface) return false;

            this.container.toggleClass("select2-container-disabled", disabled);
            this.close();
            this.enabledInterface = enabled;

            return true;
        },

        // abstract
        enable: function(enabled) {
            if (enabled === undefined) enabled = true;
            if (this._enabled === enabled) return;
            this._enabled = enabled;

            this.opts.element.prop("disabled", !enabled);
            this.enableInterface();
        },

        // abstract
        disable: function() {
            this.enable(false);
        },

        // abstract
        readonly: function(enabled) {
            if (enabled === undefined) enabled = false;
            if (this._readonly === enabled) return;
            this._readonly = enabled;

            this.opts.element.prop("readonly", enabled);
            this.enableInterface();
        },

        // abstract
        opened: function () {
            return (this.container) ? this.container.hasClass("select2-dropdown-open") : false;
        },

        // abstract
        positionDropdown: function() {
            var $dropdown = this.dropdown,
                container = this.container,
                offset = container.offset(),
                height = container.outerHeight(false),
                width = container.outerWidth(false),
                dropHeight = $dropdown.outerHeight(false),
                $window = $(window),
                windowWidth = $window.width(),
                windowHeight = $window.height(),
                viewPortRight = $window.scrollLeft() + windowWidth,
                viewportBottom = $window.scrollTop() + windowHeight,
                dropTop = offset.top + height,
                dropLeft = offset.left,
                enoughRoomBelow = dropTop + dropHeight <= viewportBottom,
                enoughRoomAbove = (offset.top - dropHeight) >= $window.scrollTop(),
                dropWidth = $dropdown.outerWidth(false),
                enoughRoomOnRight = function() {
                    return dropLeft + dropWidth <= viewPortRight;
                },
                enoughRoomOnLeft = function() {
                    return offset.left + viewPortRight + container.outerWidth(false)  > dropWidth;
                },
                aboveNow = $dropdown.hasClass("select2-drop-above"),
                bodyOffset,
                above,
                changeDirection,
                css,
                resultsListNode;

            // always prefer the current above/below alignment, unless there is not enough room
            if (aboveNow) {
                above = true;
                if (!enoughRoomAbove && enoughRoomBelow) {
                    changeDirection = true;
                    above = false;
                }
            } else {
                above = false;
                if (!enoughRoomBelow && enoughRoomAbove) {
                    changeDirection = true;
                    above = true;
                }
            }

            //if we are changing direction we need to get positions when dropdown is hidden;
            if (changeDirection) {
                $dropdown.hide();
                offset = this.container.offset();
                height = this.container.outerHeight(false);
                width = this.container.outerWidth(false);
                dropHeight = $dropdown.outerHeight(false);
                viewPortRight = $window.scrollLeft() + windowWidth;
                viewportBottom = $window.scrollTop() + windowHeight;
                dropTop = offset.top + height;
                dropLeft = offset.left;
                dropWidth = $dropdown.outerWidth(false);
                $dropdown.show();

                // fix so the cursor does not move to the left within the search-textbox in IE
                this.focusSearch();
            }

            if (this.opts.dropdownAutoWidth) {
                resultsListNode = $('.select2-results', $dropdown)[0];
                $dropdown.addClass('select2-drop-auto-width');
                $dropdown.css('width', '');
                // Add scrollbar width to dropdown if vertical scrollbar is present
                dropWidth = $dropdown.outerWidth(false) + (resultsListNode.scrollHeight === resultsListNode.clientHeight ? 0 : scrollBarDimensions.width);
                dropWidth > width ? width = dropWidth : dropWidth = width;
                dropHeight = $dropdown.outerHeight(false);
            }
            else {
                this.container.removeClass('select2-drop-auto-width');
            }

            //console.log("below/ droptop:", dropTop, "dropHeight", dropHeight, "sum", (dropTop+dropHeight)+" viewport bottom", viewportBottom, "enough?", enoughRoomBelow);
            //console.log("above/ offset.top", offset.top, "dropHeight", dropHeight, "top", (offset.top-dropHeight), "scrollTop", this.body.scrollTop(), "enough?", enoughRoomAbove);

            // fix positioning when body has an offset and is not position: static
            if (this.body.css('position') !== 'static') {
                bodyOffset = this.body.offset();
                dropTop -= bodyOffset.top;
                dropLeft -= bodyOffset.left;
            }

            if (!enoughRoomOnRight() && enoughRoomOnLeft()) {
                dropLeft = offset.left + this.container.outerWidth(false) - dropWidth;
            }

            css =  {
                left: dropLeft,
                width: width
            };

            if (above) {
                css.top = offset.top - dropHeight;
                css.bottom = 'auto';
                this.container.addClass("select2-drop-above");
                $dropdown.addClass("select2-drop-above");
            }
            else {
                css.top = dropTop;
                css.bottom = 'auto';
                this.container.removeClass("select2-drop-above");
                $dropdown.removeClass("select2-drop-above");
            }
            css = $.extend(css, evaluate(this.opts.dropdownCss, this.opts.element));

            $dropdown.css(css);
        },

        // abstract
        shouldOpen: function() {
            var event;

            if (this.opened()) return false;

            if (this._enabled === false || this._readonly === true) return false;

            event = $.Event("select2-opening");
            this.opts.element.trigger(event);
            return !event.isDefaultPrevented();
        },

        // abstract
        clearDropdownAlignmentPreference: function() {
            // clear the classes used to figure out the preference of where the dropdown should be opened
            this.container.removeClass("select2-drop-above");
            this.dropdown.removeClass("select2-drop-above");
        },

        /**
         * Opens the dropdown
         *
         * @return {Boolean} whether or not dropdown was opened. This method will return false if, for example,
         * the dropdown is already open, or if the 'open' event listener on the element called preventDefault().
         */
        // abstract
        open: function () {

            if (!this.shouldOpen()) return false;

            this.opening();

            // Only bind the document mousemove when the dropdown is visible
            $document.on("mousemove.select2Event", function (e) {
                lastMousePosition.x = e.pageX;
                lastMousePosition.y = e.pageY;
            });

            return true;
        },

        /**
         * Performs the opening of the dropdown
         */
        // abstract
        opening: function() {
            var cid = this.containerEventName,
                scroll = "scroll." + cid,
                resize = "resize."+cid,
                orient = "orientationchange."+cid,
                mask;

            this.container.addClass("select2-dropdown-open").addClass("select2-container-active");

            this.clearDropdownAlignmentPreference();

            if(this.dropdown[0] !== this.body.children().last()[0]) {
                this.dropdown.detach().appendTo(this.body);
            }

            // create the dropdown mask if doesn't already exist
            mask = $("#select2-drop-mask");
            if (mask.length === 0) {
                mask = $(document.createElement("div"));
                mask.attr("id","select2-drop-mask").attr("class","select2-drop-mask");
                mask.hide();
                mask.appendTo(this.body);
                mask.on("mousedown touchstart click", function (e) {
                    // Prevent IE from generating a click event on the body
                    reinsertElement(mask);

                    var dropdown = $("#select2-drop"), self;
                    if (dropdown.length > 0) {
                        self=dropdown.data("select2");
                        if (self.opts.selectOnBlur) {
                            self.selectHighlighted({noFocus: true});
                        }
                        self.close();
                        e.preventDefault();
                        e.stopPropagation();
                    }
                });
            }

            // ensure the mask is always right before the dropdown
            if (this.dropdown.prev()[0] !== mask[0]) {
                this.dropdown.before(mask);
            }

            // move the global id to the correct dropdown
            $("#select2-drop").removeAttr("id");
            this.dropdown.attr("id", "select2-drop");

            // show the elements
            mask.show();

            this.positionDropdown();
            this.dropdown.show();
            this.positionDropdown();

            this.dropdown.addClass("select2-drop-active");

            // attach listeners to events that can change the position of the container and thus require
            // the position of the dropdown to be updated as well so it does not come unglued from the container
            var that = this;
            this.container.parents().add(window).each(function () {
                $(this).on(resize+" "+scroll+" "+orient, function (e) {
                    if (that.opened()) that.positionDropdown();
                });
            });


        },

        // abstract
        close: function () {
            if (!this.opened()) return;

            var cid = this.containerEventName,
                scroll = "scroll." + cid,
                resize = "resize."+cid,
                orient = "orientationchange."+cid;

            // unbind event listeners
            this.container.parents().add(window).each(function () { $(this).off(scroll).off(resize).off(orient); });

            this.clearDropdownAlignmentPreference();

            $("#select2-drop-mask").hide();
            this.dropdown.removeAttr("id"); // only the active dropdown has the select2-drop id
            this.dropdown.hide();
            this.container.removeClass("select2-dropdown-open").removeClass("select2-container-active");
            this.results.empty();

            // Now that the dropdown is closed, unbind the global document mousemove event
            $document.off("mousemove.select2Event");

            this.clearSearch();
            this.search.removeClass("select2-active");
            this.opts.element.trigger($.Event("select2-close"));
        },

        /**
         * Opens control, sets input value, and updates results.
         */
        // abstract
        externalSearch: function (term) {
            this.open();
            this.search.val(term);
            this.updateResults(false);
        },

        // abstract
        clearSearch: function () {

        },

        //abstract
        getMaximumSelectionSize: function() {
            return evaluate(this.opts.maximumSelectionSize, this.opts.element);
        },

        // abstract
        ensureHighlightVisible: function () {
            var results = this.results, children, index, child, hb, rb, y, more, topOffset;

            index = this.highlight();

            if (index < 0) return;

            if (index == 0) {

                // if the first element is highlighted scroll all the way to the top,
                // that way any unselectable headers above it will also be scrolled
                // into view

                results.scrollTop(0);
                return;
            }

            children = this.findHighlightableChoices().find('.select2-result-label');

            child = $(children[index]);

            topOffset = (child.offset() || {}).top || 0;

            hb = topOffset + child.outerHeight(true);

            // if this is the last child lets also make sure select2-more-results is visible
            if (index === children.length - 1) {
                more = results.find("li.select2-more-results");
                if (more.length > 0) {
                    hb = more.offset().top + more.outerHeight(true);
                }
            }

            rb = results.offset().top + results.outerHeight(false);
            if (hb > rb) {
                results.scrollTop(results.scrollTop() + (hb - rb));
            }
            y = topOffset - results.offset().top;

            // make sure the top of the element is visible
            if (y < 0 && child.css('display') != 'none' ) {
                results.scrollTop(results.scrollTop() + y); // y is negative
            }
        },

        // abstract
        findHighlightableChoices: function() {
            return this.results.find(".select2-result-selectable:not(.select2-disabled):not(.select2-selected)");
        },

        // abstract
        moveHighlight: function (delta) {
            var choices = this.findHighlightableChoices(),
                index = this.highlight();

            while (index > -1 && index < choices.length) {
                index += delta;
                var choice = $(choices[index]);
                if (choice.hasClass("select2-result-selectable") && !choice.hasClass("select2-disabled") && !choice.hasClass("select2-selected")) {
                    this.highlight(index);
                    break;
                }
            }
        },

        // abstract
        highlight: function (index) {
            var choices = this.findHighlightableChoices(),
                choice,
                data;

            if (arguments.length === 0) {
                return indexOf(choices.filter(".select2-highlighted")[0], choices.get());
            }

            if (index >= choices.length) index = choices.length - 1;
            if (index < 0) index = 0;

            this.removeHighlight();

            choice = $(choices[index]);
            choice.addClass("select2-highlighted");

            // ensure assistive technology can determine the active choice
            this.search.attr("aria-activedescendant", choice.find(".select2-result-label").attr("id"));

            this.ensureHighlightVisible();

            this.liveRegion.text(choice.text());

            data = choice.data("select2-data");
            if (data) {
                this.opts.element.trigger({ type: "select2-highlight", val: this.id(data), choice: data });
            }
        },

        removeHighlight: function() {
            this.results.find(".select2-highlighted").removeClass("select2-highlighted");
        },

        touchMoved: function() {
            this._touchMoved = true;
        },

        clearTouchMoved: function() {
          this._touchMoved = false;
        },

        // abstract
        countSelectableResults: function() {
            return this.findHighlightableChoices().length;
        },

        // abstract
        highlightUnderEvent: function (event) {
            var el = $(event.target).closest(".select2-result-selectable");
            if (el.length > 0 && !el.is(".select2-highlighted")) {
                var choices = this.findHighlightableChoices();
                this.highlight(choices.index(el));
            } else if (el.length == 0) {
                // if we are over an unselectable item remove all highlights
                this.removeHighlight();
            }
        },

        // abstract
        loadMoreIfNeeded: function () {
            var results = this.results,
                more = results.find("li.select2-more-results"),
                below, // pixels the element is below the scroll fold, below==0 is when the element is starting to be visible
                page = this.resultsPage + 1,
                self=this,
                term=this.search.val(),
                context=this.context;

            if (more.length === 0) return;
            below = more.offset().top - results.offset().top - results.height();

            if (below <= this.opts.loadMorePadding) {
                more.addClass("select2-active");
                this.opts.query({
                        element: this.opts.element,
                        term: term,
                        page: page,
                        context: context,
                        matcher: this.opts.matcher,
                        callback: this.bind(function (data) {

                    // ignore a response if the select2 has been closed before it was received
                    if (!self.opened()) return;


                    self.opts.populateResults.call(this, results, data.results, {term: term, page: page, context:context});
                    self.postprocessResults(data, false, false);

                    if (data.more===true) {
                        more.detach().appendTo(results).html(self.opts.escapeMarkup(evaluate(self.opts.formatLoadMore, self.opts.element, page+1)));
                        window.setTimeout(function() { self.loadMoreIfNeeded(); }, 10);
                    } else {
                        more.remove();
                    }
                    self.positionDropdown();
                    self.resultsPage = page;
                    self.context = data.context;
                    this.opts.element.trigger({ type: "select2-loaded", items: data });
                })});
            }
        },

        /**
         * Default tokenizer function which does nothing
         */
        tokenize: function() {

        },

        /**
         * @param initial whether or not this is the call to this method right after the dropdown has been opened
         */
        // abstract
        updateResults: function (initial) {
            var search = this.search,
                results = this.results,
                opts = this.opts,
                data,
                self = this,
                input,
                term = search.val(),
                lastTerm = $.data(this.container, "select2-last-term"),
                // sequence number used to drop out-of-order responses
                queryNumber;

            // prevent duplicate queries against the same term
            if (initial !== true && lastTerm && equal(term, lastTerm)) return;

            $.data(this.container, "select2-last-term", term);

            // if the search is currently hidden we do not alter the results
            if (initial !== true && (this.showSearchInput === false || !this.opened())) {
                return;
            }

            function postRender() {
                search.removeClass("select2-active");
                self.positionDropdown();
                if (results.find('.select2-no-results,.select2-selection-limit,.select2-searching').length) {
                    self.liveRegion.text(results.text());
                }
                else {
                    self.liveRegion.text(self.opts.formatMatches(results.find('.select2-result-selectable:not(".select2-selected")').length));
                }
            }

            function render(html) {
                results.html(html);
                postRender();
            }

            queryNumber = ++this.queryCount;

            var maxSelSize = this.getMaximumSelectionSize();
            if (maxSelSize >=1) {
                data = this.data();
                if ($.isArray(data) && data.length >= maxSelSize && checkFormatter(opts.formatSelectionTooBig, "formatSelectionTooBig")) {
                    render("<li class='select2-selection-limit'>" + evaluate(opts.formatSelectionTooBig, opts.element, maxSelSize) + "</li>");
                    return;
                }
            }

            if (search.val().length < opts.minimumInputLength) {
                if (checkFormatter(opts.formatInputTooShort, "formatInputTooShort")) {
                    render("<li class='select2-no-results'>" + evaluate(opts.formatInputTooShort, opts.element, search.val(), opts.minimumInputLength) + "</li>");
                } else {
                    render("");
                }
                if (initial && this.showSearch) this.showSearch(true);
                return;
            }

            if (opts.maximumInputLength && search.val().length > opts.maximumInputLength) {
                if (checkFormatter(opts.formatInputTooLong, "formatInputTooLong")) {
                    render("<li class='select2-no-results'>" + evaluate(opts.formatInputTooLong, opts.element, search.val(), opts.maximumInputLength) + "</li>");
                } else {
                    render("");
                }
                return;
            }

            if (opts.formatSearching && this.findHighlightableChoices().length === 0) {
                render("<li class='select2-searching'>" + evaluate(opts.formatSearching, opts.element) + "</li>");
            }

            search.addClass("select2-active");

            this.removeHighlight();

            // give the tokenizer a chance to pre-process the input
            input = this.tokenize();
            if (input != undefined && input != null) {
                search.val(input);
            }

            this.resultsPage = 1;

            opts.query({
                element: opts.element,
                    term: search.val(),
                    page: this.resultsPage,
                    context: null,
                    matcher: opts.matcher,
                    callback: this.bind(function (data) {
                var def; // default choice

                // ignore old responses
                if (queryNumber != this.queryCount) {
                  return;
                }

                // ignore a response if the select2 has been closed before it was received
                if (!this.opened()) {
                    this.search.removeClass("select2-active");
                    return;
                }

                // handle ajax error
                if(data.hasError !== undefined && checkFormatter(opts.formatAjaxError, "formatAjaxError")) {
                    render("<li class='select2-ajax-error'>" + evaluate(opts.formatAjaxError, opts.element, data.jqXHR, data.textStatus, data.errorThrown) + "</li>");
                    return;
                }

                // save context, if any
                this.context = (data.context===undefined) ? null : data.context;
                // create a default choice and prepend it to the list
                if (this.opts.createSearchChoice && search.val() !== "") {
                    def = this.opts.createSearchChoice.call(self, search.val(), data.results);
                    if (def !== undefined && def !== null && self.id(def) !== undefined && self.id(def) !== null) {
                        if ($(data.results).filter(
                            function () {
                                return equal(self.id(this), self.id(def));
                            }).length === 0) {
                            this.opts.createSearchChoicePosition(data.results, def);
                        }
                    }
                }

                if (data.results.length === 0 && checkFormatter(opts.formatNoMatches, "formatNoMatches")) {
                    render("<li class='select2-no-results'>" + evaluate(opts.formatNoMatches, opts.element, search.val()) + "</li>");
                    return;
                }

                results.empty();
                self.opts.populateResults.call(this, results, data.results, {term: search.val(), page: this.resultsPage, context:null});

                if (data.more === true && checkFormatter(opts.formatLoadMore, "formatLoadMore")) {
                    results.append("<li class='select2-more-results'>" + opts.escapeMarkup(evaluate(opts.formatLoadMore, opts.element, this.resultsPage)) + "</li>");
                    window.setTimeout(function() { self.loadMoreIfNeeded(); }, 10);
                }

                this.postprocessResults(data, initial);

                postRender();

                this.opts.element.trigger({ type: "select2-loaded", items: data });
            })});
        },

        // abstract
        cancel: function () {
            this.close();
        },

        // abstract
        blur: function () {
            // if selectOnBlur == true, select the currently highlighted option
            if (this.opts.selectOnBlur)
                this.selectHighlighted({noFocus: true});

            this.close();
            this.container.removeClass("select2-container-active");
            // synonymous to .is(':focus'), which is available in jquery >= 1.6
            if (this.search[0] === document.activeElement) { this.search.blur(); }
            this.clearSearch();
            this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus");
        },

        // abstract
        focusSearch: function () {
            focus(this.search);
        },

        // abstract
        selectHighlighted: function (options) {
            if (this._touchMoved) {
              this.clearTouchMoved();
              return;
            }
            var index=this.highlight(),
                highlighted=this.results.find(".select2-highlighted"),
                data = highlighted.closest('.select2-result').data("select2-data");

            if (data) {
                this.highlight(index);
                this.onSelect(data, options);
            } else if (options && options.noFocus) {
                this.close();
            }
        },

        // abstract
        getPlaceholder: function () {
            var placeholderOption;
            return this.opts.element.attr("placeholder") ||
                this.opts.element.attr("data-placeholder") || // jquery 1.4 compat
                this.opts.element.data("placeholder") ||
                this.opts.placeholder ||
                ((placeholderOption = this.getPlaceholderOption()) !== undefined ? placeholderOption.text() : undefined);
        },

        // abstract
        getPlaceholderOption: function() {
            if (this.select) {
                var firstOption = this.select.children('option').first();
                if (this.opts.placeholderOption !== undefined ) {
                    //Determine the placeholder option based on the specified placeholderOption setting
                    return (this.opts.placeholderOption === "first" && firstOption) ||
                           (typeof this.opts.placeholderOption === "function" && this.opts.placeholderOption(this.select));
                } else if ($.trim(firstOption.text()) === "" && firstOption.val() === "") {
                    //No explicit placeholder option specified, use the first if it's blank
                    return firstOption;
                }
            }
        },

        /**
         * Get the desired width for the container element.  This is
         * derived first from option `width` passed to select2, then
         * the inline 'style' on the original element, and finally
         * falls back to the jQuery calculated element width.
         */
        // abstract
        initContainerWidth: function () {
            function resolveContainerWidth() {
                var style, attrs, matches, i, l, attr;

                if (this.opts.width === "off") {
                    return null;
                } else if (this.opts.width === "element"){
                    return this.opts.element.outerWidth(false) === 0 ? 'auto' : this.opts.element.outerWidth(false) + 'px';
                } else if (this.opts.width === "copy" || this.opts.width === "resolve") {
                    // check if there is inline style on the element that contains width
                    style = this.opts.element.attr('style');
                    if (style !== undefined) {
                        attrs = style.split(';');
                        for (i = 0, l = attrs.length; i < l; i = i + 1) {
                            attr = attrs[i].replace(/\s/g, '');
                            matches = attr.match(/^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i);
                            if (matches !== null && matches.length >= 1)
                                return matches[1];
                        }
                    }

                    if (this.opts.width === "resolve") {
                        // next check if css('width') can resolve a width that is percent based, this is sometimes possible
                        // when attached to input type=hidden or elements hidden via css
                        style = this.opts.element.css('width');
                        if (style.indexOf("%") > 0) return style;

                        // finally, fallback on the calculated width of the element
                        return (this.opts.element.outerWidth(false) === 0 ? 'auto' : this.opts.element.outerWidth(false) + 'px');
                    }

                    return null;
                } else if ($.isFunction(this.opts.width)) {
                    return this.opts.width();
                } else {
                    return this.opts.width;
               }
            };

            var width = resolveContainerWidth.call(this);
            if (width !== null) {
                this.container.css("width", width);
            }
        }
    });

    SingleSelect2 = clazz(AbstractSelect2, {

        // single

        createContainer: function () {
            var container = $(document.createElement("div")).attr({
                "class": "select2-container"
            }).html([
                "<a href='javascript:void(0)' class='select2-choice' tabindex='-1'>",
                "   <span class='select2-chosen'>&#160;</span><abbr class='select2-search-choice-close'></abbr>",
                "   <span class='select2-arrow' role='presentation'><b role='presentation'></b></span>",
                "</a>",
                "<label for='' class='select2-offscreen'></label>",
                "<input class='select2-focusser select2-offscreen' type='text' aria-haspopup='true' role='button' />",
                "<div class='select2-drop select2-display-none'>",
                "   <div class='select2-search'>",
                "       <label for='' class='select2-offscreen'></label>",
                "       <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input' role='combobox' aria-expanded='true'",
                "       aria-autocomplete='list' />",
                "   </div>",
                "   <ul class='select2-results' role='listbox'>",
                "   </ul>",
                "</div>"].join(""));
            return container;
        },

        // single
        enableInterface: function() {
            if (this.parent.enableInterface.apply(this, arguments)) {
                this.focusser.prop("disabled", !this.isInterfaceEnabled());
            }
        },

        // single
        opening: function () {
            var el, range, len;

            if (this.opts.minimumResultsForSearch >= 0) {
                this.showSearch(true);
            }

            this.parent.opening.apply(this, arguments);

            if (this.showSearchInput !== false) {
                // IE appends focusser.val() at the end of field :/ so we manually insert it at the beginning using a range
                // all other browsers handle this just fine

                this.search.val(this.focusser.val());
            }
            if (this.opts.shouldFocusInput(this)) {
                this.search.focus();
                // move the cursor to the end after focussing, otherwise it will be at the beginning and
                // new text will appear *before* focusser.val()
                el = this.search.get(0);
                if (el.createTextRange) {
                    range = el.createTextRange();
                    range.collapse(false);
                    range.select();
                } else if (el.setSelectionRange) {
                    len = this.search.val().length;
                    el.setSelectionRange(len, len);
                }
            }

            // initializes search's value with nextSearchTerm (if defined by user)
            // ignore nextSearchTerm if the dropdown is opened by the user pressing a letter
            if(this.search.val() === "") {
                if(this.nextSearchTerm != undefined){
                    this.search.val(this.nextSearchTerm);
                    this.search.select();
                }
            }

            this.focusser.prop("disabled", true).val("");
            this.updateResults(true);
            this.opts.element.trigger($.Event("select2-open"));
        },

        // single
        close: function () {
            if (!this.opened()) return;
            this.parent.close.apply(this, arguments);

            this.focusser.prop("disabled", false);

            if (this.opts.shouldFocusInput(this)) {
                this.focusser.focus();
            }
        },

        // single
        focus: function () {
            if (this.opened()) {
                this.close();
            } else {
                this.focusser.prop("disabled", false);
                if (this.opts.shouldFocusInput(this)) {
                    this.focusser.focus();
                }
            }
        },

        // single
        isFocused: function () {
            return this.container.hasClass("select2-container-active");
        },

        // single
        cancel: function () {
            this.parent.cancel.apply(this, arguments);
            this.focusser.prop("disabled", false);

            if (this.opts.shouldFocusInput(this)) {
                this.focusser.focus();
            }
        },

        // single
        destroy: function() {
            $("label[for='" + this.focusser.attr('id') + "']")
                .attr('for', this.opts.element.attr("id"));
            this.parent.destroy.apply(this, arguments);

            cleanupJQueryElements.call(this,
                "selection",
                "focusser"
            );
        },

        // single
        initContainer: function () {

            var selection,
                container = this.container,
                dropdown = this.dropdown,
                idSuffix = nextUid(),
                elementLabel;

            if (this.opts.minimumResultsForSearch < 0) {
                this.showSearch(false);
            } else {
                this.showSearch(true);
            }

            this.selection = selection = container.find(".select2-choice");

            this.focusser = container.find(".select2-focusser");

            // add aria associations
            selection.find(".select2-chosen").attr("id", "select2-chosen-"+idSuffix);
            this.focusser.attr("aria-labelledby", "select2-chosen-"+idSuffix);
            this.results.attr("id", "select2-results-"+idSuffix);
            this.search.attr("aria-owns", "select2-results-"+idSuffix);

            // rewrite labels from original element to focusser
            this.focusser.attr("id", "s2id_autogen"+idSuffix);

            elementLabel = $("label[for='" + this.opts.element.attr("id") + "']");
            this.opts.element.focus(this.bind(function () { this.focus(); }));

            this.focusser.prev()
                .text(elementLabel.text())
                .attr('for', this.focusser.attr('id'));

            // Ensure the original element retains an accessible name
            var originalTitle = this.opts.element.attr("title");
            this.opts.element.attr("title", (originalTitle || elementLabel.text()));

            this.focusser.attr("tabindex", this.elementTabIndex);

            // write label for search field using the label from the focusser element
            this.search.attr("id", this.focusser.attr('id') + '_search');

            this.search.prev()
                .text($("label[for='" + this.focusser.attr('id') + "']").text())
                .attr('for', this.search.attr('id'));

            this.search.on("keydown", this.bind(function (e) {
                if (!this.isInterfaceEnabled()) return;

                // filter 229 keyCodes (input method editor is processing key input)
                if (229 == e.keyCode) return;

                if (e.which === KEY.PAGE_UP || e.which === KEY.PAGE_DOWN) {
                    // prevent the page from scrolling
                    killEvent(e);
                    return;
                }

                switch (e.which) {
                    case KEY.UP:
                    case KEY.DOWN:
                        this.moveHighlight((e.which === KEY.UP) ? -1 : 1);
                        killEvent(e);
                        return;
                    case KEY.ENTER:
                        this.selectHighlighted();
                        killEvent(e);
                        return;
                    case KEY.TAB:
                        this.selectHighlighted({noFocus: true});
                        return;
                    case KEY.ESC:
                        this.cancel(e);
                        killEvent(e);
                        return;
                }
            }));

            this.search.on("blur", this.bind(function(e) {
                // a workaround for chrome to keep the search field focussed when the scroll bar is used to scroll the dropdown.
                // without this the search field loses focus which is annoying
                if (document.activeElement === this.body.get(0)) {
                    window.setTimeout(this.bind(function() {
                        if (this.opened()) {
                            this.search.focus();
                        }
                    }), 0);
                }
            }));

            this.focusser.on("keydown", this.bind(function (e) {
                if (!this.isInterfaceEnabled()) return;

                if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {
                    return;
                }

                if (this.opts.openOnEnter === false && e.which === KEY.ENTER) {
                    killEvent(e);
                    return;
                }

                if (e.which == KEY.DOWN || e.which == KEY.UP
                    || (e.which == KEY.ENTER && this.opts.openOnEnter)) {

                    if (e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) return;

                    this.open();
                    killEvent(e);
                    return;
                }

                if (e.which == KEY.DELETE || e.which == KEY.BACKSPACE) {
                    if (this.opts.allowClear) {
                        this.clear();
                    }
                    killEvent(e);
                    return;
                }
            }));


            installKeyUpChangeEvent(this.focusser);
            this.focusser.on("keyup-change input", this.bind(function(e) {
                if (this.opts.minimumResultsForSearch >= 0) {
                    e.stopPropagation();
                    if (this.opened()) return;
                    this.open();
                }
            }));

            selection.on("mousedown touchstart", "abbr", this.bind(function (e) {
                if (!this.isInterfaceEnabled()) {
                    return;
                }

                this.clear();
                killEventImmediately(e);
                this.close();

                if (this.selection) {
                    this.selection.focus();
                }
            }));

            selection.on("mousedown touchstart", this.bind(function (e) {
                // Prevent IE from generating a click event on the body
                reinsertElement(selection);

                if (!this.container.hasClass("select2-container-active")) {
                    this.opts.element.trigger($.Event("select2-focus"));
                }

                if (this.opened()) {
                    this.close();
                } else if (this.isInterfaceEnabled()) {
                    this.open();
                }

                killEvent(e);
            }));

            dropdown.on("mousedown touchstart", this.bind(function() {
                if (this.opts.shouldFocusInput(this)) {
                    this.search.focus();
                }
            }));

            selection.on("focus", this.bind(function(e) {
                killEvent(e);
            }));

            this.focusser.on("focus", this.bind(function(){
                if (!this.container.hasClass("select2-container-active")) {
                    this.opts.element.trigger($.Event("select2-focus"));
                }
                this.container.addClass("select2-container-active");
            })).on("blur", this.bind(function() {
                if (!this.opened()) {
                    this.container.removeClass("select2-container-active");
                    this.opts.element.trigger($.Event("select2-blur"));
                }
            }));
            this.search.on("focus", this.bind(function(){
                if (!this.container.hasClass("select2-container-active")) {
                    this.opts.element.trigger($.Event("select2-focus"));
                }
                this.container.addClass("select2-container-active");
            }));

            this.initContainerWidth();
            this.opts.element.hide();
            this.setPlaceholder();

        },

        // single
        clear: function(triggerChange) {
            var data=this.selection.data("select2-data");
            if (data) { // guard against queued quick consecutive clicks
                var evt = $.Event("select2-clearing");
                this.opts.element.trigger(evt);
                if (evt.isDefaultPrevented()) {
                    return;
                }
                var placeholderOption = this.getPlaceholderOption();
                this.opts.element.val(placeholderOption ? placeholderOption.val() : "");
                this.selection.find(".select2-chosen").empty();
                this.selection.removeData("select2-data");
                this.setPlaceholder();

                if (triggerChange !== false){
                    this.opts.element.trigger({ type: "select2-removed", val: this.id(data), choice: data });
                    this.triggerChange({removed:data});
                }
            }
        },

        /**
         * Sets selection based on source element's value
         */
        // single
        initSelection: function () {
            var selected;
            if (this.isPlaceholderOptionSelected()) {
                this.updateSelection(null);
                this.close();
                this.setPlaceholder();
            } else {
                var self = this;
                this.opts.initSelection.call(null, this.opts.element, function(selected){
                    if (selected !== undefined && selected !== null) {
                        self.updateSelection(selected);
                        self.close();
                        self.setPlaceholder();
                        self.nextSearchTerm = self.opts.nextSearchTerm(selected, self.search.val());
                    }
                });
            }
        },

        isPlaceholderOptionSelected: function() {
            var placeholderOption;
            if (this.getPlaceholder() === undefined) return false; // no placeholder specified so no option should be considered
            return ((placeholderOption = this.getPlaceholderOption()) !== undefined && placeholderOption.prop("selected"))
                || (this.opts.element.val() === "")
                || (this.opts.element.val() === undefined)
                || (this.opts.element.val() === null);
        },

        // single
        prepareOpts: function () {
            var opts = this.parent.prepareOpts.apply(this, arguments),
                self=this;

            if (opts.element.get(0).tagName.toLowerCase() === "select") {
                // install the selection initializer
                opts.initSelection = function (element, callback) {
                    var selected = element.find("option").filter(function() { return this.selected && !this.disabled });
                    // a single select box always has a value, no need to null check 'selected'
                    callback(self.optionToData(selected));
                };
            } else if ("data" in opts) {
                // install default initSelection when applied to hidden input and data is local
                opts.initSelection = opts.initSelection || function (element, callback) {
                    var id = element.val();
                    //search in data by id, storing the actual matching item
                    var match = null;
                    opts.query({
                        matcher: function(term, text, el){
                            var is_match = equal(id, opts.id(el));
                            if (is_match) {
                                match = el;
                            }
                            return is_match;
                        },
                        callback: !$.isFunction(callback) ? $.noop : function() {
                            callback(match);
                        }
                    });
                };
            }

            return opts;
        },

        // single
        getPlaceholder: function() {
            // if a placeholder is specified on a single select without a valid placeholder option ignore it
            if (this.select) {
                if (this.getPlaceholderOption() === undefined) {
                    return undefined;
                }
            }

            return this.parent.getPlaceholder.apply(this, arguments);
        },

        // single
        setPlaceholder: function () {
            var placeholder = this.getPlaceholder();

            if (this.isPlaceholderOptionSelected() && placeholder !== undefined) {

                // check for a placeholder option if attached to a select
                if (this.select && this.getPlaceholderOption() === undefined) return;

                this.selection.find(".select2-chosen").html(this.opts.escapeMarkup(placeholder));

                this.selection.addClass("select2-default");

                this.container.removeClass("select2-allowclear");
            }
        },

        // single
        postprocessResults: function (data, initial, noHighlightUpdate) {
            var selected = 0, self = this, showSearchInput = true;

            // find the selected element in the result list

            this.findHighlightableChoices().each2(function (i, elm) {
                if (equal(self.id(elm.data("select2-data")), self.opts.element.val())) {
                    selected = i;
                    return false;
                }
            });

            // and highlight it
            if (noHighlightUpdate !== false) {
                if (initial === true && selected >= 0) {
                    this.highlight(selected);
                } else {
                    this.highlight(0);
                }
            }

            // hide the search box if this is the first we got the results and there are enough of them for search

            if (initial === true) {
                var min = this.opts.minimumResultsForSearch;
                if (min >= 0) {
                    this.showSearch(countResults(data.results) >= min);
                }
            }
        },

        // single
        showSearch: function(showSearchInput) {
            if (this.showSearchInput === showSearchInput) return;

            this.showSearchInput = showSearchInput;

            this.dropdown.find(".select2-search").toggleClass("select2-search-hidden", !showSearchInput);
            this.dropdown.find(".select2-search").toggleClass("select2-offscreen", !showSearchInput);
            //add "select2-with-searchbox" to the container if search box is shown
            $(this.dropdown, this.container).toggleClass("select2-with-searchbox", showSearchInput);
        },

        // single
        onSelect: function (data, options) {

            if (!this.triggerSelect(data)) { return; }

            var old = this.opts.element.val(),
                oldData = this.data();

            this.opts.element.val(this.id(data));
            this.updateSelection(data);

            this.opts.element.trigger({ type: "select2-selected", val: this.id(data), choice: data });

            this.nextSearchTerm = this.opts.nextSearchTerm(data, this.search.val());
            this.close();

            if ((!options || !options.noFocus) && this.opts.shouldFocusInput(this)) {
                this.focusser.focus();
            }

            if (!equal(old, this.id(data))) {
                this.triggerChange({ added: data, removed: oldData });
            }
        },

        // single
        updateSelection: function (data) {

            var container=this.selection.find(".select2-chosen"), formatted, cssClass;

            this.selection.data("select2-data", data);

            container.empty();
            if (data !== null) {
                formatted=this.opts.formatSelection(data, container, this.opts.escapeMarkup);
            }
            if (formatted !== undefined) {
                container.append(formatted);
            }
            cssClass=this.opts.formatSelectionCssClass(data, container);
            if (cssClass !== undefined) {
                container.addClass(cssClass);
            }

            this.selection.removeClass("select2-default");

            if (this.opts.allowClear && this.getPlaceholder() !== undefined) {
                this.container.addClass("select2-allowclear");
            }
        },

        // single
        val: function () {
            var val,
                triggerChange = false,
                data = null,
                self = this,
                oldData = this.data();

            if (arguments.length === 0) {
                return this.opts.element.val();
            }

            val = arguments[0];

            if (arguments.length > 1) {
                triggerChange = arguments[1];
            }

            if (this.select) {
                this.select
                    .val(val)
                    .find("option").filter(function() { return this.selected }).each2(function (i, elm) {
                        data = self.optionToData(elm);
                        return false;
                    });
                this.updateSelection(data);
                this.setPlaceholder();
                if (triggerChange) {
                    this.triggerChange({added: data, removed:oldData});
                }
            } else {
                // val is an id. !val is true for [undefined,null,'',0] - 0 is legal
                if (!val && val !== 0) {
                    this.clear(triggerChange);
                    return;
                }
                if (this.opts.initSelection === undefined) {
                    throw new Error("cannot call val() if initSelection() is not defined");
                }
                this.opts.element.val(val);
                this.opts.initSelection(this.opts.element, function(data){
                    self.opts.element.val(!data ? "" : self.id(data));
                    self.updateSelection(data);
                    self.setPlaceholder();
                    if (triggerChange) {
                        self.triggerChange({added: data, removed:oldData});
                    }
                });
            }
        },

        // single
        clearSearch: function () {
            this.search.val("");
            this.focusser.val("");
        },

        // single
        data: function(value) {
            var data,
                triggerChange = false;

            if (arguments.length === 0) {
                data = this.selection.data("select2-data");
                if (data == undefined) data = null;
                return data;
            } else {
                if (arguments.length > 1) {
                    triggerChange = arguments[1];
                }
                if (!value) {
                    this.clear(triggerChange);
                } else {
                    data = this.data();
                    this.opts.element.val(!value ? "" : this.id(value));
                    this.updateSelection(value);
                    if (triggerChange) {
                        this.triggerChange({added: value, removed:data});
                    }
                }
            }
        }
    });

    MultiSelect2 = clazz(AbstractSelect2, {

        // multi
        createContainer: function () {
            var container = $(document.createElement("div")).attr({
                "class": "select2-container select2-container-multi"
            }).html([
                "<ul class='select2-choices'>",
                "  <li class='select2-search-field'>",
                "    <label for='' class='select2-offscreen'></label>",
                "    <input type='text' autocomplete='off' autocorrect='off' autocapitalize='off' spellcheck='false' class='select2-input'>",
                "  </li>",
                "</ul>",
                "<div class='select2-drop select2-drop-multi select2-display-none'>",
                "   <ul class='select2-results'>",
                "   </ul>",
                "</div>"].join(""));
            return container;
        },

        // multi
        prepareOpts: function () {
            var opts = this.parent.prepareOpts.apply(this, arguments),
                self=this;

            // TODO validate placeholder is a string if specified
            if (opts.element.get(0).tagName.toLowerCase() === "select") {
                // install the selection initializer
                opts.initSelection = function (element, callback) {

                    var data = [];

                    element.find("option").filter(function() { return this.selected && !this.disabled }).each2(function (i, elm) {
                        data.push(self.optionToData(elm));
                    });
                    callback(data);
                };
            } else if ("data" in opts) {
                // install default initSelection when applied to hidden input and data is local
                opts.initSelection = opts.initSelection || function (element, callback) {
                    var ids = splitVal(element.val(), opts.separator, opts.transformVal);
                    //search in data by array of ids, storing matching items in a list
                    var matches = [];
                    opts.query({
                        matcher: function(term, text, el){
                            var is_match = $.grep(ids, function(id) {
                                return equal(id, opts.id(el));
                            }).length;
                            if (is_match) {
                                matches.push(el);
                            }
                            return is_match;
                        },
                        callback: !$.isFunction(callback) ? $.noop : function() {
                            // reorder matches based on the order they appear in the ids array because right now
                            // they are in the order in which they appear in data array
                            var ordered = [];
                            for (var i = 0; i < ids.length; i++) {
                                var id = ids[i];
                                for (var j = 0; j < matches.length; j++) {
                                    var match = matches[j];
                                    if (equal(id, opts.id(match))) {
                                        ordered.push(match);
                                        matches.splice(j, 1);
                                        break;
                                    }
                                }
                            }
                            callback(ordered);
                        }
                    });
                };
            }

            return opts;
        },

        // multi
        selectChoice: function (choice) {

            var selected = this.container.find(".select2-search-choice-focus");
            if (selected.length && choice && choice[0] == selected[0]) {

            } else {
                if (selected.length) {
                    this.opts.element.trigger("choice-deselected", selected);
                }
                selected.removeClass("select2-search-choice-focus");
                if (choice && choice.length) {
                    this.close();
                    choice.addClass("select2-search-choice-focus");
                    this.opts.element.trigger("choice-selected", choice);
                }
            }
        },

        // multi
        destroy: function() {
            $("label[for='" + this.search.attr('id') + "']")
                .attr('for', this.opts.element.attr("id"));
            this.parent.destroy.apply(this, arguments);

            cleanupJQueryElements.call(this,
                "searchContainer",
                "selection"
            );
        },

        // multi
        initContainer: function () {

            var selector = ".select2-choices", selection;

            this.searchContainer = this.container.find(".select2-search-field");
            this.selection = selection = this.container.find(selector);

            var _this = this;
            this.selection.on("click", ".select2-container:not(.select2-container-disabled) .select2-search-choice:not(.select2-locked)", function (e) {
                _this.search[0].focus();
                _this.selectChoice($(this));
            });

            // rewrite labels from original element to focusser
            this.search.attr("id", "s2id_autogen"+nextUid());

            this.search.prev()
                .text($("label[for='" + this.opts.element.attr("id") + "']").text())
                .attr('for', this.search.attr('id'));
            this.opts.element.focus(this.bind(function () { this.focus(); }));

            this.search.on("input paste", this.bind(function() {
                if (this.search.attr('placeholder') && this.search.val().length == 0) return;
                if (!this.isInterfaceEnabled()) return;
                if (!this.opened()) {
                    this.open();
                }
            }));

            this.search.attr("tabindex", this.elementTabIndex);

            this.keydowns = 0;
            this.search.on("keydown", this.bind(function (e) {
                if (!this.isInterfaceEnabled()) return;

                ++this.keydowns;
                var selected = selection.find(".select2-search-choice-focus");
                var prev = selected.prev(".select2-search-choice:not(.select2-locked)");
                var next = selected.next(".select2-search-choice:not(.select2-locked)");
                var pos = getCursorInfo(this.search);

                if (selected.length &&
                    (e.which == KEY.LEFT || e.which == KEY.RIGHT || e.which == KEY.BACKSPACE || e.which == KEY.DELETE || e.which == KEY.ENTER)) {
                    var selectedChoice = selected;
                    if (e.which == KEY.LEFT && prev.length) {
                        selectedChoice = prev;
                    }
                    else if (e.which == KEY.RIGHT) {
                        selectedChoice = next.length ? next : null;
                    }
                    else if (e.which === KEY.BACKSPACE) {
                        if (this.unselect(selected.first())) {
                            this.search.width(10);
                            selectedChoice = prev.length ? prev : next;
                        }
                    } else if (e.which == KEY.DELETE) {
                        if (this.unselect(selected.first())) {
                            this.search.width(10);
                            selectedChoice = next.length ? next : null;
                        }
                    } else if (e.which == KEY.ENTER) {
                        selectedChoice = null;
                    }

                    this.selectChoice(selectedChoice);
                    killEvent(e);
                    if (!selectedChoice || !selectedChoice.length) {
                        this.open();
                    }
                    return;
                } else if (((e.which === KEY.BACKSPACE && this.keydowns == 1)
                    || e.which == KEY.LEFT) && (pos.offset == 0 && !pos.length)) {

                    this.selectChoice(selection.find(".select2-search-choice:not(.select2-locked)").last());
                    killEvent(e);
                    return;
                } else {
                    this.selectChoice(null);
                }

                if (this.opened()) {
                    switch (e.which) {
                    case KEY.UP:
                    case KEY.DOWN:
                        this.moveHighlight((e.which === KEY.UP) ? -1 : 1);
                        killEvent(e);
                        return;
                    case KEY.ENTER:
                        this.selectHighlighted();
                        killEvent(e);
                        return;
                    case KEY.TAB:
                        this.selectHighlighted({noFocus:true});
                        this.close();
                        return;
                    case KEY.ESC:
                        this.cancel(e);
                        killEvent(e);
                        return;
                    }
                }

                if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e)
                 || e.which === KEY.BACKSPACE || e.which === KEY.ESC) {
                    return;
                }

                if (e.which === KEY.ENTER) {
                    if (this.opts.openOnEnter === false) {
                        return;
                    } else if (e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) {
                        return;
                    }
                }

                this.open();

                if (e.which === KEY.PAGE_UP || e.which === KEY.PAGE_DOWN) {
                    // prevent the page from scrolling
                    killEvent(e);
                }

                if (e.which === KEY.ENTER) {
                    // prevent form from being submitted
                    killEvent(e);
                }

            }));

            this.search.on("keyup", this.bind(function (e) {
                this.keydowns = 0;
                this.resizeSearch();
            })
            );

            this.search.on("blur", this.bind(function(e) {
                this.container.removeClass("select2-container-active");
                this.search.removeClass("select2-focused");
                this.selectChoice(null);
                if (!this.opened()) this.clearSearch();
                e.stopImmediatePropagation();
                this.opts.element.trigger($.Event("select2-blur"));
            }));

            this.container.on("click", selector, this.bind(function (e) {
                if (!this.isInterfaceEnabled()) return;
                if ($(e.target).closest(".select2-search-choice").length > 0) {
                    // clicked inside a select2 search choice, do not open
                    return;
                }
                this.selectChoice(null);
                this.clearPlaceholder();
                if (!this.container.hasClass("select2-container-active")) {
                    this.opts.element.trigger($.Event("select2-focus"));
                }
                this.open();
                this.focusSearch();
                e.preventDefault();
            }));

            this.container.on("focus", selector, this.bind(function () {
                if (!this.isInterfaceEnabled()) return;
                if (!this.container.hasClass("select2-container-active")) {
                    this.opts.element.trigger($.Event("select2-focus"));
                }
                this.container.addClass("select2-container-active");
                this.dropdown.addClass("select2-drop-active");
                this.clearPlaceholder();
            }));

            this.initContainerWidth();
            this.opts.element.hide();

            // set the placeholder if necessary
            this.clearSearch();
        },

        // multi
        enableInterface: function() {
            if (this.parent.enableInterface.apply(this, arguments)) {
                this.search.prop("disabled", !this.isInterfaceEnabled());
            }
        },

        // multi
        initSelection: function () {
            var data;
            if (this.opts.element.val() === "" && this.opts.element.text() === "") {
                this.updateSelection([]);
                this.close();
                // set the placeholder if necessary
                this.clearSearch();
            }
            if (this.select || this.opts.element.val() !== "") {
                var self = this;
                this.opts.initSelection.call(null, this.opts.element, function(data){
                    if (data !== undefined && data !== null) {
                        self.updateSelection(data);
                        self.close();
                        // set the placeholder if necessary
                        self.clearSearch();
                    }
                });
            }
        },

        // multi
        clearSearch: function () {
            var placeholder = this.getPlaceholder(),
                maxWidth = this.getMaxSearchWidth();

            if (placeholder !== undefined  && this.getVal().length === 0 && this.search.hasClass("select2-focused") === false) {
                this.search.val(placeholder).addClass("select2-default");
                // stretch the search box to full width of the container so as much of the placeholder is visible as possible
                // we could call this.resizeSearch(), but we do not because that requires a sizer and we do not want to create one so early because of a firefox bug, see #944
                this.search.width(maxWidth > 0 ? maxWidth : this.container.css("width"));
            } else {
                this.search.val("").width(10);
            }
        },

        // multi
        clearPlaceholder: function () {
            if (this.search.hasClass("select2-default")) {
                this.search.val("").removeClass("select2-default");
            }
        },

        // multi
        opening: function () {
            this.clearPlaceholder(); // should be done before super so placeholder is not used to search
            this.resizeSearch();

            this.parent.opening.apply(this, arguments);

            this.focusSearch();

            // initializes search's value with nextSearchTerm (if defined by user)
            // ignore nextSearchTerm if the dropdown is opened by the user pressing a letter
            if(this.search.val() === "") {
                if(this.nextSearchTerm != undefined){
                    this.search.val(this.nextSearchTerm);
                    this.search.select();
                }
            }

            this.updateResults(true);
            if (this.opts.shouldFocusInput(this)) {
                this.search.focus();
            }
            this.opts.element.trigger($.Event("select2-open"));
        },

        // multi
        close: function () {
            if (!this.opened()) return;
            this.parent.close.apply(this, arguments);
        },

        // multi
        focus: function () {
            this.close();
            this.search.focus();
        },

        // multi
        isFocused: function () {
            return this.search.hasClass("select2-focused");
        },

        // multi
        updateSelection: function (data) {
            var ids = [], filtered = [], self = this;

            // filter out duplicates
            $(data).each(function () {
                if (indexOf(self.id(this), ids) < 0) {
                    ids.push(self.id(this));
                    filtered.push(this);
                }
            });
            data = filtered;

            this.selection.find(".select2-search-choice").remove();
            $(data).each(function () {
                self.addSelectedChoice(this);
            });
            self.postprocessResults();
        },

        // multi
        tokenize: function() {
            var input = this.search.val();
            input = this.opts.tokenizer.call(this, input, this.data(), this.bind(this.onSelect), this.opts);
            if (input != null && input != undefined) {
                this.search.val(input);
                if (input.length > 0) {
                    this.open();
                }
            }

        },

        // multi
        onSelect: function (data, options) {

            if (!this.triggerSelect(data) || data.text === "") { return; }

            this.addSelectedChoice(data);

            this.opts.element.trigger({ type: "selected", val: this.id(data), choice: data });

            // keep track of the search's value before it gets cleared
            this.nextSearchTerm = this.opts.nextSearchTerm(data, this.search.val());

            this.clearSearch();
            this.updateResults();

            if (this.select || !this.opts.closeOnSelect) this.postprocessResults(data, false, this.opts.closeOnSelect===true);

            if (this.opts.closeOnSelect) {
                this.close();
                this.search.width(10);
            } else {
                if (this.countSelectableResults()>0) {
                    this.search.width(10);
                    this.resizeSearch();
                    if (this.getMaximumSelectionSize() > 0 && this.val().length >= this.getMaximumSelectionSize()) {
                        // if we reached max selection size repaint the results so choices
                        // are replaced with the max selection reached message
                        this.updateResults(true);
                    } else {
                        // initializes search's value with nextSearchTerm and update search result
                        if(this.nextSearchTerm != undefined){
                            this.search.val(this.nextSearchTerm);
                            this.updateResults();
                            this.search.select();
                        }
                    }
                    this.positionDropdown();
                } else {
                    // if nothing left to select close
                    this.close();
                    this.search.width(10);
                }
            }

            // since its not possible to select an element that has already been
            // added we do not need to check if this is a new element before firing change
            this.triggerChange({ added: data });

            if (!options || !options.noFocus)
                this.focusSearch();
        },

        // multi
        cancel: function () {
            this.close();
            this.focusSearch();
        },

        addSelectedChoice: function (data) {
            var enableChoice = !data.locked,
                enabledItem = $(
                    "<li class='select2-search-choice'>" +
                    "    <div></div>" +
                    "    <a href='#' class='select2-search-choice-close' tabindex='-1'></a>" +
                    "</li>"),
                disabledItem = $(
                    "<li class='select2-search-choice select2-locked'>" +
                    "<div></div>" +
                    "</li>");
            var choice = enableChoice ? enabledItem : disabledItem,
                id = this.id(data),
                val = this.getVal(),
                formatted,
                cssClass;

            formatted=this.opts.formatSelection(data, choice.find("div"), this.opts.escapeMarkup);
            if (formatted != undefined) {
                choice.find("div").replaceWith($("<div></div>").html(formatted));
            }
            cssClass=this.opts.formatSelectionCssClass(data, choice.find("div"));
            if (cssClass != undefined) {
                choice.addClass(cssClass);
            }

            if(enableChoice){
              choice.find(".select2-search-choice-close")
                  .on("mousedown", killEvent)
                  .on("click dblclick", this.bind(function (e) {
                  if (!this.isInterfaceEnabled()) return;

                  this.unselect($(e.target));
                  this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus");
                  killEvent(e);
                  this.close();
                  this.focusSearch();
              })).on("focus", this.bind(function () {
                  if (!this.isInterfaceEnabled()) return;
                  this.container.addClass("select2-container-active");
                  this.dropdown.addClass("select2-drop-active");
              }));
            }

            choice.data("select2-data", data);
            choice.insertBefore(this.searchContainer);

            val.push(id);
            this.setVal(val);
        },

        // multi
        unselect: function (selected) {
            var val = this.getVal(),
                data,
                index;
            selected = selected.closest(".select2-search-choice");

            if (selected.length === 0) {
                throw "Invalid argument: " + selected + ". Must be .select2-search-choice";
            }

            data = selected.data("select2-data");

            if (!data) {
                // prevent a race condition when the 'x' is clicked really fast repeatedly the event can be queued
                // and invoked on an element already removed
                return;
            }

            var evt = $.Event("select2-removing");
            evt.val = this.id(data);
            evt.choice = data;
            this.opts.element.trigger(evt);

            if (evt.isDefaultPrevented()) {
                return false;
            }

            while((index = indexOf(this.id(data), val)) >= 0) {
                val.splice(index, 1);
                this.setVal(val);
                if (this.select) this.postprocessResults();
            }

            selected.remove();

            this.opts.element.trigger({ type: "select2-removed", val: this.id(data), choice: data });
            this.triggerChange({ removed: data });

            return true;
        },

        // multi
        postprocessResults: function (data, initial, noHighlightUpdate) {
            var val = this.getVal(),
                choices = this.results.find(".select2-result"),
                compound = this.results.find(".select2-result-with-children"),
                self = this;

            choices.each2(function (i, choice) {
                var id = self.id(choice.data("select2-data"));
                if (indexOf(id, val) >= 0) {
                    choice.addClass("select2-selected");
                    // mark all children of the selected parent as selected
                    choice.find(".select2-result-selectable").addClass("select2-selected");
                }
            });

            compound.each2(function(i, choice) {
                // hide an optgroup if it doesn't have any selectable children
                if (!choice.is('.select2-result-selectable')
                    && choice.find(".select2-result-selectable:not(.select2-selected)").length === 0) {
                    choice.addClass("select2-selected");
                }
            });

            if (this.highlight() == -1 && noHighlightUpdate !== false && this.opts.closeOnSelect === true){
                self.highlight(0);
            }

            //If all results are chosen render formatNoMatches
            if(!this.opts.createSearchChoice && !choices.filter('.select2-result:not(.select2-selected)').length > 0){
                if(!data || data && !data.more && this.results.find(".select2-no-results").length === 0) {
                    if (checkFormatter(self.opts.formatNoMatches, "formatNoMatches")) {
                        this.results.append("<li class='select2-no-results'>" + evaluate(self.opts.formatNoMatches, self.opts.element, self.search.val()) + "</li>");
                    }
                }
            }

        },

        // multi
        getMaxSearchWidth: function() {
            return this.selection.width() - getSideBorderPadding(this.search);
        },

        // multi
        resizeSearch: function () {
            var minimumWidth, left, maxWidth, containerLeft, searchWidth,
                sideBorderPadding = getSideBorderPadding(this.search);

            minimumWidth = measureTextWidth(this.search) + 10;

            left = this.search.offset().left;

            maxWidth = this.selection.width();
            containerLeft = this.selection.offset().left;

            searchWidth = maxWidth - (left - containerLeft) - sideBorderPadding;

            if (searchWidth < minimumWidth) {
                searchWidth = maxWidth - sideBorderPadding;
            }

            if (searchWidth < 40) {
                searchWidth = maxWidth - sideBorderPadding;
            }

            if (searchWidth <= 0) {
              searchWidth = minimumWidth;
            }

            this.search.width(Math.floor(searchWidth));
        },

        // multi
        getVal: function () {
            var val;
            if (this.select) {
                val = this.select.val();
                return val === null ? [] : val;
            } else {
                val = this.opts.element.val();
                return splitVal(val, this.opts.separator, this.opts.transformVal);
            }
        },

        // multi
        setVal: function (val) {
            var unique;
            if (this.select) {
                this.select.val(val);
            } else {
                unique = [];
                // filter out duplicates
                $(val).each(function () {
                    if (indexOf(this, unique) < 0) unique.push(this);
                });
                this.opts.element.val(unique.length === 0 ? "" : unique.join(this.opts.separator));
            }
        },

        // multi
        buildChangeDetails: function (old, current) {
            var current = current.slice(0),
                old = old.slice(0);

            // remove intersection from each array
            for (var i = 0; i < current.length; i++) {
                for (var j = 0; j < old.length; j++) {
                    if (equal(this.opts.id(current[i]), this.opts.id(old[j]))) {
                        current.splice(i, 1);
                        if(i>0){
                            i--;
                        }
                        old.splice(j, 1);
                        j--;
                    }
                }
            }

            return {added: current, removed: old};
        },


        // multi
        val: function (val, triggerChange) {
            var oldData, self=this;

            if (arguments.length === 0) {
                return this.getVal();
            }

            oldData=this.data();
            if (!oldData.length) oldData=[];

            // val is an id. !val is true for [undefined,null,'',0] - 0 is legal
            if (!val && val !== 0) {
                this.opts.element.val("");
                this.updateSelection([]);
                this.clearSearch();
                if (triggerChange) {
                    this.triggerChange({added: this.data(), removed: oldData});
                }
                return;
            }

            // val is a list of ids
            this.setVal(val);

            if (this.select) {
                this.opts.initSelection(this.select, this.bind(this.updateSelection));
                if (triggerChange) {
                    this.triggerChange(this.buildChangeDetails(oldData, this.data()));
                }
            } else {
                if (this.opts.initSelection === undefined) {
                    throw new Error("val() cannot be called if initSelection() is not defined");
                }

                this.opts.initSelection(this.opts.element, function(data){
                    var ids=$.map(data, self.id);
                    self.setVal(ids);
                    self.updateSelection(data);
                    self.clearSearch();
                    if (triggerChange) {
                        self.triggerChange(self.buildChangeDetails(oldData, self.data()));
                    }
                });
            }
            this.clearSearch();
        },

        // multi
        onSortStart: function() {
            if (this.select) {
                throw new Error("Sorting of elements is not supported when attached to <select>. Attach to <input type='hidden'/> instead.");
            }

            // collapse search field into 0 width so its container can be collapsed as well
            this.search.width(0);
            // hide the container
            this.searchContainer.hide();
        },

        // multi
        onSortEnd:function() {

            var val=[], self=this;

            // show search and move it to the end of the list
            this.searchContainer.show();
            // make sure the search container is the last item in the list
            this.searchContainer.appendTo(this.searchContainer.parent());
            // since we collapsed the width in dragStarted, we resize it here
            this.resizeSearch();

            // update selection
            this.selection.find(".select2-search-choice").each(function() {
                val.push(self.opts.id($(this).data("select2-data")));
            });
            this.setVal(val);
            this.triggerChange();
        },

        // multi
        data: function(values, triggerChange) {
            var self=this, ids, old;
            if (arguments.length === 0) {
                 return this.selection
                     .children(".select2-search-choice")
                     .map(function() { return $(this).data("select2-data"); })
                     .get();
            } else {
                old = this.data();
                if (!values) { values = []; }
                ids = $.map(values, function(e) { return self.opts.id(e); });
                this.setVal(ids);
                this.updateSelection(values);
                this.clearSearch();
                if (triggerChange) {
                    this.triggerChange(this.buildChangeDetails(old, this.data()));
                }
            }
        }
    });

    $.fn.select2 = function () {

        var args = Array.prototype.slice.call(arguments, 0),
            opts,
            select2,
            method, value, multiple,
            allowedMethods = ["val", "destroy", "opened", "open", "close", "focus", "isFocused", "container", "dropdown", "onSortStart", "onSortEnd", "enable", "disable", "readonly", "positionDropdown", "data", "search"],
            valueMethods = ["opened", "isFocused", "container", "dropdown"],
            propertyMethods = ["val", "data"],
            methodsMap = { search: "externalSearch" };

        this.each(function () {
            if (args.length === 0 || typeof(args[0]) === "object") {
                opts = args.length === 0 ? {} : $.extend({}, args[0]);
                opts.element = $(this);

                if (opts.element.get(0).tagName.toLowerCase() === "select") {
                    multiple = opts.element.prop("multiple");
                } else {
                    multiple = opts.multiple || false;
                    if ("tags" in opts) {opts.multiple = multiple = true;}
                }

                select2 = multiple ? new window.Select2["class"].multi() : new window.Select2["class"].single();
                select2.init(opts);
            } else if (typeof(args[0]) === "string") {

                if (indexOf(args[0], allowedMethods) < 0) {
                    throw "Unknown method: " + args[0];
                }

                value = undefined;
                select2 = $(this).data("select2");
                if (select2 === undefined) return;

                method=args[0];

                if (method === "container") {
                    value = select2.container;
                } else if (method === "dropdown") {
                    value = select2.dropdown;
                } else {
                    if (methodsMap[method]) method = methodsMap[method];

                    value = select2[method].apply(select2, args.slice(1));
                }
                if (indexOf(args[0], valueMethods) >= 0
                    || (indexOf(args[0], propertyMethods) >= 0 && args.length == 1)) {
                    return false; // abort the iteration, ready to return first matched value
                }
            } else {
                throw "Invalid arguments to select2 plugin: " + args;
            }
        });
        return (value === undefined) ? this : value;
    };

    // plugin defaults, accessible to users
    $.fn.select2.defaults = {
        width: "copy",
        loadMorePadding: 0,
        closeOnSelect: true,
        openOnEnter: true,
        containerCss: {},
        dropdownCss: {},
        containerCssClass: "",
        dropdownCssClass: "",
        formatResult: function(result, container, query, escapeMarkup) {
            var markup=[];
            markMatch(this.text(result), query.term, markup, escapeMarkup);
            return markup.join("");
        },
        transformVal: function(val) {
            return $.trim(val);
        },
        formatSelection: function (data, container, escapeMarkup) {
            return data ? escapeMarkup(this.text(data)) : undefined;
        },
        sortResults: function (results, container, query) {
            return results;
        },
        formatResultCssClass: function(data) {return data.css;},
        formatSelectionCssClass: function(data, container) {return undefined;},
        minimumResultsForSearch: 0,
        minimumInputLength: 0,
        maximumInputLength: null,
        maximumSelectionSize: 0,
        id: function (e) { return e == undefined ? null : e.id; },
        text: function (e) {
          if (e && this.data && this.data.text) {
            if ($.isFunction(this.data.text)) {
              return this.data.text(e);
            } else {
              return e[this.data.text];
            }
          } else {
            return e.text;
          }
        },
        matcher: function(term, text) {
            return stripDiacritics(''+text).toUpperCase().indexOf(stripDiacritics(''+term).toUpperCase()) >= 0;
        },
        separator: ",",
        tokenSeparators: [],
        tokenizer: defaultTokenizer,
        escapeMarkup: defaultEscapeMarkup,
        blurOnChange: false,
        selectOnBlur: false,
        adaptContainerCssClass: function(c) { return c; },
        adaptDropdownCssClass: function(c) { return null; },
        nextSearchTerm: function(selectedObject, currentSearchTerm) { return undefined; },
        searchInputPlaceholder: '',
        createSearchChoicePosition: 'top',
        shouldFocusInput: function (instance) {
            // Attempt to detect touch devices
            var supportsTouchEvents = (('ontouchstart' in window) ||
                                       (navigator.msMaxTouchPoints > 0));

            // Only devices which support touch events should be special cased
            if (!supportsTouchEvents) {
                return true;
            }

            // Never focus the input if search is disabled
            if (instance.opts.minimumResultsForSearch < 0) {
                return false;
            }

            return true;
        }
    };

    $.fn.select2.locales = [];

    $.fn.select2.locales['en'] = {
         formatMatches: function (matches) { if (matches === 1) { return "One result is available, press enter to select it."; } return matches + " results are available, use up and down arrow keys to navigate."; },
         formatNoMatches: function () { return "No matches found"; },
         formatAjaxError: function (jqXHR, textStatus, errorThrown) { return "Loading failed"; },
         formatInputTooShort: function (input, min) { var n = min - input.length; return "Please enter " + n + " or more character" + (n == 1 ? "" : "s"); },
         formatInputTooLong: function (input, max) { var n = input.length - max; return "Please delete " + n + " character" + (n == 1 ? "" : "s"); },
         formatSelectionTooBig: function (limit) { return "You can only select " + limit + " item" + (limit == 1 ? "" : "s"); },
         formatLoadMore: function (pageNumber) { return "Loading more results…"; },
         formatSearching: function () { return "Searching…"; }
    };

    $.extend($.fn.select2.defaults, $.fn.select2.locales['en']);

    $.fn.select2.ajaxDefaults = {
        transport: $.ajax,
        params: {
            type: "GET",
            cache: false,
            dataType: "json"
        }
    };

    // exports
    window.Select2 = {
        query: {
            ajax: ajax,
            local: local,
            tags: tags
        }, util: {
            debounce: debounce,
            markMatch: markMatch,
            escapeMarkup: defaultEscapeMarkup,
            stripDiacritics: stripDiacritics
        }, "class": {
            "abstract": AbstractSelect2,
            "single": SingleSelect2,
            "multi": MultiSelect2
        }
    };

}(jQuery));
/*1.0*/
jQuery(document).ready(function(){
  if( typeof window.initCommunityAnalytics === 'function' ) {
    initCommunityAnalytics();
  }
});


if( typeof window.initMarketoAnalytics === 'function' ) {
  initMarketoAnalytics();
}

var GoogleAnalytics = (function(){

  var setDimension = function(dimension, value){
    if(window.ga){
      window.ga('set', dimension, value);
    }
  };

  var setContentGroup = function(content_group, value){
    if(window.ga){
      window.ga('set', content_group, value);
    }
  }

  return {
    setGroup:function(name){
      setDimension('dimension1', name);
    },
    setUserType:function(userClass){
      setDimension('dimension2', userClass);
    },
    setAppVersion:function(appVersion){
      setDimension('dimension3', appVersion);
    },
    setPepperLevel:function(pepperLevel){
      setDimension('dimension4', pepperLevel);
    },
    setHomePageType:function(homePageType){
      setDimension('dimension5', homePageType);
    },
    setExperiment: function(experiment){
      setDimension('dimension6', experiment);
    },
    setTopicContentGroup: function(group){
      setContentGroup('contentGroup2', group);
    },
    trackPageview: function(page) {
      if(window.ga) {
        if(page){
          window.ga('send', 'pageview', page);
        } else {
          window.ga('send', 'pageview', document.location.pathname + document.location.search);
        }
      }
    },

    trackEventWithFields: function(fields) {
      if(window.ga && _.isObject(fields) && !_.isFunction(fields)) {
        fields.hitType = 'event';
        window.ga('send', fields);
      }
    },

    // Assumes arguments in order: trackEvent(eventCategory, eventAction, eventLabel, eventValue, nonInteraction)
    // Will not pass along args that are sent as null
    trackEvent: function(){
      if(window.ga){
        var fields = {hitType: 'event'};
        var keys = {
          0: "eventCategory",
          1: "eventAction",
          2: "eventLabel",
          3: "eventValue",
          4: "nonInteraction"
        };
        for(var i = 0; i < arguments.length; i++){
          var field = arguments[i]
          if(field){
            fields[keys[i]] = field;
          }
        }
        window.ga('send', fields);
      }
    }
  };
})();

// Moved here from _google_analytics.html.erb. That code is only loaded when not in dev
// but this bit should be ok b/c it has not effect if not used.
jQuery(document).on( 'google-analytics:send:event', function( domEvent, category, action, label, value ) {
  GoogleAnalytics.trackEvent( category, action, label, value );
});
/*1.0*/
(function($, undefined) {

/**
 * Unobtrusive scripting adapter for jQuery
 *
 * Requires jQuery 1.6.0 or later.
 * https://github.com/rails/jquery-ujs

 * Uploading file using rails.js
 * =============================
 *
 * By default, browsers do not allow files to be uploaded via AJAX. As a result, if there are any non-blank file fields
 * in the remote form, this adapter aborts the AJAX submission and allows the form to submit through standard means.
 *
 * The `ajax:aborted:file` event allows you to bind your own handler to process the form submission however you wish.
 *
 * Ex:
 *     $('form').live('ajax:aborted:file', function(event, elements){
 *       // Implement own remote file-transfer handler here for non-blank file inputs passed in `elements`.
 *       // Returning false in this handler tells rails.js to disallow standard form submission
 *       return false;
 *     });
 *
 * The `ajax:aborted:file` event is fired when a file-type input is detected with a non-blank value.
 *
 * Third-party tools can use this hook to detect when an AJAX file upload is attempted, and then use
 * techniques like the iframe method to upload the file instead.
 *
 * Required fields in rails.js
 * ===========================
 *
 * If any blank required inputs (required="required") are detected in the remote form, the whole form submission
 * is canceled. Note that this is unlike file inputs, which still allow standard (non-AJAX) form submission.
 *
 * The `ajax:aborted:required` event allows you to bind your own handler to inform the user of blank required inputs.
 *
 * !! Note that Opera does not fire the form's submit event if there are blank required inputs, so this event may never
 *    get fired in Opera. This event is what causes other browsers to exhibit the same submit-aborting behavior.
 *
 * Ex:
 *     $('form').live('ajax:aborted:required', function(event, elements){
 *       // Returning false in this handler tells rails.js to submit the form anyway.
 *       // The blank required inputs are passed to this function in `elements`.
 *       return ! confirm("Would you like to submit the form with missing info?");
 *     });
 */

  // Shorthand to make it a little easier to call public rails functions from within rails.js
  var rails;

  $.rails = rails = {
    // Link elements bound by jquery-ujs
    linkClickSelector: 'a[data-confirm], a[data-method], a[data-remote], a[data-disable-with]',

    // Select elements bound by jquery-ujs
    inputChangeSelector: 'select[data-remote], input[data-remote], textarea[data-remote]',

    // Form elements bound by jquery-ujs
    formSubmitSelector: 'form',

    // Form input elements bound by jquery-ujs
    formInputClickSelector: 'form input[type=submit], form input[type=image], form button[type=submit], form button:not(button[type])',

    // Form input elements disabled during form submission
    disableSelector: 'input[data-disable-with], button[data-disable-with], textarea[data-disable-with]',

    // Form input elements re-enabled after form submission
    enableSelector: 'input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled',

    // Form required input elements
    requiredInputSelector: 'input[name][required]:not([disabled]),textarea[name][required]:not([disabled])',

    // Form file input elements
    fileInputSelector: 'input:file',

    // Link onClick disable selector with possible reenable after remote submission
    linkDisableSelector: 'a[data-disable-with]',

    // Make sure that every Ajax request sends the CSRF token
    CSRFProtection: function(xhr) {
      var token = $('meta[name="csrf-token"]').attr('content');
      if (token) xhr.setRequestHeader('X-CSRF-Token', token);
    },

    // Triggers an event on an element and returns false if the event result is false
    fire: function(obj, name, data) {
      var event = $.Event(name);
      obj.trigger(event, data);
      return event.result !== false;
    },

    // Default confirm dialog, may be overridden with custom confirm dialog in $.rails.confirm
    confirm: function(message) {
      return confirm(message);
    },

    // Default ajax function, may be overridden with custom function in $.rails.ajax
    ajax: function(options) {
      return $.ajax(options);
    },

    // Default way to get an element's href. May be overridden at $.rails.href.
    href: function(element) {
      return element.attr('href');
    },

    // Submits "remote" forms and links with ajax
    handleRemote: function(element) {
      var method, url, data, crossDomain, dataType, options;

      if (rails.fire(element, 'ajax:before')) {
        crossDomain = element.data('cross-domain') || null;
        dataType = element.data('type') || ($.ajaxSettings && $.ajaxSettings.dataType);

        if (element.is('form')) {
          method = element.attr('method');
          url = element.attr('action');
          data = element.serializeArray();
          // memoized value from clicked submit button
          var button = element.data('ujs:submit-button');
          if (button) {
            data.push(button);
            element.data('ujs:submit-button', null);
          }
        } else if (element.is(rails.inputChangeSelector)) {
          method = element.data('method');
          url = element.data('url');
          data = element.serialize();
          if (element.data('params')) data = data + "&" + element.data('params');
        } else {
          method = element.data('method');
          url = rails.href(element);
          data = element.data('params') || null;
        }

        options = {
          type: method || 'GET', data: data, dataType: dataType, crossDomain: crossDomain,
          // stopping the "ajax:beforeSend" event will cancel the ajax request
          beforeSend: function(xhr, settings) {
            if (settings.dataType === undefined) {
              xhr.setRequestHeader('accept', '*/*;q=0.5, ' + settings.accepts.script);
            }
            return rails.fire(element, 'ajax:beforeSend', [xhr, settings]);
          },
          success: function(data, status, xhr) {
            element.trigger('ajax:success', [data, status, xhr]);
          },
          complete: function(xhr, status) {
            element.trigger('ajax:complete', [xhr, status]);
          },
          error: function(xhr, status, error) {
            element.trigger('ajax:error', [xhr, status, error]);
          }
        };
        // Only pass url to `ajax` options if not blank
        if (url) { options.url = url; }

        return rails.ajax(options);
      } else {
        return false;
      }
    },

    // Handles "data-method" on links such as:
    // <a href="/users/5" data-method="delete" rel="nofollow" data-confirm="Are you sure?">Delete</a>
    handleMethod: function(link) {
      var href = rails.href(link),
        method = link.data('method'),
        target = link.attr('target'),
        csrf_token = $('meta[name=csrf-token]').attr('content'),
        csrf_param = $('meta[name=csrf-param]').attr('content'),
        form = $('<form method="post" action="' + href + '"></form>'),
        metadata_input = '<input name="_method" value="' + method + '" type="hidden" />';

      if (csrf_param !== undefined && csrf_token !== undefined) {
        metadata_input += '<input name="' + csrf_param + '" value="' + csrf_token + '" type="hidden" />';
      }

      if (target) { form.attr('target', target); }

      form.hide().append(metadata_input).appendTo('body');
      form.submit();
    },

    /* Disables form elements:
      - Caches element value in 'ujs:enable-with' data store
      - Replaces element text with value of 'data-disable-with' attribute
      - Sets disabled property to true
    */
    disableFormElements: function(form) {
      form.find(rails.disableSelector).each(function() {
        var element = $(this), method = element.is('button') ? 'html' : 'val';
        element.data('ujs:enable-with', element[method]());
        element[method](element.data('disable-with'));
        element.prop('disabled', true);
      });
    },

    /* Re-enables disabled form elements:
      - Replaces element text with cached value from 'ujs:enable-with' data store (created in `disableFormElements`)
      - Sets disabled property to false
    */
    enableFormElements: function(form) {
      form.find(rails.enableSelector).each(function() {
        var element = $(this), method = element.is('button') ? 'html' : 'val';
        if (element.data('ujs:enable-with')) element[method](element.data('ujs:enable-with'));
        element.prop('disabled', false);
      });
    },

   /* For 'data-confirm' attribute:
      - Fires `confirm` event
      - Shows the confirmation dialog
      - Fires the `confirm:complete` event

      Returns `true` if no function stops the chain and user chose yes; `false` otherwise.
      Attaching a handler to the element's `confirm` event that returns a `falsy` value cancels the confirmation dialog.
      Attaching a handler to the element's `confirm:complete` event that returns a `falsy` value makes this function
      return false. The `confirm:complete` event is fired whether or not the user answered true or false to the dialog.
   */
    allowAction: function(element) {
      var message = element.data('confirm'),
          answer = false, callback;
      if (!message) { return true; }

      if (rails.fire(element, 'confirm')) {
        answer = rails.confirm(message);
        callback = rails.fire(element, 'confirm:complete', [answer]);
      }
      return answer && callback;
    },

    // Helper function which checks for blank inputs in a form that match the specified CSS selector
    blankInputs: function(form, specifiedSelector, nonBlank) {
      var inputs = $(), input,
        selector = specifiedSelector || 'input,textarea';
      form.find(selector).each(function() {
        input = $(this);
        // Collect non-blank inputs if nonBlank option is true, otherwise, collect blank inputs
        if (nonBlank ? input.val() : !input.val()) {
          inputs = inputs.add(input);
        }
      });
      return inputs.length ? inputs : false;
    },

    // Helper function which checks for non-blank inputs in a form that match the specified CSS selector
    nonBlankInputs: function(form, specifiedSelector) {
      return rails.blankInputs(form, specifiedSelector, true); // true specifies nonBlank
    },

    // Helper function, needed to provide consistent behavior in IE
    stopEverything: function(e) {
      $(e.target).trigger('ujs:everythingStopped');
      e.stopImmediatePropagation();
      return false;
    },

    // find all the submit events directly bound to the form and
    // manually invoke them. If anyone returns false then stop the loop
    callFormSubmitBindings: function(form, event) {
      var events = form.data('events'), continuePropagation = true;
      if (events !== undefined && events['submit'] !== undefined) {
        $.each(events['submit'], function(i, obj){
          if (typeof obj.handler === 'function') return continuePropagation = obj.handler(event);
        });
      }
      return continuePropagation;
    },

    //  replace element's html with the 'data-disable-with' after storing original html
    //  and prevent clicking on it
    disableElement: function(element) {
      element.data('ujs:enable-with', element.html()); // store enabled state
      element.html(element.data('disable-with')); // set to disabled state
      element.bind('click.railsDisable', function(e) { // prevent further clicking
        return rails.stopEverything(e)
      });
    },

    // restore element to its original state which was disabled by 'disableElement' above
    enableElement: function(element) {
      if (element.data('ujs:enable-with') !== undefined) {
        element.html(element.data('ujs:enable-with')); // set to old enabled state
        // this should be element.removeData('ujs:enable-with')
        // but, there is currently a bug in jquery which makes hyphenated data attributes not get removed
        element.data('ujs:enable-with', false); // clean up cache
      }
      element.unbind('click.railsDisable'); // enable element
    }

  };

  $.ajaxPrefilter(function(options, originalOptions, xhr){ if ( !options.crossDomain ) { rails.CSRFProtection(xhr); }});

  $(document).delegate(rails.linkDisableSelector, 'ajax:complete', function() {
      rails.enableElement($(this));
  });

  $(document).delegate(rails.linkClickSelector, 'click.rails', function(e) {
    var link = $(this), method = link.data('method'), data = link.data('params');
    if (!rails.allowAction(link)) return rails.stopEverything(e);

    if (link.is(rails.linkDisableSelector)) rails.disableElement(link);

    if (link.data('remote') !== undefined) {
      if ( (e.metaKey || e.ctrlKey) && (!method || method === 'GET') && !data ) { return true; }

      if (rails.handleRemote(link) === false) { rails.enableElement(link); }
      return false;

    } else if (link.data('method')) {
      rails.handleMethod(link);
      return false;
    }
  });

  $(document).delegate(rails.inputChangeSelector, 'change.rails', function(e) {
    var link = $(this);
    if (!rails.allowAction(link)) return rails.stopEverything(e);

    rails.handleRemote(link);
    return false;
  });

  $(document).delegate(rails.formSubmitSelector, 'submit.rails', function(e) {
    var form = $(this),
      remote = form.data('remote') !== undefined,
      blankRequiredInputs = rails.blankInputs(form, rails.requiredInputSelector),
      nonBlankFileInputs = rails.nonBlankInputs(form, rails.fileInputSelector);

    if (!rails.allowAction(form)) return rails.stopEverything(e);

    // skip other logic when required values are missing or file upload is present
    if (blankRequiredInputs && form.attr("novalidate") == undefined && rails.fire(form, 'ajax:aborted:required', [blankRequiredInputs])) {
      return rails.stopEverything(e);
    }

    if (remote) {
      if (nonBlankFileInputs) {
        return rails.fire(form, 'ajax:aborted:file', [nonBlankFileInputs]);
      }

      // If browser does not support submit bubbling, then this live-binding will be called before direct
      // bindings. Therefore, we should directly call any direct bindings before remotely submitting form.
      if (!$.support.submitBubbles && $().jquery < '1.7' && rails.callFormSubmitBindings(form, e) === false) return rails.stopEverything(e);

      rails.handleRemote(form);
      return false;

    } else {
      // slight timeout so that the submit button gets properly serialized
      setTimeout(function(){ rails.disableFormElements(form); }, 13);
    }
  });

  $(document).delegate(rails.formInputClickSelector, 'click.rails', function(event) {
    var button = $(this);

    if (!rails.allowAction(button)) return rails.stopEverything(event);

    // register the pressed submit button
    var name = button.attr('name'),
      data = name ? {name:name, value:button.val()} : null;

    button.closest('form').data('ujs:submit-button', data);
  });

  $(document).delegate(rails.formSubmitSelector, 'ajax:beforeSend.rails', function(event) {
    if (this == event.target) rails.disableFormElements($(this));
  });

  $(document).delegate(rails.formSubmitSelector, 'ajax:complete.rails', function(event) {
    if (this == event.target) rails.enableFormElements($(this));
  });

  $(function(){
    // making sure that all forms have actual up-to-date token(cached forms contain old one)
    csrf_token = $('meta[name=csrf-token]').attr('content');
    csrf_param = $('meta[name=csrf-param]').attr('content');
    $('form input[name="' + csrf_param + '"]').val(csrf_token);
  });

})( jQuery );
/*1.0*/
jQuery(function($) {
  if( window.SplashModalConfig && window.SplashModalConfig.show ) {
    Join.asyncPhotoModal( window.SplashModalConfig.fromDigest );
  }
});

/*******************************/
/* Join-And-Login Pseudo-Modal */
/*******************************/
/* The pseudo-modal box that includes the Join form _and_ Login form. Also includes the "mainModal" */
/* which is the instance of the "pseudo-modal" that actually pops up on most pages as a real modal  */
var JoinAndLogin = {
  modalShowing: (window.location.pathname == '/join' || window.location.pathname == '/login'),
  modePreference: {
    'mode=reset': function(){
      var modal = jQuery('a[data-toggle="password_reset"]').parents('.sui-modal_content');
      JoinAndLogin.switchToPasswordReset(modal)
      modal.find('.reset-form input[type="email"]').val(_.fromQueryString(location.search).email);
    }
  },
  mainModalSelector: '#join-login-modal > .sui-modal_overlay',
  mainModal: null,

  init: function($) {
    this.mainModal = jQuery(this.mainModalSelector);

    jQuery('.login-toggle > a').click( function(event) {
      event.preventDefault();
      JoinAndLogin.switchToLogin( jQuery(this).parents('.sui-modal_content') );
    });

    jQuery('.join-toggle > a').click( function(event) {
      event.preventDefault();
      JoinAndLogin.switchToJoin( jQuery(this).parents('.sui-modal_content') );
    });

    jQuery('.join-login-box').on('click', 'a[data-toggle="password_reset"]', function(event) {
      event.preventDefault();
      JoinAndLogin.switchToPasswordReset( jQuery(this).parents('.sui-modal_content') );
    });

    jQuery('a[data-toggle="password_return"]').click( function(event) {
      event.preventDefault();
      if( jQuery(this).attr('data-return') == 'login' ) {
        JoinAndLogin.switchToLogin( jQuery(this).parents('.sui-modal_content') );
      }
      else {
        JoinAndLogin.switchToJoin( jQuery(this).parents('.sui-modal_content') );
      }
    });

    jQuery('#join-login-modal .sui-modal_overlay').on( 'sui_modal:shown', function(event) {
      var modal = jQuery(event.currentTarget);
      if( modal.find('.sui-modal_content').hasClass('login-mode') ) {
        modal.find('input[name="login[email]"]').focus();
      }
      else {
        modal.find('input[name="registration[first_name]"]').focus();
      }
    });

    jQuery('body').on('click', 'a[data-social-join', function(){
      var social_network = jQuery(this).attr('data-social-join');
      var form = jQuery(this).attr('data-join-form');
      var message = jQuery(this).attr('data-join-message');
      var referrer = window.location.pathname + window.location.search

      if ( jQuery(this).attr('data-referrer') ){
        referrer = jQuery(this).attr('data-referrer');
      }

      Login.showSocialSiteLogin( social_network, referrer, form, message);
    });

    jQuery('.register-form.new-registration').on('ajax:success', function(){
      //firefox bug keeps button disabled
      jQuery('.sui-bttn--primary').button('reset');
      //prevent reshowing the modal before the page redirects on second submit
      if(jQuery(this).find('[name="registration[two_step]"]').val() == '1'){
        JoinAndLogin.switchToTwoStepModal( jQuery(this).parents('.sui-modal_content') );
      }
    });

    jQuery('.register-form.splash-form').on('ajax:success', function(){
      //prevent reshowing the modal before the page redirects on second submit
      if(jQuery(this).find('[name="registration[two_step]"]').val() == '1'){
        jQuery(this).parents('.sui-modal_content').sui_modal('hide');
        //add 'splash' class so the buttons know where to go, main modal or back to splash
        jQuery('.two-step.actions').addClass('splash');
        JoinAndLogin.switchToTwoStepModal( JoinAndLogin.mainModal );
        JoinAndLogin.show();
      }
    });

    jQuery('.two-step.back').on('click', function(){
      event.preventDefault();
      if ( jQuery('.two-step.actions').hasClass('splash') ){
        JoinAndLogin.hide();
        jQuery('.splash-form').parents('.sui-modal_content').sui_modal('show');
        jQuery('.two-step.actions').removeClass('splash');
      }
      else{
        JoinAndLogin.switchToJoin( jQuery(this).parents('.sui-modal_content') );
      }
    });

    jQuery('.two-step.agree').on('click', function(){
      event.preventDefault();
      //set two step to false which will skip this second modal on the submit
      jQuery('.two-step.agree').addClass('disabled');
      jQuery('.two-step.agree').text('Loading...');
      if ( jQuery('.two-step.actions').hasClass('splash') ){
        var $regForm = jQuery('.splash-form');
      }
      else{
        var $regForm = jQuery(this).parents('.sui-modal_content').find('.register-form');
      }
      $regForm.find('[name="registration[two_step]"]').val(0);
      $regForm.find('[name="registration[two_step_agree]"]').val(1);
      $regForm.submit();
    });

    jQuery('#join-login-modal .sui-modal_overlay').on('sui_modal:shown', function(){
      if(!window.noDefaultGA) {
        GoogleAnalytics.trackEvent('Join', 'show', 'Default Join Modal');
      }
    });
    jQuery('#join-login-modal .sui-modal_overlay').on('sui_modal:hidden', function(){
      if(!window.noDefaultGA) {
        GoogleAnalytics.trackEvent('Join', 'click', 'Default Join Modal Hide');
      }
    });
    jQuery('.join-login-box.sui_modal .login-form').on('submit', function(){
      if(!window.noDefaultGA) {
        GoogleAnalytics.trackEvent('Join', 'click', 'Submit Login From Modal');
      }
    });
    jQuery('.join-login-box.sui_modal .register-form').on('submit', function(){
      if(!window.noDefaultGA) {
        GoogleAnalytics.trackEvent('Join', 'click', 'Submit Modal Registration');
      }
    });

    jQuery('.guest-user-navmenu .join-button').on('click', function(){
      Join.setSignupType(SignupTypes.fromNavbar);
    });
    jQuery('.guest-user-navmenu [data-modal-name="login"]').on('click', function(){
      Join.setSignupType(SignupTypes.fromNavbar);
    });

    if( SignupTypes.secondPageModalEnabled ){
      jQuery('.domestic-menus_submenu_items li a').on('click', function(event) {
        Join.setSecondPageModalCookie(jQuery(event.delegateTarget).attr("href"));
      });

      jQuery('body').on('click', '.read-next-footer .card a', function(event) {
        Join.setSecondPageModalCookie(jQuery(event.target).attr("href"));
      });

      if(Join.willShowSecondPageModal()){
        Join.showSecondPageModal();
      }
    }

    if( SignupTypes.repeatVisitModalEnabled && !Join.willShowSecondPageModal()){
      Join.showRepeatVisitModal();
    }

    JoinAndLogin.registerModalLaunchTrigger();

    //Check on custom route initializations
    _.each(JoinAndLogin.modePreference, function(fnc, str){
      if ((new RegExp(str)).test(location.href))
        fnc();
    });

    // Auto-show login or join on URL param
    if( $('[data-auto-join-modals]').length ) {
      var urlParams = window.location.search.substr(1).split('&');
      if( _.contains( urlParams, 'show_modal=login' ) ) {
        JoinAndLogin.showLogin();
      }
      if( _.contains( urlParams, 'show_modal=join' ) ) {
        JoinAndLogin.showJoin();
      }
    }
  },

  show: function() {
    if( !this.mainModal || this.modalShowing ) { return; }
    this.mainModal.on('sui_modal:hide', function () {
      JoinAndLogin.modalShowing = false
    });
    JoinFooter.footer().hide();
    this.mainModal.sui_modal('show');
    this.modalShowing = true;
  },
  hide: function() {
    if( !this.mainModal || !this.modalShowing ) { return; }
    this.mainModal.sui_modal('hide');
    this.modalShowing = false;
  },
  showJoin: function(options) {
    if( !this.mainModal ) { return; }
    if( options && options.message ) {
      this.mainModal.find('.message').html(options.message).show();
    }
    JoinAndLogin.switchToJoin( this.mainModal.find('.sui-modal_content') );
    JoinAndLogin.show();
  },
  showLogin: function(options) {
    if( !this.mainModal ) { return; }
    if( options && options.message ) {
      this.mainModal.find('.message').html(options.message).show();
    }
    JoinAndLogin.switchToLogin( this.mainModal.find('.sui-modal_content') );
    JoinAndLogin.show();
  },
  registerModalLaunchTrigger: function() {
    jQuery(document).on( 'click', 'a[data-toggle="modal"][data-modal-name="join"]', function(event) {
      event.preventDefault();
      JoinAndLogin.showJoin();
    });

    jQuery(document).on( 'click', 'a[data-toggle="modal"][data-modal-name="login"]', function(event) {
      event.preventDefault();
      JoinAndLogin.showLogin();
    });
  },
  switchToJoin: function(modal) {
    modal.find('.register-form').attr('style',''); /* Clear the 'hide' style */
    modal.find('.login-form').attr('style',''); /* Clear the 'hide' style */
    modal.find('.reset-form').attr('style', '');

    if( modal.is(':visible') ) {
      modal.find('.login-form').fadeOut( function() {
        modal.find('.register-form').hide();
        modal.removeClass('login-mode');
        modal.removeClass('reset-mode');
        modal.removeClass('two-step-mode');
        if( !modal.find('.social-register').is(':visible') ) {
          JoinAndLogin.blindInSocial(modal);
        }
        modal.addClass('join-mode');
        modal.find('.register-form').delay(200).fadeIn( function() {
          modal.find('.register-form input[name="registration[first_name]"]').focus();
        });
      });
    }
    else {
      JoinAndLogin.resetModal(modal);
      modal.addClass('join-mode');
    }
  },
  switchToLogin: function(modal) {
    modal.find('.register-form').attr('style',''); /* Clear the 'hide' style */
    modal.find('.login-form').attr('style',''); /* Clear the 'hide' style */
    modal.find('.reset-form').attr('style', '');

    if( modal.is(':visible') ) {
      modal.find('.register-form').fadeOut( function() {
        modal.find('.login-form').hide();
        modal.removeClass('join-mode');
        modal.removeClass('reset-mode');
        modal.removeClass('two-step-mode');
        if( !modal.find('.social-register').is(':visible') ) {
          JoinAndLogin.blindInSocial(modal);
        }
        modal.addClass('login-mode');
        modal.find('.login-form').delay(200).fadeIn( function() {
          modal.find('.login-form input[name="login[email]"]').focus();
        });
      });
    }
    else {
      JoinAndLogin.resetModal(modal);
      modal.addClass('login-mode');
    }
  },
  switchToPasswordReset: function(modal) {
    if( modal.find('.register-form').is(':visible')) {
      modal.find('.password-reset-cancel').attr('data-return', 'join');
      modal.find('.reset-form input[type="email"]').val( modal.find('.register-form input[type="email"]').val() );
    }
    else {
      modal.find('.password-reset-cancel').attr('data-return', 'login');
      modal.find('.reset-form input[type="email"]').val( modal.find('.login-form input[type="email"]').val() );
    }
    modal.find('.register-form').attr('style',''); /* Clear the 'hide' style */
    modal.find('.login-form').attr('style',''); /* Clear the 'hide' style */
    modal.find('.reset-form').attr('style', '');

    if( modal.is(':visible') ) {
      modal.find('.login-form').fadeOut( function() {
        modal.removeClass('join-mode');
        modal.removeClass('login-mode');
        modal.removeClass('two-step-mode');
        modal.find('.social-register').hide('blind');
        modal.find('.or-divider').hide('blind');

        modal.addClass('reset-mode');
      });
    }
    else {
      modal.removeClass('two-step-mode')
      modal.removeClass('join-mode');
      modal.removeClass('login-mode');
      modal.addClass('reset-mode');
    }
  },
  switchToTwoStepModal: function(modal){
    modal.find('.register-form').attr('style',''); /* Clear the 'hide' style */
    modal.find('.login-form').attr('style',''); /* Clear the 'hide' style */
    modal.find('.reset-form').attr('style', '');
    if( jQuery('.two-step.agree').hasClass('disabled') ){
      jQuery('.two-step.agree').removeClass('disabled');
      jQuery('.two-step.agree').text('I agree');
    }

    if( modal.is(':visible') ) {
      modal.find('.register-form').fadeOut( function() {
        modal.find('.login-form').hide();
        modal.removeClass('join-mode');
        modal.removeClass('reset-mode');
        modal.find('.social-register').hide('blind');
        modal.find('.or-divider').hide('blind');
        modal.addClass('two-step-mode');
        modal.find('.two-step').delay(200).fadeIn()
      });
    }
    else {
      modal.find('.social-register').hide('blind');
      modal.find('.or-divider').hide('blind');
      modal.removeClass('join-mode');
      modal.removeClass('reset-mode');
      modal.removeClass('login-mode');
      modal.addClass('two-step-mode');

    }
  },
  resetModal: function($modal) {
    $modal.find('.register-form, .login-form, .reset-form, .social-register, .or-divider').attr('style', '');
    $modal.removeClass('two-step-mode login-mode reset-mode join-mode');
  },
  blindInSocial: function(modal) {
    modal.find('.social-register').show('blind');
    modal.find('.or-divider').show('blind');
  }
};

jQuery(function($) {
  JoinAndLogin.init($);
  if (SignupTypes.joinFooterEnabled) {
    JoinFooter.init();
  }
  photo_modal_delay = SignupTypes.photoModalDelay * 1000;
});

/***********************************************************************/
/* Join functionality _not_ related to the Join-And-Login Pseudo-Modal */
/***********************************************************************/

var Join = {
  showModal: function() {
    JsLogger.info('join.js:Join.showModal');
    if (Application.inDevelopment()) {
      console.log( "Join.showModal is deprecated. Please use JoinAndLogin.showJoin()." );
    }
    JoinAndLogin.showJoin();
  },
  hideModal: function() {
    JsLogger.info('join.js:Join.hideModal');
    if (Application.inDevelopment()) {
      console.log( "Join.hideModal is deprecated. Please use JoinAndLogin.hide()." );
    }
    JoinAndLogin.hide();
  },
  checkSpicy: function(form) {
    JsLogger.info('join.js:Join.checkSpicy');
    /*get the names of the spicy picks and removed them from the form so the info is not cloging the logs*/
    var spicyCheckBox = form.down('#spicy_picks input.checkbox');
    var spicyNames = $Prototype('spicy_picks_names');
    var extraData = spicyNames.readAttribute('value');

    if (spicyCheckBox.checked === false) { /* if its NOT checked*/
       spicyNames.remove();
    }
  },
  guestState: function(data, commit) {
        commit = typeof commit !== 'undefined' ? commit : false;

        if( this.guest_state === null || this.guest_state === undefined ) {
            this.guest_state = {};
        }

        if( this.guest_state_token === undefined ) {
          this.guest_state_token = null;
        }

        if( data !== null && data !== undefined ) {
            if( data.content_type != this.guest_state.content_type ) {
                this.guest_state = data;
            }
            else {
                jQuery.extend( this.guest_state, data );
            }
        }

        var date = new Date();
        date.setTime( date.getTime()+(1*24*60*60*1000) );

        if(this.guest_state_token == null) {
          this.guest_state_token = Join.commitGuestState( this.guest_state );
          Cookie.set('guest_state', this.guest_state_token, { path: '/', expires: date } );
        } else {
          Join.updateGuestState( this.guest_state, this.guest_state_token );
        }



        return this.guest_state;
  },
  updateGuestState: function(state, token) {
    jQuery.ajax({
      async: false,
      url: "/api/guest_state/" + token,
      data: {"content": JSON.stringify(state)},
      dataType: "json",
      type: "PUT"
    });
  },
  commitGuestState: function(state) {
    var token;

    jQuery.ajax({
      async: false,
      url: "/api/guest_state",
      data: {"content": JSON.stringify(state)},
      dataType: "json",
      type: "POST",

      success: function(data) {
        token = data.token;
      },

      failure: function(data) {
        token = null;
      }
    });

    return token;
  },
  addParamToReferer: function( name, value ) {
    var fieldValue = jQuery('#referer').val();

    if( jQuery.trim(fieldValue) == '' ) {
      fieldValue = '/?';
    }

    var queryLocation = fieldValue.indexOf('?');

    if( queryLocation < 0 ) {
      fieldValue += '?';
    }
    else if( queryLocation != fieldValue.length-1 ) {
      fieldValue += '&';
    }

    jQuery('#referer').val( fieldValue + name + '=' + value );
  },
  hideSixSecondModal: function() {
    jQuery('#photo-join-modal').modal('hide');
  },
  asyncPhotoModal: function(from_digest) {
    jQuery.get('/join/splash_modal', {referer: window.location.pathname})
    .success(function(data) {
      jQuery('body').append(data.partial);
      Join.showPhotoModal(from_digest, photo_modal_delay);
    });
  },
  showPhotoModal: function(fromDigest, delay) {
    if ( SignupTypes.repeatVisitModalEnabled || !SignupTypes.photoModalEnabled || Join.willShowSecondPageModal()){
      return false;
    }

    if( delay === undefined ) {
      delay = photo_modal_delay;
    }

    var cookieName = 'photo_modal_shown';

    if( (!Cookie.get(cookieName) || fromDigest)  && !$UI.useMobile) {
      var date = new Date();
      date.setTime( date.getTime()+(24*60*60*1000) );
      Cookie.set(cookieName, 'PhotoModalShown', { path: '/', expires: date } );

      if( !fromDigest ) {
        setTimeout( function() {
          if( !jQuery('.sui-modal_content').is(':visible') && jQuery('.join-footer').length == 0 ) {
            var sixSecondModal = jQuery('#photo-join-modal');
            sixSecondModal.sui_modal('show');
            jQuery('#marketer-photo-join-modal').sui_modal('show');

            GoogleAnalytics.trackEvent('Join', 'show', 'Photo Join Modal', 0, true);

            sixSecondModal.on('hidden', function(){
              GoogleAnalytics.trackEvent('Join', 'click', 'Default Join Modal Hide', 0, true);
            });

            jQuery('#photo-join-modal  form').on('submit', function(){
              // maybe move this to the controller action?
              GoogleAnalytics.trackEvent('Join', 'click', 'Photo Join Modal Register');
            });
          }
        }, delay );
      }
    }
  },
  trackSixSecondModalEventFromDOM: function(event) {
    GoogleAnalytics.trackEvent('Join', 'click', 'Photo Join Modal ' + event);
  },
  showRepeatVisitModal: function() {
    if ( SignupTypes.repeatVisitModalEnabled && !$UI.useMobile && !SignupTypes.marketingPage){
      setTimeout( function() {
        if( !jQuery('.sui-modal_content').is(':visible') ){
          jQuery('#repeat_visit_modal').modal('show');
          GoogleAnalytics.trackEvent('Join', SignupTypes.modalLimit + ' Visit Modal', 'Show')

          jQuery('#repeat_visit_modal').on('hidden', function(){
            GoogleAnalytics.trackEvent('Join', SignupTypes.modalLimit + ' Visit Modal', 'Hide', 0, true);
          });

          jQuery('#repeat_visit_modal form').on('submit', function(){
            GoogleAnalytics.trackEvent('Join', SignupTypes.modalLimit + ' Visit Modal', 'Register');
          })
        }
      }, 6000 );
    }
  },
  showSecondPageModal: function() {
    if ( SignupTypes.secondPageModalEnabled && !$UI.useMobile && !SignupTypes.marketingPage){
      if( !jQuery('.sui-modal_content').is(':visible') ){
        jQuery('#second_page_modal').modal('show');
        GoogleAnalytics.trackEvent('Join', 'Second Page Modal', 'Show');

        jQuery('#second_page_modal form').on('submit', function(){
          GoogleAnalytics.trackEvent('Join', 'Second Page Modal', 'Register');
        })
      }
    }
  },
  willShowSecondPageModal: function() {
    return (window.location.pathname == sessionStorage.guest_second_page) && SignupTypes.secondPageModalEnabled;
  },
  setSecondPageModalCookie: function(href){
    url = window.location.protocol + '//' + window.location.host + href;
    var el = document.createElement('a');
    el.href = url;
    sessionStorage.guest_second_page = el.pathname
  },
  setSignupType: function(type){
    jQuery('.join-login-box.sui-modal_content .register-form input[name="registration[signup_type]"]').val(type);
    jQuery('.join-login-box.sui-modal_content .social-register a').attr('data-join-form', type);
  },
  setJoinMessage: function(){
    message = _.strip( JoinFooter.footer().find('span.message').html() );
    jQuery('.join-login-box.sui-modal_content .register-form input[name="registration[join_message]"]').val(message);
    jQuery('.join-login-box.sui-modal_content .social-register a').attr('data-join-message', message);
  }
};

/************************************************************************/
/* Login functionality _not_ related to the Join-And-Login Pseudo-Modal */
/************************************************************************/
var Login = {
  showConnectExisting:function() {
    jQuery("#setup_new_account").slideUp(250, function() {
      jQuery("#setup_existing_connection").slideDown(250);
    });
  },
  showSetupNew:function() {
    jQuery("#setup_existing_connection").slideUp(250, function() {
      jQuery("#setup_new_account").slideDown(250);
    });
  },
  socialJoinWindowName: 'sw_social_join',
  showSocialSiteLogin: function(social_nw_provider_name, referer_url, form, message) {
    if(!window.noDefaultGA) {
      if( Join.guest_state === null || Join.guest_state === undefined ) {
        GoogleAnalytics.trackEvent("Join", social_nw_provider_name + " button clicked", "No Guest State");
      } else {
        GoogleAnalytics.trackEvent("Join", social_nw_provider_name + " button clicked", "With Guest State", 1);
      }
    }

    JoinAndLogin.hide();

    if (referer_url !== undefined  &&  referer_url !== null  && referer_url.length > 0) {
      Cookie.set('social_auth_referer_url', referer_url, {path: '/'});
    } else {
      where = document.location;
      Cookie.set('social_auth_referer_url', where, {path: '/'});
    }

    var window_opts = (social_nw_provider_name == 'daniweb' ) ? "width=1024,height=430" : "width=760,height=430";
    window.open("/auth/" + social_nw_provider_name + "?form=" + form + "&message=" + message, Login.socialJoinWindowName, window_opts);
  }
};

var JoinFooter = {
  footer: function(){ return jQuery('.join-footer') },
  analyticsLogged: false,
  atBottom: false,
  scrollBound: false,
  cookieName: 'join_footer_hidden',
  init: function(){
    var footer = JoinFooter.footer();
    scrollThrottle = _.throttle(JoinFooter.scrollFooter, 20);
    JoinFooter.setHeight(scrollThrottle);
    if ( JoinFooter.footerEnabled() ){
      jQuery(window).on('scroll', scrollThrottle);
      JoinFooter.scrollBound = true;
    }

    jQuery('.join-footer-products').find('.community-button').on('click', function(event){
      event.preventDefault();
      JoinAndLogin.showLogin();
      Join.setSignupType(SignupTypes.fromFooter);
      GoogleAnalytics.trackEvent('Join', 'Footer', 'Login Clicked');
      Join.setJoinMessage();
    });

    // on resize bind/unbind and show/hide the footer
    // if too narrow to read message
    jQuery(window).on('resize', _.throttle(function(){
      JoinFooter.setHeight(scrollThrottle);
      if (JoinAndLogin.modalShowing) {
        footer.hide();
      }
      else if ( !JoinFooter.footerWideEnough() ){
        if ( JoinFooter.scrollBound ){
          JoinFooter.scrollBound = false;
          jQuery(window).off('scroll', scrollThrottle);
          footer.hide();
        }
      }
      else if ( !JoinFooter.scrollBound ){
        jQuery(window).on('scroll', scrollThrottle);
        JoinFooter.scrollBound = true;
        footer.show();
      }
    }, 20));

    jQuery('.challenge-footer_hide-footer').on('click', function(){
      JoinFooter.hideFooter();
      GoogleAnalytics.trackEvent('Daily Challenge Guest ' + DailyChallenge.analyticsCategory, 'click', 'Hide Challenge Footer');
    });

  },
  footerEnabled: function(){
    return !$UI.useMobile &&
           !SignupTypes.marketingPage &&
           SignupTypes.joinFooterEnabled &&
           JoinFooter.footerWideEnough() &&
           !Cookie.get(JoinFooter.cookieName) &&
           !(jQuery('.hide-join-footer').length)
  },
  hideFooter: function(){
    var date = new Date();
    date.setTime( date.getTime()+(24*60*60*1000) );
    Cookie.set(JoinFooter.cookieName, 'JoinFooterHidden', { path: '/', expires: date } );
    JoinFooter.footer().hide();
  },
  scrollFooter: function() {
    var footer = JoinFooter.footer();
    var enabled = JoinFooter.footerEnabled();

    if ( !enabled ){
      if( footer.is(':visible') ){
        footer.hide();
      }
      return false;
    }
    else{
      if ( !footer.is(':visible') ){
        footer.show()
      }
    }

    var footerHeight = footer.height();
    var hideAtBottom = jQuery('.read-next-footer').length == 0;

    // pushes the footer into/out of view if scrolling between 0 and the footers height
    // starts invisible, scrolls into view as you scroll down, and hides again if you scroll up
    if ( window.scrollY <= footerHeight ) {
      var footerOffset = window.scrollY-footerHeight
      footer.css('bottom', footerOffset+'px' );
    }
    else if ( !JoinFooter.atBottom ){
      footer.css('bottom', 0);
    }

    // only track the first time footer is fully shown
    if ( window.scrollY > footerHeight && !JoinFooter.analyticsLogged ){
      JoinFooter.analyticsLogged = true;
      if (jQuery('.join-footer.challenge-footer').length > 0){
        GoogleAnalytics.trackEvent('Daily Challenge Guest ' + DailyChallenge.analyticsCategory, 'show', 'Footer', 0, true);
      }
      else {
        GoogleAnalytics.trackEvent('Join', 'Footer', 'Shown', 0, true);
      }
    }
    // hide if scroll to bottom of page if not infinite scroll
    if ( hideAtBottom ){
      if(jQuery(window).scrollTop() + jQuery(window).height() == jQuery(document).height()) {
        footer.slideUp(500);
        JoinFooter.atBottom = true;
      }
      else if ( JoinFooter.atBottom ){
        JoinFooter.atBottom = false;
        footer.slideDown(500);
      }
    }
  },
  footerWideEnough: function() {
    var width = jQuery(window).width();
    // margins are 5% on each side
    width -= width * 0.1;
    var footer = JoinFooter.footer();
    var footerContentWidth = 0;
    var footerFound = false;
    if(footer.find('.message').length > 0){
      footerContentWidth += footer.find('.message').outerWidth(true);
      footerFound = true;
    }
    if(footer.find('.join-footer-products').length > 0){
      footerContentWidth += footer.find('.join-footer-products').outerWidth(true);
      footerFound = true;
    }
    if(footer.find('.challenge-question_choice-row').length > 0 ){
      width = jQuery(window).width();
      footerContentWidth += footer.find('.challenge-question_choice-row').outerWidth(true);
      footerFound = true;
    }

    return footerContentWidth < width && footerFound
  },
  setHeight: function(throttle){
    var footer = JoinFooter.footer();
    var footerHeight = 100;
    footer.height(footerHeight);
    jQuery('.join-footer .message').css('line-height', footerHeight + "px");
    if ( !JoinFooter.scrollBound ){
      jQuery(window).on('scroll', throttle);
      JoinFooter.scrollBound = true;
    }
    footer.show();
  }
};
/*1.0*/
(function($) {
  window.Messaging = {
    PREFIX: 'application_messaging_',
    initialize: function(){
      if ( !this.initialized ){
        this.initialized = true;
        this.expiredMessages = [];
        this.container = $( '#application_messaging' );
        if (!this.container) { return; }
        this.visible = this.container.is(':visible');
        if ( !this.container ) { return; }

        this.list = $('<ol></ol>');
        this.container.append(this.list);

        // Application.messages is built in _bootstrapped_data.html.erb
        _.each( Application.messages || [], _.bind( function(message) {
          this.push( message.id, message.text, message.options );
        }, this) );
      }
    },
    push: function( messageID, messageBody, options ){
      if ( !this.initialized ) { this.initialize(); }

      var globalID = this.PREFIX + messageID; // create our element ID, should be unique
      if ( $('#' + globalID).length > 0 ) { return undefined; } // if the element is already on the page, don't do anything

      options = _.extend({
        dismissable:false, // give the message a clickable element to remove it
        ajaxOnDismiss:true, // fire an AJAX call when the dismiss button is clicked
        selfRemoving:false, // make the message remove itself after timeSeconds have lapsed
        timeoutSeconds:5 // when selfRemoving is true, this is time duration the message is displayed
      }, options || {} );

      var message = $('<li id="' + globalID + '" message_id="' + messageID + '">' + messageBody + '</li>');

      if ( options.dismissable ) { this._makeDismissable(message, messageID, options.ajaxOnDismiss); }

      this._hideAll();
      this.list.append( message );

      this.container.show();
      this.visible = true;

      if ( options.selfRemoving ) {
        setTimeout( $.proxy( this.pop, this, messageID ), options.timeoutSeconds );
      }

      return message;
    },
    pop: function( messageID ){
      var message;
      if (messageID) {
        message = this._removeByID(messageID);
      } else {
        message = this._removeLast();
      }

      this._hideAll();
      var last = _.last( this.messages() );
      if (last) {
        $(last).show();
      } else {
        this._noMessages();
      }

      return message;
    },

    dismissMessage: function(messageID, ajaxOnDismiss, event){
      if (event) { event.stopPropagation(); event.preventDefault(); }
      this.pop(messageID);
      if(ajaxOnDismiss){
        $.post( '/launch/dismiss_top_message/' + messageID, { hide: true } );
      }
    },

    messages: function(){ return this.list.find( 'li' ); },

    _noMessages: function(){
      this.container.hide();
      this.visible = false;
    },

    _makeDismissable: function( message, messageID, ajaxOnDismiss ){
      message.addClass( 'dismissable' );

      var dismisser = $('<a class="sui-alert_close" title="Dismiss this message"></a>');
      // var dismisser = new Element('a', { 'class': 'dismisser', title: 'Dismiss this message' } ).update('<img alt="dismiss" width="10" height="10" src="//static.spiceworks.com/assets/icons/square_close_white-aa0aab4690d43a7eab894a7d53817da2d1080c48400a4c242e176de02b478a60.png" />');

      dismisser.on( 'click', $.proxy( this.dismissMessage, this, messageID, ajaxOnDismiss ) );

      message.append(document.createTextNode(' '));
      message.append(dismisser);
    },
    _removeByID: function( messageID ){
      return this._remove( this.list.find( '#' + this.PREFIX + messageID ) );
    },
    _removeLast: function(){
      return this._remove( _.last( this.messages() ) );
    },
    _remove: function( message ){
      if (message) { message.remove(); }
      return message;
    },

    _hideAll: function() { this.messages().hide(); }
  };

  $(function() {
    Messaging.initialize(); // Moved here from layouts/_messaging_container.html.erb

    // Mark all inputs with their type as class name
    $('input').each( function() {
      $(this).addClass( $(this).attr('type') );
    });

    $('body').on('click', '[data-action=dismiss_calendar_event]', function(event) {
      Cookie.set('hide_event_message', '1', {expires: moment().add('hours', 12).toDate() });
      $('#community_message').slideUp();
    });

    $('body').on('click', '[data-action=dismiss_community_message]', function(event) {
      Cookie.set('hide_community_message', '1', {expires: moment().add('hours', 12).toDate()});
      $('#community_message').slideUp();
    });

    $('body').on('click', '[data-action=dismiss_feed_message]', function(event) {
      Cookie.set('hide_feed_message', '1', {expires: moment().add('hours', 12).toDate()});
      $('#community_message').slideUp();
    });

    $('body').on('click', '[data-action=dismiss_push_message]', function(event) {
      BroswerPushNotificationHandler.userWasAsked();
      $('#push_request').slideUp();
    });
  });

})(jQuery);
/*1.0*/
var SPICE = window.SPICE || {};

SPICE.ranking = function(data) {

  if(data)
  {
    var dom_id = data.dom_id;
    var html = data.html;

    if(dom_id && html)
    {
      jQuery('#'+dom_id).replaceWith(html);  
    }

    var ga_class = data.ga_class;
    var ga_name = data.ga_name;
    var ga_id = data.ga_id;
    GoogleAnalytics.trackEvent(ga_class, ga_name, ga_id);
  }

};

(function($) {
  window.Ranking = {
    prep:function(ranking_element){
      var $ranking_elem = $(ranking_element);
      $ranking_elem.on('mouseover', this.hover_on);
      $ranking_elem.on('mouseout', this.hover_off);
    },
    hover_on:function(event){
      $(event.target).addClass('ranking_hover');
    },
    hover_off:function(e){
      $(event.target).removeClass('ranking_hover');
    },
    rank: function(klass, id, value, rankable){
      if( rankable ) {
        this.change_value(rankable, value);
        this.disable_buttons(rankable);
      }

      $.post('/ranking/rank', {
        'class': klass,
        id: id,
        value: value,
        show_label: ($('p.spiciness').length > 0)
      })
      .done( _.bind(function (data) {

        SPICE.ranking(data);

      }, this));

    },
    change_value: function(rankable, value){
      var value_node = $('#' + rankable + '_value');

      // assuming that non-digit characters are the minus sign
      var new_value = parseInt(value_node.html().replace(/^\D/, '-'), 10) + value;
      value_node.html(String(new_value).replace('-', '&minus;'));
    },
    disable_buttons: function(rankable){
      var buttons = $('#' + rankable + ' p.action a');
      buttons.addClass('disabled')
             .attr('onclick', 'return false;');
    }
  };
})(jQuery);
/*1.0*/

/*
-----------------------------------------------------------------------------------------------
MODIFICATIONS @ SPICEWORKS:
 - Change to .erb and added `fileLoadingImage` & `fileCloseImage` values
 - Change "a[rel^=lightbox]" click handler to be on document but filtered to "a[rel^=lightbox]"
   for images not on page at load time (e.g. topics where we wrap in '<a>' with JS after load.
-----------------------------------------------------------------------------------------------
Lightbox v2.5
by Lokesh Dhakar - http://www.lokeshdhakar.com

For more information, visit:
http://lokeshdhakar.com/projects/lightbox2/

Licensed under the Creative Commons Attribution 2.5 License - http://creativecommons.org/licenses/by/2.5/
- free for use in both personal and commercial projects
- attribution requires leaving author name, author link, and the license info intact

Thanks
- Scott Upton(uptonic.com), Peter-Paul Koch(quirksmode.com), and Thomas Fuchs(mir.aculo.us) for ideas, libs, and snippets.
- Artemy Tregubenko (arty.name) for cleanup and help in updating to latest proto-aculous in v2.05.


Table of Contents
=================
LightboxOptions

Lightbox
- constructor
- init
- enable
- build
- start
- changeImage
- sizeContainer
- showImage
- updateNav
- updateDetails
- preloadNeigbhoringImages
- enableKeyboardNav
- disableKeyboardNav
- keyboardAction
- end

options = new LightboxOptions
lightbox = new Lightbox options
*/


(function() {
  var Lightbox, LightboxOptions;

  LightboxOptions = (function() {

    function LightboxOptions() {
      this.fileLoadingImage = '//static.spiceworks.com/assets/community/lightbox/loading-81ea81be1d862d36c34b6dc4f12aefb87b656e319003263d8274974b48ccf869.gif';
      this.fileCloseImage = '//static.spiceworks.com/assets/community/lightbox/closelabel-cc3c8f67291b46b0b7c26148f146db5c486d049c5a4996643bcdbfb005917082.gif';
      this.resizeDuration = 700;
      this.fadeDuration = 500;
      this.labelImage = "Image";
      this.labelOf = "of";
    }

    return LightboxOptions;

  })();

  Lightbox = (function() {

    function Lightbox(options) {
      this.options = options;
      this.album = [];
      this.currentImageIndex = void 0;
      this.init();
    }

    Lightbox.prototype.init = function() {
      this.enable();
      return this.build();
    };

    Lightbox.prototype.enable = function() {
      var _this = this;
      return $(document).on('click', 'a[rel^=lightbox], area[rel^=lightbox]', function(e) {
        _this.start(e.currentTarget);
        return false;
      });
    };

    Lightbox.prototype.build = function() {
      var $lightbox,
        _this = this;
      $("<div>", {
        id: 'lightboxOverlay'
      }).after($('<div/>', {
        id: 'lightbox'
      }).append($('<div/>', {
        "class": 'outerContainer'
      }).append($('<div/>', {
        "class": 'container'
      }).append($('<img/>', {
        "class": 'image'
      }), $('<div/>', {
        "class": 'nav'
      }).append($('<a/>', {
        "class": 'prev'
      }), $('<a/>', {
        "class": 'next'
      })), $('<div/>', {
        "class": 'loader'
      }).append($('<a/>', {
        "class": 'cancel'
      }).append($('<img/>', {
        src: this.options.fileLoadingImage
      }))))), $('<div/>', {
        "class": 'dataContainer'
      }).append($('<div/>', {
        "class": 'data'
      }).append($('<div/>', {
        "class": 'details'
      }).append($('<span/>', {
        "class": 'caption'
      }), $('<span/>', {
        "class": 'number'
      })), $('<div/>', {
        "class": 'closeContainer'
      }).append($('<a/>', {
        "class": 'close'
      }).append($('<img/>', {
        src: this.options.fileCloseImage
      }))))))).appendTo($('body'));
      $('#lightboxOverlay').hide().on('click', function(e) {
        _this.end();
        return false;
      });
      $lightbox = $('#lightbox');
      $lightbox.hide().on('click', function(e) {
        if ($(e.target).attr('id') === 'lightbox') _this.end();
        return false;
      });
      $lightbox.find('.outerContainer').on('click', function(e) {
        if ($(e.target).attr('id') === 'lightbox') _this.end();
        return false;
      });
      $lightbox.find('.prev').on('click', function(e) {
        _this.changeImage(_this.currentImageIndex - 1);
        return false;
      });
      $lightbox.find('.next').on('click', function(e) {
        _this.changeImage(_this.currentImageIndex + 1);
        return false;
      });
      $lightbox.find('.loader, .close').on('click', function(e) {
        _this.end();
        return false;
      });
    };

    Lightbox.prototype.start = function(link) {
      var $lightbox, $window, a, i, imageNumber, left, top, _len, _ref;
      $('select, object, embed').css({
        visibility: "hidden"
      });
      $('#lightboxOverlay').width($(document).width()).height($(document).height()).fadeIn(this.options.fadeDuration);
      this.album = [];
      imageNumber = 0;
      if (link.rel === 'lightbox') {
        this.album.push({
          link: link.href,
          title: link.title
        });
      } else {
        _ref = $(link.tagName + '[rel="' + link.rel + '"]');
        for (i = 0, _len = _ref.length; i < _len; i++) {
          a = _ref[i];
          this.album.push({
            link: a.href,
            title: a.title
          });
          if (a.href === link.href) imageNumber = i;
        }
      }
      $window = $(window);
      top = $window.scrollTop() + $window.height() / 10;
      left = $window.scrollLeft();
      $lightbox = $('#lightbox');
      $lightbox.css({
        top: top + 'px',
        left: left + 'px'
      }).fadeIn(this.options.fadeDuration);
      this.changeImage(imageNumber);
    };

    Lightbox.prototype.changeImage = function(imageNumber) {
      var $image, $lightbox, preloader,
        _this = this;
      this.disableKeyboardNav();
      $lightbox = $('#lightbox');
      $image = $lightbox.find('.image');
      $('.loader').fadeIn('slow');
      $lightbox.find('.image, .nav, .prev, .next, .dataContainer, .numbers').hide();
      $lightbox.find('.outerContainer').addClass('animating');
      preloader = new Image;
      preloader.onload = function() {
        $image.attr('src', _this.album[_this.currentImageIndex].link);
        $image.width = preloader.width;
        $image.height = preloader.height;
        return _this.sizeContainer(preloader.width, preloader.height);
      };
      preloader.src = this.album[imageNumber].link;
      this.currentImageIndex = imageNumber;
    };

    Lightbox.prototype.sizeContainer = function(imageWidth, imageHeight) {
      var $container, $lightbox, $outerContainer, containerBottomPadding, containerLeftPadding, containerRightPadding, containerTopPadding, newHeight, newWidth, oldHeight, oldWidth,
        _this = this;
      $lightbox = $('#lightbox');
      $outerContainer = $lightbox.find('.outerContainer');
      oldWidth = $outerContainer.outerWidth();
      oldHeight = $outerContainer.outerHeight();
      $container = $lightbox.find('.container');
      containerTopPadding = parseInt($container.css('padding-top'), 10);
      containerRightPadding = parseInt($container.css('padding-right'), 10);
      containerBottomPadding = parseInt($container.css('padding-bottom'), 10);
      containerLeftPadding = parseInt($container.css('padding-left'), 10);
      newWidth = imageWidth + containerLeftPadding + containerRightPadding;
      newHeight = imageHeight + containerTopPadding + containerBottomPadding;
      if (newWidth !== oldWidth && newHeight !== oldHeight) {
        $outerContainer.animate({
          width: newWidth,
          height: newHeight
        }, this.options.resizeDuration, 'swing');
      } else if (newWidth !== oldWidth) {
        $outerContainer.animate({
          width: newWidth
        }, this.options.resizeDuration, 'swing');
      } else if (newHeight !== oldHeight) {
        $outerContainer.animate({
          height: newHeight
        }, this.options.resizeDuration, 'swing');
      }
      setTimeout(function() {
        $lightbox.find('.dataContainer').width(newWidth);
        $lightbox.find('.prevLink').height(newHeight);
        $lightbox.find('.nextLink').height(newHeight);
        _this.showImage();
      }, this.options.resizeDuration);
    };

    Lightbox.prototype.showImage = function() {
      var $lightbox;
      $lightbox = $('#lightbox');
      $lightbox.find('.loader').hide();
      $lightbox.find('.image').fadeIn('slow');
      this.updateNav();
      this.updateDetails();
      this.preloadNeighboringImages();
      this.enableKeyboardNav();
    };

    Lightbox.prototype.updateNav = function() {
      var $lightbox;
      $lightbox = $('#lightbox');
      $lightbox.find('.nav').show();
      if (this.currentImageIndex > 0) $lightbox.find('.prev').show();
      if (this.currentImageIndex < this.album.length - 1) {
        $lightbox.find('.next').show();
      }
    };

    Lightbox.prototype.updateDetails = function() {
      var $lightbox,
        _this = this;
      $lightbox = $('#lightbox');
      $lightbox.find('.caption').html(this.album[this.currentImageIndex].title).fadeIn('fast');
      if (this.album.length > 1) {
        $lightbox.find('.number').html(this.options.labelImage + ' ' + (this.currentImageIndex + 1) + ' ' + this.options.labelOf + '  ' + this.album.length).fadeIn('fast');
      } else {
        $lightbox.find('.number').hide();
      }
      $lightbox.find('.outerContainer').removeClass('animating');
      $lightbox.find('.dataContainer').slideDown(this.resizeDuration, function() {
        return $('#lightboxOverlay').width($(document).width()).height($(document).height());
      });
    };

    Lightbox.prototype.preloadNeighboringImages = function() {
      var preloadNext, preloadPrev;
      if (this.album.length > this.currentImageIndex + 1) {
        preloadNext = new Image;
        preloadNext.src = this.album[this.currentImageIndex + 1].link;
      }
      if (this.currentImageIndex > 0) {
        preloadPrev = new Image;
        preloadPrev.src = this.album[this.currentImageIndex - 1].link;
      }
    };

    Lightbox.prototype.enableKeyboardNav = function() {
      $(document).on('keyup.keyboard', $.proxy(this.keyboardAction, this));
    };

    Lightbox.prototype.disableKeyboardNav = function() {
      $(document).off('.keyboard');
    };

    Lightbox.prototype.keyboardAction = function(event) {
      var KEYCODE_ESC, KEYCODE_LEFTARROW, KEYCODE_RIGHTARROW, key, keycode;
      KEYCODE_ESC = 27;
      KEYCODE_LEFTARROW = 37;
      KEYCODE_RIGHTARROW = 39;
      keycode = event.keyCode;
      key = String.fromCharCode(keycode).toLowerCase();
      if (keycode === KEYCODE_ESC || key.match(/x|o|c/)) {
        this.end();
      } else if (key === 'p' || keycode === KEYCODE_LEFTARROW) {
        if (this.currentImageIndex !== 0) {
          this.changeImage(this.currentImageIndex - 1);
        }
      } else if (key === 'n' || keycode === KEYCODE_RIGHTARROW) {
        if (this.currentImageIndex !== this.album.length - 1) {
          this.changeImage(this.currentImageIndex + 1);
        }
      }
    };

    Lightbox.prototype.end = function() {
      this.disableKeyboardNav();
      $('#lightbox').fadeOut(this.options.fadeDuration);
      $('#lightboxOverlay').fadeOut(this.options.fadeDuration);
      return $('select, object, embed').css({
        visibility: "visible"
      });
    };

    return Lightbox;

  })();

  $(function() {
    var lightbox, options;
    options = new LightboxOptions;
    return lightbox = new Lightbox(options);
  });

}).call(this);
/*1.0*/
var RelatedSubjects = {
  params: "",
  init: function() {
    RelatedSubjects.params = "";
    if (narrow || taggingType) {
      RelatedSubjects.params += "?";
      if (narrow) {
        RelatedSubjects.params += "narrow=true";
      }
      if (taggingType) {
        RelatedSubjects.params += (narrow ? "&" : "")+"object_type="+taggingType;
      }
    }
    var sa = jQuery('#subject_autocomplete');

    jQuery(function()
    {
      jQuery(document).on('click', '#tagged-subjects .tag-remove', function (e)
      {
        var id = jQuery(this).data('id'),
                type = jQuery(this).data('type');

        RelatedSubjects.removeSubject(id, type);

        e.preventDefault();
      });
    });

    // only set up autocomplete if the element exists
    if(sa.length > 0) {
      if(removeText) {
        sa.focus(function() {
          var input = jQuery('#subject_autocomplete');
          input.css('color', '#000');
          input.val('');
        });
        sa.blur(function() {
          var input = jQuery('#subject_autocomplete');
          input.css('color', 'grey');
          input.val(narrow ? 'Add product or vendor...' : 'Add related product or vendor...');
          jQuery('#subject_autocomplete_loading').hide();
          jQuery('#subject_autocomplete_no_results').hide();
        });
      }

      sa.autocomplete({
        source: function(request, response) {
          var path;
          if(taggingAssetId !== 0)
            path = '/' + taggingAssetPath + '/' + taggingAssetId + '/subject_autocomplete' + RelatedSubjects.params;
          else
            path = '/' + taggingAssetPath + '/subject_autocomplete' + RelatedSubjects.params;
          jQuery.getJSON(
            path,
            { term: request.term },
            function(data) {
              if(data.length === 0) {
                jQuery('#subject_autocomplete_loading').hide();
                jQuery('#subject_autocomplete_no_results').css('display', 'block');
              }
              response(jQuery.map(data, function(i) { return i; }));
            }
          );
        },
        select: function(event, ui) {
          jQuery('#subject_autocomplete').val(ui.item.label);
          if (taggingProducts)
            RelatedSubjects.selectSubjectTag(event, ui);
          else
            jQuery('#subject_autocomplete_id').val(ui.item.id);
          return false;
        },
        focus: function(event, ui) {
          jQuery('#subject_autocomplete').val(ui.item.label);
          return false;
        },
        search: RelatedSubjects.setAutocompleteLoading,
        open:   RelatedSubjects.setAutocompleteLoaded,
        close:  RelatedSubjects.setAutocompleteLoaded,
        appendTo: inTable ? '.ui-front' : ''
      }).data('autocomplete')._renderItem = function(ul, item) {
        var li = jQuery('<li>');
        li.data('item.autocomplete', item);
        if(inTable)
          li.append('<a>' + _.escape(item.value) + '</a>');
        else
          // the function below takes in a string such as "ProductType" and yields "Product Type" and "Product" to yield "Product"
          var itemType = (function(type){
            type = jQuery.trim(type);
            var wordOne = type;
            var wordTwo = '';
            for(i=1;i<type.length;i++){
              if(type[i]==type[i].toUpperCase()){
              wordOne = type.slice(0,i);
              wordTwo = type.slice(i);
            }
          };
          return wordOne + " " + wordTwo;
          })(item.type);
          li.append('<a>' + _.escape(item.value) + '<br><span class="type">' + itemType + '</span></a>');
        return li.appendTo(ul);
      };
    }

    // Set up tooltips for related products and vendors
    jQuery('.related-product-text-container a:first').tooltip();
  },
  setAutocompleteLoading: function() {
    jQuery('#subject_autocomplete_loading').show();
    jQuery('#subject_autocomplete_no_results').hide();
  },
  setAutocompleteLoaded: function() {
    jQuery('#subject_autocomplete_loading').hide();
  },
  selectSubjectTag: function(event, ui) {
    var id = ui.item.id;
    var type = ui.item.type;
    jQuery.ajax({
      type: 'POST',
      url: '/' + taggingAssetPath + '/' + taggingAssetId + '/tag_subject' + RelatedSubjects.params,
      data: { 'subject_id': id, 'type': type },
      success: function(data) {
        jQuery('#tagged-subjects').html(data.partial);
      }
    });
  },
  removeSubject: function(id, type) {
    jQuery('#tagged-' + type.toLowerCase() + '-' + id).slideUp(1000);
    jQuery.ajax({
      type: 'DELETE',
      url: '/' + taggingAssetPath + '/' + taggingAssetId + '/delete_subject_tag' + RelatedSubjects.params,
      data: { 'subject_id': id, 'type': type },
      success: function(data) {
        jQuery('#tagged-subjects').html(data.partial);
      }
    });
  }
};
setTimeout(function() {
  jQuery(function($) {
    if( $('script[data-init="RelatedSubjects"]').length ) {
      RelatedSubjects.init();
    }
  });
}, 2000);
/*1.0*/
var EmailNotice = {
  unsuspendEmail: function() {
    jQuery.ajax({
      url: "/user/unsuspend_email",
      success: function() {
        jQuery("#email_suspended_notice").slideUp();
        $UI.growl({
          caption: "Thanks for confirming your email!",
          type: "success"
        });
      },
      error: function() {
        $UI.growl({
          caption: "Sorry, something went wrong! Please contact support@spiceworks.com",
          type: "error"
        });
      }
    });
  }
};
/*1.0*/
var Sidebar = {
  requestForSidebarContent: function(url, params) {
    var self = this;
    jQuery.ajax({
      url: url,
      data: params,
      dataType: 'json'
    })
    .done(function(data) {
      jQuery('#sidebar_content_box').replaceWith(data.partial);
      self.callSidebarLinkHelpers(params.app_url, params.redirect_via_app_url);
    });
  },
  callSidebarLinkHelpers: function(app_url, redirect_via_app_url) {
    if(app_url) {
      SidebarContentUrls.setAppUrl(params.app_url);
      SidebarContentUrls.fixLinks();
      if(redirect_via_app_url) {
        SidebarContentUrls.fixAppRedirects()
      }
    }
  }
};

jQuery(function($) {
  var ajaxConfig = $('[data-sidebar-config="ajax"]').text();
  if( ajaxConfig ) {
    ajaxConfig = JSON.parse(ajaxConfig);
    Sidebar.requestForSidebarContent( ajaxConfig.url, ajaxConfig.params );
  }
});
/*1.0*/
RichTextEditor = {
  originalContent: '',

  replaceTextarea: function(id, options) {
    var elem = jQuery('#' + id),
        config = {
          stylesheets: [options.stylesheet],
          toolbar: id + '-wysihtml5-toolbar',
          parserRules: wysihtml5ParserRules,
          pasteParserRulesets: wysihtml5ParserPasteRulesets,
          maxImages: options.maxImages,
          imageModel: options.imageModel,
          blog: options.blog,
          formId: options.formId,
          useLineBreaks: false
        };

    this.originalContent = elem.val();

    var editor = elem.wysihtml(config);
    if (editor === null){
      return;
    }

    // Adjust editor width to match the rest of the form
    elem.css('box-sizing', 'border-box');

    if(options.focus) {
      RichTextEditor.focus(id);
    }
  },

  insertAtCursor: function(id, text) {
    var editor = jQuery('#' + id).data('wysihtml5').editor;
    editor.composer.commands.exec('insertHTML', text);
  },

  reset: function(id){
    var editor = jQuery('#' + id).data('wysihtml5').editor;
    editor.clear();
  },

  isDirty: function(id){
    var $textArea = jQuery('#' + id);

    if ($textArea.data('wysihtml5') && window.Draft) {
      return $textArea.data('wysihtml5').editor.getValue() != Draft.latestValue;
    } else {
      return $textArea.val() != this.originalContent;
    }
  },

  resetDirty: function(id){
    if ( window.Draft ) {
      Draft.latestValue = jQuery('#' + id).data('wysihtml5').editor.getValue();
    } else {
      this.originalContent = jQuery('#' + id).val();
    }
  },

  focus: function(id){
    var editorEl = jQuery('#' + id);
    var editorData = jQuery('#' + id).data('wysihtml5')

    if( !editorData || !editorData.editor ) {
      return;
    }

    editorData.editor.currentView.element.focus();
  },

  destroy: function(id){
    var editor = jQuery('#' + id).data('wysihtml5').editor;

    if(!editor) {
      return;
    }

    editor.destroy();
    jQuery('#' + id + '-wysiwyg-modals').remove();
  }
};
/*1.0*/
/*
 * Word counter for use with text boxes
 * Options:
 *  - container: the container to display the word count in
 *  - submit: (optional) button to enable/disable
 *  - words: the target number of words
 */

!function($) {
  "use strict";

  var WordCounter = function(element, options) {
    var field = $(element);
    var container = $(options.container);
    var submit = $(options.submit);

    // prime the field by display the number of words needed
    var initial = options.words + ' word minimum.';
    container.text(initial);
    field.on('keyup.wordCounter keydown.wordCounter', function(event) {
      var text = $(field).val();
      var wordcount = text.split(/\w+/).length;
      var delta = options.words - wordcount + 1;
      if(delta === options.words) {
        // reset the initial text since the field is empty
        container.text(initial);
        submit.attr('disabled', 'disabled');
      } else if(delta <= 0) {
        // the user has entered enough words, stop bothering them
        container.text('');
        submit.removeAttr('disabled');
      } else {
        // display the remaining word count, disable the submit button
        submit.attr('disabled', 'disabled');
        container.text(delta + ' words to go.');
      }
    });
  };

  $.fn.wordCounter = function(option) {
    return this.each(function() {
      var $this = $(this),
        data = $this.data('wordCounter'),
        options = typeof option === 'object' && option;
      if(!data) $this.data('wordCounter', (data = new WordCounter(this, options)));
    });
  };
}(window.jQuery);

/*
 * Determine if an element is overflowing
 * returns a really cool boolean: true = overflowing false = !overflowing
 */
jQuery.fn.isOverflown = function() {
  var e = this[0];
  return e.scrollHeight > e.clientHeight || e.scrollWidth > e.clientWidth;
}
;
/*1.0*/
!function(e){if("object"==typeof exports)module.exports=e();else if("function"==typeof define&&define.amd)define(e);else{var o;"undefined"!=typeof window?o=window:"undefined"!=typeof global?o=global:"undefined"!=typeof self&&(o=self),o.MktoForms2=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        throw TypeError('Uncaught, unspecified "error" event.');
      }
      return false;
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        len = arguments.length;
        args = new Array(len - 1);
        for (i = 1; i < len; i++)
          args[i - 1] = arguments[i];
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    len = arguments.length;
    args = new Array(len - 1);
    for (i = 1; i < len; i++)
      args[i - 1] = arguments[i];

    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    var m;
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      console.trace();
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.listenerCount = function(emitter, type) {
  var ret;
  if (!emitter._events || !emitter._events[type])
    ret = 0;
  else if (isFunction(emitter._events[type]))
    ret = 1;
  else
    ret = emitter._events[type].length;
  return ret;
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

},{}],2:[function(_dereq_,module,exports){
var global=typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {};/*! http://mths.be/punycode v1.2.3 by @mathias */
;(function(root) {

  /** Detect free variables */
  var freeExports = typeof exports == 'object' && exports;
  var freeModule = typeof module == 'object' && module &&
    module.exports == freeExports && module;
  var freeGlobal = typeof global == 'object' && global;
  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
    root = freeGlobal;
  }

  /**
   * The `punycode` object.
   * @name punycode
   * @type Object
   */
  var punycode,

  /** Highest positive signed 32-bit float value */
  maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

  /** Bootstring parameters */
  base = 36,
  tMin = 1,
  tMax = 26,
  skew = 38,
  damp = 700,
  initialBias = 72,
  initialN = 128, // 0x80
  delimiter = '-', // '\x2D'

  /** Regular expressions */
  regexPunycode = /^xn--/,
  regexNonASCII = /[^ -~]/, // unprintable ASCII chars + non-ASCII chars
  regexSeparators = /\x2E|\u3002|\uFF0E|\uFF61/g, // RFC 3490 separators

  /** Error messages */
  errors = {
    'overflow': 'Overflow: input needs wider integers to process',
    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
    'invalid-input': 'Invalid input'
  },

  /** Convenience shortcuts */
  baseMinusTMin = base - tMin,
  floor = Math.floor,
  stringFromCharCode = String.fromCharCode,

  /** Temporary variable */
  key;

  /*--------------------------------------------------------------------------*/

  /**
   * A generic error utility function.
   * @private
   * @param {String} type The error type.
   * @returns {Error} Throws a `RangeError` with the applicable error message.
   */
  function error(type) {
    throw RangeError(errors[type]);
  }

  /**
   * A generic `Array#map` utility function.
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} callback The function that gets called for every array
   * item.
   * @returns {Array} A new array of values returned by the callback function.
   */
  function map(array, fn) {
    var length = array.length;
    while (length--) {
      array[length] = fn(array[length]);
    }
    return array;
  }

  /**
   * A simple `Array#map`-like wrapper to work with domain name strings.
   * @private
   * @param {String} domain The domain name.
   * @param {Function} callback The function that gets called for every
   * character.
   * @returns {Array} A new string of characters returned by the callback
   * function.
   */
  function mapDomain(string, fn) {
    return map(string.split(regexSeparators), fn).join('.');
  }

  /**
   * Creates an array containing the numeric code points of each Unicode
   * character in the string. While JavaScript uses UCS-2 internally,
   * this function will convert a pair of surrogate halves (each of which
   * UCS-2 exposes as separate characters) into a single code point,
   * matching UTF-16.
   * @see `punycode.ucs2.encode`
   * @see <http://mathiasbynens.be/notes/javascript-encoding>
   * @memberOf punycode.ucs2
   * @name decode
   * @param {String} string The Unicode input string (UCS-2).
   * @returns {Array} The new array of code points.
   */
  function ucs2decode(string) {
    var output = [],
        counter = 0,
        length = string.length,
        value,
        extra;
    while (counter < length) {
      value = string.charCodeAt(counter++);
      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
        // high surrogate, and there is a next character
        extra = string.charCodeAt(counter++);
        if ((extra & 0xFC00) == 0xDC00) { // low surrogate
          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
        } else {
          // unmatched surrogate; only append this code unit, in case the next
          // code unit is the high surrogate of a surrogate pair
          output.push(value);
          counter--;
        }
      } else {
        output.push(value);
      }
    }
    return output;
  }

  /**
   * Creates a string based on an array of numeric code points.
   * @see `punycode.ucs2.decode`
   * @memberOf punycode.ucs2
   * @name encode
   * @param {Array} codePoints The array of numeric code points.
   * @returns {String} The new Unicode string (UCS-2).
   */
  function ucs2encode(array) {
    return map(array, function(value) {
      var output = '';
      if (value > 0xFFFF) {
        value -= 0x10000;
        output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
        value = 0xDC00 | value & 0x3FF;
      }
      output += stringFromCharCode(value);
      return output;
    }).join('');
  }

  /**
   * Converts a basic code point into a digit/integer.
   * @see `digitToBasic()`
   * @private
   * @param {Number} codePoint The basic numeric code point value.
   * @returns {Number} The numeric value of a basic code point (for use in
   * representing integers) in the range `0` to `base - 1`, or `base` if
   * the code point does not represent a value.
   */
  function basicToDigit(codePoint) {
    if (codePoint - 48 < 10) {
      return codePoint - 22;
    }
    if (codePoint - 65 < 26) {
      return codePoint - 65;
    }
    if (codePoint - 97 < 26) {
      return codePoint - 97;
    }
    return base;
  }

  /**
   * Converts a digit/integer into a basic code point.
   * @see `basicToDigit()`
   * @private
   * @param {Number} digit The numeric value of a basic code point.
   * @returns {Number} The basic code point whose value (when used for
   * representing integers) is `digit`, which needs to be in the range
   * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
   * used; else, the lowercase form is used. The behavior is undefined
   * if `flag` is non-zero and `digit` has no uppercase form.
   */
  function digitToBasic(digit, flag) {
    //  0..25 map to ASCII a..z or A..Z
    // 26..35 map to ASCII 0..9
    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
  }

  /**
   * Bias adaptation function as per section 3.4 of RFC 3492.
   * http://tools.ietf.org/html/rfc3492#section-3.4
   * @private
   */
  function adapt(delta, numPoints, firstTime) {
    var k = 0;
    delta = firstTime ? floor(delta / damp) : delta >> 1;
    delta += floor(delta / numPoints);
    for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
      delta = floor(delta / baseMinusTMin);
    }
    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
  }

  /**
   * Converts a Punycode string of ASCII-only symbols to a string of Unicode
   * symbols.
   * @memberOf punycode
   * @param {String} input The Punycode string of ASCII-only symbols.
   * @returns {String} The resulting string of Unicode symbols.
   */
  function decode(input) {
    // Don't use UCS-2
    var output = [],
        inputLength = input.length,
        out,
        i = 0,
        n = initialN,
        bias = initialBias,
        basic,
        j,
        index,
        oldi,
        w,
        k,
        digit,
        t,
        length,
        /** Cached calculation results */
        baseMinusT;

    // Handle the basic code points: let `basic` be the number of input code
    // points before the last delimiter, or `0` if there is none, then copy
    // the first basic code points to the output.

    basic = input.lastIndexOf(delimiter);
    if (basic < 0) {
      basic = 0;
    }

    for (j = 0; j < basic; ++j) {
      // if it's not a basic code point
      if (input.charCodeAt(j) >= 0x80) {
        error('not-basic');
      }
      output.push(input.charCodeAt(j));
    }

    // Main decoding loop: start just after the last delimiter if any basic code
    // points were copied; start at the beginning otherwise.

    for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

      // `index` is the index of the next character to be consumed.
      // Decode a generalized variable-length integer into `delta`,
      // which gets added to `i`. The overflow checking is easier
      // if we increase `i` as we go, then subtract off its starting
      // value at the end to obtain `delta`.
      for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

        if (index >= inputLength) {
          error('invalid-input');
        }

        digit = basicToDigit(input.charCodeAt(index++));

        if (digit >= base || digit > floor((maxInt - i) / w)) {
          error('overflow');
        }

        i += digit * w;
        t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

        if (digit < t) {
          break;
        }

        baseMinusT = base - t;
        if (w > floor(maxInt / baseMinusT)) {
          error('overflow');
        }

        w *= baseMinusT;

      }

      out = output.length + 1;
      bias = adapt(i - oldi, out, oldi == 0);

      // `i` was supposed to wrap around from `out` to `0`,
      // incrementing `n` each time, so we'll fix that now:
      if (floor(i / out) > maxInt - n) {
        error('overflow');
      }

      n += floor(i / out);
      i %= out;

      // Insert `n` at position `i` of the output
      output.splice(i++, 0, n);

    }

    return ucs2encode(output);
  }

  /**
   * Converts a string of Unicode symbols to a Punycode string of ASCII-only
   * symbols.
   * @memberOf punycode
   * @param {String} input The string of Unicode symbols.
   * @returns {String} The resulting Punycode string of ASCII-only symbols.
   */
  function encode(input) {
    var n,
        delta,
        handledCPCount,
        basicLength,
        bias,
        j,
        m,
        q,
        k,
        t,
        currentValue,
        output = [],
        /** `inputLength` will hold the number of code points in `input`. */
        inputLength,
        /** Cached calculation results */
        handledCPCountPlusOne,
        baseMinusT,
        qMinusT;

    // Convert the input in UCS-2 to Unicode
    input = ucs2decode(input);

    // Cache the length
    inputLength = input.length;

    // Initialize the state
    n = initialN;
    delta = 0;
    bias = initialBias;

    // Handle the basic code points
    for (j = 0; j < inputLength; ++j) {
      currentValue = input[j];
      if (currentValue < 0x80) {
        output.push(stringFromCharCode(currentValue));
      }
    }

    handledCPCount = basicLength = output.length;

    // `handledCPCount` is the number of code points that have been handled;
    // `basicLength` is the number of basic code points.

    // Finish the basic string - if it is not empty - with a delimiter
    if (basicLength) {
      output.push(delimiter);
    }

    // Main encoding loop:
    while (handledCPCount < inputLength) {

      // All non-basic code points < n have been handled already. Find the next
      // larger one:
      for (m = maxInt, j = 0; j < inputLength; ++j) {
        currentValue = input[j];
        if (currentValue >= n && currentValue < m) {
          m = currentValue;
        }
      }

      // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
      // but guard against overflow
      handledCPCountPlusOne = handledCPCount + 1;
      if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
        error('overflow');
      }

      delta += (m - n) * handledCPCountPlusOne;
      n = m;

      for (j = 0; j < inputLength; ++j) {
        currentValue = input[j];

        if (currentValue < n && ++delta > maxInt) {
          error('overflow');
        }

        if (currentValue == n) {
          // Represent delta as a generalized variable-length integer
          for (q = delta, k = base; /* no condition */; k += base) {
            t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
            if (q < t) {
              break;
            }
            qMinusT = q - t;
            baseMinusT = base - t;
            output.push(
              stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
            );
            q = floor(qMinusT / baseMinusT);
          }

          output.push(stringFromCharCode(digitToBasic(q, 0)));
          bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
          delta = 0;
          ++handledCPCount;
        }
      }

      ++delta;
      ++n;

    }
    return output.join('');
  }

  /**
   * Converts a Punycode string representing a domain name to Unicode. Only the
   * Punycoded parts of the domain name will be converted, i.e. it doesn't
   * matter if you call it on a string that has already been converted to
   * Unicode.
   * @memberOf punycode
   * @param {String} domain The Punycode domain name to convert to Unicode.
   * @returns {String} The Unicode representation of the given Punycode
   * string.
   */
  function toUnicode(domain) {
    return mapDomain(domain, function(string) {
      return regexPunycode.test(string)
        ? decode(string.slice(4).toLowerCase())
        : string;
    });
  }

  /**
   * Converts a Unicode string representing a domain name to Punycode. Only the
   * non-ASCII parts of the domain name will be converted, i.e. it doesn't
   * matter if you call it with a domain that's already in ASCII.
   * @memberOf punycode
   * @param {String} domain The domain name to convert, as a Unicode string.
   * @returns {String} The Punycode representation of the given domain name.
   */
  function toASCII(domain) {
    return mapDomain(domain, function(string) {
      return regexNonASCII.test(string)
        ? 'xn--' + encode(string)
        : string;
    });
  }

  /*--------------------------------------------------------------------------*/

  /** Define the public API */
  punycode = {
    /**
     * A string representing the current Punycode.js version number.
     * @memberOf punycode
     * @type String
     */
    'version': '1.2.3',
    /**
     * An object of methods to convert from JavaScript's internal character
     * representation (UCS-2) to Unicode code points, and back.
     * @see <http://mathiasbynens.be/notes/javascript-encoding>
     * @memberOf punycode
     * @type Object
     */
    'ucs2': {
      'decode': ucs2decode,
      'encode': ucs2encode
    },
    'decode': decode,
    'encode': encode,
    'toASCII': toASCII,
    'toUnicode': toUnicode
  };

  /** Expose `punycode` */
  // Some AMD build optimizers, like r.js, check for specific condition patterns
  // like the following:
  if (
    typeof define == 'function' &&
    typeof define.amd == 'object' &&
    define.amd
  ) {
    define(function() {
      return punycode;
    });
  } else if (freeExports && !freeExports.nodeType) {
    if (freeModule) { // in Node.js or RingoJS v0.8.0+
      freeModule.exports = punycode;
    } else { // in Narwhal or RingoJS v0.7.0-
      for (key in punycode) {
        punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
      }
    }
  } else { // in Rhino or a web browser
    root.punycode = punycode;
  }

}(this));

},{}],3:[function(_dereq_,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

},{}],4:[function(_dereq_,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return obj[k].map(function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};

},{}],5:[function(_dereq_,module,exports){
'use strict';

exports.decode = exports.parse = _dereq_('./decode');
exports.encode = exports.stringify = _dereq_('./encode');

},{"./decode":3,"./encode":4}],6:[function(_dereq_,module,exports){
/*jshint strict:true node:true es5:true onevar:true laxcomma:true laxbreak:true eqeqeq:true immed:true latedef:true*/
(function () {
  "use strict";

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var punycode = _dereq_('punycode');

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '~', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(delims),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#']
      .concat(unwise).concat(autoEscape),
    nonAuthChars = ['/', '@', '?', '#'].concat(delims),
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[a-zA-Z0-9][a-z0-9A-Z_-]{0,62}$/,
    hostnamePartStart = /^([a-zA-Z0-9][a-z0-9A-Z_-]{0,62})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always have a path component.
    pathedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = _dereq_('querystring');

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && typeof(url) === 'object' && url.href) return url;

  if (typeof url !== 'string') {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  var out = {},
      rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    out.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      out.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {
    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    // don't enforce full RFC correctness, just be unstupid about it.

    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the first @ sign, unless some non-auth character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    var atSign = rest.indexOf('@');
    if (atSign !== -1) {
      var auth = rest.slice(0, atSign);

      // there *may be* an auth
      var hasAuth = true;
      for (var i = 0, l = nonAuthChars.length; i < l; i++) {
        if (auth.indexOf(nonAuthChars[i]) !== -1) {
          // not a valid auth.  Something like http://foo.com/bar@baz/
          hasAuth = false;
          break;
        }
      }

      if (hasAuth) {
        // pluck off the auth portion.
        out.auth = decodeURIComponent(auth);
        rest = rest.substr(atSign + 1);
      }
    }

    var firstNonHost = -1;
    for (var i = 0, l = nonHostChars.length; i < l; i++) {
      var index = rest.indexOf(nonHostChars[i]);
      if (index !== -1 &&
          (firstNonHost < 0 || index < firstNonHost)) firstNonHost = index;
    }

    if (firstNonHost !== -1) {
      out.host = rest.substr(0, firstNonHost);
      rest = rest.substr(firstNonHost);
    } else {
      out.host = rest;
      rest = '';
    }

    // pull out port.
    var p = parseHost(out.host);
    var keys = Object.keys(p);
    for (var i = 0, l = keys.length; i < l; i++) {
      var key = keys[i];
      out[key] = p[key];
    }

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    out.hostname = out.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = out.hostname[0] === '[' &&
        out.hostname[out.hostname.length - 1] === ']';

    // validate a little.
    if (out.hostname.length > hostnameMaxLen) {
      out.hostname = '';
    } else if (!ipv6Hostname) {
      var hostparts = out.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            out.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    // hostnames are always lower case.
    out.hostname = out.hostname.toLowerCase();

    if (!ipv6Hostname) {
      // IDNA Support: Returns a puny coded representation of "domain".
      // It only converts the part of the domain name that
      // has non ASCII characters. I.e. it dosent matter if
      // you call it with a domain that already is in ASCII.
      var domainArray = out.hostname.split('.');
      var newOut = [];
      for (var i = 0; i < domainArray.length; ++i) {
        var s = domainArray[i];
        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?
            'xn--' + punycode.encode(s) : s);
      }
      out.hostname = newOut.join('.');
    }

    out.host = (out.hostname || '') +
        ((out.port) ? ':' + out.port : '');
    out.href += out.host;

    // strip [ and ] from the hostname
    if (ipv6Hostname) {
      out.hostname = out.hostname.substr(1, out.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    out.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    out.search = rest.substr(qm);
    out.query = rest.substr(qm + 1);
    if (parseQueryString) {
      out.query = querystring.parse(out.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    out.search = '';
    out.query = {};
  }
  if (rest) out.pathname = rest;
  if (slashedProtocol[proto] &&
      out.hostname && !out.pathname) {
    out.pathname = '/';
  }

  //to support http.request
  if (out.pathname || out.search) {
    out.path = (out.pathname ? out.pathname : '') +
               (out.search ? out.search : '');
  }

  // finally, reconstruct the href based on what has been validated.
  out.href = urlFormat(out);
  return out;
}

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (typeof(obj) === 'string') obj = urlParse(obj);

  var auth = obj.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = obj.protocol || '',
      pathname = obj.pathname || '',
      hash = obj.hash || '',
      host = false,
      query = '';

  if (obj.host !== undefined) {
    host = auth + obj.host;
  } else if (obj.hostname !== undefined) {
    host = auth + (obj.hostname.indexOf(':') === -1 ?
        obj.hostname :
        '[' + obj.hostname + ']');
    if (obj.port) {
      host += ':' + obj.port;
    }
  }

  if (obj.query && typeof obj.query === 'object' &&
      Object.keys(obj.query).length) {
    query = querystring.stringify(obj.query);
  }

  var search = obj.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (obj.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  return protocol + host + pathname + search + hash;
}

function urlResolve(source, relative) {
  return urlFormat(urlResolveObject(source, relative));
}

function urlResolveObject(source, relative) {
  if (!source) return relative;

  source = urlParse(urlFormat(source), false, true);
  relative = urlParse(urlFormat(relative), false, true);

  // hash is always overridden, no matter what.
  source.hash = relative.hash;

  if (relative.href === '') {
    source.href = urlFormat(source);
    return source;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    relative.protocol = source.protocol;
    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[relative.protocol] &&
        relative.hostname && !relative.pathname) {
      relative.path = relative.pathname = '/';
    }
    relative.href = urlFormat(relative);
    return relative;
  }

  if (relative.protocol && relative.protocol !== source.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      relative.href = urlFormat(relative);
      return relative;
    }
    source.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      relative.pathname = relPath.join('/');
    }
    source.pathname = relative.pathname;
    source.search = relative.search;
    source.query = relative.query;
    source.host = relative.host || '';
    source.auth = relative.auth;
    source.hostname = relative.hostname || relative.host;
    source.port = relative.port;
    //to support http.request
    if (source.pathname !== undefined || source.search !== undefined) {
      source.path = (source.pathname ? source.pathname : '') +
                    (source.search ? source.search : '');
    }
    source.slashes = source.slashes || relative.slashes;
    source.href = urlFormat(source);
    return source;
  }

  var isSourceAbs = (source.pathname && source.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host !== undefined ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (source.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = source.pathname && source.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = source.protocol &&
          !slashedProtocol[source.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // source.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {

    delete source.hostname;
    delete source.port;
    if (source.host) {
      if (srcPath[0] === '') srcPath[0] = source.host;
      else srcPath.unshift(source.host);
    }
    delete source.host;
    if (relative.protocol) {
      delete relative.hostname;
      delete relative.port;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      delete relative.host;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    source.host = (relative.host || relative.host === '') ?
                      relative.host : source.host;
    source.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : source.hostname;
    source.search = relative.search;
    source.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    source.search = relative.search;
    source.query = relative.query;
  } else if ('search' in relative) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      source.hostname = source.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especialy happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = source.host && source.host.indexOf('@') > 0 ?
                       source.host.split('@') : false;
      if (authInHost) {
        source.auth = authInHost.shift();
        source.host = source.hostname = authInHost.shift();
      }
    }
    source.search = relative.search;
    source.query = relative.query;
    //to support http.request
    if (source.pathname !== undefined || source.search !== undefined) {
      source.path = (source.pathname ? source.pathname : '') +
                    (source.search ? source.search : '');
    }
    source.href = urlFormat(source);
    return source;
  }
  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    delete source.pathname;
    //to support http.request
    if (!source.search) {
      source.path = '/' + source.search;
    } else {
      delete source.path;
    }
    source.href = urlFormat(source);
    return source;
  }
  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (source.host || relative.host) && (last === '.' || last === '..') ||
      last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last == '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    source.hostname = source.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especialy happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = source.host && source.host.indexOf('@') > 0 ?
                     source.host.split('@') : false;
    if (authInHost) {
      source.auth = authInHost.shift();
      source.host = source.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (source.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  source.pathname = srcPath.join('/');
  //to support request.http
  if (source.pathname !== undefined || source.search !== undefined) {
    source.path = (source.pathname ? source.pathname : '') +
                  (source.search ? source.search : '');
  }
  source.auth = relative.auth || source.auth;
  source.slashes = source.slashes || relative.slashes;
  source.href = urlFormat(source);
  return source;
}

function parseHost(host) {
  var out = {};
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      out.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) out.hostname = host;
  return out;
}

}());

},{"punycode":2,"querystring":5}],7:[function(_dereq_,module,exports){

/// Serialize the a name value pair into a cookie string suitable for
/// http headers. An optional options object specified cookie parameters
///
/// serialize('foo', 'bar', { httpOnly: true })
///   => "foo=bar; httpOnly"
///
/// @param {String} name
/// @param {String} val
/// @param {Object} options
/// @return {String}
var serialize = function(name, val, opt){
    opt = opt || {};
    var enc = opt.encode || encode;
    var pairs = [name + '=' + enc(val)];

    if (opt.maxAge) pairs.push('Max-Age=' + opt.maxAge);
    if (opt.domain) pairs.push('Domain=' + opt.domain);
    if (opt.path) pairs.push('Path=' + opt.path);
    if (opt.expires) pairs.push('Expires=' + opt.expires.toUTCString());
    if (opt.httpOnly) pairs.push('HttpOnly');
    if (opt.secure) pairs.push('Secure');

    return pairs.join('; ');
};

var regexTrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
var trim = function (str){
    if(str.trim){
        return str.trim();
    }
    return str.replace(regexTrim, "");
}

/// Parse the given cookie header string into an object
/// The object has the various cookies as keys(names) => values
/// @param {String} str
/// @return {Object}
var parse = function(str, opt) {
    opt = opt || {};
    var obj = {}
    var pairs = str.split(/[;,] */);
    var dec = opt.decode || decode;

    var len = pairs.length;
    for(var i = 0; i < len ; i++){
        var pair = pairs[i];
        var eq_idx = pair.indexOf('=')

        // skip things that don't look like key=value
        if (eq_idx < 0) {
            continue;
        }

        var key = trim(pair.substr(0, eq_idx));
        var val = trim(pair.substr(++eq_idx, pair.length));

        // quoted values
        if ('"' == val[0]) {
            val = val.slice(1, -1);
        }

        // only assign once
        if (undefined == obj[key]) {
            try {
                obj[key] = dec(val);
            } catch (e) {
                obj[key] = val;
            }
        }
    };

    return obj;
};

var encode = encodeURIComponent;
var decode = decodeURIComponent;

module.exports.serialize = serialize;
module.exports.parse = parse;

},{}],8:[function(_dereq_,module,exports){
module.exports = _dereq_("./jquery.build.js");
},{"./jquery.build.js":9}],9:[function(_dereq_,module,exports){
/**
 * The JQuery.node plugin. A DOM builder in the spirit of the Scriptaculous
 * Builder.Node.
 * 
 * Copyright (c) 2011 Ian Taylor
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
(function (){
    var ctor = function ($, document){
      /** Capability detection **/
      
      // IE Pre 9 has a weird bug with buttons and input tags that
      // causes it to throw exceptions when trying to set type
      // After the element has been created.
      var hasNormalInputButtonCreate = true;
      try{
        var btn = document.createElement("button");
        btn.type = "button";
      }
      catch (e){
        hasNormalInputButtonCreate = false;
      }
      //IE < 9 can't create stylesheets like normal elements, it has to use 
      //a funky cssText property on its proprietary styleSheet object.
      var tempStyle = document.createElement("style");
      tempStyle.type = "text/css";
      var funkyStylesheetCreate = tempStyle.styleSheet && ('cssText' in tempStyle.styleSheet);

      
      //Many versions of IE will eat spaces off the front and back of text nodes
      var spaceTestElem = document.createElement("div");
      spaceTestElem.innerHTML = " s ";
      var spaceTestValue = spaceTestElem.childNodes[0].nodeValue;
      var requiresLeadingSpace = spaceTestValue.indexOf(" ") != 0;
      var requiresTrailingSpace = spaceTestValue.lastIndexOf(" ") != 2; 
      /** End Capability detection  */

      /** Support functions */

      //Regex Caching
      var regexApos = /&apos;/g;
      var regexLt = /</g;
      var regexGt = />/g;
      // These selector expressions were ripped from the Sizzle code.
      var elemExpr = /^((?:[\w\u00c0-\uFFFF\*_-]|\\.)+)/;
      var idExpr = /#((?:[\w\u00c0-\uFFFF_-]|\\.)+)/;
      var classExpr = /\.((?:[\w\u00c0-\uFFFF_-]|\\.)+)/g;
      var attrExpr = /\[\s*((?:[\w\u00c0-\uFFFF_-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/g;
      var attrPart = /[\[\]]/g;


      /**
       * Creates a shallow clone of an array.
       */
      var arrayClone = function (arr){
        var a = [];
        $.each(arr, function (i, o){a.push(o);});
        return a;
      };
      
      var addHtmlTextToFrag = function (f, text){
       
      };
      var addPlainTextToFrag = function (f, text){
        if(requiresLeadingSpace && text.charAt(0) === " "){
          f.appendChild(document.createTextNode(" "));
        }
        f.appendChild(document.createTextNode(text));
        if(requiresTrailingSpace && text.charAt(text.length -1) === " "){
          f.appendChild(document.createTextNode(" "));
        }
      };
      
      
      var addFx =  function (f, item){
        if(!item){
          return;
        }
        if (item.jquery){
          f.appendChild(item.get(0));
        }
        else if (item.nodeType == 1 || item.nodeType == 3 || item.nodeType == 11){ 
          /* Element, Text, and DocumentFragment nodes get appended */
          f.appendChild(item);
        }
        else if ($.isArray(item)){
          var i = 0;
          var l = item.length;
          for(i = 0; i < l; i++){
             addFx(f, item[i]);
          }
        }
        else{
          addPlainTextToFrag(f, item.toString());
        }
      };
      /**
       * @function Allows you to create a new DocumentFragment node by passing in
       *           jQuery objects, Dom Nodes, or text strings, either inside of an
       *           array or as a single item.
       * 
       * See: http://ejohn.org/blog/dom-documentfragments/ for more on why to use
       * documentfragments.
       */
      var docFrag = function (children){
        var f = document.createDocumentFragment();
        if (children){
          if ($.isArray(children)) {
            var i =0;
            var l = children.length;
            for(i = 0; i < l; i++){
              addFx(f, children[i]);
            }
          }
          else {
            addFx(f,children);
          }
        }
        return f;
      };
      
      /**
       * @function This function converts a HTML string to a DocumentFragment.
       * It uses Element.innerHTML to do the parsing, so it's as fast as possible.
       * 
       * Basically, if you want HTML to pass through $.build without it being HTMLEncoded,
       * you must wrap the text with a call to this function.
       * 
       * 
       * @example: 
       *  $.build("div", [ 
       *    $.build.html("This is a <em>HTML</em> string!"),
       *    "This is a <em>Plain Text</em> string!
       *   ]);
       *  result:
       *  <div>
       *    This is a <em>HTML</em> string!
       *    This is a &lt;em&gt;Plain Text&lt;/em&gt; string!
       *  </div>
       */
      var html = function (text){
        var f = document.createDocumentFragment();
        if(text){
          //Browsers/DOM impls supporting DocumentFragment.innerHTML get a fast track. 
          if(typeof f.innerHTML != "undefined"){
            f.innerHTML = text;
          }else{
            var tempElem = document.createElement("div");
            tempElem.innerHTML = text.replace(regexApos, "'");
            if(requiresLeadingSpace && text.indexOf(" ") == 0){
              f.appendChild(document.createTextNode(" "));
            }
            while(tempElem.hasChildNodes()){
              //appending to a new parent removes the item from the old parent, 
              //thus this operation is safe and fast.
              f.appendChild(tempElem.firstChild);
            }
            if(requiresTrailingSpace && text.lastIndexOf(" ") == (text.length -1)){
              f.appendChild(document.createTextNode(" "));
            }
          }
        }
        return f;
      };

      /* End support functions */

      $.build = function (selector, attributes, children){
        if(arguments.length == 2 && attributes!=null &&
            (typeof attributes == "string" || $.isArray(attributes) || attributes.nodeType || attributes.jquery)){
          children = attributes;
          attributes = null;
        }
        selector = selector || "";

        var elemTag;
        elemTag = selector.match(elemExpr);
        if(elemTag){
          elemTag = elemTag[0];
        }
        var id = null;
        if(selector.indexOf("#") != -1){
          var id = selector.match(idExpr);
          if (id){
              id = id[1];
          }
          else{
            id = null;
          } 
        }
        var className;
        if(selector.indexOf(".") != -1){
          className = selector.match(classExpr);
        }
        var attrs;
        if(selector.indexOf("[") != -1){
          attrs = selector.match(attrExpr);
        }
        elemTag = elemTag || "div";
        if (attrs){
          attributes = attributes || {};
          $.each(attrs, function (i, attr){
            var parts = attr.replace(attrPart, "").split("=");
            if (parts && parts.length ==2){
              attributes[parts[0]] = parts[1];
            }
          });
        }
        attributes = attributes || {};
        var elem;
        if(!hasNormalInputButtonCreate && (elemTag === "input" || elemTag ==="button")){
          // In IE versions before IE 9, an input or button type can only be set
          // once, at creation. If you try to set it
          // after the fact, you get exceptions
          var type = attributes.type ? "type=\""+attributes.type+"\"" : ""; 
          // Name has to be set at creation time for radio buttons only, but
          // doesn't hurt for any other input/buttons.
          var name = attributes.name ? "name=\""+attributes.name+"\"" : "";
          elem = document.createElement("<"+elemTag+" " +type+" " +name+">");

          delete attributes["type"];
          delete attributes["name"];
        }
        else{
          elem = document.createElement(elemTag);
        }

        var jqElem = $(elem);
        
        // Set the attributes using jQuery.
        if(attributes){
          jqElem.attr(attributes);
        }
        if(id){
          elem.id = id;
        }
        
        
        if(elemTag === "img"){
          // IE 8 bug with image elements in IE 8 standards mode.
          // IE 8 will automatically add in width and height attributes to 'help'
          // you if it has the image already in its cache.
          // in doing so, it craps up it's own rendering if there is a max-height
          // or max-width style applied.
          // we will remove any unrequested height and width attributes here.
          if(!attributes.width){
            jqElem.removeAttr("width");
          }
          if(!attributes.height){
            jqElem.removeAttr("height");
          }       
        }
        if (className){
          var cls ="";
          $.each(className, function (i, str) { cls+= str.replace(".", "") + " ";});
          elem.className = $.trim(elem.className + " " + cls);
        }    

        if(funkyStylesheetCreate && elemTag == "style" && typeof children === "string"){
          //IE < 9 has a weird implementation of stylesheets, 
          //You can't just append a normal text node of styles to a style element,
          //You have to first give the stylesheet a type of "text/css", then add the string
          //as the cssText property.
          if(!jqElem.attr("type")){
            jqElem.attr("type", "text/css");
          }
          elem.styleSheet.cssText = children;
        }else if (children){
          if(children.nodeType == 11)
            // Already a document fragment.
            elem.appendChild(children);
          else
            elem.appendChild(docFrag(children));
        }
        return jqElem;
      };
      
      //expose docFrag and html children of $.build 
      $.build.docFrag = docFrag;
      $.build.html = html;
      return $.build;
    };
    
    if(typeof module !== "undefined" && module.exports){
      module.exports = ctor;
    }
    if(typeof window !== "undefined" && window.jQuery && window.document) {
      ctor(window.jQuery, window.document);
    }
}
)();


},{}],10:[function(_dereq_,module,exports){
var $ = _dereq_("./jquery.js");
var comparators = _dereq_("./comparators.js");
var fh = _dereq_("./fields/fieldhelpers.js");
//Deals with visiblity rules, dependency management

module.exports = {
  getChangeMap:getChangeMap,  
  fieldChangeChecker:fieldChangeChecker,
  applyPicklistAlterations:applyPicklistAlterations
}

function getChangeMap(fields, formDescriptor){
  var changeMap ={};
  $.each(fields, function(i, field){
    if(field.Datatype == "hidden" || field.Datatype == "profiling"){
      //Don't evaluate visibility rules on hidden or profiling fields.
      return;
    }
    var vr = field.VisibilityRule;
    if(vr){
      //Every field in a fieldset is dependent on the fieldset.
      if(field.Datatype == "fieldset"){
        var childFields = fh.flatten(formDescriptor.fieldsetRows[""+field.Id]);
        var deps = changeMap[field.Name];
        if(!deps){
          deps = [];
        }
        deps = deps.concat($.map(childFields, function (f){return f.Name;}));
        changeMap[field.Name] = deps;
      }
      //New format has more than one rule.
      var rules = vr.rules || [vr];
      $.each(rules, function (i, rule){
        if(typeof rule === "string"){
          return;
        }
        var dependents = changeMap[rule.subjectField];
        if(!dependents){
          dependents = [];
        }
        if($.inArray(field.Name, dependents) === -1){
          dependents.push(field.Name);
        }
        changeMap[rule.subjectField] = dependents;
      });
    }
  });
  return changeMap;
}

function firstItem (arr, test){
  var len = arr.length;
  for(var i =0; i < len; i++){
    var item = arr[i];
    if(test(item)){
      return item;
    }
  }
  return undefined;
}

function applyPicklistAlterations (field, rule){
  if(rule && (field.PicklistValues || rule.picklistKeys || rule.altLabel)){
    //make a deep copy of the field
    field = $.extend(true, {}, field);

    if (field.PicklistValues){
      if (rule.picklistFilterValues){
        // The filter is a list of label/value objects, need to compare both fields
        
        // Build map from values to list of labels to avoid nested loop search
        var filterKeysToValues = {};
        $.each(rule.picklistFilterValues, function (i, val){
          if (!filterKeysToValues.hasOwnProperty(val.value)){
            filterKeysToValues[val.value] = [];
          }
          filterKeysToValues[val.value].push(val.label);
        });
        
        field.PicklistValues = $.map(field.PicklistValues, function (val){
          if (filterKeysToValues.hasOwnProperty(val.value) && $.inArray(val.label, filterKeysToValues[val.value]) != -1){
            return val;
          }
        });
      }
      else if (rule.picklistKeys){
        // Pre-February2014, the picklistKeys property was used to filter
        // the values for the picklist, was replaced by picklistFilterValues to avoid problems
        // with to values having the same keys (see above)
        
        //Filter the picklist values by the keys
        field.PicklistValues = $.map(field.PicklistValues, function (val){
          if($.inArray(val.value, rule.picklistKeys) != -1){
            return val;
          } 
        });
      }
    }
    
    //Set the new label
    if(rule.altLabel){
      field.InputLabel = rule.altLabel;
    }
  }
  return field;
}

function fieldChangeChecker (vr, vals){
  if(!vr){
    return {show:true};
  }
  var show = vr.defaultVisibility == "show";
  
  var rules = vr.rules || [vr];
  
  var results = $.map(rules, function (rule){
    if(typeof rule === "string"){
      return;
    }
    var val = vals[rule.subjectField];
    if(!$.isArray(val)){
      val = val ? [val] : []
    }
    var comparator = comparators[rule.operator];
    var ok = comparator(val, rule.values);

    if(ok){
      return rule;
    }
    return null;
  });

  var activeRule = firstItem(results, function (item){
    return item !== null;
  })
  if(show){
    //If something is default "show"
    //Then it is shown when ALL of the value tests provided fail 
    return {show:!activeRule, rule:activeRule};
  }else{
    //If something is default "hide", then it is shown when ANY of the 
    //tests pass
    return {show:!!activeRule, rule:activeRule};
  }
}

},{"./comparators.js":12,"./fields/fieldhelpers.js":16,"./jquery.js":31}],11:[function(_dereq_,module,exports){


module.exports = {
  parseColor:parseColor,
  compareColor:compareColor
}
/**
  Parses a color string into an array [r,g,b,a];
  supports the following formats:
  #fff
  #ffffff
  rgba(255,255,255,0)
  rgb(255,255,255)
  returns null if the string wasn't a valid color.
*/
function parseColor (color){
  var match;
  var p = parseInt;
  color = (color || '').replace(/\s\s*/g,'');
  /* jshint -W084 */
  // #000000 format
  if (match = /^#([\da-f]{2})([\da-f]{2})([\da-f]{2})/i.exec(color)){
    return [p(match[1], 16), p(match[2], 16), p(match[3], 16), 1];
  }
  // #000 format
  else if (match = /^#([\da-f])([\da-f])([\da-f])/i.exec(color)){
    return [p(match[1], 16) * 17, p(match[2], 16) * 17, p(match[3], 16) * 17, 1];
  }
  //rgba(0,0,0,0) format
  else if (match = /^rgba\(([\d]+),([\d]+),([\d]+),([\d]+|[\d]*.[\d]+)\)/i.exec(color)){
    return [+match[1], +match[2], +match[3], +match[4]];
  }
  // rgb(0,0,0) format
  else if (match = /^rgb\(([\d]+),([\d]+),([\d]+)\)/i.exec(color)){
    return [+match[1], +match[2], +match[3], 1];
  }
  /* jshint +W084 */
  return null;
}

/**
  Compares two colors strings by value
  returns true if they're both valid colors and match, false otherwise.
*/
function compareColor (color1, color2){
  var c1 = parseColor(color1);
  var c2 = parseColor(color2);
  if(!c1 || !c2){
    return false;
  }
  for(var i = 0; i < 4; i++){
    if(c1[i] !== c2[i]){
      return false;
    }
  }
  return true;
}
},{}],12:[function(_dereq_,module,exports){
var intersect = function (x, y, fn){
  var ret = [];
  for (var i = 0; i < x.length; i++) {
      for (var z = 0; z < y.length; z++) {
          if (fn(x[i],y[z])) {
              ret.push(x[i]);
              break;
          }
      }
  }
  return ret;            
}


var comparators = {
  //tests if any elements from array are equal to any elements in array b
  equal: function (a, b){
    var fn = function(x,y){
      return x === y; 
    };
    return intersect(a, b, fn).length > 0;
  },
  //returns true if all values in array a are not in array b
  notEqual: function (a, b){
    var fn = function(x,y){
      return x === y; 
    };
    return intersect(a, b, fn).length === 0;
  },
  //returns true if there is no value  
  empty: function(a,b){
    return a.length === 0;
  },
  //returns true if there is a value
  notEmpty: function(a,b){
    return a.length > 0;
  },
  //returns true if there is a value
  any: function(a,b){
    return a.length > 0;
  },
  //returns true if any value begins with any supplied value
  startsWith: function(a,b){
    var fn = function(x,y){
      return x.indexOf(y) === 0; 
    };
    return intersect(a, b, fn).length > 0;
  },
  //returns true if no value begins with any supplied value
  notStartsWith: function(a,b){
    var fn = function(x,y){
      return x.indexOf(y) === 0; 
    };
    return intersect(a, b, fn).length === 0;
  },
   //returns true if any value begins with any supplied value
  endsWith: function(a,b){
    var fn = function(x,y){
      return x.lastIndexOf(y) === (x.length - y.length); 
    };
    return intersect(a, b, fn).length > 0;
  },
  //returns true if no value begins with any supplied value
  notEndsWith: function(a,b){
    var fn = function(x,y){
      return x.lastIndexOf(y) === (x.length - y.length); 
    };
    return intersect(a, b, fn).length === 0;
  },
  //returns true if any value contains any supplied value
  contains: function(a,b){
    var fn = function(x,y){
      return x.match(new RegExp(y, 'g')); 
    };
    return intersect(a, b, fn).length > 0;
  },
  //returns true if no value contains any supplied value
  notContains: function(a,b){
    var fn = function(x,y){
      return x.match(new RegExp(y, 'g')); 
    };
    return intersect(a, b, fn).length === 0;
  },
  //returns true if value is greater or equal to supplied value
  atLeast: function(a,b){
    return a[0] >= b[0];
  },
  //returns true if value is less than or equal to supplied value
  atMost: function(a,b){
    return a[0] <= b[0];
  },
  //returns true if number is greater than supplied value
  greaterThan: function(a,b){
    return a[0] > b[0];
  },
  //returns true if number is less than supplied value
  lessThan: function(a,b){
    return a[0] < b[0];
  },
  //returns true if number is between two given values
  between: function(a,b){
    return a[0] > b[0] && a[0] < b[1];
  },
  //returns true if number is not between two given values
  notBetween: function(a,b){
    return a[0] < b[0] || a[0] > b[1];
  },
  //returns true if value is between two supplied dates
  inTimeFrame: function(formVals,compVals){
    return (new Date(formVals[0])) > (new Date(compVals[0])) && (new Date(formVals[0])) < (new Date(compVals[1]));
  },
  //returns true if value is not between two supplied dates
  notInTimeFrame: function(formVals,compVals){
    return (new Date(formVals[0]) < new Date(compVals[0]) || new Date(formVals[0]) > new Date(compVals[1]));
  },
  //returns true if value is before now
  inPast: function(formVals,compVals){
    return (new Date(formVals[0])) < (new Date());
  },
  //returns true if value is now or in the future
  notInPast: function(formVals,compVals){
    return (new Date(formVals[0])) >= (new Date());
  },
  //returns true if value is before given date
  before: function(formVals,compVals){
    return (new Date(formVals[0])) < (new Date(compVals[0]));
  },
  //returns true if value is after given date
  after: function(formVals,compVals){
    return (new Date(formVals[0])) > (new Date(compVals[0]));
  },
  //returns true if value is equal to or before the given date 
  onOrBefore: function (formVals, compVals){
    return (new Date(formVals[0])) <= (new Date(compVals[0]));
  },
  //returns true if value is equal to or after the given date 
  onOrAfter: function(formVals,compVals){
    return (new Date(formVals[0])) >= (new Date(compVals[0]));
  }
};
module.exports = comparators;

},{}],13:[function(_dereq_,module,exports){
var cookie = _dereq_("cookie");

/*
*  Unsets a cookie on all sub domains.
*  @param cookieName the name of the cookie to remove
*  @param hostname the name of the host to remove cookies from, or location.hostname if unset
*  @returns an array of all the domains that were unset.
*/

function removeCookieAllDomains (cookieName, hostname){
  hostname = hostname || location.hostname;
  var d = new Date(); 
  d.setFullYear(d.getFullYear() -1);
  //Unset on current domain.
  var removedDomains = [];
  document.cookie = cookie.serialize(cookieName, "", {expires:d, path:"/"});
  removedDomains.push("");
  //Unset on each sub domain...
  //So if the current domain is www.foo.bar.baz.com
  //We'd unset .www.foo.bar.baz.com, then .foo.bar.baz.com, then .bar.baz.com, then .baz.com;
  var hostParts = hostname.split(".");
  while(hostParts.length > 1 ){
    var domain = "." + hostParts.join(".");
    document.cookie = cookie.serialize(cookieName, "", {expires:d, path:"/", domain:domain});
    removedDomains.push(domain);
    hostParts.shift();
  }
  return removedDomains;
}
module.exports.removeCookieAllDomains = removeCookieAllDomains;
},{"cookie":7}],14:[function(_dereq_,module,exports){
var $ = _dereq_("../jquery.js");
var $b = $.build;
var fh = _dereq_("./fieldHelpers.js");

var currency = {};
module.exports = currency;
currency.fieldType = "currency";

var currencyPattern = /[0-9]+/g;

var validateCurrency = function (v){
  if(!v){
    return true;
  }
  return v.match(currencyPattern);
}
  
currency.newField = function (field, formData){
  var e = fh.renderInput("text", field, formData);
  return {
    name:field.Name,
    elem:fh.formatStandardField(e, field, formData),
    val:$.proxy(e.val, e),
    required:field.IsRequired,
    validator:validateCurrency,
    validatorElem:e,
    onChange:function (fn){
      e.on("change", fn);
    }
  }
}

},{"../jquery.js":31,"./fieldHelpers.js":15}],15:[function(_dereq_,module,exports){
var $ = _dereq_("../jquery.js");
var $b = $.build;



var fieldHelpers = {};

fieldHelpers.splitSemis = function (str){
  str = "" + str;
  return str.split(/\s?;\s?/);
};

fieldHelpers.cap = function (s){
  return s.charAt(0).toUpperCase() + s.slice(1);
};

fieldHelpers.first = function (){
  for (var i = 0; i < arguments.length; i++){
    var v = arguments[i];
    if(v !== null && v!== undefined){
      return v;
    }
  }
  return null;
};

fieldHelpers.formatStandardField = function(fieldElem, field, formData){
  var first = fieldHelpers.first;
  var fieldWrap;
  var elems = $b.docFrag([
    $b(".mktoOffset").css({width:first(field.OffsetWidth, formData.OffsetWidth, 0)}),
    fieldWrap = $b(".mktoFieldWrap",[
        $b("label.mktoLabel.mktoHasWidth", {"for":field.Name}, [
          $b(".mktoAsterix", "*"),
          $b.html(field.InputLabel)
        ]).css({
          width: first(field.LabelWidth, formData.LabelWidth, 0)
        }),
        $b(".mktoGutter.mktoHasWidth").css({width:first(field.GutterWidth,formData.GutterWidth,0)}),
        fieldElem.addClass("mktoHasWidth").css({width:first(field.FieldWidth, formData.FieldWidth, 0 )}),
        $b(".mktoClear")
      ]
    ),
    $b(".mktoClear")
  ]);
  if(field.IsRequired){
    fieldWrap.addClass("mktoRequiredField");
  }
  return elems;
}
fieldHelpers.renderInput = function (type, field, formData){
  var e = $b("input[type="+type+"].mktoField.mkto"+fieldHelpers.cap(type)+"Field", {
    id:field.Name,
    name:field.Name,
    placeholder:field.PlaceholderText,
    maxlength:field.Maxlength || 2000,
    title:field.Description
  })
  return e;
}
fieldHelpers.isSet = function (v){
  return v !== null && v !== undefined; 
}
fieldHelpers.flatten = function (arr, accum){
  accum = accum || [];
  $.each(arr, function (i, v){
    if($.isArray(v)){
      fieldHelpers.flatten(v, accum);
    }else{
      accum.push(v);
    }
  });
  return accum;
}
fieldHelpers.vals = function (obj){
  return $.map(obj, function (val){return val;});
}

fieldHelpers.getFlattenedFields = function (formData){
  var fields = [];
  
  fields = fieldHelpers.flatten(formData.rows);

  if(formData.fieldsetRows){
    fields = fields.concat(fieldHelpers.flatten(fieldHelpers.vals(formData.fieldsetRows)));
  }
  return fields;
};
/** 
* returns an object with a key with value = true for each Datatype in a list of fields 
* eg: {textarea:true, range:true, date:true} 
* see: getFlatenenedFields() for how to get a list of fields to pass to this.
*/
fieldHelpers.getFieldTypes = function (fields){
  var fieldTypes = {};
  for(var i = 0; i < fields.length; i++){ 
    fieldTypes[fields[i].Datatype] = true;
  }
  return fieldTypes;
};
/** 
* returns true if any field in fields list has a set property named propertyName 
* see: getFlatenenedFields() for how to get a list of fields to pass to this.
*/
fieldHelpers.anyFieldHasProperty = function (fields, propertyName){
  for(var i =0; i < fields.length ; i++){
    if(fields[i][propertyName]){
      return true;
    }
  }
  return false;
};

fieldHelpers.getFieldsByName = function(fields){
  var fieldsByName = {};
  $.each(fields, function (i, v){
    fieldsByName[v.Name] = v;
  });
  return fieldsByName;
};


module.exports = fieldHelpers;
},{"../jquery.js":31}],16:[function(_dereq_,module,exports){
module.exports=_dereq_(15)
},{"../jquery.js":31}],17:[function(_dereq_,module,exports){
var $ = _dereq_("../jquery.js");
var $b = $.build;
var fh = _dereq_("./fieldHelpers.js");

var checkbox = {};
module.exports = checkbox;
checkbox.fieldType = "checkbox";

var singletonValuePairs = {
  "true":"false",
  "1":"0",
  "Yes":"No",
  "yes":"no"
}
var makeValFn = function (e, singletonValue){

  return function(val){
    var inputs = e.find("input");
    if(arguments.length === 0){
      if(singletonValue){
        //special case for singleton checkbox being used as a true/false.
        //These support the forms v1 syntaxes.  1/0 true/false, yes/no
        if(inputs.is(":checked")){
          return singletonValue;
        }else{
          return singletonValuePairs[singletonValue];
        }
      }
      inputs = e.find("input:checked");

      var vals = [];
      inputs.each(function (){
        vals.push($(this).val());
      })
      if(!vals.length){
        return undefined;
      }
      if(vals.length == 1){
        return vals[0]
      }
      return vals;
    }else{
      if(singletonValue && typeof val === "boolean"){
        //On a singleton, we accept booleans true/false always.
        e.find("input").prop("checked", val);
        return;
      }
      if(singletonValue && val === null){
        //Null on a checkbox is a no-op.
        return;
      }
      if(val && !$.isArray(val)){
        val = "" + val;
        val = fh.splitSemis("" + val);  
      }
      e.find("input").prop("checked", false);
      if(val){
        $.each(val, function (i, v){
          e.find("input[value='"+v+"']").prop("checked", true);
        })
      }      
    }
  }
}
checkbox.newField = function (field, formData){
  var plVals = field.PicklistValues || [];

  var e = $b(".mktoLogicalField.mktoCheckboxList", {title:field.Description}, [
    $.map(plVals, function (val, i){
      var id = "mktoCheckbox_" + field.Id + "_" +i;
      return $b.docFrag([
        $b("input.mktoField", {
            name:field.Name,
            id:id,
            type:"checkbox",
            value:val.value
        }),
        $b("label", {"for":id}, [
          val.label || val.name
        ])
      ])
    })
  ]);
  if(field.IsLabelToLeft){
    e.addClass("mktoLabelToLeft");
  }
  var singletonValue = "";
  if(plVals.length === 1){
    if($.inArray(plVals[0].value, Object.keys(singletonValuePairs)) !== -1){
      singletonValue = plVals[0].value;
    }
  }
  return {
    name:field.Name,
    elem:fh.formatStandardField(e, field, formData),
    val:makeValFn(e, singletonValue),
    required:field.IsRequired,
    requiredValFn:function (v){
      v = $.trim(v);
      if(v && singletonValue){
        return v !== singletonValuePairs[singletonValue];
      }
      return !!v;
    },
    validatorElem:e,
    validatorFocusElem:e.find("input:eq(0)"),
    onChange:function (fn){
      e.on("change", fn);
    }
  }
}
},{"../jquery.js":31,"./fieldHelpers.js":15}],18:[function(_dereq_,module,exports){
var $ = _dereq_("../jquery.js");
var $b = $.build;
var fh = _dereq_("./fieldHelpers.js");

var date = {};
module.exports = date;
date.fieldType = "date";

var checkDate = function (e){
  var elem = e.get(0);
  if(elem.validity && !elem.validity.valid){
    //Some browsers support html5 date but give back invalid values as "".
    return false;
  }
  return true;
}

date.newField = function (field, formData){
  var e = fh.renderInput("date", field, formData);
  var locale = "en_US";
  if(formData.ProcessOptions && formData.ProcessOptions.locale){
    locale = formData.ProcessOptions.locale;
  }
  e.data("mktoLocale", locale);
  return {
    name:field.Name,
    elem:fh.formatStandardField(e, field, formData),
    val:$.proxy(e.val, e),
    validator:function (){
      return checkDate(e);
    },
    required:field.IsRequired,
    validatorElem:e,
    onChange:function (fn){
      e.on("change", fn);
    }
  }
};
},{"../jquery.js":31,"./fieldHelpers.js":15}],19:[function(_dereq_,module,exports){
var $ = _dereq_("../jquery.js");
var $b = $.build;
var fh = _dereq_("./fieldHelpers.js");
//pattern from http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address
var emailPattern = /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;

var email = {};
module.exports = email;
email.fieldType = "email";
var checkEmail = function (e){
  var val = e.val() || "";
  if(!val){
    return true;
  }
  return val.match(emailPattern);
}
  
email.newField = function (field, formData){
  var e = fh.renderInput("email", field, formData);

  return {
    name:field.Name,
    elem:fh.formatStandardField(e, field, formData),
    val:$.proxy(e.val, e),
    required:field.IsRequired,
    validator:function (){
      return checkEmail(e);
    },
    validatorElem:e,
    onChange:function (fn){
      e.on("change", fn);
    }
  }
}
},{"../jquery.js":31,"./fieldHelpers.js":15}],20:[function(_dereq_,module,exports){
var $ = _dereq_("../jquery.js");
var $b = $.build;
var fh = _dereq_("./fieldHelpers.js");


var $ = _dereq_("../jquery.js");
var $b = $.build;
var fh = _dereq_("./fieldHelpers.js");

var number = {};
module.exports = number;
number.fieldType = "number";

function coerceNumberOrBlank(num){
  //any falsey value except 0 turns to empty string.  Yes, -0 is different than 0 in JS.
  if(!num && num !== 0){
    return '';
  }
  return ''+num;
}

function checkValid(e, min, max){
  var elem = e.get(0);
  if(elem.validity && !elem.validity.valid){
    //Some browsers support html5 but don't support min/max on numbers.
    //For those browsers, we can't trust valid and have to do the rest ourselves.
    return false;
  }
  var v = e.val();
  if(!v){
    return true;
  }
  return checkNumber(v, min, max);
}

function checkNumber(v, min, max){
  if(v === "" || v === null){
    return true;
  }
  v = parseFloat(v, 10);
  if(isNaN(v)){
    return false;
  }

  if(fh.isSet(min) && v < min){
    return false;
  }
  if(fh.isSet(max) && v > max){
    return false;
  }
  return true;
}

function makeValFn(e, min, max){
  return function (v){
    if(arguments.length === 0){
      var val = e.val();
      if(fh.isSet(val)){
        var result = parseFloat(val);
        if(isNaN(result)){
          return "";
        }
        return result;
      }
      return null;
    }else{
      e.val(v);
    }
  }
}

number.newField = function(field, formData){
  var e = fh.renderInput("number", field, formData);
  var wrap = 
  e.attr({
    min:coerceNumberOrBlank(field.MinimumNumber),
    max:coerceNumberOrBlank(field.MaximumNumber),
    step:coerceNumberOrBlank(field.StepNumber)
  });

  return {
    name:field.Name,
    val:makeValFn(e, field.MinimumNumber, field.MaximumNumber),
    elem:fh.formatStandardField(e, field, formData),
    required:field.IsRequired,
    validator:function (v){
      return checkNumber(v, field.MinimumNumber, field.MaximumNumber);
    },
    validatorElem:e,
    onChange:function (fn){
      e.on("change", fn);
    }
  }
}

},{"../jquery.js":31,"./fieldHelpers.js":15}],21:[function(_dereq_,module,exports){
var $ = _dereq_("../jquery.js");
var $b = $.build;
var fh = _dereq_("./fieldHelpers.js");

var radio = {};
module.exports = radio;
radio.fieldType = "radio";

var makeValFn = function (e){
  return function (val){
    if(arguments.length === 0){
      var value = e.find("input:checked").val();
      return value;
    }else{
      e.find("input").prop('checked', false);
      if(val !== ""){
        e.find("input[value='"+val+"']").prop('checked', true)  
      }else{
        e.find("input").each(function (i, input){
          input = $(input);
          if(input.val() === ""){
            input.prop("checked", true);
          }
        })
      }
      
    }
  }
}

radio.newField = function (field, formData){
  var e = $b(".mktoRadioList", {title:field.Description}, [
    $.map(field.PicklistValues || [], function (val, i){
      var id = "mktoRadio_" + field.Id + "_" +i;
      if(!i){
        firstVal = val.value;
      }
      return $b.docFrag([
        $b("input[type=radio].mktoField", {
            name:field.Name,
            id:id,
            value:val.value
        }),
        $b("label", {"for":id}, [
          val.label || val.name
        ])
      ])
    })
  ]);
  if(field.IsLabelToLeft){
    e.addClass("mktoLabelToLeft");
  }
  var valFn = makeValFn(e);
  return {
    name:field.Name,
    elem:fh.formatStandardField(e, field, formData),
    val:valFn,
    required:field.IsRequired,
    validatorElem:e,
    validatorFocusElem:e.find("input:eq(0)"),
    onChange:function (fn){
      e.on("change", fn);
    }
   }
}

},{"../jquery.js":31,"./fieldHelpers.js":15}],22:[function(_dereq_,module,exports){
var $ = _dereq_("../jquery.js");
var $b = $.build;
var fh = _dereq_("./fieldHelpers.js");
var Modernizr = _dereq_("../modernizr.js");

var range = {};
module.exports = range;
range.fieldType = "range";

var checkValid = function (e, min, max){
  var elem = e.get(0);
  if(elem.validity && !elem.validity.valid){
    //Some browsers support html5 but don't support min/max on numbers.
    //For those browsers, we can't trust valid and have to do the rest ourselves.
    return false;
  }
  var v = e.val();
  if(!v){
    return true;
  }
  return checkNumber(v, min, max);
}

var checkNumber = function (v, min, max){
  v = parseFloat(v, 10);
  if(isNaN(v)){
    return false;
  }
  if(fh.isSet(min) && v < min){
    return false;
  }
  if(fh.isSet(max) && v > max){
    return false;
  }
  return true;
}

var makeValFn = function (e, min, max){
  return function (v){
    if(arguments.length === 0){
      var val = e.val();
      if(fh.isSet(val)){
        var result = parseFloat(val, 10);
        if(isNaN(result)){
          return null;
        }
        return result;
      }
      return null;
    }else{
      if(v === null || v === undefined || v === ""){
        return; //it's not possible to unset a range.
      }
      if(checkNumber(v, min, max)){
        e.val(parseFloat(v, 10));
        e.trigger("change")
      }
    }
  }
}

range.newField = function (field, formData){

  var e, valueText, rangeValue, arrowWrap;

  var min = field.MinimumNumber || 0;
  var max = field.MaximumNumber || 100;
  var wrap = $b(".mktoLogicalField.mktoRangeField", [
    rangeValue = $b(".mktoRangeValue", [
      arrowWrap = $b(".mktoRangeValueArrowWrap", $b(".mktoRangeValueArrow")),
      valueText = $b(".mktoRangeValueText", "" + field.MinimumNumber || 0 )
    ]),
    e = $b("input[type=range].mktoField", {
      id:field.Name,
      name:field.Name,
      min:min,
      max:max,
      step:field.StepNumber || 1,
      title:field.Description
    }).addClass("mktoHasWidth").css({width:fh.first(field.FieldWidth, formData.FieldWidth, 0 )})
  ]).hover(function (){
    wrap.addClass("mktoHover");
    updateValueText();
  },function (){
    wrap.removeClass("mktoHover");
  });
  if(!Modernizr.csstransforms){
    arrowWrap.addClass("mktoArrowImage");
  }
  
  var updateValueText = function (){
    var val = e.val() || 0;
    valueText.html(""+val);
    var dragSliderSize = 12;
    var noCubicEase = e.data("mktoNoCubicEase");
    var pxAboveSlider = e.data("mktoPxAboveSlider") || 0;
    var pctVal =  (val - min)/ (max - min);
    var tgtX = e.width() * pctVal; 

    //this fudging with the tgtX is because the meaning of a range slider's draghandle changes as it slides.
    // -----------[x]-----------  here the center of the draghandle is indicating the value of 50 out of 100
    // [x]----------------------  here the left side of the draghandle is indicating the value of 0 out 100
    // -----------------------[x] here the right side of the draghandle is indicating the value of 100 out of 1000
    //However, we want our popup to always point at the center of the slider.
    //Different browsers implement their sliders differently, so best case is getting close without probably
    //actually ever being exacty right in any browser.  A cubic easing seems to do the job well.
    var fudge = 0;
    if(!noCubicEase){
      if(pctVal < 0.5){
        fudge = Math.pow((1-pctVal), 3) * (dragSliderSize/2);
      }
      if(pctVal > 0.5){
        fudge = -1 * Math.pow(pctVal, 3) * (dragSliderSize/2);
      }
      tgtX += Math.floor(fudge);  
    }
    
    var rangeOffset = tgtX - (rangeValue.outerWidth() / 2);
    var arrowOffset = (valueText.outerWidth() / 2) - (arrowWrap.outerWidth()/ 2 );
    //console.log({ val:e.val(), min:min, max:max, pctVal:pctVal, tgtX:tgtX, width:e.width(), rangeOffset:rangeOffset, rangeWidth:rangeValue.width(), rangeOuterWidth:rangeValue.outerWidth(), valueTextWidth: valueText.outerWidth()} );
    rangeValue.css("margin-left", rangeOffset);
    rangeValue.css("margin-top", -1 * (arrowWrap.outerHeight() + valueText.outerHeight() + pxAboveSlider));
    arrowWrap.css("margin-left", arrowOffset);
  }
  e.on('change', updateValueText);
  e.on('input', updateValueText);
  e.data("mktoRangeUpdate", updateValueText);
  //TODO: should probably be on mktoFormRender event instead.
  $("body").on("mktoRender", updateValueText);
  return {
    name:field.Name,
    val:makeValFn(e, field.MinimumNumber, field.MaximumNumber),
    elem:fh.formatStandardField(wrap, field, formData),
    required:field.IsRequired,
    validator:function (){
      return checkValid(e, min, max);
    },
    validatorElem:e,
    onChange:function (fn){
      e.on("change", fn);
    }
  }
}

},{"../jquery.js":31,"../modernizr.js":34,"./fieldHelpers.js":15}],23:[function(_dereq_,module,exports){
var $ = _dereq_("../jquery.js");
var $b = $.build;
var fh = _dereq_("./fieldHelpers.js");

var phonePattern = /^([0-9()+. \t-])+(\s?(x|ext|extension)\s?([0-9()])+)?$/

var tel = {};
module.exports = tel;
tel.fieldType = "phone";
var checkPhone = function (e){
  var val = e.val() || "";
  if(!val){
    return true;
  }
  return val.match(phonePattern);
}
  
tel.newField = function (field, formData){
  var e = fh.renderInput("tel", field, formData);
  return {
    name:field.Name,
    elem:fh.formatStandardField(e, field, formData),
    val:$.proxy(e.val, e),
    required:field.IsRequired,
    validator:function (){
      return checkPhone(e);
    },
    validatorElem:e,
    onChange:function (fn){
      e.on("change", fn);
    }
  }
}
},{"../jquery.js":31,"./fieldHelpers.js":15}],24:[function(_dereq_,module,exports){
var $ = _dereq_("../jquery.js");
var $b = $.build;
var fh = _dereq_("./fieldHelpers.js");

var text = {};
module.exports = text;
text.fieldType = "string";
  
text.newField = function (field, formData){
  var maxlen = field.Maxlength || 255;
  var e = fh.renderInput("text", field, formData);
  if(field.FieldMask){
    e.addClass("mktoInputMask").data("mktoInputMask", field.FieldMask);
  }

  return {
    name:field.Name,
    elem:fh.formatStandardField(e, field, formData),
    val:function (v){
      if(arguments.length === 0){
        return e.val();
      }else{
        if(v && v.length > maxlen ){
          v = v.substring(0, maxlen);
        }
        return e.val(v);
      }
    },
    required:field.IsRequired,
    validatorElem:e,
    onChange:function (fn){
      e.on("change", fn);
    }
  }
}

},{"../jquery.js":31,"./fieldHelpers.js":15}],25:[function(_dereq_,module,exports){
var $ = _dereq_("../jquery.js");
var $b = $.build;
var fh = _dereq_("./fieldHelpers.js");

var url = {};
module.exports = url;
url.fieldType = "url";
var urlCharactersPattern = /^[a-zA-z0-9\.\-_~:/\?#\[\]@!$&\'\(\)\*\+,;=%]*$/

var validateUrl = function (v){
  if(!v){
    return true;
  }
  var protocolEndIdx = v.indexOf("://");
  if(protocolEndIdx < 1){
    return false;
  }
  return v.match(urlCharactersPattern);
}
  
url.newField = function (field, formData){
  var e = fh.renderInput("url", field, formData);

  return {
    name:field.Name,
    elem:fh.formatStandardField(e, field, formData),
    val:$.proxy(e.val, e),
    required:field.IsRequired,
    validatorElem:e,
    validator:validateUrl,
    onChange:function (fn){
      e.on("change", fn);
    }
  }
}

},{"../jquery.js":31,"./fieldHelpers.js":15}],26:[function(_dereq_,module,exports){
var $ = _dereq_("../jquery.js");
var $b = $.build;
var fh = _dereq_("./fieldHelpers.js");

var makeValFn = function (e, isMultiselect){
  return function(val){
    if(arguments.length === 0){
      return e.val();
    }else{
      if(isMultiselect && val && !$.isArray(val)){
        val = fh.splitSemis(val);
      }
      return e.val(val);        
    }
  }
};

var select = {};
module.exports = select;
select.fieldType = "picklist";
select.newField = function (field, formData){
  var e = 
    $b("select.mktoField", {id:field.Name, name:field.Name, title:field.Description}, [
      $.map(field.PicklistValues || [], function (val, i){
        if(!val.isDefault || val.selected){
          return $b("option", {value:val.value}, val.label || val.name);
        }
      })
    ]);
  if(field.IsMultiselect){
    e.attr("multiple", "multiple");
    e.attr("size", field.VisibleRows || 5);
  }

  return {
    name:field.Name,
    elem:fh.formatStandardField(e, field, formData),
    val:makeValFn(e, field.IsMultiselect),
    required:field.IsRequired,
    validatorElem:e,
    onChange:function (fn){
      e.on("change", fn);
    }
  }
}
},{"../jquery.js":31,"./fieldHelpers.js":15}],27:[function(_dereq_,module,exports){
var $ = _dereq_("../jquery.js");
var $b = $.build;
var fh = _dereq_("./fieldHelpers.js");

var textarea = {};
module.exports = textarea;
textarea.fieldType = "textarea";
  
textarea.newField = function (field, formData){
  var maxlen = field.Maxlength || 2000;
  var e = $b("textarea.mktoField", {
      id:field.Name,
      name:field.Name,
      placeholder:field.PlaceholderText,
      rows: Math.max(2, field.VisibleRows || 2),
      title:field.Description
  });
  try{
    e.attr("maxlength", maxlen);
  }catch(ex){
    // broken IE compatibility mode attributes http://bugs.jquery.com/ticket/12577
    e.get(0).setAttribute("maxlength", "" + maxlen);
  }

  return {
    name:field.Name,
    elem:fh.formatStandardField(e, field, formData),
    val:function (v){
      if(arguments.length === 0){
        return e.val();
      }else{
        if(v && v.length > maxlen ){
          v = v.substring(0, maxlen);
        }
        return e.val(v);
      }
    },
    required:field.IsRequired,
    validatorElem:e,
    onChange:function (fn){
      e.on("change", fn);
    }
  }
}
},{"../jquery.js":31,"./fieldHelpers.js":15}],28:[function(_dereq_,module,exports){
var $ = _dereq_("./jquery.js");
var $b = $.build;
var Validation = _dereq_("./validation.js");
var measure = _dereq_("./measure.js");
var fh = _dereq_("./fields/fieldhelpers.js");
var cap = fh.cap;
var isSet = fh.isSet;
var first = fh.first;
var querystring = _dereq_("querystring");
var url = _dereq_("url");
var cookie = _dereq_("cookie");
var cookieHelper = _dereq_("./cookiehelper.js");
var tokenTemplate = _dereq_("./tokenTemplate.js");
var changeManager = _dereq_("./changeManager.js");
var urlHelper = _dereq_("./urlhelper.js");
var prefillCoercer = _dereq_("./prefillcoercer.js");
var iframeProxy = _dereq_("./iframeproxy.js");
var log = _dereq_('./safelog.js');

var fieldTypes = [
  _dereq_("./fields/inputRadio.js"),
  _dereq_("./fields/inputDate.js"),
  _dereq_("./fields/inputEmail.js"),
  _dereq_("./fields/inputCheckbox.js"),
  _dereq_("./fields/select.js"),
  _dereq_("./fields/inputRange.js"),
  _dereq_("./fields/inputText.js"),
  _dereq_("./fields/inputUrl.js"),
  _dereq_("./fields/inputTel.js"),
  _dereq_("./fields/inputNumber.js"),
  _dereq_("./fields/textarea.js"),
  _dereq_("./fields/currency.js")
];

var fieldTypeMap = {};
$.each(fieldTypes, function (i, type){
  fieldTypeMap[type.fieldType] = type;
});
//Add int and double as aliases for number
fieldTypeMap["int"] = fieldTypeMap.number;
fieldTypeMap["double"] = fieldTypeMap.number;
fieldTypeMap.single_checkbox = fieldTypeMap.checkbox;



var comparators = _dereq_("./comparators.js");

//Browser detection... All conditional JS code should NOT use these,
//and should instead use Modernizr to detect support for individual features.
//However, for ease of use when styling we will add .ie6 .ie7 and .ie8 classes into 
//the dom to minizimze stylesheet hacks for these three historic bad-boys.
var oldIeMatch =navigator.userAgent.match(/msie ([678])/i);
var oldIe = oldIeMatch? "ie"+oldIeMatch[1] : "";

var Form = function (formData, modernizr, opts){
  var pub = {};
  var priv = {};
  priv.hiddenFields = {
    formid:formData.Id
  };
  priv.values = {};
  priv.fieldsByName = fh.getFieldsByName(fh.getFlattenedFields(formData));
  priv.changeMap = changeManager.getChangeMap(priv.fieldsByName, formData);
  priv.fieldElemsByName = {};
  priv.canSubmit = formData.Status != "draft";

  var updateDependentFields = function (subjectField){
    var dependentFields = priv.changeMap[subjectField] || [];
    var fireRender = false;
    var renderCtx = {
      defaultValuesToSet:{},
      fieldsToCheck:[]
    }
    $.each(dependentFields, function (i, fieldName){
      var currentElem = priv.fieldElemsByName[fieldName];
      if(!currentElem || !currentElem[0] || !$.contains(priv.formElem[0], currentElem[0])){
        //element is in a nested fieldset, or progressive profiling block and fieldset is hidden, so currentElem is not in the DOM tree.
        //We can just bail out here, this field will be processed when the fieldset is re-shown.
        return; 
      }
      var currentlyShown = !currentElem.hasClass("mktoPlaceholder");
      var currentField = priv.fieldsByName[fieldName];

      var fieldChangeInfo = changeManager.fieldChangeChecker(currentField.VisibilityRule, pub.getValues());
      var shouldBeShown = fieldChangeInfo.show;

      var updateField = function (field, currentElem){
        var e = renderField(field, renderCtx);
        var colObj = wrapColField(e);
        var newElem = colObj.elem;
        newElem.hide();
        currentElem.replaceWith(newElem);
        if(isSmallViewport()){
          removeFixedWidthContents(newElem);
        }
        return newElem;
      };

      var hideField = function (field, currentElem){
        var newElem = $b(".mktoPlaceholder.mktoPlaceholder"+field.Name);
        currentElem.replaceWith(newElem);
        return newElem;
      };

      //If the field is aready shown and set to show...
      //  1. if it is a picklist, filter its picklist values based on the rule.
      //If the field is already shown and set to hide...
      //  1. hide the field
      //If the field is hidden and set to show...
      //  1. filter its picklist values based on the rule.
      //  2. show the field
      //If the field is hidden and set to hide
      //  1. do nothing.

      var f, newElem;
      if(currentlyShown && shouldBeShown){
        f = changeManager.applyPicklistAlterations(currentField, fieldChangeInfo.rule);
        if(f !== currentField){ //only alter the field if the rule change the field object.
          newElem = updateField(f, currentElem);
          newElem.show(); //no need to fade in, just show updated field.
          fireRender = true;
        }
      }
      if(currentlyShown && !shouldBeShown){
        newElem = hideField(currentField, currentElem);
        priv.fieldElemsByName[fieldName] = newElem;
        renderCtx.fieldsToCheck.push(currentField);
      }
      if(!currentlyShown && shouldBeShown){
        f = changeManager.applyPicklistAlterations(currentField, fieldChangeInfo.rule);
        newElem = updateField(f, currentElem);
        newElem.show();
        renderCtx.fieldsToCheck.push(currentField);
        fireRender = true;
      }
      if(newElem){
        priv.fieldElemsByName[fieldName] = newElem; 
      }

      if(currentField.Datatype == 'fieldset'){
        //if the fieldset was the subject of a show hide, we need to evaluate all its children
        updateDependentFields(currentField.Name);
      }
      if(fireRender && newElem && priv.validation){
        priv.validation.initScoped(newElem);
      }
    });
    pub.setValues(renderCtx.defaultValuesToSet);
    $.each(renderCtx.fieldsToCheck, function (i, field){
      updateDependentFields(field.Name)
    });

    if(fireRender && $("body").data("mktoRendered")){
      //Fire this only it's happening after the initial render.
      $("body").trigger("mktoRender", pub);
    }
  }

  var renderField = function (field, renderCtx){
    var defaultValue = priv.values[field.Name] || field.DefaultValue || field.InputInitialValue;

    if(fieldTypeMap[field.Datatype]){
      var fieldData = fieldTypeMap[field.Datatype].newField(field, formData);
      fieldData.validationMessage = fieldData.validationMessage || field.ValidationMessage;
      fieldData.requiredMessage = fieldData.requiredMessage || field.RequiredMessage;
      if(fieldData.required){
        if(!fieldData.validatorElem){
          throw new Error("Required fields must have a validatorElem");
        }
        fieldData.validatorElem.addClass("mktoRequired");
      }
      if(priv.changeMap[field.Name]){
        fieldData.onChange(function (e){
          updateDependentFields(field.Name);
        })
      }
      if(isSet(defaultValue)){
        //Defer setting default values until form has all fields rendered, so that
        //dependendent fields for conditional display will be set.
        renderCtx.defaultValuesToSet[field.Name] = defaultValue;
      }
      var descriptor = $b(".mktoFieldDescriptor", fieldData.elem);
      descriptor.data("mktoFieldDescriptor", fieldData);
      return descriptor;
    }else if (field.Datatype == "htmltext" || field.Datatype == "richtext"){
      return $b.docFrag([
        $b(".mktoOffset.mktoHasWidth").css({width:first(field.OffsetWidth, formData.OffsetWidth, 0)}),
        $b(".mktoFieldWrap",[
          $b(".mktoHtmlText.mktoHasWidth", [$b.html(field.Htmltext || field.InputLabel)])
            .css({
              width: first(field.LabelWidth, formData.LabelWidth, 0)
            }),
          $b(".mktoClear")
        ]),
        $b(".mktoClear")
      ]);
    }else if (field.Datatype == "hidden"){
      var ch = field.InputSourceChannel;
      var sel = field.InputSourceSelector;
      var name = field.Name;
      var value = "";
      if(ch == "url" && sel){
        var qsObj = querystring.parse(location.search.replace("?", ""));
        value = qsObj[sel] || ""
      }else if (ch == "cookie" && sel){
        var cook = cookie.parse(document.cookie);
        value = cook[sel];
      }else if (ch == "referrer" && sel){
        var urlObj = url.parse(document.referrer, true);
        value = urlObj.query[sel];
      }
      if(!value && defaultValue){
        value = defaultValue;
      }
      renderCtx.defaultValuesToSet[name] = value;
      return makeHiddenField(value, name);
    }
    else if (field.Datatype == "fieldset"){
      var fieldsetRows = formData.fieldsetRows[field.Id.toString()] || [];
      if(!fieldsetRows.length){
        return null;
      }
      var fieldElem = $b("fieldset",[
        $b("legend", $b.html(field.InputLabel)),
        $.map(fieldsetRows, function (row, i){
          return renderRow(row, i, renderCtx);
        })
      ]);
      if(fieldsetRows.length && fieldsetRows[0].length){
        fieldElem.css({"padding-right":first(fieldsetRows[0][0].OffsetWidth,formData.OffsetWidth,0)})
      }
      return fieldElem;
    }
    else if(field.Datatype=="profiling"){
      return;
    }else {
      log("invalid data type: "+ field.Datatype);
    }
  }

  var renderProfiling = function (field, renderCtx){
    //see if we have values for any of the fieldset rows. 
    //Evict all fields that don't have a value set.
    //Evict all fieldset rows that have no fields, up until you hit the profiling Field Number
    //then render the resulting data as normal rows.

    var po = formData.ProcessOptions;
    var profilingNum = 0;
    if(po && po.profiling && po.profiling.numberOfProfilingFields){
      profilingNum = po.profiling.numberOfProfilingFields;
    }
    var maxFields = field.ProfilingFieldNumber || profilingNum;
    var fieldsetRows = formData.fieldsetRows[field.Id.toString()] || [];
    var cleanfieldsetRows = [];
    var fieldCount = 0;
    $.each(fieldsetRows, function (i, row){
      var cleanFields = [];
      var filledFields = [];
      if(formData.knownLead && formData.knownLead.filledFields){
        filledFields = formData.knownLead.filledFields;
      }
      $.each(row, function (j, f){
        if(!isSet(priv.values[f.Name]) && $.inArray(f.Name, filledFields) == -1 && fieldCount < maxFields){
          cleanFields.push(f);
          fieldCount++;
        }          
      });
      if(cleanFields.length > 0){
        cleanfieldsetRows.push(cleanFields);
      }
    });
    return $b.docFrag($.map(cleanfieldsetRows, function (row, i){
      return renderRow(row, i, renderCtx)
    }));
  }

  var wrapColField = function (fieldElem){
    var fieldWidth = 0; 
    if(fieldElem.nodeType == 11){
      colElem = $b(".mktoFormCol", fieldElem);
    }else{
      colElem = fieldElem.addClass("mktoFormCol"); 
    }
    fieldWidth += measure.measure(colElem).w;
    colElem.css("margin-bottom", formData.LineMargin || 0);
    return {elem:colElem, width:fieldWidth}
  }

  var renderRow = function (row,i,renderCtx){
    var rowWidth = 0;
    //special case for profiling
    //it is always the only field in its row
    //and will end up rendering child rows, but without any wrappers.
    if(row.length == 1 && row[0].Datatype == "profiling"){
      return renderProfiling(row[0], renderCtx);
    }
    var childRows = $.map(row, function (field, j){
        var fieldElem = renderField(field, renderCtx);
        if(!fieldElem){
          return null;
        } 
        var colObj = wrapColField(fieldElem);
        rowWidth += colObj.width;

        if(field.VisibilityRule && field.Datatype != "hidden"){
          renderCtx.fieldsToCheck.push(field);
        }

        priv.fieldElemsByName[field.Name] = colObj.elem;
        return colElem;                    
      });
    if(childRows.length === 0){
      return null;
    }

    var rowElem = $b(".mktoFormRow", [
      childRows,
      $b(".mktoClear")
    ]);
    if(rowWidth > priv.formWidth){
      priv.formWidth = rowWidth;
    }
    return rowElem;
  };

  var makeHiddenField = function (value, key){
    var e = $b("input.mktoField.mktoFieldDescriptor", {type:"hidden", name:key});
    var fieldData = {
      name:key,
      val:$.proxy(e.val, e),
      onChange:function (fn){
        e.on("change", fn);
      }
    };
    if(priv.changeMap[key]){
      fieldData.onChange(function (e){
        updateDependentFields(field.Name);
      })
    }
    e.data("mktoFieldDescriptor", fieldData);
    return e;
  }

  var addHiddenFields = function (formElem, obj){
    var hiddensToAdd = {};
    var ifNotExistFn = function (name, value){
      hiddensToAdd[name] = value;
    }
    pub.setValues(obj, ifNotExistFn);

    var hiddens = $.map(hiddensToAdd, makeHiddenField);

    formElem.append($b.docFrag(hiddens));
    pub.setValues(obj);  
  };
   
  var isSmallViewport = function (){
    return $(window).width() <= 480
  }

  var removeFixedWidthContents = function (elem){
    var elems = elem.find(".mktoHasWidth").andSelf();
    elems.each(function (){
          var e = $(this);
          e.data("mktoFixedWidth", e.css("width"));
          e.css("width", "");
        });
  };

  var onResize = function (){
    if(!priv.formElem){
      return;
    }
    var winW = $(window).width();
    if(!priv.hasRemovedWidths){
      if(isSmallViewport()){
        removeFixedWidthContents(priv.formElem);
        priv.hasRemovedWidths = true;  
      }      
    }else{
      if(!isSmallViewport()){
        priv.formElem.find(".mktoHasWidth").andSelf().each(function (){
          var e = $(this);
          e.css("width", e.data("mktoFixedWidth"));
        })
        priv.hasRemovedWidths = false;  
      }      
    }
  };

  var buildButtonElem = function (formElem){
    var buttonStyle = formData.ButtonStyle || {className:""}
    var buttonText = formData.ButtonText || formData.SubmitLabel || "Submit";
    var buttonLocation = formData.ButtonLocation || "";
    var blInt = parseInt(buttonLocation, 10) || 0;
    btn = $b("span.mktoButtonWrap", [
            $b("button.mktoButton", {type:"submit"}, [
              buttonText
            ])
          ]).addClass(buttonStyle.className).css({"margin-left":blInt+"px"});
    return btn;
  };

  var renderSocialSignOn = function(){
    var po = formData.ProcessOptions;
    if(!po || !po.socialSignOn || !po.socialSignOn.isEnabled || !po.socialSignOn.enabledNetworks.length){
      return "";
    }
    var id = po.socialSignOn.cfId +"_SocialSignOn";
    var elem = $b(".cf_widgetLoader.cf_w_"+ id);
    if(window.cf_scripts && window.CF){
      setTimeout(function (){
        CF.widget.restart(id);
      }, 10);
      return elem;
    }
    return $b.docFrag([
      $b("script", {src:formData.loaderJsUrl, type:"text/javascript"}),
      elem
    ]);
  };

  var addFormClasses = function (formElem){
    formElem.addClass("mktoForm mktoHasWidth mktoLayout"+ cap(formData.Layout || "left") + (modernizr.csschecked ? "" : " mktoNoCheckedSupport"));
    if(oldIe){
      formElem.addClass(oldIe);
    }
  }

  var onSuccess = function (values, followup){
    if(priv.onSuccess){
      return priv.onSuccess(values, followup);
    }
    return true;
  };


  var getSyndId = function (cook){
    var cd = cook.__cdrop;
    var parts;
    if(cd){
      parts = cd.split(".");
      if(parts.length == 3){
        return parts[2];
      }
    }
    return null;
  };

  //The form submission code expects array objects to have "[]" in their parameter name.
  //So with the object {foo:["bar", "baz"]} instead of the natural form encoding
  //foo=bar&foo=baz
  //it expects
  //foo[]=bar&foo[]=baz
  var funkifyArrayParams = function (obj){
    var newObj = {};
    $.each(obj, function (k, v){
      if($.isArray(v) && v.length > 1){
        newObj[k+"[]"] = v;
      }else{
        newObj[k] = v;
      }
    });
    return newObj;
  }

  var isFBTab = function (){
    var l = location;
    return l.hostname.indexOf(opts.fbTabDomain) != -1 && l.search.indexOf("fbTab=1") != -1
  }


  var findCorrectFollowUpUrl = function (data){
    var fbTab = isFBTab();
   
    var u = "";
    if(data){
      if(typeof formData.FormFollowup == "string"){
        u = formData.FormFollowup;
        if(fbTab && u.indexOf("https://") !== 0){
          //If you're on a FB tab and you've specified a landing page defined url and you didn't use https,
          //then we're assuming that you're using a landing page follow up page url.
          u = urlHelper.remapLandingPageUrl(u, location.href);
          u = urlHelper.addQueryParams(u, {fbTab:"1"});
        }
      }else{
        if(data.followUpUrl && typeof data.followUpUrl == "string"){
          u = data.followUpUrl;
        }else if(data.followUpUrl.url){
          if(fbTab && data.followUpUrl.isLandingPage){
            u = urlHelper.remapLandingPageUrl(data.followUpUrl.url, location.href);
            u = urlHelper.addQueryParams(u, {fbTab:"1"});
          }else{
            u = data.followUpUrl.url;
          }
        }
      }
    }    
    u = u || location.href;
    u = urlHelper.addQueryParams(u, {aliId:data.aliId});
    return u;
  }

  var doAjaxSubmit = function (){
    var values = pub.getValues();
    if(window.Munchkin){
      try{
        window.Munchkin.createTrackingCookie(true);
      }catch(e){
        //For IE 7
      }
    }
    var currPageQS = url.parse(location.href, true).query;

    var cook = cookie.parse(document.cookie);
    var hostname = url.parse(formData.action).hostname;
    var submitUrl = "//" + hostname + opts.formSubmitPath;
    var l = window.location;
    if(isFBTab()){
      //FB tabs use local urls to submit.
      submitUrl = opts.formSubmitPath;
      hostname = location.hostname;
    }
    var dataType = "json";
    var type = "POST";
    if(values._mkt_trk === undefined){
      values._mkt_trk = cook._mkto_trk;
    }
    values.formVid = formData.Vid;
    if(currPageQS.mkt_tok && values.mkt_tok === undefined){
      values.mkt_tok= currPageQS.mkt_tok;
    }
    var syndId = getSyndId(cook);
    if(syndId){
      values.MarketoSocialSyndicationId = syndId;
    } 
    values._mktoReferrer = location.href;
    var valueString = querystring.stringify(funkifyArrayParams(values));
    var success = function (data){
      if(data.error){
        onError(data);
      }else if(data.formId){
        var u = findCorrectFollowUpUrl(data);
        if(false === onSuccess(values, u)){
          return;  
        }
        cookieHelper.removeCookieAllDomains("_mkto_purl");
        location.href = u;
      }
    }
    var onError = function (){
      //TODO: What should happen if the form submission fails?
      log(arguments);
      if(priv.submitButton){
        var btn = priv.submitButton.find("button");
        btn.removeAttr('disabled');
        btn.html(formData.ButtonText || formData.SubmitLabel || "Submit")  
      }      
    }
    
    var ajaxParams = {
        type:type, data:valueString, dataType:dataType,
        url:submitUrl, success:success, error:onError
      };

    if(hostname != location.hostname){
      if(!modernizr.postmessage || !modernizr.json){
        ajaxParams.dataType = "jsonp";
        ajaxParams.submitUrl+="?callback=?";
        ajaxParams.type = "GET";
        $.ajax(ajaxParams);
      }
      else{
        iframeProxy.send(ajaxParams);
      }
    }else{
      $.ajax(ajaxParams);
    }
  };

  var onSubmit = function (e){
    var valid = pub.validate();
    if(priv.canSubmit && valid && priv.onSubmit){
      priv.onSubmit(pub);
    }
    e.preventDefault();
    if(!priv.canSubmit || !valid){
      e.stopPropagation();
      return false;    
    }else{
      //disable submit button elem.
      var btn = priv.submitButton.find("button");
      btn.attr('disabled','disabled');
      if(formData.ButtonSubmissionText){
        btn.html(formData.ButtonSubmissionText);
      }
      doAjaxSubmit();
      return false;
    }
  };

  var renderTemplateButton = function (attrs){
    var buttonStyle = formData.ButtonStyle || {className:""};
    var btn = $b("span.mktoButtonWrap", [
      $b("button.mktoButton", {type:"submit"}, [
        attrs["default"] || ""
      ])
    ]).addClass(buttonStyle.className)
    btn.click(function (e){
      e.preventDefault();
      doAjaxSubmit();
    });
    return btn; 
  };

  var renderNotYouButton = function (attrs){
    return $b("a.mktoNotYou", [attrs["default"] || "Not You?"]).click(
      function (){
        //unset _mkto_trk cookie, remove mkt_tok and aliId params, reload page.
        cookieHelper.removeCookieAllDomains("_mkto_trk");
        location.href = urlHelper.removeQueryParams(location.href, ["mkt_tok", "aliId"]);
    });
  };

  var renderTokenizedTemplate = function (){
    var templ = formData.ProcessOptions.knownLead.template;
    //The token parsing code in MLM eats its own tokens.  To get around this, we alter the token format
    //The real format is {{tag}}, but we change it to {[(tag)]}
    templ = templ.replace(/\{\[\((.*?)\)\]\}/g, "{{$1}}");
    var swaps = {};
    var count = 0;
    var swapForHtmlPlaceholder = function (fn){
      return function (){
        var result = fn.apply(null, arguments);
        if(result.jquery || result.nodeType){
          var id = "__tempSwap"+count;
          count++;
          swaps[id] = result;
          return "<span id='"+id+"'></span>";
        }
        return result;
      }
    }
    
    var model = {
      lead:formData.knownLead,
      form:{
        Button:swapForHtmlPlaceholder(renderTemplateButton),
        NotYou:swapForHtmlPlaceholder(renderNotYouButton)
      }
    };
    var template = $b("div.mktoTemplateBox", $b.html(tokenTemplate(templ, model)));
    $.each(swaps, function (k, v){
      template.find("#"+k).replaceWith(v);
    });
    return template;
  }

  var rerender = function(){
    if(priv.formElem){
      priv.formElem.empty();
    }
    pub.render(priv.formElem);
  }

  pub.render = function (formElem){
    priv.id = formData.Vid || formData.Id || 1;
    if(!formElem){
      formElem = $("form#mktoForm_"+ (formData.Vid || formData.Id));
    }
    if(!formElem.length){
      formElem = $b("form#mktoForm_"+(formData.Vid || formData.Id));
    }
    priv.formElem = formElem;

    //Firefox and Webkit don't agree on how to style form validation messages
    //And IE < 9 don't support them at all.  Sadly, it's easier to just turn
    //off HTML5 form validation and do it all manually with JS.  Maybe in another
    //year, that won't be the case any more.
    formElem.attr({
      "novalidate":"novalidate"
    });
    formElem.css({
      "font-family":formData.FontFamily || "",
      "font-size":formData.FontSize || "",
      "color":formData.FontColor || ""
    });
    //Set up all the styles before initing the measuring element that we'll use to capture column widths.
    addFormClasses(formElem);
    measure.init(priv.formElem);

    priv.formWidth = 0;
    var renderCtx = {
      defaultValuesToSet: {},
      fieldsToCheck: []
    }
    var rowElems = $.map(formData.rows, function (row, i){
      return renderRow(row, i, renderCtx);
    });

    var socialSignOn = renderSocialSignOn();

    $.each(renderCtx.fieldsToCheck, function (i, field){
      if(!changeManager.fieldChangeChecker(field.VisibilityRule, renderCtx.defaultValuesToSet).show){
        var plh = $b(".mktoPlaceholder.mktoPlaceholder"+field.Name);
        var elem = priv.fieldElemsByName[field.Name];
        if(elem){
          elem.replaceWith(plh);
          priv.fieldElemsByName[field.Name] = plh;
        }
      }
    });
   

    var buttonCss = "";
    var bs = formData.ButtonStyle;
    if(bs){
      if(bs.css){
        buttonCss += bs.css
      }
      if(bs.buttonColor){
        //This background color support is lame.  It should really come prebaked in the ButtonStyle.css
        buttonCss += "\n.mktoForm .mktoButtonWrap."+bs.className+" button.mktoButton {background:"+bs.buttonColor + ";}\n";
      }
    }
    formElem.append($b("style", {type:"text/css"}, buttonCss));
    if(formData.knownLead && formData.ProcessOptions && formData.ProcessOptions.knownLead && formData.ProcessOptions.knownLead.type == "custom"){
      formElem.append(renderTokenizedTemplate());
    }else{
      formElem.append($b.docFrag([
        socialSignOn,
        rowElems,
        $b(".mktoButtonRow", [
          priv.submitButton = buildButtonElem(formElem)
        ])
      ]));
    }

    addHiddenFields(formElem, priv.hiddenFields);

    pub.setValues(renderCtx.defaultValuesToSet);
  
    formElem.css({
      "width": Math.max(priv.submitButton ? priv.submitButton.outerWidth(): 0, priv.formWidth + 1)  //TODO: Figure out why things wrap wrong without adding 1 extra px.
    });

    formElem.on("submit", onSubmit);
    priv.validation = Validation(formElem);
    priv.validation.init();
    setTimeout(function (){
      $("body").trigger("mktoRender", pub).data("mktoRendered", true);
    },0);
    
    $(window).on("resize", onResize);
    onResize();

    if(oldIe == "ie7"){
      fixIEZIndex(formElem);
    }
    
    return formElem;
  };

  //Todo: move this to a polyfill that is dynamically loaded for only the chumps who use IE7 
  //or IE in "compatibility mode".
  var fixIEZIndex = function(formElem){
    var fields = formElem.find(".mktoFormRow, .mktoFormCol");
    var count = fields.length;
    fields.each(function (){
      $(this).css("z-index", count--);
    });
    formElem.css("z-index", fields.length + 1);
  };

  pub.getId = function (){
    return priv.id;
  };

  pub.getFormElem = function (){
    return priv.formElem;
  };
  //less verbose;
  pub.getElem = pub.getFormElem();
    
  pub.validate = function (){
    var ok = priv.validation.check();
    if(priv.onValidate){
      priv.onValidate(ok);
    }
    return ok;
  };

  pub.onValidate = function (callback){
    priv.onValidate = callback;
    return pub;
  };

  pub.submit = function (){
    priv.formElem.trigger("submit");
    return pub;
  };

  pub.onSubmit = function (callback){
    priv.onSubmit = callback;
    return pub;
  };

  pub.onSuccess = function (callback){
    priv.onSuccess = callback;
    return pub;
  };

  pub.submitable = function (canSubmit){
    if(!arguments.length){
      return priv.canSubmit;
    }
    else{
      priv.canSubmit = canSubmit;
      return pub;
    }
  };
  //Fix spelling
  pub.submittable = pub.submitable;

  pub.allFieldsFilled = function (){
    var vals = pub.getValues();
    var ok = true;
    $.each(vals, function (i, val){
      if($.isArray(val) && val.length === 0){
        ok = false;
      }else if(val === undefined || val === null || val === ""){
        ok = false;
      }
    });
    return ok;
  };

  var getFieldNameValFnMap = function (){
    var nameMap = {};
    priv.formElem.find(".mktoFieldDescriptor").each(function (i, elem){
      var e = $(elem);
      var f = e.data("mktoFieldDescriptor");
      nameMap[f.name] = f.val;
    })
    return nameMap;
  };

  pub.setValuesCoerced = function (prefillObj){
    var coerced = prefillCoercer.coerceTypes(prefillObj, formData);
    pub.setValues(coerced);
  }

  pub.setValues = function (obj, ifNotExistFn){
    if(!priv.formElem){
      priv.values = obj;
    }else{
      var dependencies = [];
      var nameMap = getFieldNameValFnMap();
      $.each(obj, function (name, value){
        if(nameMap[name]){
          nameMap[name](value);
        }else if(ifNotExistFn){
          ifNotExistFn(name, value);
        }
        if(priv.changeMap[name]){
          dependencies.push(name);
        }
      });
      $.each(dependencies, function (i, fieldName){
        updateDependentFields(fieldName);
        var nameMap = getFieldNameValFnMap();
        $.each(priv.changeMap[fieldName], function(i, child){
          if(nameMap[child] && obj[child] !== undefined){
            nameMap[child](obj[child]);
          }
        })
      })
    }
    return pub;
  };

  pub.addHiddenFields = function (obj){
    if(!priv.formElem){
      $.extend(priv.hiddenFields, obj);
    }else{
      addHiddenFields(priv.formElem, obj);
    }
  };

  pub.getValues = function (){
    if(!priv.formElem){
      return priv.values;
    }else{
      var vals = {};
      var nameMap = getFieldNameValFnMap();
      $.each(nameMap, function (name, val){
        var value = val();
        vals[name] = value;
      });
      return vals;
    }
  };

  pub.vals = function (){
    if(arguments.length === 0){
      return pub.getValues();
    }
    return pub.setValues.apply(null, arguments);
  };

  pub.showErrorMessage = function (msg, elem){
    if(priv.validation){
      if(!elem){
        elem = priv.submitButton;
      }
      priv.validation.showError(elem, msg);
    }
    return pub;
  };


  return pub;
}

module.exports = Form;

},{"./changeManager.js":10,"./comparators.js":12,"./cookiehelper.js":13,"./fields/currency.js":14,"./fields/fieldhelpers.js":16,"./fields/inputCheckbox.js":17,"./fields/inputDate.js":18,"./fields/inputEmail.js":19,"./fields/inputNumber.js":20,"./fields/inputRadio.js":21,"./fields/inputRange.js":22,"./fields/inputTel.js":23,"./fields/inputText.js":24,"./fields/inputUrl.js":25,"./fields/select.js":26,"./fields/textarea.js":27,"./iframeproxy.js":30,"./jquery.js":31,"./measure.js":32,"./prefillcoercer.js":35,"./safelog.js":36,"./tokenTemplate.js":38,"./urlhelper.js":39,"./validation.js":40,"cookie":7,"querystring":5,"url":6}],29:[function(_dereq_,module,exports){
if(typeof window !== 'undefined' && window.MktoForms2){
  //This prevents re-executing the script if the customer has inserted the script block twice;
  module.exports = window.MktoForms2;
  return;
}
var $ = _dereq_("./jquery.js");
var $b = _dereq_("jquery.build")($, document);
var Form = _dereq_("./form.js");
_dereq_("./shimsham.js");
var forms2 ={};
forms2.$ = $;
forms2.$b = $b;
forms2.Modernizr = _dereq_("./modernizr.js");
var modernizr = forms2.Modernizr;
var qs = _dereq_("querystring");
var fh = _dereq_("./fields/fieldhelpers.js");
var cookie = _dereq_("cookie");
var events = _dereq_("events");
var emitter = new events.EventEmitter();
var urlApi = _dereq_("url");
var iframeProxy = _dereq_("./iframeproxy.js");
var color = _dereq_("./color.js");
var log = _dereq_("./safelog.js");

var opts = {
  rootUrl:"",
  baseUrl:"/js/forms2/",
  skipPolyfills:false,
  formSubmitPath:"/index.php/leadCapture/save2",
  formXDPath:"/index.php/form/XDFrame",
  fbTabDomain:"marketo.com"
}
var forms = [];

forms2.setOptions = function (_opts){
  $.extend(opts, _opts);
};

/* 
 * We test to see if both the theme style and base style have been loaded
 * We do this by checking to see if the border color and color on an 
 * element with id=mktoStyleLoaded are equal to #123456.
 */

var waitForCssLoad = function (callback){
  var tester = $b("#mktoStyleLoaded").css({
    "display":"none",
    "border-top-color":"#123456"
  }).appendTo($("body"));
  var loadCount = 0;
  var timeout = 1500; 
  var interval = 25;

  var checkLoad = function (){
    var fgColor = tester.css("color");
    var bgColor = tester.css("background-color");
    var borderColor = tester.css("border-top-color");
    if(loadCount > timeout /interval){
      log('Timeout loading CSS. #mktoStyleLoaded missing color #123456 for one of color, background-color, or border-top-color.', fgColor, bgColor, borderColor);
      callback();
    }else if (color.compareColor(borderColor, bgColor) && color.compareColor(borderColor, fgColor)){
      defer(callback);
    }else{
      loadCount++;
      setTimeout(checkLoad, interval);
    }
  }
  checkLoad();
}

var addStyle = function (id, url){
  if(url.indexOf("//") === 0){
    url = location.protocol + url;
  }
  var l = $b("link", {id:id, rel:"stylesheet", type:"text/css", href:url});
  $("head").append(l);
  //Appending to the head doesn't work in good old IE.
  if(document.createStyleSheet){
    document.createStyleSheet(url);
  }
}

//Generic error handler... logs to console and calls an optional callback.
var handleError = function (msg, callback){
  if(window.console){
    console.log("Error loading form:", msg);
  }
  if(callback){
    callback(null); 
  }
};

//Tells you if an url is relative or not.
//so "/foo/bar/foo.bar" is relative
//but //host.name/foo.bar is not.
var isRelativeUrl = function (url){
  return url.indexOf("/") === 0 && url.indexOf("//") !== 0;
}

var ajaxRequest = function(url, success){
  //We used to use CORS for cross domain requests
  //but ran into issues where dumb corporate firewalls 
  //would strip the Access-control-allow-origin headers.  
  //Now we just force JSONP when a request is cross domain.
  var dataType = "json"
  if(!isRelativeUrl(url)){
    dataType = "jsonp";
    url+="&callback=?";  
  }
  $.ajax({
    dataType:dataType,
    url:url,
    success:success,
    error:function (a,b,c){
      handleError(c, success);
    }
  });
}

forms2.loadForm = function (rootUrl,munchkinId,formId,callback){
  forms2.setOptions({
    rootUrl:rootUrl,
    baseUrl:rootUrl + "/js/forms2/"
  });
  var success = function (data){
    data.action = (rootUrl.indexOf("http") === 0 ? rootUrl : location.protocol + rootUrl) + opts.formSubmitPath;
    forms2.newForm(data, function (form){
      form.addHiddenFields({
        "munchkinId":munchkinId
      });
      if(typeof forms2.getForm(formId) != 'undefined'){
        console.log("Form "+formId+" has already been rendered. Canceling render");
        form = forms2.getForm(formId);
      }
      else {
        form.render();
      }
      if(callback){
        callback(form);
      }
    });
  }
  var pageUrl = location.href.split("?")[0].split("#")[0];
  if(pageUrl.length > 255){
    pageUrl = pageUrl.substring(0, 255);
  }
  var url = rootUrl + "/index.php/form/getForm?munchkinId="+munchkinId+"&form="+formId+"&url="+encodeURIComponent(pageUrl);
  ajaxRequest(url, function (data){
    if(data.error){
      handleError(data, callback);    
    }else{
      success(data);
    }
  });
  return forms2;
};

forms2.lightbox = function (form, opts){
  var elem, modal;
  opts = opts || {};
  if(form.getFormElem){
    if(!form.getFormElem()){
      form.render();
    }
    elem =form.getFormElem();
    form.onSuccess(opts.onSuccess || function (values, url){
      modal.hide();
      if(!url){
        return false;
      }
    });
  }else{
    elem = form;
  }
  modal = _dereq_("./modal.js")(elem, opts);
  return modal;
};

var defer = function (fn){
  setTimeout(fn, 0);
}

/**
 * Checks to see if the lead is known.  callback will be called either with lead info or null if unknown lead.
 */
var getKnownLead = function (formId, munchkinId, filledFields, callback){
  if(window.mktoPreFillFields && mktoPreFillFields.FirstName && mktoPreFillFields.LastName){
    defer(function (){
      callback(mktoPreFillFields);
    });
    return;
  }
  var cooks = cookie.parse(document.cookie);
  if(cooks._mkto_trk){
    var url = opts.rootUrl + "/index.php/form/getKnownLead?_mkt_trk="+encodeURIComponent(cooks._mkto_trk)+"&form="+formId+"&munchkinId="+munchkinId+"&filledFields="+filledFields;
    ajaxRequest(url, function (data){
      if(data && data.error){
        handleError(data, callback);
      }else{
        callback(data);
      }
    });
    return; 
  }
  defer(callback);
};



forms2.newForm = function (formData, callback){
  if($("#mktoForms2BaseStyle").length === 0){
    var href = opts.baseUrl + "css/forms2.css";
    addStyle("mktoForms2BaseStyle", href); 
  }
  if($("#mktoForms2ThemeStyle").length === 0 && formData.ThemeStyle && formData.ThemeStyle.href){
    addStyle("mktoForms2ThemeStyle", opts.baseUrl + formData.ThemeStyle.href);
  }else{
    $("head").append($b("style", "#mktoStyleLoaded {color:#123456;}"));
  }
  if(formData.FontUrl){
    addStyle("mktoFontUrl", formData.FontUrl);
  }
  if(formData.ThemeStyleOverride){
    $("head").append($b("style", formData.ThemeStyleOverride));
  }
  if(!forms2._polyfillsLoaded){
    loadPolyfills(formData);
    forms2._polyfillsLoaded = true;
  }
  var po = formData.ProcessOptions;
  var waitCount = 0;
  
  var isFBTab = function (){
    var l = location;
    return l.hostname.indexOf(opts.fbTabDomain) != -1 && l.search.indexOf("fbTab=1") != -1
  }

  var waitFn = function (){
    waitCount--;
    if (waitCount <= 0){
      var form = Form(formData, modernizr, opts); 
      forms.push(form);
      if(callback){
        callback(form);
      }
      defer(function (){
        emitter.emit('mktoFormReady', form);
      });
      defer(function (){ 
        if(formData.action && !isFBTab()){
          //init the iframe proxy, but only if we're going to use it.
          var submitHost = urlApi.parse(formData.action).hostname;
          if(submitHost != location.hostname && modernizr.postmessage && modernizr.json){
            iframeProxy.init('//' + submitHost + opts.formXDPath);
          }  
        } 
      });     
    }
  };

  //We have to fetch the known lead info if progressive profiling is enabled and 
  //If we have a "custom" type knownLead, we'll end up rendering a template instead of a form.
  var hasProfiling = po && po.profiling && po.profiling.isEnabled;
  var isCustomKnowLeadTypeAndHasMunchkin = po && po.knownLead && po.knownLead.type == "custom" && formData.munchkinId;
  if(isCustomKnowLeadTypeAndHasMunchkin || hasProfiling){
    waitCount++;
    getKnownLead(formData.Vid, formData.munchkinId, hasProfiling, function (knownLead){
      if(knownLead){
        formData.knownLead = knownLead;
      }
      waitFn();
    });
  }
  
  waitCount++;
  waitForCssLoad(waitFn);
};

forms2.getForm = function(formId){
  for(var i=0; i < forms.length; i++){
    if(""+forms[i].getId() == ""+formId){
      return forms[i];
    }
  }
};

forms2.getPageFields = function (){
  var params = qs.parse(location.search.replace("?", ""));
  var referrerParams = qs.parse(document.referrer.split("?")[0]);
  return {
    cr:params.cr || "",
    kw:params.kw || "",
    q:referrerParams.q || ""
  }
};

forms2.allForms = function (){
  return forms;
};


var callAllForms = function (callback){
  $.each(forms2.allForms(), function (i, form){
    defer(function (){
      callback(form);
    });
  });
};

/** Adds a callback that will be called exactly once for each form on the page that becomes "ready".
  * Readyness means that the form exists, has been initially rendered and had its initial callbacks called.
  * Generally, this will mean that a "ready" form is currently visible to the lead.
  * The callback is passed a single argument, a form object.
  * If there is already a form that is ready at the time this function is called,
  * the passed callback will be called immediately.
  */
forms2.whenReady = function (callback){
  emitter.on("mktoFormReady", callback);
  callAllForms(callback);
  return forms2;
};

/*
 * Adds a callback that will be called every time any form renders.
 * Forms are rendered when initially created, then again every time that
 * visibility rules alter the structure of the form.
 * The callback will be passed a single argument, the form object of the form
 * that was rendered.
 */
forms2.onFormRender = function (callback){
  $("body").on("mktoRender", function (evt, form){
    callback(form);
  });
  return forms2;
};

/**
 * Like onFormRender, this adds a callback that will be called every time a form is rendered.
 * Additionally, this will also call the callback immediately for all forms that have already been rendered.
 * The callback will be passed a single argument, the form object of the form
 * that was rendered.
 */
forms2.whenRendered = function (callback){
  forms2.onFormRender(callback);
  callAllForms(callback);
  return forms2;
};

var loadPolyfills = function (formData){
  //Load polyfills for browsers that need them.
  defer(function (){
    var fields = fh.getFlattenedFields(formData);
    var fieldTypes = fh.getFieldTypes(fields);
    var hasMask = fh.anyFieldHasProperty(fields, "FieldMask");

    if(!opts.skipPolyfills){
      var baseUrl = opts.baseUrl;
      var load = modernizr.load;
      load({
        test: (modernizr.input.placeholder),
        nope:[baseUrl+"polyfills/placeholder/placeholder.js", baseUrl+"polyfills/placeholder/placeholder.css"]
      });
      load({
        test:fieldTypes.date && !modernizr.inputtypes.date,
        yep:[baseUrl+"polyfills/datepicker/datepicker.js", baseUrl+"polyfills/datepicker/datepicker.css" ]
      });
      load({
        test:fieldTypes.range && !modernizr.inputtypes.range,
        yep:[baseUrl+"polyfills/range/range.js", baseUrl+"polyfills/range/range.css"]
      });
      load({
        test:fieldTypes.textarea && !modernizr.textareamaxlength,
        yep:[baseUrl+"polyfills/maxlength/maxlength.js"]
      });  
      load({
        test:hasMask,
        yep:[baseUrl+"polyfills/inputmask/inputmask.js"]
      });
    }  
  });
}

module.exports = forms2;
},{"./color.js":11,"./fields/fieldhelpers.js":16,"./form.js":28,"./iframeproxy.js":30,"./jquery.js":31,"./modal.js":33,"./modernizr.js":34,"./safelog.js":36,"./shimsham.js":37,"cookie":7,"events":1,"jquery.build":8,"querystring":5,"url":6}],30:[function(_dereq_,module,exports){
var $ = _dereq_("./jquery.js");
var urlApi = _dereq_("url");
var $b = $.build;

var pub = {};

var iframe = null;
var iframeWindow = null; 
var i = 0;
var ready = false;
var frameName = "mktoFormsXDIframe" + Math.random();
var inflight = {}
var q = [];
var iframeUrl;


function normalizeUrl(url){
  if(url.indexOf("//") === 0){
    return location.protocol + url;
  }else if (url.indexOf("/") ===  0){
    return location.protocol + "//" + location.hostname + url;
  }
  return url;
}

pub.init = function (_iframeUrl){
  if(!iframe){
    iframeUrl = normalizeUrl(_iframeUrl);
    $("body").append(iframe = 
      $b("iframe#MktoForms2XDIframe", {
        name:frameName
      }).css({display:"none"})
    );
    iframe.get(0).src = iframeUrl;
    iframeWindow = window.frames[frameName];
    $(window).on("message", onMessage);
  }
}

function onMessage (e){
  if(e.originalEvent && e.originalEvent.data){
    var d;
    try {
      d = $.parseJSON(e.originalEvent.data);
    }catch(ex){
      return;
    }
    if(d.mktoReady){
      onReady();
    }else if(d.mktoResponse){
      onResponse(d.mktoResponse)   
    }
  }
}

function onResponse(mktoResponse){
  var requestId = mktoResponse["for"];
  var request = inflight[requestId];
  if(request){
    if(mktoResponse.error){
      request.error(mktoResponse.data);
    }else{
      request.success(mktoResponse.data);
    }
  }
  delete inflight[requestId];
}

function onReady(){
  ready = true;
  $.each(q, function (i, ajaxParams){
    sendMessage(ajaxParams);
  })
  q = [];
}

function sendMessage(ajaxParams){
  var id = "mktoFormMessage" + (i++);
  inflight[id] = {
    error:ajaxParams.error,
    success:ajaxParams.success
  }
  if(ajaxParams.complete){
    throw new Error("complete parameter not supported");
  }
  ajaxParams.error = null;
  ajaxParams.success = null;
  var urlParsed = urlApi.parse(iframeUrl);

  iframeWindow.postMessage(JSON.stringify({
    mktoRequest:{
      ajaxParams:ajaxParams,
      id:id
    }
  }), urlParsed.protocol + "//"+ urlParsed.hostname);
}

function enqueue(ajaxParams){
  if(ready){
    sendMessage(ajaxParams);
  }else{
    q.push(ajaxParams);
  }
}

pub.send = function (ajaxParams){
  if(!iframe){
    throw new Error("You must call init before calling send");
  }
  enqueue(ajaxParams);
}

module.exports = pub;


},{"./jquery.js":31,"url":6}],31:[function(_dereq_,module,exports){
/*!
 * jQuery JavaScript Library v1.10.2
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2013-07-03T13:48Z
 */
(function( window, undefined ) {

// Can't do this because several apps including ASP.NET trace
// the stack via arguments.caller.callee and Firefox dies if
// you try to trace through "use strict" call chains. (#13335)
// Support: Firefox 18+
//"use strict";
var
  // The deferred used on DOM ready
  readyList,

  // A central reference to the root jQuery(document)
  rootjQuery,

  // Support: IE<10
  // For `typeof xmlNode.method` instead of `xmlNode.method !== undefined`
  core_strundefined = typeof undefined,

  // Use the correct document accordingly with window argument (sandbox)
  location = window.location,
  document = window.document,
  docElem = document.documentElement,

  // Map over jQuery in case of overwrite
  _jQuery = window.jQuery,

  // Map over the $ in case of overwrite
  _$ = window.$,

  // [[Class]] -> type pairs
  class2type = {},

  // List of deleted data cache ids, so we can reuse them
  core_deletedIds = [],

  core_version = "1.10.2",

  // Save a reference to some core methods
  core_concat = core_deletedIds.concat,
  core_push = core_deletedIds.push,
  core_slice = core_deletedIds.slice,
  core_indexOf = core_deletedIds.indexOf,
  core_toString = class2type.toString,
  core_hasOwn = class2type.hasOwnProperty,
  core_trim = core_version.trim,

  // Define a local copy of jQuery
  jQuery = function( selector, context ) {
    // The jQuery object is actually just the init constructor 'enhanced'
    return new jQuery.fn.init( selector, context, rootjQuery );
  },

  // Used for matching numbers
  core_pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,

  // Used for splitting on whitespace
  core_rnotwhite = /\S+/g,

  // Make sure we trim BOM and NBSP (here's looking at you, Safari 5.0 and IE)
  rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

  // A simple way to check for HTML strings
  // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
  // Strict HTML recognition (#11290: must start with <)
  rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

  // Match a standalone tag
  rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,

  // JSON RegExp
  rvalidchars = /^[\],:{}\s]*$/,
  rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,
  rvalidescape = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
  rvalidtokens = /"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g,

  // Matches dashed string for camelizing
  rmsPrefix = /^-ms-/,
  rdashAlpha = /-([\da-z])/gi,

  // Used by jQuery.camelCase as callback to replace()
  fcamelCase = function( all, letter ) {
    return letter.toUpperCase();
  },

  // The ready event handler
  completed = function( event ) {

    // readyState === "complete" is good enough for us to call the dom ready in oldIE
    if ( document.addEventListener || event.type === "load" || document.readyState === "complete" ) {
      detach();
      jQuery.ready();
    }
  },
  // Clean-up method for dom ready events
  detach = function() {
    if ( document.addEventListener ) {
      document.removeEventListener( "DOMContentLoaded", completed, false );
      window.removeEventListener( "load", completed, false );

    } else {
      document.detachEvent( "onreadystatechange", completed );
      window.detachEvent( "onload", completed );
    }
  };

jQuery.fn = jQuery.prototype = {
  // The current version of jQuery being used
  jquery: core_version,

  constructor: jQuery,
  init: function( selector, context, rootjQuery ) {
    var match, elem;

    // HANDLE: $(""), $(null), $(undefined), $(false)
    if ( !selector ) {
      return this;
    }

    // Handle HTML strings
    if ( typeof selector === "string" ) {
      if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
        // Assume that strings that start and end with <> are HTML and skip the regex check
        match = [ null, selector, null ];

      } else {
        match = rquickExpr.exec( selector );
      }

      // Match html or make sure no context is specified for #id
      if ( match && (match[1] || !context) ) {

        // HANDLE: $(html) -> $(array)
        if ( match[1] ) {
          context = context instanceof jQuery ? context[0] : context;

          // scripts is true for back-compat
          jQuery.merge( this, jQuery.parseHTML(
            match[1],
            context && context.nodeType ? context.ownerDocument || context : document,
            true
          ) );

          // HANDLE: $(html, props)
          if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
            for ( match in context ) {
              // Properties of context are called as methods if possible
              if ( jQuery.isFunction( this[ match ] ) ) {
                this[ match ]( context[ match ] );

              // ...and otherwise set as attributes
              } else {
                this.attr( match, context[ match ] );
              }
            }
          }

          return this;

        // HANDLE: $(#id)
        } else {
          elem = document.getElementById( match[2] );

          // Check parentNode to catch when Blackberry 4.6 returns
          // nodes that are no longer in the document #6963
          if ( elem && elem.parentNode ) {
            // Handle the case where IE and Opera return items
            // by name instead of ID
            if ( elem.id !== match[2] ) {
              return rootjQuery.find( selector );
            }

            // Otherwise, we inject the element directly into the jQuery object
            this.length = 1;
            this[0] = elem;
          }

          this.context = document;
          this.selector = selector;
          return this;
        }

      // HANDLE: $(expr, $(...))
      } else if ( !context || context.jquery ) {
        return ( context || rootjQuery ).find( selector );

      // HANDLE: $(expr, context)
      // (which is just equivalent to: $(context).find(expr)
      } else {
        return this.constructor( context ).find( selector );
      }

    // HANDLE: $(DOMElement)
    } else if ( selector.nodeType ) {
      this.context = this[0] = selector;
      this.length = 1;
      return this;

    // HANDLE: $(function)
    // Shortcut for document ready
    } else if ( jQuery.isFunction( selector ) ) {
      return rootjQuery.ready( selector );
    }

    if ( selector.selector !== undefined ) {
      this.selector = selector.selector;
      this.context = selector.context;
    }

    return jQuery.makeArray( selector, this );
  },

  // Start with an empty selector
  selector: "",

  // The default length of a jQuery object is 0
  length: 0,

  toArray: function() {
    return core_slice.call( this );
  },

  // Get the Nth element in the matched element set OR
  // Get the whole matched element set as a clean array
  get: function( num ) {
    return num == null ?

      // Return a 'clean' array
      this.toArray() :

      // Return just the object
      ( num < 0 ? this[ this.length + num ] : this[ num ] );
  },

  // Take an array of elements and push it onto the stack
  // (returning the new matched element set)
  pushStack: function( elems ) {

    // Build a new jQuery matched element set
    var ret = jQuery.merge( this.constructor(), elems );

    // Add the old object onto the stack (as a reference)
    ret.prevObject = this;
    ret.context = this.context;

    // Return the newly-formed element set
    return ret;
  },

  // Execute a callback for every element in the matched set.
  // (You can seed the arguments with an array of args, but this is
  // only used internally.)
  each: function( callback, args ) {
    return jQuery.each( this, callback, args );
  },

  ready: function( fn ) {
    // Add the callback
    jQuery.ready.promise().done( fn );

    return this;
  },

  slice: function() {
    return this.pushStack( core_slice.apply( this, arguments ) );
  },

  first: function() {
    return this.eq( 0 );
  },

  last: function() {
    return this.eq( -1 );
  },

  eq: function( i ) {
    var len = this.length,
      j = +i + ( i < 0 ? len : 0 );
    return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
  },

  map: function( callback ) {
    return this.pushStack( jQuery.map(this, function( elem, i ) {
      return callback.call( elem, i, elem );
    }));
  },

  end: function() {
    return this.prevObject || this.constructor(null);
  },

  // For internal use only.
  // Behaves like an Array's method, not like a jQuery method.
  push: core_push,
  sort: [].sort,
  splice: [].splice
};

// Give the init function the jQuery prototype for later instantiation
jQuery.fn.init.prototype = jQuery.fn;

jQuery.extend = jQuery.fn.extend = function() {
  var src, copyIsArray, copy, name, options, clone,
    target = arguments[0] || {},
    i = 1,
    length = arguments.length,
    deep = false;

  // Handle a deep copy situation
  if ( typeof target === "boolean" ) {
    deep = target;
    target = arguments[1] || {};
    // skip the boolean and the target
    i = 2;
  }

  // Handle case when target is a string or something (possible in deep copy)
  if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
    target = {};
  }

  // extend jQuery itself if only one argument is passed
  if ( length === i ) {
    target = this;
    --i;
  }

  for ( ; i < length; i++ ) {
    // Only deal with non-null/undefined values
    if ( (options = arguments[ i ]) != null ) {
      // Extend the base object
      for ( name in options ) {
        src = target[ name ];
        copy = options[ name ];

        // Prevent never-ending loop
        if ( target === copy ) {
          continue;
        }

        // Recurse if we're merging plain objects or arrays
        if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
          if ( copyIsArray ) {
            copyIsArray = false;
            clone = src && jQuery.isArray(src) ? src : [];

          } else {
            clone = src && jQuery.isPlainObject(src) ? src : {};
          }

          // Never move original objects, clone them
          target[ name ] = jQuery.extend( deep, clone, copy );

        // Don't bring in undefined values
        } else if ( copy !== undefined ) {
          target[ name ] = copy;
        }
      }
    }
  }

  // Return the modified object
  return target;
};

jQuery.extend({
  // Unique for each copy of jQuery on the page
  // Non-digits removed to match rinlinejQuery
  expando: "jQuery" + ( core_version + Math.random() ).replace( /\D/g, "" ),

  noConflict: function( deep ) {
    if ( window.$ === jQuery ) {
      window.$ = _$;
    }

    if ( deep && window.jQuery === jQuery ) {
      window.jQuery = _jQuery;
    }

    return jQuery;
  },

  // Is the DOM ready to be used? Set to true once it occurs.
  isReady: false,

  // A counter to track how many items to wait for before
  // the ready event fires. See #6781
  readyWait: 1,

  // Hold (or release) the ready event
  holdReady: function( hold ) {
    if ( hold ) {
      jQuery.readyWait++;
    } else {
      jQuery.ready( true );
    }
  },

  // Handle when the DOM is ready
  ready: function( wait ) {

    // Abort if there are pending holds or we're already ready
    if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
      return;
    }

    // Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
    if ( !document.body ) {
      return setTimeout( jQuery.ready );
    }

    // Remember that the DOM is ready
    jQuery.isReady = true;

    // If a normal DOM Ready event fired, decrement, and wait if need be
    if ( wait !== true && --jQuery.readyWait > 0 ) {
      return;
    }

    // If there are functions bound, to execute
    readyList.resolveWith( document, [ jQuery ] );

    // Trigger any bound ready events
    if ( jQuery.fn.trigger ) {
      jQuery( document ).trigger("ready").off("ready");
    }
  },

  // See test/unit/core.js for details concerning isFunction.
  // Since version 1.3, DOM methods and functions like alert
  // aren't supported. They return false on IE (#2968).
  isFunction: function( obj ) {
    return jQuery.type(obj) === "function";
  },

  isArray: Array.isArray || function( obj ) {
    return jQuery.type(obj) === "array";
  },

  isWindow: function( obj ) {
    /* jshint eqeqeq: false */
    return obj != null && obj == obj.window;
  },

  isNumeric: function( obj ) {
    return !isNaN( parseFloat(obj) ) && isFinite( obj );
  },

  type: function( obj ) {
    if ( obj == null ) {
      return String( obj );
    }
    return typeof obj === "object" || typeof obj === "function" ?
      class2type[ core_toString.call(obj) ] || "object" :
      typeof obj;
  },

  isPlainObject: function( obj ) {
    var key;

    // Must be an Object.
    // Because of IE, we also have to check the presence of the constructor property.
    // Make sure that DOM nodes and window objects don't pass through, as well
    if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
      return false;
    }

    try {
      // Not own constructor property must be Object
      if ( obj.constructor &&
        !core_hasOwn.call(obj, "constructor") &&
        !core_hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
        return false;
      }
    } catch ( e ) {
      // IE8,9 Will throw exceptions on certain host objects #9897
      return false;
    }

    // Support: IE<9
    // Handle iteration over inherited properties before own properties.
    if ( jQuery.support.ownLast ) {
      for ( key in obj ) {
        return core_hasOwn.call( obj, key );
      }
    }

    // Own properties are enumerated firstly, so to speed up,
    // if last one is own, then all properties are own.
    for ( key in obj ) {}

    return key === undefined || core_hasOwn.call( obj, key );
  },

  isEmptyObject: function( obj ) {
    var name;
    for ( name in obj ) {
      return false;
    }
    return true;
  },

  error: function( msg ) {
    throw new Error( msg );
  },

  // data: string of html
  // context (optional): If specified, the fragment will be created in this context, defaults to document
  // keepScripts (optional): If true, will include scripts passed in the html string
  parseHTML: function( data, context, keepScripts ) {
    if ( !data || typeof data !== "string" ) {
      return null;
    }
    if ( typeof context === "boolean" ) {
      keepScripts = context;
      context = false;
    }
    context = context || document;

    var parsed = rsingleTag.exec( data ),
      scripts = !keepScripts && [];

    // Single tag
    if ( parsed ) {
      return [ context.createElement( parsed[1] ) ];
    }

    parsed = jQuery.buildFragment( [ data ], context, scripts );
    if ( scripts ) {
      jQuery( scripts ).remove();
    }
    return jQuery.merge( [], parsed.childNodes );
  },

  parseJSON: function( data ) {
    // Attempt to parse using the native JSON parser first
    if ( window.JSON && window.JSON.parse ) {
      return window.JSON.parse( data );
    }

    if ( data === null ) {
      return data;
    }

    if ( typeof data === "string" ) {

      // Make sure leading/trailing whitespace is removed (IE can't handle it)
      data = jQuery.trim( data );

      if ( data ) {
        // Make sure the incoming data is actual JSON
        // Logic borrowed from http://json.org/json2.js
        if ( rvalidchars.test( data.replace( rvalidescape, "@" )
          .replace( rvalidtokens, "]" )
          .replace( rvalidbraces, "")) ) {

          return ( new Function( "return " + data ) )();
        }
      }
    }

    jQuery.error( "Invalid JSON: " + data );
  },

  // Cross-browser xml parsing
  parseXML: function( data ) {
    var xml, tmp;
    if ( !data || typeof data !== "string" ) {
      return null;
    }
    try {
      if ( window.DOMParser ) { // Standard
        tmp = new DOMParser();
        xml = tmp.parseFromString( data , "text/xml" );
      } else { // IE
        xml = new ActiveXObject( "Microsoft.XMLDOM" );
        xml.async = "false";
        xml.loadXML( data );
      }
    } catch( e ) {
      xml = undefined;
    }
    if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
      jQuery.error( "Invalid XML: " + data );
    }
    return xml;
  },

  noop: function() {},

  // Evaluates a script in a global context
  // Workarounds based on findings by Jim Driscoll
  // http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
  globalEval: function( data ) {
    if ( data && jQuery.trim( data ) ) {
      // We use execScript on Internet Explorer
      // We use an anonymous function so that context is window
      // rather than jQuery in Firefox
      ( window.execScript || function( data ) {
        window[ "eval" ].call( window, data );
      } )( data );
    }
  },

  // Convert dashed to camelCase; used by the css and data modules
  // Microsoft forgot to hump their vendor prefix (#9572)
  camelCase: function( string ) {
    return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
  },

  nodeName: function( elem, name ) {
    return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
  },

  // args is for internal usage only
  each: function( obj, callback, args ) {
    var value,
      i = 0,
      length = obj.length,
      isArray = isArraylike( obj );

    if ( args ) {
      if ( isArray ) {
        for ( ; i < length; i++ ) {
          value = callback.apply( obj[ i ], args );

          if ( value === false ) {
            break;
          }
        }
      } else {
        for ( i in obj ) {
          value = callback.apply( obj[ i ], args );

          if ( value === false ) {
            break;
          }
        }
      }

    // A special, fast, case for the most common use of each
    } else {
      if ( isArray ) {
        for ( ; i < length; i++ ) {
          value = callback.call( obj[ i ], i, obj[ i ] );

          if ( value === false ) {
            break;
          }
        }
      } else {
        for ( i in obj ) {
          value = callback.call( obj[ i ], i, obj[ i ] );

          if ( value === false ) {
            break;
          }
        }
      }
    }

    return obj;
  },

  // Use native String.trim function wherever possible
  trim: core_trim && !core_trim.call("\uFEFF\xA0") ?
    function( text ) {
      return text == null ?
        "" :
        core_trim.call( text );
    } :

    // Otherwise use our own trimming functionality
    function( text ) {
      return text == null ?
        "" :
        ( text + "" ).replace( rtrim, "" );
    },

  // results is for internal usage only
  makeArray: function( arr, results ) {
    var ret = results || [];

    if ( arr != null ) {
      if ( isArraylike( Object(arr) ) ) {
        jQuery.merge( ret,
          typeof arr === "string" ?
          [ arr ] : arr
        );
      } else {
        core_push.call( ret, arr );
      }
    }

    return ret;
  },

  inArray: function( elem, arr, i ) {
    var len;

    if ( arr ) {
      if ( core_indexOf ) {
        return core_indexOf.call( arr, elem, i );
      }

      len = arr.length;
      i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;

      for ( ; i < len; i++ ) {
        // Skip accessing in sparse arrays
        if ( i in arr && arr[ i ] === elem ) {
          return i;
        }
      }
    }

    return -1;
  },

  merge: function( first, second ) {
    var l = second.length,
      i = first.length,
      j = 0;

    if ( typeof l === "number" ) {
      for ( ; j < l; j++ ) {
        first[ i++ ] = second[ j ];
      }
    } else {
      while ( second[j] !== undefined ) {
        first[ i++ ] = second[ j++ ];
      }
    }

    first.length = i;

    return first;
  },

  grep: function( elems, callback, inv ) {
    var retVal,
      ret = [],
      i = 0,
      length = elems.length;
    inv = !!inv;

    // Go through the array, only saving the items
    // that pass the validator function
    for ( ; i < length; i++ ) {
      retVal = !!callback( elems[ i ], i );
      if ( inv !== retVal ) {
        ret.push( elems[ i ] );
      }
    }

    return ret;
  },

  // arg is for internal usage only
  map: function( elems, callback, arg ) {
    var value,
      i = 0,
      length = elems.length,
      isArray = isArraylike( elems ),
      ret = [];

    // Go through the array, translating each of the items to their
    if ( isArray ) {
      for ( ; i < length; i++ ) {
        value = callback( elems[ i ], i, arg );

        if ( value != null ) {
          ret[ ret.length ] = value;
        }
      }

    // Go through every key on the object,
    } else {
      for ( i in elems ) {
        value = callback( elems[ i ], i, arg );

        if ( value != null ) {
          ret[ ret.length ] = value;
        }
      }
    }

    // Flatten any nested arrays
    return core_concat.apply( [], ret );
  },

  // A global GUID counter for objects
  guid: 1,

  // Bind a function to a context, optionally partially applying any
  // arguments.
  proxy: function( fn, context ) {
    var args, proxy, tmp;

    if ( typeof context === "string" ) {
      tmp = fn[ context ];
      context = fn;
      fn = tmp;
    }

    // Quick check to determine if target is callable, in the spec
    // this throws a TypeError, but we will just return undefined.
    if ( !jQuery.isFunction( fn ) ) {
      return undefined;
    }

    // Simulated bind
    args = core_slice.call( arguments, 2 );
    proxy = function() {
      return fn.apply( context || this, args.concat( core_slice.call( arguments ) ) );
    };

    // Set the guid of unique handler to the same of original handler, so it can be removed
    proxy.guid = fn.guid = fn.guid || jQuery.guid++;

    return proxy;
  },

  // Multifunctional method to get and set values of a collection
  // The value/s can optionally be executed if it's a function
  access: function( elems, fn, key, value, chainable, emptyGet, raw ) {
    var i = 0,
      length = elems.length,
      bulk = key == null;

    // Sets many values
    if ( jQuery.type( key ) === "object" ) {
      chainable = true;
      for ( i in key ) {
        jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );
      }

    // Sets one value
    } else if ( value !== undefined ) {
      chainable = true;

      if ( !jQuery.isFunction( value ) ) {
        raw = true;
      }

      if ( bulk ) {
        // Bulk operations run against the entire set
        if ( raw ) {
          fn.call( elems, value );
          fn = null;

        // ...except when executing function values
        } else {
          bulk = fn;
          fn = function( elem, key, value ) {
            return bulk.call( jQuery( elem ), value );
          };
        }
      }

      if ( fn ) {
        for ( ; i < length; i++ ) {
          fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
        }
      }
    }

    return chainable ?
      elems :

      // Gets
      bulk ?
        fn.call( elems ) :
        length ? fn( elems[0], key ) : emptyGet;
  },

  now: function() {
    return ( new Date() ).getTime();
  },

  // A method for quickly swapping in/out CSS properties to get correct calculations.
  // Note: this method belongs to the css module but it's needed here for the support module.
  // If support gets modularized, this method should be moved back to the css module.
  swap: function( elem, options, callback, args ) {
    var ret, name,
      old = {};

    // Remember the old values, and insert the new ones
    for ( name in options ) {
      old[ name ] = elem.style[ name ];
      elem.style[ name ] = options[ name ];
    }

    ret = callback.apply( elem, args || [] );

    // Revert the old values
    for ( name in options ) {
      elem.style[ name ] = old[ name ];
    }

    return ret;
  }
});

jQuery.ready.promise = function( obj ) {
  if ( !readyList ) {

    readyList = jQuery.Deferred();

    // Catch cases where $(document).ready() is called after the browser event has already occurred.
    // we once tried to use readyState "interactive" here, but it caused issues like the one
    // discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
    if ( document.readyState === "complete" ) {
      // Handle it asynchronously to allow scripts the opportunity to delay ready
      setTimeout( jQuery.ready );

    // Standards-based browsers support DOMContentLoaded
    } else if ( document.addEventListener ) {
      // Use the handy event callback
      document.addEventListener( "DOMContentLoaded", completed, false );

      // A fallback to window.onload, that will always work
      window.addEventListener( "load", completed, false );

    // If IE event model is used
    } else {
      // Ensure firing before onload, maybe late but safe also for iframes
      document.attachEvent( "onreadystatechange", completed );

      // A fallback to window.onload, that will always work
      window.attachEvent( "onload", completed );

      // If IE and not a frame
      // continually check to see if the document is ready
      var top = false;

      try {
        top = window.frameElement == null && document.documentElement;
      } catch(e) {}

      if ( top && top.doScroll ) {
        (function doScrollCheck() {
          if ( !jQuery.isReady ) {

            try {
              // Use the trick by Diego Perini
              // http://javascript.nwbox.com/IEContentLoaded/
              top.doScroll("left");
            } catch(e) {
              return setTimeout( doScrollCheck, 50 );
            }

            // detach all dom ready events
            detach();

            // and execute any waiting functions
            jQuery.ready();
          }
        })();
      }
    }
  }
  return readyList.promise( obj );
};

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
  class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

function isArraylike( obj ) {
  var length = obj.length,
    type = jQuery.type( obj );

  if ( jQuery.isWindow( obj ) ) {
    return false;
  }

  if ( obj.nodeType === 1 && length ) {
    return true;
  }

  return type === "array" || type !== "function" &&
    ( length === 0 ||
    typeof length === "number" && length > 0 && ( length - 1 ) in obj );
}

// All jQuery objects should point back to these
rootjQuery = jQuery(document);
/*!
 * Sizzle CSS Selector Engine v1.10.2
 * http://sizzlejs.com/
 *
 * Copyright 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2013-07-03
 */
(function( window, undefined ) {

var i,
  support,
  cachedruns,
  Expr,
  getText,
  isXML,
  compile,
  outermostContext,
  sortInput,

  // Local document vars
  setDocument,
  document,
  docElem,
  documentIsHTML,
  rbuggyQSA,
  rbuggyMatches,
  matches,
  contains,

  // Instance-specific data
  expando = "sizzle" + -(new Date()),
  preferredDoc = window.document,
  dirruns = 0,
  done = 0,
  classCache = createCache(),
  tokenCache = createCache(),
  compilerCache = createCache(),
  hasDuplicate = false,
  sortOrder = function( a, b ) {
    if ( a === b ) {
      hasDuplicate = true;
      return 0;
    }
    return 0;
  },

  // General-purpose constants
  strundefined = typeof undefined,
  MAX_NEGATIVE = 1 << 31,

  // Instance methods
  hasOwn = ({}).hasOwnProperty,
  arr = [],
  pop = arr.pop,
  push_native = arr.push,
  push = arr.push,
  slice = arr.slice,
  // Use a stripped-down indexOf if we can't use a native one
  indexOf = arr.indexOf || function( elem ) {
    var i = 0,
      len = this.length;
    for ( ; i < len; i++ ) {
      if ( this[i] === elem ) {
        return i;
      }
    }
    return -1;
  },

  booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

  // Regular expressions

  // Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
  whitespace = "[\\x20\\t\\r\\n\\f]",
  // http://www.w3.org/TR/css3-syntax/#characters
  characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

  // Loosely modeled on CSS identifier characters
  // An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
  // Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
  identifier = characterEncoding.replace( "w", "w#" ),

  // Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors
  attributes = "\\[" + whitespace + "*(" + characterEncoding + ")" + whitespace +
    "*(?:([*^$|!~]?=)" + whitespace + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + identifier + ")|)|)" + whitespace + "*\\]",

  // Prefer arguments quoted,
  //   then not containing pseudos/brackets,
  //   then attribute selectors/non-parenthetical expressions,
  //   then anything else
  // These preferences are here to reduce the number of selectors
  //   needing tokenize in the PSEUDO preFilter
  pseudos = ":(" + characterEncoding + ")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|" + attributes.replace( 3, 8 ) + ")*)|.*)\\)|)",

  // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
  rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

  rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
  rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

  rsibling = new RegExp( whitespace + "*[+~]" ),
  rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*)" + whitespace + "*\\]", "g" ),

  rpseudo = new RegExp( pseudos ),
  ridentifier = new RegExp( "^" + identifier + "$" ),

  matchExpr = {
    "ID": new RegExp( "^#(" + characterEncoding + ")" ),
    "CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
    "TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
    "ATTR": new RegExp( "^" + attributes ),
    "PSEUDO": new RegExp( "^" + pseudos ),
    "CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
      "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
      "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
    "bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
    // For use in libraries implementing .is()
    // We use this for POS matching in `select`
    "needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
      whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
  },

  rnative = /^[^{]+\{\s*\[native \w/,

  // Easily-parseable/retrievable ID or TAG or CLASS selectors
  rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

  rinputs = /^(?:input|select|textarea|button)$/i,
  rheader = /^h\d$/i,

  rescape = /'|\\/g,

  // CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
  runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
  funescape = function( _, escaped, escapedWhitespace ) {
    var high = "0x" + escaped - 0x10000;
    // NaN means non-codepoint
    // Support: Firefox
    // Workaround erroneous numeric interpretation of +"0x"
    return high !== high || escapedWhitespace ?
      escaped :
      // BMP codepoint
      high < 0 ?
        String.fromCharCode( high + 0x10000 ) :
        // Supplemental Plane codepoint (surrogate pair)
        String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
  };

// Optimize for push.apply( _, NodeList )
try {
  push.apply(
    (arr = slice.call( preferredDoc.childNodes )),
    preferredDoc.childNodes
  );
  // Support: Android<4.0
  // Detect silently failing push.apply
  arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
  push = { apply: arr.length ?

    // Leverage slice if possible
    function( target, els ) {
      push_native.apply( target, slice.call(els) );
    } :

    // Support: IE<9
    // Otherwise append directly
    function( target, els ) {
      var j = target.length,
        i = 0;
      // Can't trust NodeList.length
      while ( (target[j++] = els[i++]) ) {}
      target.length = j - 1;
    }
  };
}

function Sizzle( selector, context, results, seed ) {
  var match, elem, m, nodeType,
    // QSA vars
    i, groups, old, nid, newContext, newSelector;

  if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
    setDocument( context );
  }

  context = context || document;
  results = results || [];

  if ( !selector || typeof selector !== "string" ) {
    return results;
  }

  if ( (nodeType = context.nodeType) !== 1 && nodeType !== 9 ) {
    return [];
  }

  if ( documentIsHTML && !seed ) {

    // Shortcuts
    if ( (match = rquickExpr.exec( selector )) ) {
      // Speed-up: Sizzle("#ID")
      if ( (m = match[1]) ) {
        if ( nodeType === 9 ) {
          elem = context.getElementById( m );
          // Check parentNode to catch when Blackberry 4.6 returns
          // nodes that are no longer in the document #6963
          if ( elem && elem.parentNode ) {
            // Handle the case where IE, Opera, and Webkit return items
            // by name instead of ID
            if ( elem.id === m ) {
              results.push( elem );
              return results;
            }
          } else {
            return results;
          }
        } else {
          // Context is not a document
          if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
            contains( context, elem ) && elem.id === m ) {
            results.push( elem );
            return results;
          }
        }

      // Speed-up: Sizzle("TAG")
      } else if ( match[2] ) {
        push.apply( results, context.getElementsByTagName( selector ) );
        return results;

      // Speed-up: Sizzle(".CLASS")
      } else if ( (m = match[3]) && support.getElementsByClassName && context.getElementsByClassName ) {
        push.apply( results, context.getElementsByClassName( m ) );
        return results;
      }
    }

    // QSA path
    if ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
      nid = old = expando;
      newContext = context;
      newSelector = nodeType === 9 && selector;

      // qSA works strangely on Element-rooted queries
      // We can work around this by specifying an extra ID on the root
      // and working up from there (Thanks to Andrew Dupont for the technique)
      // IE 8 doesn't work on object elements
      if ( nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
        groups = tokenize( selector );

        if ( (old = context.getAttribute("id")) ) {
          nid = old.replace( rescape, "\\$&" );
        } else {
          context.setAttribute( "id", nid );
        }
        nid = "[id='" + nid + "'] ";

        i = groups.length;
        while ( i-- ) {
          groups[i] = nid + toSelector( groups[i] );
        }
        newContext = rsibling.test( selector ) && context.parentNode || context;
        newSelector = groups.join(",");
      }

      if ( newSelector ) {
        try {
          push.apply( results,
            newContext.querySelectorAll( newSelector )
          );
          return results;
        } catch(qsaError) {
        } finally {
          if ( !old ) {
            context.removeAttribute("id");
          }
        }
      }
    }
  }

  // All others
  return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {Function(string, Object)} Returns the Object data after storing it on itself with
 *  property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *  deleting the oldest entry
 */
function createCache() {
  var keys = [];

  function cache( key, value ) {
    // Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
    if ( keys.push( key += " " ) > Expr.cacheLength ) {
      // Only keep the most recent entries
      delete cache[ keys.shift() ];
    }
    return (cache[ key ] = value);
  }
  return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
  fn[ expando ] = true;
  return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created div and expects a boolean result
 */
function assert( fn ) {
  var div = document.createElement("div");

  try {
    return !!fn( div );
  } catch (e) {
    return false;
  } finally {
    // Remove from its parent by default
    if ( div.parentNode ) {
      div.parentNode.removeChild( div );
    }
    // release memory in IE
    div = null;
  }
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
  var arr = attrs.split("|"),
    i = attrs.length;

  while ( i-- ) {
    Expr.attrHandle[ arr[i] ] = handler;
  }
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
  var cur = b && a,
    diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
      ( ~b.sourceIndex || MAX_NEGATIVE ) -
      ( ~a.sourceIndex || MAX_NEGATIVE );

  // Use IE sourceIndex if available on both nodes
  if ( diff ) {
    return diff;
  }

  // Check if b follows a
  if ( cur ) {
    while ( (cur = cur.nextSibling) ) {
      if ( cur === b ) {
        return -1;
      }
    }
  }

  return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
  return function( elem ) {
    var name = elem.nodeName.toLowerCase();
    return name === "input" && elem.type === type;
  };
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
  return function( elem ) {
    var name = elem.nodeName.toLowerCase();
    return (name === "input" || name === "button") && elem.type === type;
  };
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
  return markFunction(function( argument ) {
    argument = +argument;
    return markFunction(function( seed, matches ) {
      var j,
        matchIndexes = fn( [], seed.length, argument ),
        i = matchIndexes.length;

      // Match elements found at the specified indexes
      while ( i-- ) {
        if ( seed[ (j = matchIndexes[i]) ] ) {
          seed[j] = !(matches[j] = seed[j]);
        }
      }
    });
  });
}

/**
 * Detect xml
 * @param {Element|Object} elem An element or a document
 */
isXML = Sizzle.isXML = function( elem ) {
  // documentElement is verified for cases where it doesn't yet exist
  // (such as loading iframes in IE - #4833)
  var documentElement = elem && (elem.ownerDocument || elem).documentElement;
  return documentElement ? documentElement.nodeName !== "HTML" : false;
};

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
  var doc = node ? node.ownerDocument || node : preferredDoc,
    parent = doc.defaultView;

  // If no document and documentElement is available, return
  if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
    return document;
  }

  // Set our document
  document = doc;
  docElem = doc.documentElement;

  // Support tests
  documentIsHTML = !isXML( doc );

  // Support: IE>8
  // If iframe document is assigned to "document" variable and if iframe has been reloaded,
  // IE will throw "permission denied" error when accessing "document" variable, see jQuery #13936
  // IE6-8 do not support the defaultView property so parent will be undefined
  if ( parent && parent.attachEvent && parent !== parent.top ) {
    parent.attachEvent( "onbeforeunload", function() {
      setDocument();
    });
  }

  /* Attributes
  ---------------------------------------------------------------------- */

  // Support: IE<8
  // Verify that getAttribute really returns attributes and not properties (excepting IE8 booleans)
  support.attributes = assert(function( div ) {
    div.className = "i";
    return !div.getAttribute("className");
  });

  /* getElement(s)By*
  ---------------------------------------------------------------------- */

  // Check if getElementsByTagName("*") returns only elements
  support.getElementsByTagName = assert(function( div ) {
    div.appendChild( doc.createComment("") );
    return !div.getElementsByTagName("*").length;
  });

  // Check if getElementsByClassName can be trusted
  support.getElementsByClassName = assert(function( div ) {
    div.innerHTML = "<div class='a'></div><div class='a i'></div>";

    // Support: Safari<4
    // Catch class over-caching
    div.firstChild.className = "i";
    // Support: Opera<10
    // Catch gEBCN failure to find non-leading classes
    return div.getElementsByClassName("i").length === 2;
  });

  // Support: IE<10
  // Check if getElementById returns elements by name
  // The broken getElementById methods don't pick up programatically-set names,
  // so use a roundabout getElementsByName test
  support.getById = assert(function( div ) {
    docElem.appendChild( div ).id = expando;
    return !doc.getElementsByName || !doc.getElementsByName( expando ).length;
  });

  // ID find and filter
  if ( support.getById ) {
    Expr.find["ID"] = function( id, context ) {
      if ( typeof context.getElementById !== strundefined && documentIsHTML ) {
        var m = context.getElementById( id );
        // Check parentNode to catch when Blackberry 4.6 returns
        // nodes that are no longer in the document #6963
        return m && m.parentNode ? [m] : [];
      }
    };
    Expr.filter["ID"] = function( id ) {
      var attrId = id.replace( runescape, funescape );
      return function( elem ) {
        return elem.getAttribute("id") === attrId;
      };
    };
  } else {
    // Support: IE6/7
    // getElementById is not reliable as a find shortcut
    delete Expr.find["ID"];

    Expr.filter["ID"] =  function( id ) {
      var attrId = id.replace( runescape, funescape );
      return function( elem ) {
        var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode("id");
        return node && node.value === attrId;
      };
    };
  }

  // Tag
  Expr.find["TAG"] = support.getElementsByTagName ?
    function( tag, context ) {
      if ( typeof context.getElementsByTagName !== strundefined ) {
        return context.getElementsByTagName( tag );
      }
    } :
    function( tag, context ) {
      var elem,
        tmp = [],
        i = 0,
        results = context.getElementsByTagName( tag );

      // Filter out possible comments
      if ( tag === "*" ) {
        while ( (elem = results[i++]) ) {
          if ( elem.nodeType === 1 ) {
            tmp.push( elem );
          }
        }

        return tmp;
      }
      return results;
    };

  // Class
  Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
    if ( typeof context.getElementsByClassName !== strundefined && documentIsHTML ) {
      return context.getElementsByClassName( className );
    }
  };

  /* QSA/matchesSelector
  ---------------------------------------------------------------------- */

  // QSA and matchesSelector support

  // matchesSelector(:active) reports false when true (IE9/Opera 11.5)
  rbuggyMatches = [];

  // qSa(:focus) reports false when true (Chrome 21)
  // We allow this because of a bug in IE8/9 that throws an error
  // whenever `document.activeElement` is accessed on an iframe
  // So, we allow :focus to pass through QSA all the time to avoid the IE error
  // See http://bugs.jquery.com/ticket/13378
  rbuggyQSA = [];

  if ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {
    // Build QSA regex
    // Regex strategy adopted from Diego Perini
    assert(function( div ) {
      // Select is set to empty string on purpose
      // This is to test IE's treatment of not explicitly
      // setting a boolean content attribute,
      // since its presence should be enough
      // http://bugs.jquery.com/ticket/12359
      div.innerHTML = "<select><option selected=''></option></select>";

      // Support: IE8
      // Boolean attributes and "value" are not treated correctly
      if ( !div.querySelectorAll("[selected]").length ) {
        rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
      }

      // Webkit/Opera - :checked should return selected option elements
      // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
      // IE8 throws error here and will not see later tests
      if ( !div.querySelectorAll(":checked").length ) {
        rbuggyQSA.push(":checked");
      }
    });

    assert(function( div ) {

      // Support: Opera 10-12/IE8
      // ^= $= *= and empty values
      // Should not select anything
      // Support: Windows 8 Native Apps
      // The type attribute is restricted during .innerHTML assignment
      var input = doc.createElement("input");
      input.setAttribute( "type", "hidden" );
      div.appendChild( input ).setAttribute( "t", "" );

      if ( div.querySelectorAll("[t^='']").length ) {
        rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
      }

      // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
      // IE8 throws error here and will not see later tests
      if ( !div.querySelectorAll(":enabled").length ) {
        rbuggyQSA.push( ":enabled", ":disabled" );
      }

      // Opera 10-11 does not throw on post-comma invalid pseudos
      div.querySelectorAll("*,:x");
      rbuggyQSA.push(",.*:");
    });
  }

  if ( (support.matchesSelector = rnative.test( (matches = docElem.webkitMatchesSelector ||
    docElem.mozMatchesSelector ||
    docElem.oMatchesSelector ||
    docElem.msMatchesSelector) )) ) {

    assert(function( div ) {
      // Check to see if it's possible to do matchesSelector
      // on a disconnected node (IE 9)
      support.disconnectedMatch = matches.call( div, "div" );

      // This should fail with an exception
      // Gecko does not error, returns false instead
      matches.call( div, "[s!='']:x" );
      rbuggyMatches.push( "!=", pseudos );
    });
  }

  rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
  rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

  /* Contains
  ---------------------------------------------------------------------- */

  // Element contains another
  // Purposefully does not implement inclusive descendent
  // As in, an element does not contain itself
  contains = rnative.test( docElem.contains ) || docElem.compareDocumentPosition ?
    function( a, b ) {
      var adown = a.nodeType === 9 ? a.documentElement : a,
        bup = b && b.parentNode;
      return a === bup || !!( bup && bup.nodeType === 1 && (
        adown.contains ?
          adown.contains( bup ) :
          a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
      ));
    } :
    function( a, b ) {
      if ( b ) {
        while ( (b = b.parentNode) ) {
          if ( b === a ) {
            return true;
          }
        }
      }
      return false;
    };

  /* Sorting
  ---------------------------------------------------------------------- */

  // Document order sorting
  sortOrder = docElem.compareDocumentPosition ?
  function( a, b ) {

    // Flag for duplicate removal
    if ( a === b ) {
      hasDuplicate = true;
      return 0;
    }

    var compare = b.compareDocumentPosition && a.compareDocumentPosition && a.compareDocumentPosition( b );

    if ( compare ) {
      // Disconnected nodes
      if ( compare & 1 ||
        (!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

        // Choose the first element that is related to our preferred document
        if ( a === doc || contains(preferredDoc, a) ) {
          return -1;
        }
        if ( b === doc || contains(preferredDoc, b) ) {
          return 1;
        }

        // Maintain original order
        return sortInput ?
          ( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :
          0;
      }

      return compare & 4 ? -1 : 1;
    }

    // Not directly comparable, sort on existence of method
    return a.compareDocumentPosition ? -1 : 1;
  } :
  function( a, b ) {
    var cur,
      i = 0,
      aup = a.parentNode,
      bup = b.parentNode,
      ap = [ a ],
      bp = [ b ];

    // Exit early if the nodes are identical
    if ( a === b ) {
      hasDuplicate = true;
      return 0;

    // Parentless nodes are either documents or disconnected
    } else if ( !aup || !bup ) {
      return a === doc ? -1 :
        b === doc ? 1 :
        aup ? -1 :
        bup ? 1 :
        sortInput ?
        ( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :
        0;

    // If the nodes are siblings, we can do a quick check
    } else if ( aup === bup ) {
      return siblingCheck( a, b );
    }

    // Otherwise we need full lists of their ancestors for comparison
    cur = a;
    while ( (cur = cur.parentNode) ) {
      ap.unshift( cur );
    }
    cur = b;
    while ( (cur = cur.parentNode) ) {
      bp.unshift( cur );
    }

    // Walk down the tree looking for a discrepancy
    while ( ap[i] === bp[i] ) {
      i++;
    }

    return i ?
      // Do a sibling check if the nodes have a common ancestor
      siblingCheck( ap[i], bp[i] ) :

      // Otherwise nodes in our document sort first
      ap[i] === preferredDoc ? -1 :
      bp[i] === preferredDoc ? 1 :
      0;
  };

  return doc;
};

Sizzle.matches = function( expr, elements ) {
  return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
  // Set document vars if needed
  if ( ( elem.ownerDocument || elem ) !== document ) {
    setDocument( elem );
  }

  // Make sure that attribute selectors are quoted
  expr = expr.replace( rattributeQuotes, "='$1']" );

  if ( support.matchesSelector && documentIsHTML &&
    ( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
    ( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

    try {
      var ret = matches.call( elem, expr );

      // IE 9's matchesSelector returns false on disconnected nodes
      if ( ret || support.disconnectedMatch ||
          // As well, disconnected nodes are said to be in a document
          // fragment in IE 9
          elem.document && elem.document.nodeType !== 11 ) {
        return ret;
      }
    } catch(e) {}
  }

  return Sizzle( expr, document, null, [elem] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
  // Set document vars if needed
  if ( ( context.ownerDocument || context ) !== document ) {
    setDocument( context );
  }
  return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
  // Set document vars if needed
  if ( ( elem.ownerDocument || elem ) !== document ) {
    setDocument( elem );
  }

  var fn = Expr.attrHandle[ name.toLowerCase() ],
    // Don't get fooled by Object.prototype properties (jQuery #13807)
    val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
      fn( elem, name, !documentIsHTML ) :
      undefined;

  return val === undefined ?
    support.attributes || !documentIsHTML ?
      elem.getAttribute( name ) :
      (val = elem.getAttributeNode(name)) && val.specified ?
        val.value :
        null :
    val;
};

Sizzle.error = function( msg ) {
  throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
  var elem,
    duplicates = [],
    j = 0,
    i = 0;

  // Unless we *know* we can detect duplicates, assume their presence
  hasDuplicate = !support.detectDuplicates;
  sortInput = !support.sortStable && results.slice( 0 );
  results.sort( sortOrder );

  if ( hasDuplicate ) {
    while ( (elem = results[i++]) ) {
      if ( elem === results[ i ] ) {
        j = duplicates.push( i );
      }
    }
    while ( j-- ) {
      results.splice( duplicates[ j ], 1 );
    }
  }

  return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
  var node,
    ret = "",
    i = 0,
    nodeType = elem.nodeType;

  if ( !nodeType ) {
    // If no nodeType, this is expected to be an array
    for ( ; (node = elem[i]); i++ ) {
      // Do not traverse comment nodes
      ret += getText( node );
    }
  } else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
    // Use textContent for elements
    // innerText usage removed for consistency of new lines (see #11153)
    if ( typeof elem.textContent === "string" ) {
      return elem.textContent;
    } else {
      // Traverse its children
      for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
        ret += getText( elem );
      }
    }
  } else if ( nodeType === 3 || nodeType === 4 ) {
    return elem.nodeValue;
  }
  // Do not include comment or processing instruction nodes

  return ret;
};

Expr = Sizzle.selectors = {

  // Can be adjusted by the user
  cacheLength: 50,

  createPseudo: markFunction,

  match: matchExpr,

  attrHandle: {},

  find: {},

  relative: {
    ">": { dir: "parentNode", first: true },
    " ": { dir: "parentNode" },
    "+": { dir: "previousSibling", first: true },
    "~": { dir: "previousSibling" }
  },

  preFilter: {
    "ATTR": function( match ) {
      match[1] = match[1].replace( runescape, funescape );

      // Move the given value to match[3] whether quoted or unquoted
      match[3] = ( match[4] || match[5] || "" ).replace( runescape, funescape );

      if ( match[2] === "~=" ) {
        match[3] = " " + match[3] + " ";
      }

      return match.slice( 0, 4 );
    },

    "CHILD": function( match ) {
      /* matches from matchExpr["CHILD"]
        1 type (only|nth|...)
        2 what (child|of-type)
        3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
        4 xn-component of xn+y argument ([+-]?\d*n|)
        5 sign of xn-component
        6 x of xn-component
        7 sign of y-component
        8 y of y-component
      */
      match[1] = match[1].toLowerCase();

      if ( match[1].slice( 0, 3 ) === "nth" ) {
        // nth-* requires argument
        if ( !match[3] ) {
          Sizzle.error( match[0] );
        }

        // numeric x and y parameters for Expr.filter.CHILD
        // remember that false/true cast respectively to 0/1
        match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
        match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

      // other types prohibit arguments
      } else if ( match[3] ) {
        Sizzle.error( match[0] );
      }

      return match;
    },

    "PSEUDO": function( match ) {
      var excess,
        unquoted = !match[5] && match[2];

      if ( matchExpr["CHILD"].test( match[0] ) ) {
        return null;
      }

      // Accept quoted arguments as-is
      if ( match[3] && match[4] !== undefined ) {
        match[2] = match[4];

      // Strip excess characters from unquoted arguments
      } else if ( unquoted && rpseudo.test( unquoted ) &&
        // Get excess from tokenize (recursively)
        (excess = tokenize( unquoted, true )) &&
        // advance to the next closing parenthesis
        (excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

        // excess is a negative index
        match[0] = match[0].slice( 0, excess );
        match[2] = unquoted.slice( 0, excess );
      }

      // Return only captures needed by the pseudo filter method (type and argument)
      return match.slice( 0, 3 );
    }
  },

  filter: {

    "TAG": function( nodeNameSelector ) {
      var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
      return nodeNameSelector === "*" ?
        function() { return true; } :
        function( elem ) {
          return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
        };
    },

    "CLASS": function( className ) {
      var pattern = classCache[ className + " " ];

      return pattern ||
        (pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
        classCache( className, function( elem ) {
          return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute("class") || "" );
        });
    },

    "ATTR": function( name, operator, check ) {
      return function( elem ) {
        var result = Sizzle.attr( elem, name );

        if ( result == null ) {
          return operator === "!=";
        }
        if ( !operator ) {
          return true;
        }

        result += "";

        return operator === "=" ? result === check :
          operator === "!=" ? result !== check :
          operator === "^=" ? check && result.indexOf( check ) === 0 :
          operator === "*=" ? check && result.indexOf( check ) > -1 :
          operator === "$=" ? check && result.slice( -check.length ) === check :
          operator === "~=" ? ( " " + result + " " ).indexOf( check ) > -1 :
          operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
          false;
      };
    },

    "CHILD": function( type, what, argument, first, last ) {
      var simple = type.slice( 0, 3 ) !== "nth",
        forward = type.slice( -4 ) !== "last",
        ofType = what === "of-type";

      return first === 1 && last === 0 ?

        // Shortcut for :nth-*(n)
        function( elem ) {
          return !!elem.parentNode;
        } :

        function( elem, context, xml ) {
          var cache, outerCache, node, diff, nodeIndex, start,
            dir = simple !== forward ? "nextSibling" : "previousSibling",
            parent = elem.parentNode,
            name = ofType && elem.nodeName.toLowerCase(),
            useCache = !xml && !ofType;

          if ( parent ) {

            // :(first|last|only)-(child|of-type)
            if ( simple ) {
              while ( dir ) {
                node = elem;
                while ( (node = node[ dir ]) ) {
                  if ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {
                    return false;
                  }
                }
                // Reverse direction for :only-* (if we haven't yet done so)
                start = dir = type === "only" && !start && "nextSibling";
              }
              return true;
            }

            start = [ forward ? parent.firstChild : parent.lastChild ];

            // non-xml :nth-child(...) stores cache data on `parent`
            if ( forward && useCache ) {
              // Seek `elem` from a previously-cached index
              outerCache = parent[ expando ] || (parent[ expando ] = {});
              cache = outerCache[ type ] || [];
              nodeIndex = cache[0] === dirruns && cache[1];
              diff = cache[0] === dirruns && cache[2];
              node = nodeIndex && parent.childNodes[ nodeIndex ];

              while ( (node = ++nodeIndex && node && node[ dir ] ||

                // Fallback to seeking `elem` from the start
                (diff = nodeIndex = 0) || start.pop()) ) {

                // When found, cache indexes on `parent` and break
                if ( node.nodeType === 1 && ++diff && node === elem ) {
                  outerCache[ type ] = [ dirruns, nodeIndex, diff ];
                  break;
                }
              }

            // Use previously-cached element index if available
            } else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {
              diff = cache[1];

            // xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)
            } else {
              // Use the same loop as above to seek `elem` from the start
              while ( (node = ++nodeIndex && node && node[ dir ] ||
                (diff = nodeIndex = 0) || start.pop()) ) {

                if ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {
                  // Cache the index of each encountered element
                  if ( useCache ) {
                    (node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];
                  }

                  if ( node === elem ) {
                    break;
                  }
                }
              }
            }

            // Incorporate the offset, then check against cycle size
            diff -= last;
            return diff === first || ( diff % first === 0 && diff / first >= 0 );
          }
        };
    },

    "PSEUDO": function( pseudo, argument ) {
      // pseudo-class names are case-insensitive
      // http://www.w3.org/TR/selectors/#pseudo-classes
      // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
      // Remember that setFilters inherits from pseudos
      var args,
        fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
          Sizzle.error( "unsupported pseudo: " + pseudo );

      // The user may use createPseudo to indicate that
      // arguments are needed to create the filter function
      // just as Sizzle does
      if ( fn[ expando ] ) {
        return fn( argument );
      }

      // But maintain support for old signatures
      if ( fn.length > 1 ) {
        args = [ pseudo, pseudo, "", argument ];
        return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
          markFunction(function( seed, matches ) {
            var idx,
              matched = fn( seed, argument ),
              i = matched.length;
            while ( i-- ) {
              idx = indexOf.call( seed, matched[i] );
              seed[ idx ] = !( matches[ idx ] = matched[i] );
            }
          }) :
          function( elem ) {
            return fn( elem, 0, args );
          };
      }

      return fn;
    }
  },

  pseudos: {
    // Potentially complex pseudos
    "not": markFunction(function( selector ) {
      // Trim the selector passed to compile
      // to avoid treating leading and trailing
      // spaces as combinators
      var input = [],
        results = [],
        matcher = compile( selector.replace( rtrim, "$1" ) );

      return matcher[ expando ] ?
        markFunction(function( seed, matches, context, xml ) {
          var elem,
            unmatched = matcher( seed, null, xml, [] ),
            i = seed.length;

          // Match elements unmatched by `matcher`
          while ( i-- ) {
            if ( (elem = unmatched[i]) ) {
              seed[i] = !(matches[i] = elem);
            }
          }
        }) :
        function( elem, context, xml ) {
          input[0] = elem;
          matcher( input, null, xml, results );
          return !results.pop();
        };
    }),

    "has": markFunction(function( selector ) {
      return function( elem ) {
        return Sizzle( selector, elem ).length > 0;
      };
    }),

    "contains": markFunction(function( text ) {
      return function( elem ) {
        return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
      };
    }),

    // "Whether an element is represented by a :lang() selector
    // is based solely on the element's language value
    // being equal to the identifier C,
    // or beginning with the identifier C immediately followed by "-".
    // The matching of C against the element's language value is performed case-insensitively.
    // The identifier C does not have to be a valid language name."
    // http://www.w3.org/TR/selectors/#lang-pseudo
    "lang": markFunction( function( lang ) {
      // lang value must be a valid identifier
      if ( !ridentifier.test(lang || "") ) {
        Sizzle.error( "unsupported lang: " + lang );
      }
      lang = lang.replace( runescape, funescape ).toLowerCase();
      return function( elem ) {
        var elemLang;
        do {
          if ( (elemLang = documentIsHTML ?
            elem.lang :
            elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

            elemLang = elemLang.toLowerCase();
            return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
          }
        } while ( (elem = elem.parentNode) && elem.nodeType === 1 );
        return false;
      };
    }),

    // Miscellaneous
    "target": function( elem ) {
      var hash = window.location && window.location.hash;
      return hash && hash.slice( 1 ) === elem.id;
    },

    "root": function( elem ) {
      return elem === docElem;
    },

    "focus": function( elem ) {
      return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
    },

    // Boolean properties
    "enabled": function( elem ) {
      return elem.disabled === false;
    },

    "disabled": function( elem ) {
      return elem.disabled === true;
    },

    "checked": function( elem ) {
      // In CSS3, :checked should return both checked and selected elements
      // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
      var nodeName = elem.nodeName.toLowerCase();
      return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
    },

    "selected": function( elem ) {
      // Accessing this property makes selected-by-default
      // options in Safari work properly
      if ( elem.parentNode ) {
        elem.parentNode.selectedIndex;
      }

      return elem.selected === true;
    },

    // Contents
    "empty": function( elem ) {
      // http://www.w3.org/TR/selectors/#empty-pseudo
      // :empty is only affected by element nodes and content nodes(including text(3), cdata(4)),
      //   not comment, processing instructions, or others
      // Thanks to Diego Perini for the nodeName shortcut
      //   Greater than "@" means alpha characters (specifically not starting with "#" or "?")
      for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
        if ( elem.nodeName > "@" || elem.nodeType === 3 || elem.nodeType === 4 ) {
          return false;
        }
      }
      return true;
    },

    "parent": function( elem ) {
      return !Expr.pseudos["empty"]( elem );
    },

    // Element/input types
    "header": function( elem ) {
      return rheader.test( elem.nodeName );
    },

    "input": function( elem ) {
      return rinputs.test( elem.nodeName );
    },

    "button": function( elem ) {
      var name = elem.nodeName.toLowerCase();
      return name === "input" && elem.type === "button" || name === "button";
    },

    "text": function( elem ) {
      var attr;
      // IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)
      // use getAttribute instead to test this case
      return elem.nodeName.toLowerCase() === "input" &&
        elem.type === "text" &&
        ( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === elem.type );
    },

    // Position-in-collection
    "first": createPositionalPseudo(function() {
      return [ 0 ];
    }),

    "last": createPositionalPseudo(function( matchIndexes, length ) {
      return [ length - 1 ];
    }),

    "eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
      return [ argument < 0 ? argument + length : argument ];
    }),

    "even": createPositionalPseudo(function( matchIndexes, length ) {
      var i = 0;
      for ( ; i < length; i += 2 ) {
        matchIndexes.push( i );
      }
      return matchIndexes;
    }),

    "odd": createPositionalPseudo(function( matchIndexes, length ) {
      var i = 1;
      for ( ; i < length; i += 2 ) {
        matchIndexes.push( i );
      }
      return matchIndexes;
    }),

    "lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
      var i = argument < 0 ? argument + length : argument;
      for ( ; --i >= 0; ) {
        matchIndexes.push( i );
      }
      return matchIndexes;
    }),

    "gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
      var i = argument < 0 ? argument + length : argument;
      for ( ; ++i < length; ) {
        matchIndexes.push( i );
      }
      return matchIndexes;
    })
  }
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
  Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
  Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

function tokenize( selector, parseOnly ) {
  var matched, match, tokens, type,
    soFar, groups, preFilters,
    cached = tokenCache[ selector + " " ];

  if ( cached ) {
    return parseOnly ? 0 : cached.slice( 0 );
  }

  soFar = selector;
  groups = [];
  preFilters = Expr.preFilter;

  while ( soFar ) {

    // Comma and first run
    if ( !matched || (match = rcomma.exec( soFar )) ) {
      if ( match ) {
        // Don't consume trailing commas as valid
        soFar = soFar.slice( match[0].length ) || soFar;
      }
      groups.push( tokens = [] );
    }

    matched = false;

    // Combinators
    if ( (match = rcombinators.exec( soFar )) ) {
      matched = match.shift();
      tokens.push({
        value: matched,
        // Cast descendant combinators to space
        type: match[0].replace( rtrim, " " )
      });
      soFar = soFar.slice( matched.length );
    }

    // Filters
    for ( type in Expr.filter ) {
      if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
        (match = preFilters[ type ]( match ))) ) {
        matched = match.shift();
        tokens.push({
          value: matched,
          type: type,
          matches: match
        });
        soFar = soFar.slice( matched.length );
      }
    }

    if ( !matched ) {
      break;
    }
  }

  // Return the length of the invalid excess
  // if we're just parsing
  // Otherwise, throw an error or return tokens
  return parseOnly ?
    soFar.length :
    soFar ?
      Sizzle.error( selector ) :
      // Cache the tokens
      tokenCache( selector, groups ).slice( 0 );
}

function toSelector( tokens ) {
  var i = 0,
    len = tokens.length,
    selector = "";
  for ( ; i < len; i++ ) {
    selector += tokens[i].value;
  }
  return selector;
}

function addCombinator( matcher, combinator, base ) {
  var dir = combinator.dir,
    checkNonElements = base && dir === "parentNode",
    doneName = done++;

  return combinator.first ?
    // Check against closest ancestor/preceding element
    function( elem, context, xml ) {
      while ( (elem = elem[ dir ]) ) {
        if ( elem.nodeType === 1 || checkNonElements ) {
          return matcher( elem, context, xml );
        }
      }
    } :

    // Check against all ancestor/preceding elements
    function( elem, context, xml ) {
      var data, cache, outerCache,
        dirkey = dirruns + " " + doneName;

      // We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
      if ( xml ) {
        while ( (elem = elem[ dir ]) ) {
          if ( elem.nodeType === 1 || checkNonElements ) {
            if ( matcher( elem, context, xml ) ) {
              return true;
            }
          }
        }
      } else {
        while ( (elem = elem[ dir ]) ) {
          if ( elem.nodeType === 1 || checkNonElements ) {
            outerCache = elem[ expando ] || (elem[ expando ] = {});
            if ( (cache = outerCache[ dir ]) && cache[0] === dirkey ) {
              if ( (data = cache[1]) === true || data === cachedruns ) {
                return data === true;
              }
            } else {
              cache = outerCache[ dir ] = [ dirkey ];
              cache[1] = matcher( elem, context, xml ) || cachedruns;
              if ( cache[1] === true ) {
                return true;
              }
            }
          }
        }
      }
    };
}

function elementMatcher( matchers ) {
  return matchers.length > 1 ?
    function( elem, context, xml ) {
      var i = matchers.length;
      while ( i-- ) {
        if ( !matchers[i]( elem, context, xml ) ) {
          return false;
        }
      }
      return true;
    } :
    matchers[0];
}

function condense( unmatched, map, filter, context, xml ) {
  var elem,
    newUnmatched = [],
    i = 0,
    len = unmatched.length,
    mapped = map != null;

  for ( ; i < len; i++ ) {
    if ( (elem = unmatched[i]) ) {
      if ( !filter || filter( elem, context, xml ) ) {
        newUnmatched.push( elem );
        if ( mapped ) {
          map.push( i );
        }
      }
    }
  }

  return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
  if ( postFilter && !postFilter[ expando ] ) {
    postFilter = setMatcher( postFilter );
  }
  if ( postFinder && !postFinder[ expando ] ) {
    postFinder = setMatcher( postFinder, postSelector );
  }
  return markFunction(function( seed, results, context, xml ) {
    var temp, i, elem,
      preMap = [],
      postMap = [],
      preexisting = results.length,

      // Get initial elements from seed or context
      elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

      // Prefilter to get matcher input, preserving a map for seed-results synchronization
      matcherIn = preFilter && ( seed || !selector ) ?
        condense( elems, preMap, preFilter, context, xml ) :
        elems,

      matcherOut = matcher ?
        // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
        postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

          // ...intermediate processing is necessary
          [] :

          // ...otherwise use results directly
          results :
        matcherIn;

    // Find primary matches
    if ( matcher ) {
      matcher( matcherIn, matcherOut, context, xml );
    }

    // Apply postFilter
    if ( postFilter ) {
      temp = condense( matcherOut, postMap );
      postFilter( temp, [], context, xml );

      // Un-match failing elements by moving them back to matcherIn
      i = temp.length;
      while ( i-- ) {
        if ( (elem = temp[i]) ) {
          matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
        }
      }
    }

    if ( seed ) {
      if ( postFinder || preFilter ) {
        if ( postFinder ) {
          // Get the final matcherOut by condensing this intermediate into postFinder contexts
          temp = [];
          i = matcherOut.length;
          while ( i-- ) {
            if ( (elem = matcherOut[i]) ) {
              // Restore matcherIn since elem is not yet a final match
              temp.push( (matcherIn[i] = elem) );
            }
          }
          postFinder( null, (matcherOut = []), temp, xml );
        }

        // Move matched elements from seed to results to keep them synchronized
        i = matcherOut.length;
        while ( i-- ) {
          if ( (elem = matcherOut[i]) &&
            (temp = postFinder ? indexOf.call( seed, elem ) : preMap[i]) > -1 ) {

            seed[temp] = !(results[temp] = elem);
          }
        }
      }

    // Add elements to results, through postFinder if defined
    } else {
      matcherOut = condense(
        matcherOut === results ?
          matcherOut.splice( preexisting, matcherOut.length ) :
          matcherOut
      );
      if ( postFinder ) {
        postFinder( null, results, matcherOut, xml );
      } else {
        push.apply( results, matcherOut );
      }
    }
  });
}

function matcherFromTokens( tokens ) {
  var checkContext, matcher, j,
    len = tokens.length,
    leadingRelative = Expr.relative[ tokens[0].type ],
    implicitRelative = leadingRelative || Expr.relative[" "],
    i = leadingRelative ? 1 : 0,

    // The foundational matcher ensures that elements are reachable from top-level context(s)
    matchContext = addCombinator( function( elem ) {
      return elem === checkContext;
    }, implicitRelative, true ),
    matchAnyContext = addCombinator( function( elem ) {
      return indexOf.call( checkContext, elem ) > -1;
    }, implicitRelative, true ),
    matchers = [ function( elem, context, xml ) {
      return ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
        (checkContext = context).nodeType ?
          matchContext( elem, context, xml ) :
          matchAnyContext( elem, context, xml ) );
    } ];

  for ( ; i < len; i++ ) {
    if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
      matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
    } else {
      matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

      // Return special upon seeing a positional matcher
      if ( matcher[ expando ] ) {
        // Find the next relative operator (if any) for proper handling
        j = ++i;
        for ( ; j < len; j++ ) {
          if ( Expr.relative[ tokens[j].type ] ) {
            break;
          }
        }
        return setMatcher(
          i > 1 && elementMatcher( matchers ),
          i > 1 && toSelector(
            // If the preceding token was a descendant combinator, insert an implicit any-element `*`
            tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
          ).replace( rtrim, "$1" ),
          matcher,
          i < j && matcherFromTokens( tokens.slice( i, j ) ),
          j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
          j < len && toSelector( tokens )
        );
      }
      matchers.push( matcher );
    }
  }

  return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
  // A counter to specify which element is currently being matched
  var matcherCachedRuns = 0,
    bySet = setMatchers.length > 0,
    byElement = elementMatchers.length > 0,
    superMatcher = function( seed, context, xml, results, expandContext ) {
      var elem, j, matcher,
        setMatched = [],
        matchedCount = 0,
        i = "0",
        unmatched = seed && [],
        outermost = expandContext != null,
        contextBackup = outermostContext,
        // We must always have either seed elements or context
        elems = seed || byElement && Expr.find["TAG"]( "*", expandContext && context.parentNode || context ),
        // Use integer dirruns iff this is the outermost matcher
        dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1);

      if ( outermost ) {
        outermostContext = context !== document && context;
        cachedruns = matcherCachedRuns;
      }

      // Add elements passing elementMatchers directly to results
      // Keep `i` a string if there are no elements so `matchedCount` will be "00" below
      for ( ; (elem = elems[i]) != null; i++ ) {
        if ( byElement && elem ) {
          j = 0;
          while ( (matcher = elementMatchers[j++]) ) {
            if ( matcher( elem, context, xml ) ) {
              results.push( elem );
              break;
            }
          }
          if ( outermost ) {
            dirruns = dirrunsUnique;
            cachedruns = ++matcherCachedRuns;
          }
        }

        // Track unmatched elements for set filters
        if ( bySet ) {
          // They will have gone through all possible matchers
          if ( (elem = !matcher && elem) ) {
            matchedCount--;
          }

          // Lengthen the array for every element, matched or not
          if ( seed ) {
            unmatched.push( elem );
          }
        }
      }

      // Apply set filters to unmatched elements
      matchedCount += i;
      if ( bySet && i !== matchedCount ) {
        j = 0;
        while ( (matcher = setMatchers[j++]) ) {
          matcher( unmatched, setMatched, context, xml );
        }

        if ( seed ) {
          // Reintegrate element matches to eliminate the need for sorting
          if ( matchedCount > 0 ) {
            while ( i-- ) {
              if ( !(unmatched[i] || setMatched[i]) ) {
                setMatched[i] = pop.call( results );
              }
            }
          }

          // Discard index placeholder values to get only actual matches
          setMatched = condense( setMatched );
        }

        // Add matches to results
        push.apply( results, setMatched );

        // Seedless set matches succeeding multiple successful matchers stipulate sorting
        if ( outermost && !seed && setMatched.length > 0 &&
          ( matchedCount + setMatchers.length ) > 1 ) {

          Sizzle.uniqueSort( results );
        }
      }

      // Override manipulation of globals by nested matchers
      if ( outermost ) {
        dirruns = dirrunsUnique;
        outermostContext = contextBackup;
      }

      return unmatched;
    };

  return bySet ?
    markFunction( superMatcher ) :
    superMatcher;
}

compile = Sizzle.compile = function( selector, group /* Internal Use Only */ ) {
  var i,
    setMatchers = [],
    elementMatchers = [],
    cached = compilerCache[ selector + " " ];

  if ( !cached ) {
    // Generate a function of recursive functions that can be used to check each element
    if ( !group ) {
      group = tokenize( selector );
    }
    i = group.length;
    while ( i-- ) {
      cached = matcherFromTokens( group[i] );
      if ( cached[ expando ] ) {
        setMatchers.push( cached );
      } else {
        elementMatchers.push( cached );
      }
    }

    // Cache the compiled function
    cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );
  }
  return cached;
};

function multipleContexts( selector, contexts, results ) {
  var i = 0,
    len = contexts.length;
  for ( ; i < len; i++ ) {
    Sizzle( selector, contexts[i], results );
  }
  return results;
}

function select( selector, context, results, seed ) {
  var i, tokens, token, type, find,
    match = tokenize( selector );

  if ( !seed ) {
    // Try to minimize operations if there is only one group
    if ( match.length === 1 ) {

      // Take a shortcut and set the context if the root selector is an ID
      tokens = match[0] = match[0].slice( 0 );
      if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
          support.getById && context.nodeType === 9 && documentIsHTML &&
          Expr.relative[ tokens[1].type ] ) {

        context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
        if ( !context ) {
          return results;
        }
        selector = selector.slice( tokens.shift().value.length );
      }

      // Fetch a seed set for right-to-left matching
      i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
      while ( i-- ) {
        token = tokens[i];

        // Abort if we hit a combinator
        if ( Expr.relative[ (type = token.type) ] ) {
          break;
        }
        if ( (find = Expr.find[ type ]) ) {
          // Search, expanding context for leading sibling combinators
          if ( (seed = find(
            token.matches[0].replace( runescape, funescape ),
            rsibling.test( tokens[0].type ) && context.parentNode || context
          )) ) {

            // If seed is empty or no tokens remain, we can return early
            tokens.splice( i, 1 );
            selector = seed.length && toSelector( tokens );
            if ( !selector ) {
              push.apply( results, seed );
              return results;
            }

            break;
          }
        }
      }
    }
  }

  // Compile and execute a filtering function
  // Provide `match` to avoid retokenization if we modified the selector above
  compile( selector, match )(
    seed,
    context,
    !documentIsHTML,
    results,
    rsibling.test( selector )
  );
  return results;
}

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome<14
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( div1 ) {
  // Should return 1, but returns 4 (following)
  return div1.compareDocumentPosition( document.createElement("div") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( div ) {
  div.innerHTML = "<a href='#'></a>";
  return div.firstChild.getAttribute("href") === "#" ;
}) ) {
  addHandle( "type|href|height|width", function( elem, name, isXML ) {
    if ( !isXML ) {
      return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
    }
  });
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( div ) {
  div.innerHTML = "<input/>";
  div.firstChild.setAttribute( "value", "" );
  return div.firstChild.getAttribute( "value" ) === "";
}) ) {
  addHandle( "value", function( elem, name, isXML ) {
    if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
      return elem.defaultValue;
    }
  });
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( div ) {
  return div.getAttribute("disabled") == null;
}) ) {
  addHandle( booleans, function( elem, name, isXML ) {
    var val;
    if ( !isXML ) {
      return (val = elem.getAttributeNode( name )) && val.specified ?
        val.value :
        elem[ name ] === true ? name.toLowerCase() : null;
    }
  });
}

jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.pseudos;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;


})( window );
// String to Object options format cache
var optionsCache = {};

// Convert String-formatted options into Object-formatted ones and store in cache
function createOptions( options ) {
  var object = optionsCache[ options ] = {};
  jQuery.each( options.match( core_rnotwhite ) || [], function( _, flag ) {
    object[ flag ] = true;
  });
  return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *  options: an optional list of space-separated options that will change how
 *      the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *  once:     will ensure the callback list can only be fired once (like a Deferred)
 *
 *  memory:     will keep track of previous values and will call any callback added
 *          after the list has been fired right away with the latest "memorized"
 *          values (like a Deferred)
 *
 *  unique:     will ensure a callback can only be added once (no duplicate in the list)
 *
 *  stopOnFalse:  interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

  // Convert options from String-formatted to Object-formatted if needed
  // (we check in cache first)
  options = typeof options === "string" ?
    ( optionsCache[ options ] || createOptions( options ) ) :
    jQuery.extend( {}, options );

  var // Flag to know if list is currently firing
    firing,
    // Last fire value (for non-forgettable lists)
    memory,
    // Flag to know if list was already fired
    fired,
    // End of the loop when firing
    firingLength,
    // Index of currently firing callback (modified by remove if needed)
    firingIndex,
    // First callback to fire (used internally by add and fireWith)
    firingStart,
    // Actual callback list
    list = [],
    // Stack of fire calls for repeatable lists
    stack = !options.once && [],
    // Fire callbacks
    fire = function( data ) {
      memory = options.memory && data;
      fired = true;
      firingIndex = firingStart || 0;
      firingStart = 0;
      firingLength = list.length;
      firing = true;
      for ( ; list && firingIndex < firingLength; firingIndex++ ) {
        if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
          memory = false; // To prevent further calls using add
          break;
        }
      }
      firing = false;
      if ( list ) {
        if ( stack ) {
          if ( stack.length ) {
            fire( stack.shift() );
          }
        } else if ( memory ) {
          list = [];
        } else {
          self.disable();
        }
      }
    },
    // Actual Callbacks object
    self = {
      // Add a callback or a collection of callbacks to the list
      add: function() {
        if ( list ) {
          // First, we save the current length
          var start = list.length;
          (function add( args ) {
            jQuery.each( args, function( _, arg ) {
              var type = jQuery.type( arg );
              if ( type === "function" ) {
                if ( !options.unique || !self.has( arg ) ) {
                  list.push( arg );
                }
              } else if ( arg && arg.length && type !== "string" ) {
                // Inspect recursively
                add( arg );
              }
            });
          })( arguments );
          // Do we need to add the callbacks to the
          // current firing batch?
          if ( firing ) {
            firingLength = list.length;
          // With memory, if we're not firing then
          // we should call right away
          } else if ( memory ) {
            firingStart = start;
            fire( memory );
          }
        }
        return this;
      },
      // Remove a callback from the list
      remove: function() {
        if ( list ) {
          jQuery.each( arguments, function( _, arg ) {
            var index;
            while( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
              list.splice( index, 1 );
              // Handle firing indexes
              if ( firing ) {
                if ( index <= firingLength ) {
                  firingLength--;
                }
                if ( index <= firingIndex ) {
                  firingIndex--;
                }
              }
            }
          });
        }
        return this;
      },
      // Check if a given callback is in the list.
      // If no argument is given, return whether or not list has callbacks attached.
      has: function( fn ) {
        return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );
      },
      // Remove all callbacks from the list
      empty: function() {
        list = [];
        firingLength = 0;
        return this;
      },
      // Have the list do nothing anymore
      disable: function() {
        list = stack = memory = undefined;
        return this;
      },
      // Is it disabled?
      disabled: function() {
        return !list;
      },
      // Lock the list in its current state
      lock: function() {
        stack = undefined;
        if ( !memory ) {
          self.disable();
        }
        return this;
      },
      // Is it locked?
      locked: function() {
        return !stack;
      },
      // Call all callbacks with the given context and arguments
      fireWith: function( context, args ) {
        if ( list && ( !fired || stack ) ) {
          args = args || [];
          args = [ context, args.slice ? args.slice() : args ];
          if ( firing ) {
            stack.push( args );
          } else {
            fire( args );
          }
        }
        return this;
      },
      // Call all the callbacks with the given arguments
      fire: function() {
        self.fireWith( this, arguments );
        return this;
      },
      // To know if the callbacks have already been called at least once
      fired: function() {
        return !!fired;
      }
    };

  return self;
};
jQuery.extend({

  Deferred: function( func ) {
    var tuples = [
        // action, add listener, listener list, final state
        [ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
        [ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
        [ "notify", "progress", jQuery.Callbacks("memory") ]
      ],
      state = "pending",
      promise = {
        state: function() {
          return state;
        },
        always: function() {
          deferred.done( arguments ).fail( arguments );
          return this;
        },
        then: function( /* fnDone, fnFail, fnProgress */ ) {
          var fns = arguments;
          return jQuery.Deferred(function( newDefer ) {
            jQuery.each( tuples, function( i, tuple ) {
              var action = tuple[ 0 ],
                fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];
              // deferred[ done | fail | progress ] for forwarding actions to newDefer
              deferred[ tuple[1] ](function() {
                var returned = fn && fn.apply( this, arguments );
                if ( returned && jQuery.isFunction( returned.promise ) ) {
                  returned.promise()
                    .done( newDefer.resolve )
                    .fail( newDefer.reject )
                    .progress( newDefer.notify );
                } else {
                  newDefer[ action + "With" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );
                }
              });
            });
            fns = null;
          }).promise();
        },
        // Get a promise for this deferred
        // If obj is provided, the promise aspect is added to the object
        promise: function( obj ) {
          return obj != null ? jQuery.extend( obj, promise ) : promise;
        }
      },
      deferred = {};

    // Keep pipe for back-compat
    promise.pipe = promise.then;

    // Add list-specific methods
    jQuery.each( tuples, function( i, tuple ) {
      var list = tuple[ 2 ],
        stateString = tuple[ 3 ];

      // promise[ done | fail | progress ] = list.add
      promise[ tuple[1] ] = list.add;

      // Handle state
      if ( stateString ) {
        list.add(function() {
          // state = [ resolved | rejected ]
          state = stateString;

        // [ reject_list | resolve_list ].disable; progress_list.lock
        }, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
      }

      // deferred[ resolve | reject | notify ]
      deferred[ tuple[0] ] = function() {
        deferred[ tuple[0] + "With" ]( this === deferred ? promise : this, arguments );
        return this;
      };
      deferred[ tuple[0] + "With" ] = list.fireWith;
    });

    // Make the deferred a promise
    promise.promise( deferred );

    // Call given func if any
    if ( func ) {
      func.call( deferred, deferred );
    }

    // All done!
    return deferred;
  },

  // Deferred helper
  when: function( subordinate /* , ..., subordinateN */ ) {
    var i = 0,
      resolveValues = core_slice.call( arguments ),
      length = resolveValues.length,

      // the count of uncompleted subordinates
      remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

      // the master Deferred. If resolveValues consist of only a single Deferred, just use that.
      deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

      // Update function for both resolve and progress values
      updateFunc = function( i, contexts, values ) {
        return function( value ) {
          contexts[ i ] = this;
          values[ i ] = arguments.length > 1 ? core_slice.call( arguments ) : value;
          if( values === progressValues ) {
            deferred.notifyWith( contexts, values );
          } else if ( !( --remaining ) ) {
            deferred.resolveWith( contexts, values );
          }
        };
      },

      progressValues, progressContexts, resolveContexts;

    // add listeners to Deferred subordinates; treat others as resolved
    if ( length > 1 ) {
      progressValues = new Array( length );
      progressContexts = new Array( length );
      resolveContexts = new Array( length );
      for ( ; i < length; i++ ) {
        if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
          resolveValues[ i ].promise()
            .done( updateFunc( i, resolveContexts, resolveValues ) )
            .fail( deferred.reject )
            .progress( updateFunc( i, progressContexts, progressValues ) );
        } else {
          --remaining;
        }
      }
    }

    // if we're not waiting on anything, resolve the master
    if ( !remaining ) {
      deferred.resolveWith( resolveContexts, resolveValues );
    }

    return deferred.promise();
  }
});
jQuery.support = (function( support ) {

  var all, a, input, select, fragment, opt, eventName, isSupported, i,
    div = document.createElement("div");

  // Setup
  div.setAttribute( "className", "t" );
  div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";

  // Finish early in limited (non-browser) environments
  all = div.getElementsByTagName("*") || [];
  a = div.getElementsByTagName("a")[ 0 ];
  if ( !a || !a.style || !all.length ) {
    return support;
  }

  // First batch of tests
  select = document.createElement("select");
  opt = select.appendChild( document.createElement("option") );
  input = div.getElementsByTagName("input")[ 0 ];

  a.style.cssText = "top:1px;float:left;opacity:.5";

  // Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)
  support.getSetAttribute = div.className !== "t";

  // IE strips leading whitespace when .innerHTML is used
  support.leadingWhitespace = div.firstChild.nodeType === 3;

  // Make sure that tbody elements aren't automatically inserted
  // IE will insert them into empty tables
  support.tbody = !div.getElementsByTagName("tbody").length;

  // Make sure that link elements get serialized correctly by innerHTML
  // This requires a wrapper element in IE
  support.htmlSerialize = !!div.getElementsByTagName("link").length;

  // Get the style information from getAttribute
  // (IE uses .cssText instead)
  support.style = /top/.test( a.getAttribute("style") );

  // Make sure that URLs aren't manipulated
  // (IE normalizes it by default)
  support.hrefNormalized = a.getAttribute("href") === "/a";

  // Make sure that element opacity exists
  // (IE uses filter instead)
  // Use a regex to work around a WebKit issue. See #5145
  support.opacity = /^0.5/.test( a.style.opacity );

  // Verify style float existence
  // (IE uses styleFloat instead of cssFloat)
  support.cssFloat = !!a.style.cssFloat;

  // Check the default checkbox/radio value ("" on WebKit; "on" elsewhere)
  support.checkOn = !!input.value;

  // Make sure that a selected-by-default option has a working selected property.
  // (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
  support.optSelected = opt.selected;

  // Tests for enctype support on a form (#6743)
  support.enctype = !!document.createElement("form").enctype;

  // Makes sure cloning an html5 element does not cause problems
  // Where outerHTML is undefined, this still works
  support.html5Clone = document.createElement("nav").cloneNode( true ).outerHTML !== "<:nav></:nav>";

  // Will be defined later
  support.inlineBlockNeedsLayout = false;
  support.shrinkWrapBlocks = false;
  support.pixelPosition = false;
  support.deleteExpando = true;
  support.noCloneEvent = true;
  support.reliableMarginRight = true;
  support.boxSizingReliable = true;

  // Make sure checked status is properly cloned
  input.checked = true;
  support.noCloneChecked = input.cloneNode( true ).checked;

  // Make sure that the options inside disabled selects aren't marked as disabled
  // (WebKit marks them as disabled)
  select.disabled = true;
  support.optDisabled = !opt.disabled;

  // Support: IE<9
  try {
    delete div.test;
  } catch( e ) {
    support.deleteExpando = false;
  }

  // Check if we can trust getAttribute("value")
  input = document.createElement("input");
  input.setAttribute( "value", "" );
  support.input = input.getAttribute( "value" ) === "";

  // Check if an input maintains its value after becoming a radio
  input.value = "t";
  input.setAttribute( "type", "radio" );
  support.radioValue = input.value === "t";

  // #11217 - WebKit loses check when the name is after the checked attribute
  input.setAttribute( "checked", "t" );
  input.setAttribute( "name", "t" );

  fragment = document.createDocumentFragment();
  fragment.appendChild( input );

  // Check if a disconnected checkbox will retain its checked
  // value of true after appended to the DOM (IE6/7)
  support.appendChecked = input.checked;

  // WebKit doesn't clone checked state correctly in fragments
  support.checkClone = fragment.cloneNode( true ).cloneNode( true ).lastChild.checked;

  // Support: IE<9
  // Opera does not clone events (and typeof div.attachEvent === undefined).
  // IE9-10 clones events bound via attachEvent, but they don't trigger with .click()
  if ( div.attachEvent ) {
    div.attachEvent( "onclick", function() {
      support.noCloneEvent = false;
    });

    div.cloneNode( true ).click();
  }

  // Support: IE<9 (lack submit/change bubble), Firefox 17+ (lack focusin event)
  // Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)
  for ( i in { submit: true, change: true, focusin: true }) {
    div.setAttribute( eventName = "on" + i, "t" );

    support[ i + "Bubbles" ] = eventName in window || div.attributes[ eventName ].expando === false;
  }

  div.style.backgroundClip = "content-box";
  div.cloneNode( true ).style.backgroundClip = "";
  support.clearCloneStyle = div.style.backgroundClip === "content-box";

  // Support: IE<9
  // Iteration over object's inherited properties before its own.
  for ( i in jQuery( support ) ) {
    break;
  }
  support.ownLast = i !== "0";

  // Run tests that need a body at doc ready
  jQuery(function() {
    var container, marginDiv, tds,
      divReset = "padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;",
      body = document.getElementsByTagName("body")[0];

    if ( !body ) {
      // Return for frameset docs that don't have a body
      return;
    }

    container = document.createElement("div");
    container.style.cssText = "border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px";

    body.appendChild( container ).appendChild( div );

    // Support: IE8
    // Check if table cells still have offsetWidth/Height when they are set
    // to display:none and there are still other visible table cells in a
    // table row; if so, offsetWidth/Height are not reliable for use when
    // determining if an element has been hidden directly using
    // display:none (it is still safe to use offsets if a parent element is
    // hidden; don safety goggles and see bug #4512 for more information).
    div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
    tds = div.getElementsByTagName("td");
    tds[ 0 ].style.cssText = "padding:0;margin:0;border:0;display:none";
    isSupported = ( tds[ 0 ].offsetHeight === 0 );

    tds[ 0 ].style.display = "";
    tds[ 1 ].style.display = "none";

    // Support: IE8
    // Check if empty table cells still have offsetWidth/Height
    support.reliableHiddenOffsets = isSupported && ( tds[ 0 ].offsetHeight === 0 );

    // Check box-sizing and margin behavior.
    div.innerHTML = "";
    div.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;";

    // Workaround failing boxSizing test due to offsetWidth returning wrong value
    // with some non-1 values of body zoom, ticket #13543
    jQuery.swap( body, body.style.zoom != null ? { zoom: 1 } : {}, function() {
      support.boxSizing = div.offsetWidth === 4;
    });

    // Use window.getComputedStyle because jsdom on node.js will break without it.
    if ( window.getComputedStyle ) {
      support.pixelPosition = ( window.getComputedStyle( div, null ) || {} ).top !== "1%";
      support.boxSizingReliable = ( window.getComputedStyle( div, null ) || { width: "4px" } ).width === "4px";

      // Check if div with explicit width and no margin-right incorrectly
      // gets computed margin-right based on width of container. (#3333)
      // Fails in WebKit before Feb 2011 nightlies
      // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
      marginDiv = div.appendChild( document.createElement("div") );
      marginDiv.style.cssText = div.style.cssText = divReset;
      marginDiv.style.marginRight = marginDiv.style.width = "0";
      div.style.width = "1px";

      support.reliableMarginRight =
        !parseFloat( ( window.getComputedStyle( marginDiv, null ) || {} ).marginRight );
    }

    if ( typeof div.style.zoom !== core_strundefined ) {
      // Support: IE<8
      // Check if natively block-level elements act like inline-block
      // elements when setting their display to 'inline' and giving
      // them layout
      div.innerHTML = "";
      div.style.cssText = divReset + "width:1px;padding:1px;display:inline;zoom:1";
      support.inlineBlockNeedsLayout = ( div.offsetWidth === 3 );

      // Support: IE6
      // Check if elements with layout shrink-wrap their children
      div.style.display = "block";
      div.innerHTML = "<div></div>";
      div.firstChild.style.width = "5px";
      support.shrinkWrapBlocks = ( div.offsetWidth !== 3 );

      if ( support.inlineBlockNeedsLayout ) {
        // Prevent IE 6 from affecting layout for positioned elements #11048
        // Prevent IE from shrinking the body in IE 7 mode #12869
        // Support: IE<8
        body.style.zoom = 1;
      }
    }

    body.removeChild( container );

    // Null elements to avoid leaks in IE
    container = div = tds = marginDiv = null;
  });

  // Null elements to avoid leaks in IE
  all = select = fragment = opt = a = input = null;

  return support;
})({});

var rbrace = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/,
  rmultiDash = /([A-Z])/g;

function internalData( elem, name, data, pvt /* Internal Use Only */ ){
  if ( !jQuery.acceptData( elem ) ) {
    return;
  }

  var ret, thisCache,
    internalKey = jQuery.expando,

    // We have to handle DOM nodes and JS objects differently because IE6-7
    // can't GC object references properly across the DOM-JS boundary
    isNode = elem.nodeType,

    // Only DOM nodes need the global jQuery cache; JS object data is
    // attached directly to the object so GC can occur automatically
    cache = isNode ? jQuery.cache : elem,

    // Only defining an ID for JS objects if its cache already exists allows
    // the code to shortcut on the same path as a DOM node with no cache
    id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;

  // Avoid doing any more work than we need to when trying to get data on an
  // object that has no data at all
  if ( (!id || !cache[id] || (!pvt && !cache[id].data)) && data === undefined && typeof name === "string" ) {
    return;
  }

  if ( !id ) {
    // Only DOM nodes need a new unique ID for each element since their data
    // ends up in the global cache
    if ( isNode ) {
      id = elem[ internalKey ] = core_deletedIds.pop() || jQuery.guid++;
    } else {
      id = internalKey;
    }
  }

  if ( !cache[ id ] ) {
    // Avoid exposing jQuery metadata on plain JS objects when the object
    // is serialized using JSON.stringify
    cache[ id ] = isNode ? {} : { toJSON: jQuery.noop };
  }

  // An object can be passed to jQuery.data instead of a key/value pair; this gets
  // shallow copied over onto the existing cache
  if ( typeof name === "object" || typeof name === "function" ) {
    if ( pvt ) {
      cache[ id ] = jQuery.extend( cache[ id ], name );
    } else {
      cache[ id ].data = jQuery.extend( cache[ id ].data, name );
    }
  }

  thisCache = cache[ id ];

  // jQuery data() is stored in a separate object inside the object's internal data
  // cache in order to avoid key collisions between internal data and user-defined
  // data.
  if ( !pvt ) {
    if ( !thisCache.data ) {
      thisCache.data = {};
    }

    thisCache = thisCache.data;
  }

  if ( data !== undefined ) {
    thisCache[ jQuery.camelCase( name ) ] = data;
  }

  // Check for both converted-to-camel and non-converted data property names
  // If a data property was specified
  if ( typeof name === "string" ) {

    // First Try to find as-is property data
    ret = thisCache[ name ];

    // Test for null|undefined property data
    if ( ret == null ) {

      // Try to find the camelCased property
      ret = thisCache[ jQuery.camelCase( name ) ];
    }
  } else {
    ret = thisCache;
  }

  return ret;
}

function internalRemoveData( elem, name, pvt ) {
  if ( !jQuery.acceptData( elem ) ) {
    return;
  }

  var thisCache, i,
    isNode = elem.nodeType,

    // See jQuery.data for more information
    cache = isNode ? jQuery.cache : elem,
    id = isNode ? elem[ jQuery.expando ] : jQuery.expando;

  // If there is already no cache entry for this object, there is no
  // purpose in continuing
  if ( !cache[ id ] ) {
    return;
  }

  if ( name ) {

    thisCache = pvt ? cache[ id ] : cache[ id ].data;

    if ( thisCache ) {

      // Support array or space separated string names for data keys
      if ( !jQuery.isArray( name ) ) {

        // try the string as a key before any manipulation
        if ( name in thisCache ) {
          name = [ name ];
        } else {

          // split the camel cased version by spaces unless a key with the spaces exists
          name = jQuery.camelCase( name );
          if ( name in thisCache ) {
            name = [ name ];
          } else {
            name = name.split(" ");
          }
        }
      } else {
        // If "name" is an array of keys...
        // When data is initially created, via ("key", "val") signature,
        // keys will be converted to camelCase.
        // Since there is no way to tell _how_ a key was added, remove
        // both plain key and camelCase key. #12786
        // This will only penalize the array argument path.
        name = name.concat( jQuery.map( name, jQuery.camelCase ) );
      }

      i = name.length;
      while ( i-- ) {
        delete thisCache[ name[i] ];
      }

      // If there is no data left in the cache, we want to continue
      // and let the cache object itself get destroyed
      if ( pvt ? !isEmptyDataObject(thisCache) : !jQuery.isEmptyObject(thisCache) ) {
        return;
      }
    }
  }

  // See jQuery.data for more information
  if ( !pvt ) {
    delete cache[ id ].data;

    // Don't destroy the parent cache unless the internal data object
    // had been the only thing left in it
    if ( !isEmptyDataObject( cache[ id ] ) ) {
      return;
    }
  }

  // Destroy the cache
  if ( isNode ) {
    jQuery.cleanData( [ elem ], true );

  // Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)
  /* jshint eqeqeq: false */
  } else if ( jQuery.support.deleteExpando || cache != cache.window ) {
    /* jshint eqeqeq: true */
    delete cache[ id ];

  // When all else fails, null
  } else {
    cache[ id ] = null;
  }
}

jQuery.extend({
  cache: {},

  // The following elements throw uncatchable exceptions if you
  // attempt to add expando properties to them.
  noData: {
    "applet": true,
    "embed": true,
    // Ban all objects except for Flash (which handle expandos)
    "object": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
  },

  hasData: function( elem ) {
    elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];
    return !!elem && !isEmptyDataObject( elem );
  },

  data: function( elem, name, data ) {
    return internalData( elem, name, data );
  },

  removeData: function( elem, name ) {
    return internalRemoveData( elem, name );
  },

  // For internal use only.
  _data: function( elem, name, data ) {
    return internalData( elem, name, data, true );
  },

  _removeData: function( elem, name ) {
    return internalRemoveData( elem, name, true );
  },

  // A method for determining if a DOM node can handle the data expando
  acceptData: function( elem ) {
    // Do not set data on non-element because it will not be cleared (#8335).
    if ( elem.nodeType && elem.nodeType !== 1 && elem.nodeType !== 9 ) {
      return false;
    }

    var noData = elem.nodeName && jQuery.noData[ elem.nodeName.toLowerCase() ];

    // nodes accept data unless otherwise specified; rejection can be conditional
    return !noData || noData !== true && elem.getAttribute("classid") === noData;
  }
});

jQuery.fn.extend({
  data: function( key, value ) {
    var attrs, name,
      data = null,
      i = 0,
      elem = this[0];

    // Special expections of .data basically thwart jQuery.access,
    // so implement the relevant behavior ourselves

    // Gets all values
    if ( key === undefined ) {
      if ( this.length ) {
        data = jQuery.data( elem );

        if ( elem.nodeType === 1 && !jQuery._data( elem, "parsedAttrs" ) ) {
          attrs = elem.attributes;
          for ( ; i < attrs.length; i++ ) {
            name = attrs[i].name;

            if ( name.indexOf("data-") === 0 ) {
              name = jQuery.camelCase( name.slice(5) );

              dataAttr( elem, name, data[ name ] );
            }
          }
          jQuery._data( elem, "parsedAttrs", true );
        }
      }

      return data;
    }

    // Sets multiple values
    if ( typeof key === "object" ) {
      return this.each(function() {
        jQuery.data( this, key );
      });
    }

    return arguments.length > 1 ?

      // Sets one value
      this.each(function() {
        jQuery.data( this, key, value );
      }) :

      // Gets one value
      // Try to fetch any internally stored data first
      elem ? dataAttr( elem, key, jQuery.data( elem, key ) ) : null;
  },

  removeData: function( key ) {
    return this.each(function() {
      jQuery.removeData( this, key );
    });
  }
});

function dataAttr( elem, key, data ) {
  // If nothing was found internally, try to fetch any
  // data from the HTML5 data-* attribute
  if ( data === undefined && elem.nodeType === 1 ) {

    var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();

    data = elem.getAttribute( name );

    if ( typeof data === "string" ) {
      try {
        data = data === "true" ? true :
          data === "false" ? false :
          data === "null" ? null :
          // Only convert to a number if it doesn't change the string
          +data + "" === data ? +data :
          rbrace.test( data ) ? jQuery.parseJSON( data ) :
            data;
      } catch( e ) {}

      // Make sure we set the data so it isn't changed later
      jQuery.data( elem, key, data );

    } else {
      data = undefined;
    }
  }

  return data;
}

// checks a cache object for emptiness
function isEmptyDataObject( obj ) {
  var name;
  for ( name in obj ) {

    // if the public data object is empty, the private is still empty
    if ( name === "data" && jQuery.isEmptyObject( obj[name] ) ) {
      continue;
    }
    if ( name !== "toJSON" ) {
      return false;
    }
  }

  return true;
}
jQuery.extend({
  queue: function( elem, type, data ) {
    var queue;

    if ( elem ) {
      type = ( type || "fx" ) + "queue";
      queue = jQuery._data( elem, type );

      // Speed up dequeue by getting out quickly if this is just a lookup
      if ( data ) {
        if ( !queue || jQuery.isArray(data) ) {
          queue = jQuery._data( elem, type, jQuery.makeArray(data) );
        } else {
          queue.push( data );
        }
      }
      return queue || [];
    }
  },

  dequeue: function( elem, type ) {
    type = type || "fx";

    var queue = jQuery.queue( elem, type ),
      startLength = queue.length,
      fn = queue.shift(),
      hooks = jQuery._queueHooks( elem, type ),
      next = function() {
        jQuery.dequeue( elem, type );
      };

    // If the fx queue is dequeued, always remove the progress sentinel
    if ( fn === "inprogress" ) {
      fn = queue.shift();
      startLength--;
    }

    if ( fn ) {

      // Add a progress sentinel to prevent the fx queue from being
      // automatically dequeued
      if ( type === "fx" ) {
        queue.unshift( "inprogress" );
      }

      // clear up the last queue stop function
      delete hooks.stop;
      fn.call( elem, next, hooks );
    }

    if ( !startLength && hooks ) {
      hooks.empty.fire();
    }
  },

  // not intended for public consumption - generates a queueHooks object, or returns the current one
  _queueHooks: function( elem, type ) {
    var key = type + "queueHooks";
    return jQuery._data( elem, key ) || jQuery._data( elem, key, {
      empty: jQuery.Callbacks("once memory").add(function() {
        jQuery._removeData( elem, type + "queue" );
        jQuery._removeData( elem, key );
      })
    });
  }
});

jQuery.fn.extend({
  queue: function( type, data ) {
    var setter = 2;

    if ( typeof type !== "string" ) {
      data = type;
      type = "fx";
      setter--;
    }

    if ( arguments.length < setter ) {
      return jQuery.queue( this[0], type );
    }

    return data === undefined ?
      this :
      this.each(function() {
        var queue = jQuery.queue( this, type, data );

        // ensure a hooks for this queue
        jQuery._queueHooks( this, type );

        if ( type === "fx" && queue[0] !== "inprogress" ) {
          jQuery.dequeue( this, type );
        }
      });
  },
  dequeue: function( type ) {
    return this.each(function() {
      jQuery.dequeue( this, type );
    });
  },
  // Based off of the plugin by Clint Helfers, with permission.
  // http://blindsignals.com/index.php/2009/07/jquery-delay/
  delay: function( time, type ) {
    time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
    type = type || "fx";

    return this.queue( type, function( next, hooks ) {
      var timeout = setTimeout( next, time );
      hooks.stop = function() {
        clearTimeout( timeout );
      };
    });
  },
  clearQueue: function( type ) {
    return this.queue( type || "fx", [] );
  },
  // Get a promise resolved when queues of a certain type
  // are emptied (fx is the type by default)
  promise: function( type, obj ) {
    var tmp,
      count = 1,
      defer = jQuery.Deferred(),
      elements = this,
      i = this.length,
      resolve = function() {
        if ( !( --count ) ) {
          defer.resolveWith( elements, [ elements ] );
        }
      };

    if ( typeof type !== "string" ) {
      obj = type;
      type = undefined;
    }
    type = type || "fx";

    while( i-- ) {
      tmp = jQuery._data( elements[ i ], type + "queueHooks" );
      if ( tmp && tmp.empty ) {
        count++;
        tmp.empty.add( resolve );
      }
    }
    resolve();
    return defer.promise( obj );
  }
});
var nodeHook, boolHook,
  rclass = /[\t\r\n\f]/g,
  rreturn = /\r/g,
  rfocusable = /^(?:input|select|textarea|button|object)$/i,
  rclickable = /^(?:a|area)$/i,
  ruseDefault = /^(?:checked|selected)$/i,
  getSetAttribute = jQuery.support.getSetAttribute,
  getSetInput = jQuery.support.input;

jQuery.fn.extend({
  attr: function( name, value ) {
    return jQuery.access( this, jQuery.attr, name, value, arguments.length > 1 );
  },

  removeAttr: function( name ) {
    return this.each(function() {
      jQuery.removeAttr( this, name );
    });
  },

  prop: function( name, value ) {
    return jQuery.access( this, jQuery.prop, name, value, arguments.length > 1 );
  },

  removeProp: function( name ) {
    name = jQuery.propFix[ name ] || name;
    return this.each(function() {
      // try/catch handles cases where IE balks (such as removing a property on window)
      try {
        this[ name ] = undefined;
        delete this[ name ];
      } catch( e ) {}
    });
  },

  addClass: function( value ) {
    var classes, elem, cur, clazz, j,
      i = 0,
      len = this.length,
      proceed = typeof value === "string" && value;

    if ( jQuery.isFunction( value ) ) {
      return this.each(function( j ) {
        jQuery( this ).addClass( value.call( this, j, this.className ) );
      });
    }

    if ( proceed ) {
      // The disjunction here is for better compressibility (see removeClass)
      classes = ( value || "" ).match( core_rnotwhite ) || [];

      for ( ; i < len; i++ ) {
        elem = this[ i ];
        cur = elem.nodeType === 1 && ( elem.className ?
          ( " " + elem.className + " " ).replace( rclass, " " ) :
          " "
        );

        if ( cur ) {
          j = 0;
          while ( (clazz = classes[j++]) ) {
            if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
              cur += clazz + " ";
            }
          }
          elem.className = jQuery.trim( cur );

        }
      }
    }

    return this;
  },

  removeClass: function( value ) {
    var classes, elem, cur, clazz, j,
      i = 0,
      len = this.length,
      proceed = arguments.length === 0 || typeof value === "string" && value;

    if ( jQuery.isFunction( value ) ) {
      return this.each(function( j ) {
        jQuery( this ).removeClass( value.call( this, j, this.className ) );
      });
    }
    if ( proceed ) {
      classes = ( value || "" ).match( core_rnotwhite ) || [];

      for ( ; i < len; i++ ) {
        elem = this[ i ];
        // This expression is here for better compressibility (see addClass)
        cur = elem.nodeType === 1 && ( elem.className ?
          ( " " + elem.className + " " ).replace( rclass, " " ) :
          ""
        );

        if ( cur ) {
          j = 0;
          while ( (clazz = classes[j++]) ) {
            // Remove *all* instances
            while ( cur.indexOf( " " + clazz + " " ) >= 0 ) {
              cur = cur.replace( " " + clazz + " ", " " );
            }
          }
          elem.className = value ? jQuery.trim( cur ) : "";
        }
      }
    }

    return this;
  },

  toggleClass: function( value, stateVal ) {
    var type = typeof value;

    if ( typeof stateVal === "boolean" && type === "string" ) {
      return stateVal ? this.addClass( value ) : this.removeClass( value );
    }

    if ( jQuery.isFunction( value ) ) {
      return this.each(function( i ) {
        jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
      });
    }

    return this.each(function() {
      if ( type === "string" ) {
        // toggle individual class names
        var className,
          i = 0,
          self = jQuery( this ),
          classNames = value.match( core_rnotwhite ) || [];

        while ( (className = classNames[ i++ ]) ) {
          // check each className given, space separated list
          if ( self.hasClass( className ) ) {
            self.removeClass( className );
          } else {
            self.addClass( className );
          }
        }

      // Toggle whole class name
      } else if ( type === core_strundefined || type === "boolean" ) {
        if ( this.className ) {
          // store className if set
          jQuery._data( this, "__className__", this.className );
        }

        // If the element has a class name or if we're passed "false",
        // then remove the whole classname (if there was one, the above saved it).
        // Otherwise bring back whatever was previously saved (if anything),
        // falling back to the empty string if nothing was stored.
        this.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";
      }
    });
  },

  hasClass: function( selector ) {
    var className = " " + selector + " ",
      i = 0,
      l = this.length;
    for ( ; i < l; i++ ) {
      if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) >= 0 ) {
        return true;
      }
    }

    return false;
  },

  val: function( value ) {
    var ret, hooks, isFunction,
      elem = this[0];

    if ( !arguments.length ) {
      if ( elem ) {
        hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

        if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
          return ret;
        }

        ret = elem.value;

        return typeof ret === "string" ?
          // handle most common string cases
          ret.replace(rreturn, "") :
          // handle cases where value is null/undef or number
          ret == null ? "" : ret;
      }

      return;
    }

    isFunction = jQuery.isFunction( value );

    return this.each(function( i ) {
      var val;

      if ( this.nodeType !== 1 ) {
        return;
      }

      if ( isFunction ) {
        val = value.call( this, i, jQuery( this ).val() );
      } else {
        val = value;
      }

      // Treat null/undefined as ""; convert numbers to string
      if ( val == null ) {
        val = "";
      } else if ( typeof val === "number" ) {
        val += "";
      } else if ( jQuery.isArray( val ) ) {
        val = jQuery.map(val, function ( value ) {
          return value == null ? "" : value + "";
        });
      }

      hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

      // If set returns undefined, fall back to normal setting
      if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
        this.value = val;
      }
    });
  }
});

jQuery.extend({
  valHooks: {
    option: {
      get: function( elem ) {
        // Use proper attribute retrieval(#6932, #12072)
        var val = jQuery.find.attr( elem, "value" );
        return val != null ?
          val :
          elem.text;
      }
    },
    select: {
      get: function( elem ) {
        var value, option,
          options = elem.options,
          index = elem.selectedIndex,
          one = elem.type === "select-one" || index < 0,
          values = one ? null : [],
          max = one ? index + 1 : options.length,
          i = index < 0 ?
            max :
            one ? index : 0;

        // Loop through all the selected options
        for ( ; i < max; i++ ) {
          option = options[ i ];

          // oldIE doesn't update selected after form reset (#2551)
          if ( ( option.selected || i === index ) &&
              // Don't return options that are disabled or in a disabled optgroup
              ( jQuery.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null ) &&
              ( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

            // Get the specific value for the option
            value = jQuery( option ).val();

            // We don't need an array for one selects
            if ( one ) {
              return value;
            }

            // Multi-Selects return an array
            values.push( value );
          }
        }

        return values;
      },

      set: function( elem, value ) {
        var optionSet, option,
          options = elem.options,
          values = jQuery.makeArray( value ),
          i = options.length;

        while ( i-- ) {
          option = options[ i ];
          if ( (option.selected = jQuery.inArray( jQuery(option).val(), values ) >= 0) ) {
            optionSet = true;
          }
        }

        // force browsers to behave consistently when non-matching value is set
        if ( !optionSet ) {
          elem.selectedIndex = -1;
        }
        return values;
      }
    }
  },

  attr: function( elem, name, value ) {
    var hooks, ret,
      nType = elem.nodeType;

    // don't get/set attributes on text, comment and attribute nodes
    if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
      return;
    }

    // Fallback to prop when attributes are not supported
    if ( typeof elem.getAttribute === core_strundefined ) {
      return jQuery.prop( elem, name, value );
    }

    // All attributes are lowercase
    // Grab necessary hook if one is defined
    if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
      name = name.toLowerCase();
      hooks = jQuery.attrHooks[ name ] ||
        ( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
    }

    if ( value !== undefined ) {

      if ( value === null ) {
        jQuery.removeAttr( elem, name );

      } else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
        return ret;

      } else {
        elem.setAttribute( name, value + "" );
        return value;
      }

    } else if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
      return ret;

    } else {
      ret = jQuery.find.attr( elem, name );

      // Non-existent attributes return null, we normalize to undefined
      return ret == null ?
        undefined :
        ret;
    }
  },

  removeAttr: function( elem, value ) {
    var name, propName,
      i = 0,
      attrNames = value && value.match( core_rnotwhite );

    if ( attrNames && elem.nodeType === 1 ) {
      while ( (name = attrNames[i++]) ) {
        propName = jQuery.propFix[ name ] || name;

        // Boolean attributes get special treatment (#10870)
        if ( jQuery.expr.match.bool.test( name ) ) {
          // Set corresponding property to false
          if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
            elem[ propName ] = false;
          // Support: IE<9
          // Also clear defaultChecked/defaultSelected (if appropriate)
          } else {
            elem[ jQuery.camelCase( "default-" + name ) ] =
              elem[ propName ] = false;
          }

        // See #9699 for explanation of this approach (setting first, then removal)
        } else {
          jQuery.attr( elem, name, "" );
        }

        elem.removeAttribute( getSetAttribute ? name : propName );
      }
    }
  },

  attrHooks: {
    type: {
      set: function( elem, value ) {
        if ( !jQuery.support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
          // Setting the type on a radio button after the value resets the value in IE6-9
          // Reset value to default in case type is set after value during creation
          var val = elem.value;
          elem.setAttribute( "type", value );
          if ( val ) {
            elem.value = val;
          }
          return value;
        }
      }
    }
  },

  propFix: {
    "for": "htmlFor",
    "class": "className"
  },

  prop: function( elem, name, value ) {
    var ret, hooks, notxml,
      nType = elem.nodeType;

    // don't get/set properties on text, comment and attribute nodes
    if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
      return;
    }

    notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

    if ( notxml ) {
      // Fix name and attach hooks
      name = jQuery.propFix[ name ] || name;
      hooks = jQuery.propHooks[ name ];
    }

    if ( value !== undefined ) {
      return hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?
        ret :
        ( elem[ name ] = value );

    } else {
      return hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ?
        ret :
        elem[ name ];
    }
  },

  propHooks: {
    tabIndex: {
      get: function( elem ) {
        // elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
        // http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
        // Use proper attribute retrieval(#12072)
        var tabindex = jQuery.find.attr( elem, "tabindex" );

        return tabindex ?
          parseInt( tabindex, 10 ) :
          rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?
            0 :
            -1;
      }
    }
  }
});

// Hooks for boolean attributes
boolHook = {
  set: function( elem, value, name ) {
    if ( value === false ) {
      // Remove boolean attributes when set to false
      jQuery.removeAttr( elem, name );
    } else if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
      // IE<8 needs the *property* name
      elem.setAttribute( !getSetAttribute && jQuery.propFix[ name ] || name, name );

    // Use defaultChecked and defaultSelected for oldIE
    } else {
      elem[ jQuery.camelCase( "default-" + name ) ] = elem[ name ] = true;
    }

    return name;
  }
};
jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
  var getter = jQuery.expr.attrHandle[ name ] || jQuery.find.attr;

  jQuery.expr.attrHandle[ name ] = getSetInput && getSetAttribute || !ruseDefault.test( name ) ?
    function( elem, name, isXML ) {
      var fn = jQuery.expr.attrHandle[ name ],
        ret = isXML ?
          undefined :
          /* jshint eqeqeq: false */
          (jQuery.expr.attrHandle[ name ] = undefined) !=
            getter( elem, name, isXML ) ?

            name.toLowerCase() :
            null;
      jQuery.expr.attrHandle[ name ] = fn;
      return ret;
    } :
    function( elem, name, isXML ) {
      return isXML ?
        undefined :
        elem[ jQuery.camelCase( "default-" + name ) ] ?
          name.toLowerCase() :
          null;
    };
});

// fix oldIE attroperties
if ( !getSetInput || !getSetAttribute ) {
  jQuery.attrHooks.value = {
    set: function( elem, value, name ) {
      if ( jQuery.nodeName( elem, "input" ) ) {
        // Does not return so that setAttribute is also used
        elem.defaultValue = value;
      } else {
        // Use nodeHook if defined (#1954); otherwise setAttribute is fine
        return nodeHook && nodeHook.set( elem, value, name );
      }
    }
  };
}

// IE6/7 do not support getting/setting some attributes with get/setAttribute
if ( !getSetAttribute ) {

  // Use this for any attribute in IE6/7
  // This fixes almost every IE6/7 issue
  nodeHook = {
    set: function( elem, value, name ) {
      // Set the existing or create a new attribute node
      var ret = elem.getAttributeNode( name );
      if ( !ret ) {
        elem.setAttributeNode(
          (ret = elem.ownerDocument.createAttribute( name ))
        );
      }

      ret.value = value += "";

      // Break association with cloned elements by also using setAttribute (#9646)
      return name === "value" || value === elem.getAttribute( name ) ?
        value :
        undefined;
    }
  };
  jQuery.expr.attrHandle.id = jQuery.expr.attrHandle.name = jQuery.expr.attrHandle.coords =
    // Some attributes are constructed with empty-string values when not defined
    function( elem, name, isXML ) {
      var ret;
      return isXML ?
        undefined :
        (ret = elem.getAttributeNode( name )) && ret.value !== "" ?
          ret.value :
          null;
    };
  jQuery.valHooks.button = {
    get: function( elem, name ) {
      var ret = elem.getAttributeNode( name );
      return ret && ret.specified ?
        ret.value :
        undefined;
    },
    set: nodeHook.set
  };

  // Set contenteditable to false on removals(#10429)
  // Setting to empty string throws an error as an invalid value
  jQuery.attrHooks.contenteditable = {
    set: function( elem, value, name ) {
      nodeHook.set( elem, value === "" ? false : value, name );
    }
  };

  // Set width and height to auto instead of 0 on empty string( Bug #8150 )
  // This is for removals
  jQuery.each([ "width", "height" ], function( i, name ) {
    jQuery.attrHooks[ name ] = {
      set: function( elem, value ) {
        if ( value === "" ) {
          elem.setAttribute( name, "auto" );
          return value;
        }
      }
    };
  });
}


// Some attributes require a special call on IE
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !jQuery.support.hrefNormalized ) {
  // href/src property should get the full normalized URL (#10299/#12915)
  jQuery.each([ "href", "src" ], function( i, name ) {
    jQuery.propHooks[ name ] = {
      get: function( elem ) {
        return elem.getAttribute( name, 4 );
      }
    };
  });
}

if ( !jQuery.support.style ) {
  jQuery.attrHooks.style = {
    get: function( elem ) {
      // Return undefined in the case of empty string
      // Note: IE uppercases css property names, but if we were to .toLowerCase()
      // .cssText, that would destroy case senstitivity in URL's, like in "background"
      return elem.style.cssText || undefined;
    },
    set: function( elem, value ) {
      return ( elem.style.cssText = value + "" );
    }
  };
}

// Safari mis-reports the default selected property of an option
// Accessing the parent's selectedIndex property fixes it
if ( !jQuery.support.optSelected ) {
  jQuery.propHooks.selected = {
    get: function( elem ) {
      var parent = elem.parentNode;

      if ( parent ) {
        parent.selectedIndex;

        // Make sure that it also works with optgroups, see #5701
        if ( parent.parentNode ) {
          parent.parentNode.selectedIndex;
        }
      }
      return null;
    }
  };
}

jQuery.each([
  "tabIndex",
  "readOnly",
  "maxLength",
  "cellSpacing",
  "cellPadding",
  "rowSpan",
  "colSpan",
  "useMap",
  "frameBorder",
  "contentEditable"
], function() {
  jQuery.propFix[ this.toLowerCase() ] = this;
});

// IE6/7 call enctype encoding
if ( !jQuery.support.enctype ) {
  jQuery.propFix.enctype = "encoding";
}

// Radios and checkboxes getter/setter
jQuery.each([ "radio", "checkbox" ], function() {
  jQuery.valHooks[ this ] = {
    set: function( elem, value ) {
      if ( jQuery.isArray( value ) ) {
        return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
      }
    }
  };
  if ( !jQuery.support.checkOn ) {
    jQuery.valHooks[ this ].get = function( elem ) {
      // Support: Webkit
      // "" is returned instead of "on" if a value isn't specified
      return elem.getAttribute("value") === null ? "on" : elem.value;
    };
  }
});
var rformElems = /^(?:input|select|textarea)$/i,
  rkeyEvent = /^key/,
  rmouseEvent = /^(?:mouse|contextmenu)|click/,
  rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
  rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;

function returnTrue() {
  return true;
}

function returnFalse() {
  return false;
}

function safeActiveElement() {
  try {
    return document.activeElement;
  } catch ( err ) { }
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

  global: {},

  add: function( elem, types, handler, data, selector ) {
    var tmp, events, t, handleObjIn,
      special, eventHandle, handleObj,
      handlers, type, namespaces, origType,
      elemData = jQuery._data( elem );

    // Don't attach events to noData or text/comment nodes (but allow plain objects)
    if ( !elemData ) {
      return;
    }

    // Caller can pass in an object of custom data in lieu of the handler
    if ( handler.handler ) {
      handleObjIn = handler;
      handler = handleObjIn.handler;
      selector = handleObjIn.selector;
    }

    // Make sure that the handler has a unique ID, used to find/remove it later
    if ( !handler.guid ) {
      handler.guid = jQuery.guid++;
    }

    // Init the element's event structure and main handler, if this is the first
    if ( !(events = elemData.events) ) {
      events = elemData.events = {};
    }
    if ( !(eventHandle = elemData.handle) ) {
      eventHandle = elemData.handle = function( e ) {
        // Discard the second event of a jQuery.event.trigger() and
        // when an event is called after a page has unloaded
        return typeof jQuery !== core_strundefined && (!e || jQuery.event.triggered !== e.type) ?
          jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
          undefined;
      };
      // Add elem as a property of the handle fn to prevent a memory leak with IE non-native events
      eventHandle.elem = elem;
    }

    // Handle multiple events separated by a space
    types = ( types || "" ).match( core_rnotwhite ) || [""];
    t = types.length;
    while ( t-- ) {
      tmp = rtypenamespace.exec( types[t] ) || [];
      type = origType = tmp[1];
      namespaces = ( tmp[2] || "" ).split( "." ).sort();

      // There *must* be a type, no attaching namespace-only handlers
      if ( !type ) {
        continue;
      }

      // If event changes its type, use the special event handlers for the changed type
      special = jQuery.event.special[ type ] || {};

      // If selector defined, determine special event api type, otherwise given type
      type = ( selector ? special.delegateType : special.bindType ) || type;

      // Update special based on newly reset type
      special = jQuery.event.special[ type ] || {};

      // handleObj is passed to all event handlers
      handleObj = jQuery.extend({
        type: type,
        origType: origType,
        data: data,
        handler: handler,
        guid: handler.guid,
        selector: selector,
        needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
        namespace: namespaces.join(".")
      }, handleObjIn );

      // Init the event handler queue if we're the first
      if ( !(handlers = events[ type ]) ) {
        handlers = events[ type ] = [];
        handlers.delegateCount = 0;

        // Only use addEventListener/attachEvent if the special events handler returns false
        if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
          // Bind the global event handler to the element
          if ( elem.addEventListener ) {
            elem.addEventListener( type, eventHandle, false );

          } else if ( elem.attachEvent ) {
            elem.attachEvent( "on" + type, eventHandle );
          }
        }
      }

      if ( special.add ) {
        special.add.call( elem, handleObj );

        if ( !handleObj.handler.guid ) {
          handleObj.handler.guid = handler.guid;
        }
      }

      // Add to the element's handler list, delegates in front
      if ( selector ) {
        handlers.splice( handlers.delegateCount++, 0, handleObj );
      } else {
        handlers.push( handleObj );
      }

      // Keep track of which events have ever been used, for event optimization
      jQuery.event.global[ type ] = true;
    }

    // Nullify elem to prevent memory leaks in IE
    elem = null;
  },

  // Detach an event or set of events from an element
  remove: function( elem, types, handler, selector, mappedTypes ) {
    var j, handleObj, tmp,
      origCount, t, events,
      special, handlers, type,
      namespaces, origType,
      elemData = jQuery.hasData( elem ) && jQuery._data( elem );

    if ( !elemData || !(events = elemData.events) ) {
      return;
    }

    // Once for each type.namespace in types; type may be omitted
    types = ( types || "" ).match( core_rnotwhite ) || [""];
    t = types.length;
    while ( t-- ) {
      tmp = rtypenamespace.exec( types[t] ) || [];
      type = origType = tmp[1];
      namespaces = ( tmp[2] || "" ).split( "." ).sort();

      // Unbind all events (on this namespace, if provided) for the element
      if ( !type ) {
        for ( type in events ) {
          jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
        }
        continue;
      }

      special = jQuery.event.special[ type ] || {};
      type = ( selector ? special.delegateType : special.bindType ) || type;
      handlers = events[ type ] || [];
      tmp = tmp[2] && new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );

      // Remove matching events
      origCount = j = handlers.length;
      while ( j-- ) {
        handleObj = handlers[ j ];

        if ( ( mappedTypes || origType === handleObj.origType ) &&
          ( !handler || handler.guid === handleObj.guid ) &&
          ( !tmp || tmp.test( handleObj.namespace ) ) &&
          ( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
          handlers.splice( j, 1 );

          if ( handleObj.selector ) {
            handlers.delegateCount--;
          }
          if ( special.remove ) {
            special.remove.call( elem, handleObj );
          }
        }
      }

      // Remove generic event handler if we removed something and no more handlers exist
      // (avoids potential for endless recursion during removal of special event handlers)
      if ( origCount && !handlers.length ) {
        if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
          jQuery.removeEvent( elem, type, elemData.handle );
        }

        delete events[ type ];
      }
    }

    // Remove the expando if it's no longer used
    if ( jQuery.isEmptyObject( events ) ) {
      delete elemData.handle;

      // removeData also checks for emptiness and clears the expando if empty
      // so use it instead of delete
      jQuery._removeData( elem, "events" );
    }
  },

  trigger: function( event, data, elem, onlyHandlers ) {
    var handle, ontype, cur,
      bubbleType, special, tmp, i,
      eventPath = [ elem || document ],
      type = core_hasOwn.call( event, "type" ) ? event.type : event,
      namespaces = core_hasOwn.call( event, "namespace" ) ? event.namespace.split(".") : [];

    cur = tmp = elem = elem || document;

    // Don't do events on text and comment nodes
    if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
      return;
    }

    // focus/blur morphs to focusin/out; ensure we're not firing them right now
    if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
      return;
    }

    if ( type.indexOf(".") >= 0 ) {
      // Namespaced trigger; create a regexp to match event type in handle()
      namespaces = type.split(".");
      type = namespaces.shift();
      namespaces.sort();
    }
    ontype = type.indexOf(":") < 0 && "on" + type;

    // Caller can pass in a jQuery.Event object, Object, or just an event type string
    event = event[ jQuery.expando ] ?
      event :
      new jQuery.Event( type, typeof event === "object" && event );

    // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
    event.isTrigger = onlyHandlers ? 2 : 3;
    event.namespace = namespaces.join(".");
    event.namespace_re = event.namespace ?
      new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" ) :
      null;

    // Clean up the event in case it is being reused
    event.result = undefined;
    if ( !event.target ) {
      event.target = elem;
    }

    // Clone any incoming data and prepend the event, creating the handler arg list
    data = data == null ?
      [ event ] :
      jQuery.makeArray( data, [ event ] );

    // Allow special events to draw outside the lines
    special = jQuery.event.special[ type ] || {};
    if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
      return;
    }

    // Determine event propagation path in advance, per W3C events spec (#9951)
    // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
    if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

      bubbleType = special.delegateType || type;
      if ( !rfocusMorph.test( bubbleType + type ) ) {
        cur = cur.parentNode;
      }
      for ( ; cur; cur = cur.parentNode ) {
        eventPath.push( cur );
        tmp = cur;
      }

      // Only add window if we got to document (e.g., not plain obj or detached DOM)
      if ( tmp === (elem.ownerDocument || document) ) {
        eventPath.push( tmp.defaultView || tmp.parentWindow || window );
      }
    }

    // Fire handlers on the event path
    i = 0;
    while ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {

      event.type = i > 1 ?
        bubbleType :
        special.bindType || type;

      // jQuery handler
      handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] && jQuery._data( cur, "handle" );
      if ( handle ) {
        handle.apply( cur, data );
      }

      // Native handler
      handle = ontype && cur[ ontype ];
      if ( handle && jQuery.acceptData( cur ) && handle.apply && handle.apply( cur, data ) === false ) {
        event.preventDefault();
      }
    }
    event.type = type;

    // If nobody prevented the default action, do it now
    if ( !onlyHandlers && !event.isDefaultPrevented() ) {

      if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&
        jQuery.acceptData( elem ) ) {

        // Call a native DOM method on the target with the same name name as the event.
        // Can't use an .isFunction() check here because IE6/7 fails that test.
        // Don't do default actions on window, that's where global variables be (#6170)
        if ( ontype && elem[ type ] && !jQuery.isWindow( elem ) ) {

          // Don't re-trigger an onFOO event when we call its FOO() method
          tmp = elem[ ontype ];

          if ( tmp ) {
            elem[ ontype ] = null;
          }

          // Prevent re-triggering of the same event, since we already bubbled it above
          jQuery.event.triggered = type;
          try {
            elem[ type ]();
          } catch ( e ) {
            // IE<9 dies on focus/blur to hidden element (#1486,#12518)
            // only reproducible on winXP IE8 native, not IE9 in IE8 mode
          }
          jQuery.event.triggered = undefined;

          if ( tmp ) {
            elem[ ontype ] = tmp;
          }
        }
      }
    }

    return event.result;
  },

  dispatch: function( event ) {

    // Make a writable jQuery.Event from the native event object
    event = jQuery.event.fix( event );

    var i, ret, handleObj, matched, j,
      handlerQueue = [],
      args = core_slice.call( arguments ),
      handlers = ( jQuery._data( this, "events" ) || {} )[ event.type ] || [],
      special = jQuery.event.special[ event.type ] || {};

    // Use the fix-ed jQuery.Event rather than the (read-only) native event
    args[0] = event;
    event.delegateTarget = this;

    // Call the preDispatch hook for the mapped type, and let it bail if desired
    if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
      return;
    }

    // Determine handlers
    handlerQueue = jQuery.event.handlers.call( this, event, handlers );

    // Run delegates first; they may want to stop propagation beneath us
    i = 0;
    while ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {
      event.currentTarget = matched.elem;

      j = 0;
      while ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {

        // Triggered event must either 1) have no namespace, or
        // 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
        if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {

          event.handleObj = handleObj;
          event.data = handleObj.data;

          ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
              .apply( matched.elem, args );

          if ( ret !== undefined ) {
            if ( (event.result = ret) === false ) {
              event.preventDefault();
              event.stopPropagation();
            }
          }
        }
      }
    }

    // Call the postDispatch hook for the mapped type
    if ( special.postDispatch ) {
      special.postDispatch.call( this, event );
    }

    return event.result;
  },

  handlers: function( event, handlers ) {
    var sel, handleObj, matches, i,
      handlerQueue = [],
      delegateCount = handlers.delegateCount,
      cur = event.target;

    // Find delegate handlers
    // Black-hole SVG <use> instance trees (#13180)
    // Avoid non-left-click bubbling in Firefox (#3861)
    if ( delegateCount && cur.nodeType && (!event.button || event.type !== "click") ) {

      /* jshint eqeqeq: false */
      for ( ; cur != this; cur = cur.parentNode || this ) {
        /* jshint eqeqeq: true */

        // Don't check non-elements (#13208)
        // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
        if ( cur.nodeType === 1 && (cur.disabled !== true || event.type !== "click") ) {
          matches = [];
          for ( i = 0; i < delegateCount; i++ ) {
            handleObj = handlers[ i ];

            // Don't conflict with Object.prototype properties (#13203)
            sel = handleObj.selector + " ";

            if ( matches[ sel ] === undefined ) {
              matches[ sel ] = handleObj.needsContext ?
                jQuery( sel, this ).index( cur ) >= 0 :
                jQuery.find( sel, this, null, [ cur ] ).length;
            }
            if ( matches[ sel ] ) {
              matches.push( handleObj );
            }
          }
          if ( matches.length ) {
            handlerQueue.push({ elem: cur, handlers: matches });
          }
        }
      }
    }

    // Add the remaining (directly-bound) handlers
    if ( delegateCount < handlers.length ) {
      handlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });
    }

    return handlerQueue;
  },

  fix: function( event ) {
    if ( event[ jQuery.expando ] ) {
      return event;
    }

    // Create a writable copy of the event object and normalize some properties
    var i, prop, copy,
      type = event.type,
      originalEvent = event,
      fixHook = this.fixHooks[ type ];

    if ( !fixHook ) {
      this.fixHooks[ type ] = fixHook =
        rmouseEvent.test( type ) ? this.mouseHooks :
        rkeyEvent.test( type ) ? this.keyHooks :
        {};
    }
    copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

    event = new jQuery.Event( originalEvent );

    i = copy.length;
    while ( i-- ) {
      prop = copy[ i ];
      event[ prop ] = originalEvent[ prop ];
    }

    // Support: IE<9
    // Fix target property (#1925)
    if ( !event.target ) {
      event.target = originalEvent.srcElement || document;
    }

    // Support: Chrome 23+, Safari?
    // Target should not be a text node (#504, #13143)
    if ( event.target.nodeType === 3 ) {
      event.target = event.target.parentNode;
    }

    // Support: IE<9
    // For mouse/key events, metaKey==false if it's undefined (#3368, #11328)
    event.metaKey = !!event.metaKey;

    return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
  },

  // Includes some event props shared by KeyEvent and MouseEvent
  props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

  fixHooks: {},

  keyHooks: {
    props: "char charCode key keyCode".split(" "),
    filter: function( event, original ) {

      // Add which for key events
      if ( event.which == null ) {
        event.which = original.charCode != null ? original.charCode : original.keyCode;
      }

      return event;
    }
  },

  mouseHooks: {
    props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
    filter: function( event, original ) {
      var body, eventDoc, doc,
        button = original.button,
        fromElement = original.fromElement;

      // Calculate pageX/Y if missing and clientX/Y available
      if ( event.pageX == null && original.clientX != null ) {
        eventDoc = event.target.ownerDocument || document;
        doc = eventDoc.documentElement;
        body = eventDoc.body;

        event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
        event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
      }

      // Add relatedTarget, if necessary
      if ( !event.relatedTarget && fromElement ) {
        event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;
      }

      // Add which for click: 1 === left; 2 === middle; 3 === right
      // Note: button is not normalized, so don't use it
      if ( !event.which && button !== undefined ) {
        event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
      }

      return event;
    }
  },

  special: {
    load: {
      // Prevent triggered image.load events from bubbling to window.load
      noBubble: true
    },
    focus: {
      // Fire native event if possible so blur/focus sequence is correct
      trigger: function() {
        if ( this !== safeActiveElement() && this.focus ) {
          try {
            this.focus();
            return false;
          } catch ( e ) {
            // Support: IE<9
            // If we error on focus to hidden element (#1486, #12518),
            // let .trigger() run the handlers
          }
        }
      },
      delegateType: "focusin"
    },
    blur: {
      trigger: function() {
        if ( this === safeActiveElement() && this.blur ) {
          this.blur();
          return false;
        }
      },
      delegateType: "focusout"
    },
    click: {
      // For checkbox, fire native event so checked state will be right
      trigger: function() {
        if ( jQuery.nodeName( this, "input" ) && this.type === "checkbox" && this.click ) {
          this.click();
          return false;
        }
      },

      // For cross-browser consistency, don't fire native .click() on links
      _default: function( event ) {
        return jQuery.nodeName( event.target, "a" );
      }
    },

    beforeunload: {
      postDispatch: function( event ) {

        // Even when returnValue equals to undefined Firefox will still show alert
        if ( event.result !== undefined ) {
          event.originalEvent.returnValue = event.result;
        }
      }
    }
  },

  simulate: function( type, elem, event, bubble ) {
    // Piggyback on a donor event to simulate a different one.
    // Fake originalEvent to avoid donor's stopPropagation, but if the
    // simulated event prevents default then we do the same on the donor.
    var e = jQuery.extend(
      new jQuery.Event(),
      event,
      {
        type: type,
        isSimulated: true,
        originalEvent: {}
      }
    );
    if ( bubble ) {
      jQuery.event.trigger( e, null, elem );
    } else {
      jQuery.event.dispatch.call( elem, e );
    }
    if ( e.isDefaultPrevented() ) {
      event.preventDefault();
    }
  }
};

jQuery.removeEvent = document.removeEventListener ?
  function( elem, type, handle ) {
    if ( elem.removeEventListener ) {
      elem.removeEventListener( type, handle, false );
    }
  } :
  function( elem, type, handle ) {
    var name = "on" + type;

    if ( elem.detachEvent ) {

      // #8545, #7054, preventing memory leaks for custom events in IE6-8
      // detachEvent needed property on element, by name of that event, to properly expose it to GC
      if ( typeof elem[ name ] === core_strundefined ) {
        elem[ name ] = null;
      }

      elem.detachEvent( name, handle );
    }
  };

jQuery.Event = function( src, props ) {
  // Allow instantiation without the 'new' keyword
  if ( !(this instanceof jQuery.Event) ) {
    return new jQuery.Event( src, props );
  }

  // Event object
  if ( src && src.type ) {
    this.originalEvent = src;
    this.type = src.type;

    // Events bubbling up the document may have been marked as prevented
    // by a handler lower down the tree; reflect the correct value.
    this.isDefaultPrevented = ( src.defaultPrevented || src.returnValue === false ||
      src.getPreventDefault && src.getPreventDefault() ) ? returnTrue : returnFalse;

  // Event type
  } else {
    this.type = src;
  }

  // Put explicitly provided properties onto the event object
  if ( props ) {
    jQuery.extend( this, props );
  }

  // Create a timestamp if incoming event doesn't have one
  this.timeStamp = src && src.timeStamp || jQuery.now();

  // Mark it as fixed
  this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
  isDefaultPrevented: returnFalse,
  isPropagationStopped: returnFalse,
  isImmediatePropagationStopped: returnFalse,

  preventDefault: function() {
    var e = this.originalEvent;

    this.isDefaultPrevented = returnTrue;
    if ( !e ) {
      return;
    }

    // If preventDefault exists, run it on the original event
    if ( e.preventDefault ) {
      e.preventDefault();

    // Support: IE
    // Otherwise set the returnValue property of the original event to false
    } else {
      e.returnValue = false;
    }
  },
  stopPropagation: function() {
    var e = this.originalEvent;

    this.isPropagationStopped = returnTrue;
    if ( !e ) {
      return;
    }
    // If stopPropagation exists, run it on the original event
    if ( e.stopPropagation ) {
      e.stopPropagation();
    }

    // Support: IE
    // Set the cancelBubble property of the original event to true
    e.cancelBubble = true;
  },
  stopImmediatePropagation: function() {
    this.isImmediatePropagationStopped = returnTrue;
    this.stopPropagation();
  }
};

// Create mouseenter/leave events using mouseover/out and event-time checks
jQuery.each({
  mouseenter: "mouseover",
  mouseleave: "mouseout"
}, function( orig, fix ) {
  jQuery.event.special[ orig ] = {
    delegateType: fix,
    bindType: fix,

    handle: function( event ) {
      var ret,
        target = this,
        related = event.relatedTarget,
        handleObj = event.handleObj;

      // For mousenter/leave call the handler if related is outside the target.
      // NB: No relatedTarget if the mouse left/entered the browser window
      if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
        event.type = handleObj.origType;
        ret = handleObj.handler.apply( this, arguments );
        event.type = fix;
      }
      return ret;
    }
  };
});

// IE submit delegation
if ( !jQuery.support.submitBubbles ) {

  jQuery.event.special.submit = {
    setup: function() {
      // Only need this for delegated form submit events
      if ( jQuery.nodeName( this, "form" ) ) {
        return false;
      }

      // Lazy-add a submit handler when a descendant form may potentially be submitted
      jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
        // Node name check avoids a VML-related crash in IE (#9807)
        var elem = e.target,
          form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ? elem.form : undefined;
        if ( form && !jQuery._data( form, "submitBubbles" ) ) {
          jQuery.event.add( form, "submit._submit", function( event ) {
            event._submit_bubble = true;
          });
          jQuery._data( form, "submitBubbles", true );
        }
      });
      // return undefined since we don't need an event listener
    },

    postDispatch: function( event ) {
      // If form was submitted by the user, bubble the event up the tree
      if ( event._submit_bubble ) {
        delete event._submit_bubble;
        if ( this.parentNode && !event.isTrigger ) {
          jQuery.event.simulate( "submit", this.parentNode, event, true );
        }
      }
    },

    teardown: function() {
      // Only need this for delegated form submit events
      if ( jQuery.nodeName( this, "form" ) ) {
        return false;
      }

      // Remove delegated handlers; cleanData eventually reaps submit handlers attached above
      jQuery.event.remove( this, "._submit" );
    }
  };
}

// IE change delegation and checkbox/radio fix
if ( !jQuery.support.changeBubbles ) {

  jQuery.event.special.change = {

    setup: function() {

      if ( rformElems.test( this.nodeName ) ) {
        // IE doesn't fire change on a check/radio until blur; trigger it on click
        // after a propertychange. Eat the blur-change in special.change.handle.
        // This still fires onchange a second time for check/radio after blur.
        if ( this.type === "checkbox" || this.type === "radio" ) {
          jQuery.event.add( this, "propertychange._change", function( event ) {
            if ( event.originalEvent.propertyName === "checked" ) {
              this._just_changed = true;
            }
          });
          jQuery.event.add( this, "click._change", function( event ) {
            if ( this._just_changed && !event.isTrigger ) {
              this._just_changed = false;
            }
            // Allow triggered, simulated change events (#11500)
            jQuery.event.simulate( "change", this, event, true );
          });
        }
        return false;
      }
      // Delegated event; lazy-add a change handler on descendant inputs
      jQuery.event.add( this, "beforeactivate._change", function( e ) {
        var elem = e.target;

        if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, "changeBubbles" ) ) {
          jQuery.event.add( elem, "change._change", function( event ) {
            if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
              jQuery.event.simulate( "change", this.parentNode, event, true );
            }
          });
          jQuery._data( elem, "changeBubbles", true );
        }
      });
    },

    handle: function( event ) {
      var elem = event.target;

      // Swallow native change events from checkbox/radio, we already triggered them above
      if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== "radio" && elem.type !== "checkbox") ) {
        return event.handleObj.handler.apply( this, arguments );
      }
    },

    teardown: function() {
      jQuery.event.remove( this, "._change" );

      return !rformElems.test( this.nodeName );
    }
  };
}

// Create "bubbling" focus and blur events
if ( !jQuery.support.focusinBubbles ) {
  jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

    // Attach a single capturing handler while someone wants focusin/focusout
    var attaches = 0,
      handler = function( event ) {
        jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
      };

    jQuery.event.special[ fix ] = {
      setup: function() {
        if ( attaches++ === 0 ) {
          document.addEventListener( orig, handler, true );
        }
      },
      teardown: function() {
        if ( --attaches === 0 ) {
          document.removeEventListener( orig, handler, true );
        }
      }
    };
  });
}

jQuery.fn.extend({

  on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
    var type, origFn;

    // Types can be a map of types/handlers
    if ( typeof types === "object" ) {
      // ( types-Object, selector, data )
      if ( typeof selector !== "string" ) {
        // ( types-Object, data )
        data = data || selector;
        selector = undefined;
      }
      for ( type in types ) {
        this.on( type, selector, data, types[ type ], one );
      }
      return this;
    }

    if ( data == null && fn == null ) {
      // ( types, fn )
      fn = selector;
      data = selector = undefined;
    } else if ( fn == null ) {
      if ( typeof selector === "string" ) {
        // ( types, selector, fn )
        fn = data;
        data = undefined;
      } else {
        // ( types, data, fn )
        fn = data;
        data = selector;
        selector = undefined;
      }
    }
    if ( fn === false ) {
      fn = returnFalse;
    } else if ( !fn ) {
      return this;
    }

    if ( one === 1 ) {
      origFn = fn;
      fn = function( event ) {
        // Can use an empty set, since event contains the info
        jQuery().off( event );
        return origFn.apply( this, arguments );
      };
      // Use same guid so caller can remove using origFn
      fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
    }
    return this.each( function() {
      jQuery.event.add( this, types, fn, data, selector );
    });
  },
  one: function( types, selector, data, fn ) {
    return this.on( types, selector, data, fn, 1 );
  },
  off: function( types, selector, fn ) {
    var handleObj, type;
    if ( types && types.preventDefault && types.handleObj ) {
      // ( event )  dispatched jQuery.Event
      handleObj = types.handleObj;
      jQuery( types.delegateTarget ).off(
        handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
        handleObj.selector,
        handleObj.handler
      );
      return this;
    }
    if ( typeof types === "object" ) {
      // ( types-object [, selector] )
      for ( type in types ) {
        this.off( type, selector, types[ type ] );
      }
      return this;
    }
    if ( selector === false || typeof selector === "function" ) {
      // ( types [, fn] )
      fn = selector;
      selector = undefined;
    }
    if ( fn === false ) {
      fn = returnFalse;
    }
    return this.each(function() {
      jQuery.event.remove( this, types, fn, selector );
    });
  },

  trigger: function( type, data ) {
    return this.each(function() {
      jQuery.event.trigger( type, data, this );
    });
  },
  triggerHandler: function( type, data ) {
    var elem = this[0];
    if ( elem ) {
      return jQuery.event.trigger( type, data, elem, true );
    }
  }
});
var isSimple = /^.[^:#\[\.,]*$/,
  rparentsprev = /^(?:parents|prev(?:Until|All))/,
  rneedsContext = jQuery.expr.match.needsContext,
  // methods guaranteed to produce a unique set when starting from a unique set
  guaranteedUnique = {
    children: true,
    contents: true,
    next: true,
    prev: true
  };

jQuery.fn.extend({
  find: function( selector ) {
    var i,
      ret = [],
      self = this,
      len = self.length;

    if ( typeof selector !== "string" ) {
      return this.pushStack( jQuery( selector ).filter(function() {
        for ( i = 0; i < len; i++ ) {
          if ( jQuery.contains( self[ i ], this ) ) {
            return true;
          }
        }
      }) );
    }

    for ( i = 0; i < len; i++ ) {
      jQuery.find( selector, self[ i ], ret );
    }

    // Needed because $( selector, context ) becomes $( context ).find( selector )
    ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
    ret.selector = this.selector ? this.selector + " " + selector : selector;
    return ret;
  },

  has: function( target ) {
    var i,
      targets = jQuery( target, this ),
      len = targets.length;

    return this.filter(function() {
      for ( i = 0; i < len; i++ ) {
        if ( jQuery.contains( this, targets[i] ) ) {
          return true;
        }
      }
    });
  },

  not: function( selector ) {
    return this.pushStack( winnow(this, selector || [], true) );
  },

  filter: function( selector ) {
    return this.pushStack( winnow(this, selector || [], false) );
  },

  is: function( selector ) {
    return !!winnow(
      this,

      // If this is a positional/relative selector, check membership in the returned set
      // so $("p:first").is("p:last") won't return true for a doc with two "p".
      typeof selector === "string" && rneedsContext.test( selector ) ?
        jQuery( selector ) :
        selector || [],
      false
    ).length;
  },

  closest: function( selectors, context ) {
    var cur,
      i = 0,
      l = this.length,
      ret = [],
      pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
        jQuery( selectors, context || this.context ) :
        0;

    for ( ; i < l; i++ ) {
      for ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {
        // Always skip document fragments
        if ( cur.nodeType < 11 && (pos ?
          pos.index(cur) > -1 :

          // Don't pass non-elements to Sizzle
          cur.nodeType === 1 &&
            jQuery.find.matchesSelector(cur, selectors)) ) {

          cur = ret.push( cur );
          break;
        }
      }
    }

    return this.pushStack( ret.length > 1 ? jQuery.unique( ret ) : ret );
  },

  // Determine the position of an element within
  // the matched set of elements
  index: function( elem ) {

    // No argument, return index in parent
    if ( !elem ) {
      return ( this[0] && this[0].parentNode ) ? this.first().prevAll().length : -1;
    }

    // index in selector
    if ( typeof elem === "string" ) {
      return jQuery.inArray( this[0], jQuery( elem ) );
    }

    // Locate the position of the desired element
    return jQuery.inArray(
      // If it receives a jQuery object, the first element is used
      elem.jquery ? elem[0] : elem, this );
  },

  add: function( selector, context ) {
    var set = typeof selector === "string" ?
        jQuery( selector, context ) :
        jQuery.makeArray( selector && selector.nodeType ? [ selector ] : selector ),
      all = jQuery.merge( this.get(), set );

    return this.pushStack( jQuery.unique(all) );
  },

  addBack: function( selector ) {
    return this.add( selector == null ?
      this.prevObject : this.prevObject.filter(selector)
    );
  }
});

function sibling( cur, dir ) {
  do {
    cur = cur[ dir ];
  } while ( cur && cur.nodeType !== 1 );

  return cur;
}

jQuery.each({
  parent: function( elem ) {
    var parent = elem.parentNode;
    return parent && parent.nodeType !== 11 ? parent : null;
  },
  parents: function( elem ) {
    return jQuery.dir( elem, "parentNode" );
  },
  parentsUntil: function( elem, i, until ) {
    return jQuery.dir( elem, "parentNode", until );
  },
  next: function( elem ) {
    return sibling( elem, "nextSibling" );
  },
  prev: function( elem ) {
    return sibling( elem, "previousSibling" );
  },
  nextAll: function( elem ) {
    return jQuery.dir( elem, "nextSibling" );
  },
  prevAll: function( elem ) {
    return jQuery.dir( elem, "previousSibling" );
  },
  nextUntil: function( elem, i, until ) {
    return jQuery.dir( elem, "nextSibling", until );
  },
  prevUntil: function( elem, i, until ) {
    return jQuery.dir( elem, "previousSibling", until );
  },
  siblings: function( elem ) {
    return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
  },
  children: function( elem ) {
    return jQuery.sibling( elem.firstChild );
  },
  contents: function( elem ) {
    return jQuery.nodeName( elem, "iframe" ) ?
      elem.contentDocument || elem.contentWindow.document :
      jQuery.merge( [], elem.childNodes );
  }
}, function( name, fn ) {
  jQuery.fn[ name ] = function( until, selector ) {
    var ret = jQuery.map( this, fn, until );

    if ( name.slice( -5 ) !== "Until" ) {
      selector = until;
    }

    if ( selector && typeof selector === "string" ) {
      ret = jQuery.filter( selector, ret );
    }

    if ( this.length > 1 ) {
      // Remove duplicates
      if ( !guaranteedUnique[ name ] ) {
        ret = jQuery.unique( ret );
      }

      // Reverse order for parents* and prev-derivatives
      if ( rparentsprev.test( name ) ) {
        ret = ret.reverse();
      }
    }

    return this.pushStack( ret );
  };
});

jQuery.extend({
  filter: function( expr, elems, not ) {
    var elem = elems[ 0 ];

    if ( not ) {
      expr = ":not(" + expr + ")";
    }

    return elems.length === 1 && elem.nodeType === 1 ?
      jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
      jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
        return elem.nodeType === 1;
      }));
  },

  dir: function( elem, dir, until ) {
    var matched = [],
      cur = elem[ dir ];

    while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {
      if ( cur.nodeType === 1 ) {
        matched.push( cur );
      }
      cur = cur[dir];
    }
    return matched;
  },

  sibling: function( n, elem ) {
    var r = [];

    for ( ; n; n = n.nextSibling ) {
      if ( n.nodeType === 1 && n !== elem ) {
        r.push( n );
      }
    }

    return r;
  }
});

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
  if ( jQuery.isFunction( qualifier ) ) {
    return jQuery.grep( elements, function( elem, i ) {
      /* jshint -W018 */
      return !!qualifier.call( elem, i, elem ) !== not;
    });

  }

  if ( qualifier.nodeType ) {
    return jQuery.grep( elements, function( elem ) {
      return ( elem === qualifier ) !== not;
    });

  }

  if ( typeof qualifier === "string" ) {
    if ( isSimple.test( qualifier ) ) {
      return jQuery.filter( qualifier, elements, not );
    }

    qualifier = jQuery.filter( qualifier, elements );
  }

  return jQuery.grep( elements, function( elem ) {
    return ( jQuery.inArray( elem, qualifier ) >= 0 ) !== not;
  });
}
function createSafeFragment( document ) {
  var list = nodeNames.split( "|" ),
    safeFrag = document.createDocumentFragment();

  if ( safeFrag.createElement ) {
    while ( list.length ) {
      safeFrag.createElement(
        list.pop()
      );
    }
  }
  return safeFrag;
}

var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|" +
    "header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
  rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g,
  rnoshimcache = new RegExp("<(?:" + nodeNames + ")[\\s/>]", "i"),
  rleadingWhitespace = /^\s+/,
  rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
  rtagName = /<([\w:]+)/,
  rtbody = /<tbody/i,
  rhtml = /<|&#?\w+;/,
  rnoInnerhtml = /<(?:script|style|link)/i,
  manipulation_rcheckableType = /^(?:checkbox|radio)$/i,
  // checked="checked" or checked
  rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
  rscriptType = /^$|\/(?:java|ecma)script/i,
  rscriptTypeMasked = /^true\/(.*)/,
  rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,

  // We have to close these tags to support XHTML (#13200)
  wrapMap = {
    option: [ 1, "<select multiple='multiple'>", "</select>" ],
    legend: [ 1, "<fieldset>", "</fieldset>" ],
    area: [ 1, "<map>", "</map>" ],
    param: [ 1, "<object>", "</object>" ],
    thead: [ 1, "<table>", "</table>" ],
    tr: [ 2, "<table><tbody>", "</tbody></table>" ],
    col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
    td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

    // IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,
    // unless wrapped in a div with non-breaking characters in front of it.
    _default: jQuery.support.htmlSerialize ? [ 0, "", "" ] : [ 1, "X<div>", "</div>"  ]
  },
  safeFragment = createSafeFragment( document ),
  fragmentDiv = safeFragment.appendChild( document.createElement("div") );

wrapMap.optgroup = wrapMap.option;
wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

jQuery.fn.extend({
  text: function( value ) {
    return jQuery.access( this, function( value ) {
      return value === undefined ?
        jQuery.text( this ) :
        this.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );
    }, null, value, arguments.length );
  },

  append: function() {
    return this.domManip( arguments, function( elem ) {
      if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
        var target = manipulationTarget( this, elem );
        target.appendChild( elem );
      }
    });
  },

  prepend: function() {
    return this.domManip( arguments, function( elem ) {
      if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
        var target = manipulationTarget( this, elem );
        target.insertBefore( elem, target.firstChild );
      }
    });
  },

  before: function() {
    return this.domManip( arguments, function( elem ) {
      if ( this.parentNode ) {
        this.parentNode.insertBefore( elem, this );
      }
    });
  },

  after: function() {
    return this.domManip( arguments, function( elem ) {
      if ( this.parentNode ) {
        this.parentNode.insertBefore( elem, this.nextSibling );
      }
    });
  },

  // keepData is for internal use only--do not document
  remove: function( selector, keepData ) {
    var elem,
      elems = selector ? jQuery.filter( selector, this ) : this,
      i = 0;

    for ( ; (elem = elems[i]) != null; i++ ) {

      if ( !keepData && elem.nodeType === 1 ) {
        jQuery.cleanData( getAll( elem ) );
      }

      if ( elem.parentNode ) {
        if ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {
          setGlobalEval( getAll( elem, "script" ) );
        }
        elem.parentNode.removeChild( elem );
      }
    }

    return this;
  },

  empty: function() {
    var elem,
      i = 0;

    for ( ; (elem = this[i]) != null; i++ ) {
      // Remove element nodes and prevent memory leaks
      if ( elem.nodeType === 1 ) {
        jQuery.cleanData( getAll( elem, false ) );
      }

      // Remove any remaining nodes
      while ( elem.firstChild ) {
        elem.removeChild( elem.firstChild );
      }

      // If this is a select, ensure that it displays empty (#12336)
      // Support: IE<9
      if ( elem.options && jQuery.nodeName( elem, "select" ) ) {
        elem.options.length = 0;
      }
    }

    return this;
  },

  clone: function( dataAndEvents, deepDataAndEvents ) {
    dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
    deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

    return this.map( function () {
      return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
    });
  },

  html: function( value ) {
    return jQuery.access( this, function( value ) {
      var elem = this[0] || {},
        i = 0,
        l = this.length;

      if ( value === undefined ) {
        return elem.nodeType === 1 ?
          elem.innerHTML.replace( rinlinejQuery, "" ) :
          undefined;
      }

      // See if we can take a shortcut and just use innerHTML
      if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
        ( jQuery.support.htmlSerialize || !rnoshimcache.test( value )  ) &&
        ( jQuery.support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
        !wrapMap[ ( rtagName.exec( value ) || ["", ""] )[1].toLowerCase() ] ) {

        value = value.replace( rxhtmlTag, "<$1></$2>" );

        try {
          for (; i < l; i++ ) {
            // Remove element nodes and prevent memory leaks
            elem = this[i] || {};
            if ( elem.nodeType === 1 ) {
              jQuery.cleanData( getAll( elem, false ) );
              elem.innerHTML = value;
            }
          }

          elem = 0;

        // If using innerHTML throws an exception, use the fallback method
        } catch(e) {}
      }

      if ( elem ) {
        this.empty().append( value );
      }
    }, null, value, arguments.length );
  },

  replaceWith: function() {
    var
      // Snapshot the DOM in case .domManip sweeps something relevant into its fragment
      args = jQuery.map( this, function( elem ) {
        return [ elem.nextSibling, elem.parentNode ];
      }),
      i = 0;

    // Make the changes, replacing each context element with the new content
    this.domManip( arguments, function( elem ) {
      var next = args[ i++ ],
        parent = args[ i++ ];

      if ( parent ) {
        // Don't use the snapshot next if it has moved (#13810)
        if ( next && next.parentNode !== parent ) {
          next = this.nextSibling;
        }
        jQuery( this ).remove();
        parent.insertBefore( elem, next );
      }
    // Allow new content to include elements from the context set
    }, true );

    // Force removal if there was no new content (e.g., from empty arguments)
    return i ? this : this.remove();
  },

  detach: function( selector ) {
    return this.remove( selector, true );
  },

  domManip: function( args, callback, allowIntersection ) {

    // Flatten any nested arrays
    args = core_concat.apply( [], args );

    var first, node, hasScripts,
      scripts, doc, fragment,
      i = 0,
      l = this.length,
      set = this,
      iNoClone = l - 1,
      value = args[0],
      isFunction = jQuery.isFunction( value );

    // We can't cloneNode fragments that contain checked, in WebKit
    if ( isFunction || !( l <= 1 || typeof value !== "string" || jQuery.support.checkClone || !rchecked.test( value ) ) ) {
      return this.each(function( index ) {
        var self = set.eq( index );
        if ( isFunction ) {
          args[0] = value.call( this, index, self.html() );
        }
        self.domManip( args, callback, allowIntersection );
      });
    }

    if ( l ) {
      fragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, !allowIntersection && this );
      first = fragment.firstChild;

      if ( fragment.childNodes.length === 1 ) {
        fragment = first;
      }

      if ( first ) {
        scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
        hasScripts = scripts.length;

        // Use the original fragment for the last item instead of the first because it can end up
        // being emptied incorrectly in certain situations (#8070).
        for ( ; i < l; i++ ) {
          node = fragment;

          if ( i !== iNoClone ) {
            node = jQuery.clone( node, true, true );

            // Keep references to cloned scripts for later restoration
            if ( hasScripts ) {
              jQuery.merge( scripts, getAll( node, "script" ) );
            }
          }

          callback.call( this[i], node, i );
        }

        if ( hasScripts ) {
          doc = scripts[ scripts.length - 1 ].ownerDocument;

          // Reenable scripts
          jQuery.map( scripts, restoreScript );

          // Evaluate executable scripts on first document insertion
          for ( i = 0; i < hasScripts; i++ ) {
            node = scripts[ i ];
            if ( rscriptType.test( node.type || "" ) &&
              !jQuery._data( node, "globalEval" ) && jQuery.contains( doc, node ) ) {

              if ( node.src ) {
                // Hope ajax is available...
                jQuery._evalUrl( node.src );
              } else {
                jQuery.globalEval( ( node.text || node.textContent || node.innerHTML || "" ).replace( rcleanScript, "" ) );
              }
            }
          }
        }

        // Fix #11809: Avoid leaking memory
        fragment = first = null;
      }
    }

    return this;
  }
});

// Support: IE<8
// Manipulating tables requires a tbody
function manipulationTarget( elem, content ) {
  return jQuery.nodeName( elem, "table" ) &&
    jQuery.nodeName( content.nodeType === 1 ? content : content.firstChild, "tr" ) ?

    elem.getElementsByTagName("tbody")[0] ||
      elem.appendChild( elem.ownerDocument.createElement("tbody") ) :
    elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
  elem.type = (jQuery.find.attr( elem, "type" ) !== null) + "/" + elem.type;
  return elem;
}
function restoreScript( elem ) {
  var match = rscriptTypeMasked.exec( elem.type );
  if ( match ) {
    elem.type = match[1];
  } else {
    elem.removeAttribute("type");
  }
  return elem;
}

// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
  var elem,
    i = 0;
  for ( ; (elem = elems[i]) != null; i++ ) {
    jQuery._data( elem, "globalEval", !refElements || jQuery._data( refElements[i], "globalEval" ) );
  }
}

function cloneCopyEvent( src, dest ) {

  if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
    return;
  }

  var type, i, l,
    oldData = jQuery._data( src ),
    curData = jQuery._data( dest, oldData ),
    events = oldData.events;

  if ( events ) {
    delete curData.handle;
    curData.events = {};

    for ( type in events ) {
      for ( i = 0, l = events[ type ].length; i < l; i++ ) {
        jQuery.event.add( dest, type, events[ type ][ i ] );
      }
    }
  }

  // make the cloned public data object a copy from the original
  if ( curData.data ) {
    curData.data = jQuery.extend( {}, curData.data );
  }
}

function fixCloneNodeIssues( src, dest ) {
  var nodeName, e, data;

  // We do not need to do anything for non-Elements
  if ( dest.nodeType !== 1 ) {
    return;
  }

  nodeName = dest.nodeName.toLowerCase();

  // IE6-8 copies events bound via attachEvent when using cloneNode.
  if ( !jQuery.support.noCloneEvent && dest[ jQuery.expando ] ) {
    data = jQuery._data( dest );

    for ( e in data.events ) {
      jQuery.removeEvent( dest, e, data.handle );
    }

    // Event data gets referenced instead of copied if the expando gets copied too
    dest.removeAttribute( jQuery.expando );
  }

  // IE blanks contents when cloning scripts, and tries to evaluate newly-set text
  if ( nodeName === "script" && dest.text !== src.text ) {
    disableScript( dest ).text = src.text;
    restoreScript( dest );

  // IE6-10 improperly clones children of object elements using classid.
  // IE10 throws NoModificationAllowedError if parent is null, #12132.
  } else if ( nodeName === "object" ) {
    if ( dest.parentNode ) {
      dest.outerHTML = src.outerHTML;
    }

    // This path appears unavoidable for IE9. When cloning an object
    // element in IE9, the outerHTML strategy above is not sufficient.
    // If the src has innerHTML and the destination does not,
    // copy the src.innerHTML into the dest.innerHTML. #10324
    if ( jQuery.support.html5Clone && ( src.innerHTML && !jQuery.trim(dest.innerHTML) ) ) {
      dest.innerHTML = src.innerHTML;
    }

  } else if ( nodeName === "input" && manipulation_rcheckableType.test( src.type ) ) {
    // IE6-8 fails to persist the checked state of a cloned checkbox
    // or radio button. Worse, IE6-7 fail to give the cloned element
    // a checked appearance if the defaultChecked value isn't also set

    dest.defaultChecked = dest.checked = src.checked;

    // IE6-7 get confused and end up setting the value of a cloned
    // checkbox/radio button to an empty string instead of "on"
    if ( dest.value !== src.value ) {
      dest.value = src.value;
    }

  // IE6-8 fails to return the selected option to the default selected
  // state when cloning options
  } else if ( nodeName === "option" ) {
    dest.defaultSelected = dest.selected = src.defaultSelected;

  // IE6-8 fails to set the defaultValue to the correct value when
  // cloning other types of input fields
  } else if ( nodeName === "input" || nodeName === "textarea" ) {
    dest.defaultValue = src.defaultValue;
  }
}

jQuery.each({
  appendTo: "append",
  prependTo: "prepend",
  insertBefore: "before",
  insertAfter: "after",
  replaceAll: "replaceWith"
}, function( name, original ) {
  jQuery.fn[ name ] = function( selector ) {
    var elems,
      i = 0,
      ret = [],
      insert = jQuery( selector ),
      last = insert.length - 1;

    for ( ; i <= last; i++ ) {
      elems = i === last ? this : this.clone(true);
      jQuery( insert[i] )[ original ]( elems );

      // Modern browsers can apply jQuery collections as arrays, but oldIE needs a .get()
      core_push.apply( ret, elems.get() );
    }

    return this.pushStack( ret );
  };
});

function getAll( context, tag ) {
  var elems, elem,
    i = 0,
    found = typeof context.getElementsByTagName !== core_strundefined ? context.getElementsByTagName( tag || "*" ) :
      typeof context.querySelectorAll !== core_strundefined ? context.querySelectorAll( tag || "*" ) :
      undefined;

  if ( !found ) {
    for ( found = [], elems = context.childNodes || context; (elem = elems[i]) != null; i++ ) {
      if ( !tag || jQuery.nodeName( elem, tag ) ) {
        found.push( elem );
      } else {
        jQuery.merge( found, getAll( elem, tag ) );
      }
    }
  }

  return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
    jQuery.merge( [ context ], found ) :
    found;
}

// Used in buildFragment, fixes the defaultChecked property
function fixDefaultChecked( elem ) {
  if ( manipulation_rcheckableType.test( elem.type ) ) {
    elem.defaultChecked = elem.checked;
  }
}

jQuery.extend({
  clone: function( elem, dataAndEvents, deepDataAndEvents ) {
    var destElements, node, clone, i, srcElements,
      inPage = jQuery.contains( elem.ownerDocument, elem );

    if ( jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( "<" + elem.nodeName + ">" ) ) {
      clone = elem.cloneNode( true );

    // IE<=8 does not properly clone detached, unknown element nodes
    } else {
      fragmentDiv.innerHTML = elem.outerHTML;
      fragmentDiv.removeChild( clone = fragmentDiv.firstChild );
    }

    if ( (!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) &&
        (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {

      // We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
      destElements = getAll( clone );
      srcElements = getAll( elem );

      // Fix all IE cloning issues
      for ( i = 0; (node = srcElements[i]) != null; ++i ) {
        // Ensure that the destination node is not null; Fixes #9587
        if ( destElements[i] ) {
          fixCloneNodeIssues( node, destElements[i] );
        }
      }
    }

    // Copy the events from the original to the clone
    if ( dataAndEvents ) {
      if ( deepDataAndEvents ) {
        srcElements = srcElements || getAll( elem );
        destElements = destElements || getAll( clone );

        for ( i = 0; (node = srcElements[i]) != null; i++ ) {
          cloneCopyEvent( node, destElements[i] );
        }
      } else {
        cloneCopyEvent( elem, clone );
      }
    }

    // Preserve script evaluation history
    destElements = getAll( clone, "script" );
    if ( destElements.length > 0 ) {
      setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
    }

    destElements = srcElements = node = null;

    // Return the cloned set
    return clone;
  },

  buildFragment: function( elems, context, scripts, selection ) {
    var j, elem, contains,
      tmp, tag, tbody, wrap,
      l = elems.length,

      // Ensure a safe fragment
      safe = createSafeFragment( context ),

      nodes = [],
      i = 0;

    for ( ; i < l; i++ ) {
      elem = elems[ i ];

      if ( elem || elem === 0 ) {

        // Add nodes directly
        if ( jQuery.type( elem ) === "object" ) {
          jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

        // Convert non-html into a text node
        } else if ( !rhtml.test( elem ) ) {
          nodes.push( context.createTextNode( elem ) );

        // Convert html into DOM nodes
        } else {
          tmp = tmp || safe.appendChild( context.createElement("div") );

          // Deserialize a standard representation
          tag = ( rtagName.exec( elem ) || ["", ""] )[1].toLowerCase();
          wrap = wrapMap[ tag ] || wrapMap._default;

          tmp.innerHTML = wrap[1] + elem.replace( rxhtmlTag, "<$1></$2>" ) + wrap[2];

          // Descend through wrappers to the right content
          j = wrap[0];
          while ( j-- ) {
            tmp = tmp.lastChild;
          }

          // Manually add leading whitespace removed by IE
          if ( !jQuery.support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
            nodes.push( context.createTextNode( rleadingWhitespace.exec( elem )[0] ) );
          }

          // Remove IE's autoinserted <tbody> from table fragments
          if ( !jQuery.support.tbody ) {

            // String was a <table>, *may* have spurious <tbody>
            elem = tag === "table" && !rtbody.test( elem ) ?
              tmp.firstChild :

              // String was a bare <thead> or <tfoot>
              wrap[1] === "<table>" && !rtbody.test( elem ) ?
                tmp :
                0;

            j = elem && elem.childNodes.length;
            while ( j-- ) {
              if ( jQuery.nodeName( (tbody = elem.childNodes[j]), "tbody" ) && !tbody.childNodes.length ) {
                elem.removeChild( tbody );
              }
            }
          }

          jQuery.merge( nodes, tmp.childNodes );

          // Fix #12392 for WebKit and IE > 9
          tmp.textContent = "";

          // Fix #12392 for oldIE
          while ( tmp.firstChild ) {
            tmp.removeChild( tmp.firstChild );
          }

          // Remember the top-level container for proper cleanup
          tmp = safe.lastChild;
        }
      }
    }

    // Fix #11356: Clear elements from fragment
    if ( tmp ) {
      safe.removeChild( tmp );
    }

    // Reset defaultChecked for any radios and checkboxes
    // about to be appended to the DOM in IE 6/7 (#8060)
    if ( !jQuery.support.appendChecked ) {
      jQuery.grep( getAll( nodes, "input" ), fixDefaultChecked );
    }

    i = 0;
    while ( (elem = nodes[ i++ ]) ) {

      // #4087 - If origin and destination elements are the same, and this is
      // that element, do not do anything
      if ( selection && jQuery.inArray( elem, selection ) !== -1 ) {
        continue;
      }

      contains = jQuery.contains( elem.ownerDocument, elem );

      // Append to fragment
      tmp = getAll( safe.appendChild( elem ), "script" );

      // Preserve script evaluation history
      if ( contains ) {
        setGlobalEval( tmp );
      }

      // Capture executables
      if ( scripts ) {
        j = 0;
        while ( (elem = tmp[ j++ ]) ) {
          if ( rscriptType.test( elem.type || "" ) ) {
            scripts.push( elem );
          }
        }
      }
    }

    tmp = null;

    return safe;
  },

  cleanData: function( elems, /* internal */ acceptData ) {
    var elem, type, id, data,
      i = 0,
      internalKey = jQuery.expando,
      cache = jQuery.cache,
      deleteExpando = jQuery.support.deleteExpando,
      special = jQuery.event.special;

    for ( ; (elem = elems[i]) != null; i++ ) {

      if ( acceptData || jQuery.acceptData( elem ) ) {

        id = elem[ internalKey ];
        data = id && cache[ id ];

        if ( data ) {
          if ( data.events ) {
            for ( type in data.events ) {
              if ( special[ type ] ) {
                jQuery.event.remove( elem, type );

              // This is a shortcut to avoid jQuery.event.remove's overhead
              } else {
                jQuery.removeEvent( elem, type, data.handle );
              }
            }
          }

          // Remove cache only if it was not already removed by jQuery.event.remove
          if ( cache[ id ] ) {

            delete cache[ id ];

            // IE does not allow us to delete expando properties from nodes,
            // nor does it have a removeAttribute function on Document nodes;
            // we must handle all of these cases
            if ( deleteExpando ) {
              delete elem[ internalKey ];

            } else if ( typeof elem.removeAttribute !== core_strundefined ) {
              elem.removeAttribute( internalKey );

            } else {
              elem[ internalKey ] = null;
            }

            core_deletedIds.push( id );
          }
        }
      }
    }
  },

  _evalUrl: function( url ) {
    return jQuery.ajax({
      url: url,
      type: "GET",
      dataType: "script",
      async: false,
      global: false,
      "throws": true
    });
  }
});
jQuery.fn.extend({
  wrapAll: function( html ) {
    if ( jQuery.isFunction( html ) ) {
      return this.each(function(i) {
        jQuery(this).wrapAll( html.call(this, i) );
      });
    }

    if ( this[0] ) {
      // The elements to wrap the target around
      var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);

      if ( this[0].parentNode ) {
        wrap.insertBefore( this[0] );
      }

      wrap.map(function() {
        var elem = this;

        while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
          elem = elem.firstChild;
        }

        return elem;
      }).append( this );
    }

    return this;
  },

  wrapInner: function( html ) {
    if ( jQuery.isFunction( html ) ) {
      return this.each(function(i) {
        jQuery(this).wrapInner( html.call(this, i) );
      });
    }

    return this.each(function() {
      var self = jQuery( this ),
        contents = self.contents();

      if ( contents.length ) {
        contents.wrapAll( html );

      } else {
        self.append( html );
      }
    });
  },

  wrap: function( html ) {
    var isFunction = jQuery.isFunction( html );

    return this.each(function(i) {
      jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
    });
  },

  unwrap: function() {
    return this.parent().each(function() {
      if ( !jQuery.nodeName( this, "body" ) ) {
        jQuery( this ).replaceWith( this.childNodes );
      }
    }).end();
  }
});
var iframe, getStyles, curCSS,
  ralpha = /alpha\([^)]*\)/i,
  ropacity = /opacity\s*=\s*([^)]*)/,
  rposition = /^(top|right|bottom|left)$/,
  // swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
  // see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
  rdisplayswap = /^(none|table(?!-c[ea]).+)/,
  rmargin = /^margin/,
  rnumsplit = new RegExp( "^(" + core_pnum + ")(.*)$", "i" ),
  rnumnonpx = new RegExp( "^(" + core_pnum + ")(?!px)[a-z%]+$", "i" ),
  rrelNum = new RegExp( "^([+-])=(" + core_pnum + ")", "i" ),
  elemdisplay = { BODY: "block" },

  cssShow = { position: "absolute", visibility: "hidden", display: "block" },
  cssNormalTransform = {
    letterSpacing: 0,
    fontWeight: 400
  },

  cssExpand = [ "Top", "Right", "Bottom", "Left" ],
  cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];

// return a css property mapped to a potentially vendor prefixed property
function vendorPropName( style, name ) {

  // shortcut for names that are not vendor prefixed
  if ( name in style ) {
    return name;
  }

  // check for vendor prefixed names
  var capName = name.charAt(0).toUpperCase() + name.slice(1),
    origName = name,
    i = cssPrefixes.length;

  while ( i-- ) {
    name = cssPrefixes[ i ] + capName;
    if ( name in style ) {
      return name;
    }
  }

  return origName;
}

function isHidden( elem, el ) {
  // isHidden might be called from jQuery#filter function;
  // in that case, element will be second argument
  elem = el || elem;
  return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
}

function showHide( elements, show ) {
  var display, elem, hidden,
    values = [],
    index = 0,
    length = elements.length;

  for ( ; index < length; index++ ) {
    elem = elements[ index ];
    if ( !elem.style ) {
      continue;
    }

    values[ index ] = jQuery._data( elem, "olddisplay" );
    display = elem.style.display;
    if ( show ) {
      // Reset the inline display of this element to learn if it is
      // being hidden by cascaded rules or not
      if ( !values[ index ] && display === "none" ) {
        elem.style.display = "";
      }

      // Set elements which have been overridden with display: none
      // in a stylesheet to whatever the default browser style is
      // for such an element
      if ( elem.style.display === "" && isHidden( elem ) ) {
        values[ index ] = jQuery._data( elem, "olddisplay", css_defaultDisplay(elem.nodeName) );
      }
    } else {

      if ( !values[ index ] ) {
        hidden = isHidden( elem );

        if ( display && display !== "none" || !hidden ) {
          jQuery._data( elem, "olddisplay", hidden ? display : jQuery.css( elem, "display" ) );
        }
      }
    }
  }

  // Set the display of most of the elements in a second loop
  // to avoid the constant reflow
  for ( index = 0; index < length; index++ ) {
    elem = elements[ index ];
    if ( !elem.style ) {
      continue;
    }
    if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
      elem.style.display = show ? values[ index ] || "" : "none";
    }
  }

  return elements;
}

jQuery.fn.extend({
  css: function( name, value ) {
    return jQuery.access( this, function( elem, name, value ) {
      var len, styles,
        map = {},
        i = 0;

      if ( jQuery.isArray( name ) ) {
        styles = getStyles( elem );
        len = name.length;

        for ( ; i < len; i++ ) {
          map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
        }

        return map;
      }

      return value !== undefined ?
        jQuery.style( elem, name, value ) :
        jQuery.css( elem, name );
    }, name, value, arguments.length > 1 );
  },
  show: function() {
    return showHide( this, true );
  },
  hide: function() {
    return showHide( this );
  },
  toggle: function( state ) {
    if ( typeof state === "boolean" ) {
      return state ? this.show() : this.hide();
    }

    return this.each(function() {
      if ( isHidden( this ) ) {
        jQuery( this ).show();
      } else {
        jQuery( this ).hide();
      }
    });
  }
});

jQuery.extend({
  // Add in style property hooks for overriding the default
  // behavior of getting and setting a style property
  cssHooks: {
    opacity: {
      get: function( elem, computed ) {
        if ( computed ) {
          // We should always get a number back from opacity
          var ret = curCSS( elem, "opacity" );
          return ret === "" ? "1" : ret;
        }
      }
    }
  },

  // Don't automatically add "px" to these possibly-unitless properties
  cssNumber: {
    "columnCount": true,
    "fillOpacity": true,
    "fontWeight": true,
    "lineHeight": true,
    "opacity": true,
    "order": true,
    "orphans": true,
    "widows": true,
    "zIndex": true,
    "zoom": true
  },

  // Add in properties whose names you wish to fix before
  // setting or getting the value
  cssProps: {
    // normalize float css property
    "float": jQuery.support.cssFloat ? "cssFloat" : "styleFloat"
  },

  // Get and set the style property on a DOM Node
  style: function( elem, name, value, extra ) {
    // Don't set styles on text and comment nodes
    if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
      return;
    }

    // Make sure that we're working with the right name
    var ret, type, hooks,
      origName = jQuery.camelCase( name ),
      style = elem.style;

    name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );

    // gets hook for the prefixed version
    // followed by the unprefixed version
    hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

    // Check if we're setting a value
    if ( value !== undefined ) {
      type = typeof value;

      // convert relative number strings (+= or -=) to relative numbers. #7345
      if ( type === "string" && (ret = rrelNum.exec( value )) ) {
        value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
        // Fixes bug #9237
        type = "number";
      }

      // Make sure that NaN and null values aren't set. See: #7116
      if ( value == null || type === "number" && isNaN( value ) ) {
        return;
      }

      // If a number was passed in, add 'px' to the (except for certain CSS properties)
      if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
        value += "px";
      }

      // Fixes #8908, it can be done more correctly by specifing setters in cssHooks,
      // but it would mean to define eight (for every problematic property) identical functions
      if ( !jQuery.support.clearCloneStyle && value === "" && name.indexOf("background") === 0 ) {
        style[ name ] = "inherit";
      }

      // If a hook was provided, use that value, otherwise just set the specified value
      if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {

        // Wrapped to prevent IE from throwing errors when 'invalid' values are provided
        // Fixes bug #5509
        try {
          style[ name ] = value;
        } catch(e) {}
      }

    } else {
      // If a hook was provided get the non-computed value from there
      if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
        return ret;
      }

      // Otherwise just get the value from the style object
      return style[ name ];
    }
  },

  css: function( elem, name, extra, styles ) {
    var num, val, hooks,
      origName = jQuery.camelCase( name );

    // Make sure that we're working with the right name
    name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );

    // gets hook for the prefixed version
    // followed by the unprefixed version
    hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

    // If a hook was provided get the computed value from there
    if ( hooks && "get" in hooks ) {
      val = hooks.get( elem, true, extra );
    }

    // Otherwise, if a way to get the computed value exists, use that
    if ( val === undefined ) {
      val = curCSS( elem, name, styles );
    }

    //convert "normal" to computed value
    if ( val === "normal" && name in cssNormalTransform ) {
      val = cssNormalTransform[ name ];
    }

    // Return, converting to number if forced or a qualifier was provided and val looks numeric
    if ( extra === "" || extra ) {
      num = parseFloat( val );
      return extra === true || jQuery.isNumeric( num ) ? num || 0 : val;
    }
    return val;
  }
});

// NOTE: we've included the "window" in window.getComputedStyle
// because jsdom on node.js will break without it.
if ( window.getComputedStyle ) {
  getStyles = function( elem ) {
    return window.getComputedStyle( elem, null );
  };

  curCSS = function( elem, name, _computed ) {
    var width, minWidth, maxWidth,
      computed = _computed || getStyles( elem ),

      // getPropertyValue is only needed for .css('filter') in IE9, see #12537
      ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined,
      style = elem.style;

    if ( computed ) {

      if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
        ret = jQuery.style( elem, name );
      }

      // A tribute to the "awesome hack by Dean Edwards"
      // Chrome < 17 and Safari 5.0 uses "computed value" instead of "used value" for margin-right
      // Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
      // this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
      if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {

        // Remember the original values
        width = style.width;
        minWidth = style.minWidth;
        maxWidth = style.maxWidth;

        // Put in the new values to get a computed value out
        style.minWidth = style.maxWidth = style.width = ret;
        ret = computed.width;

        // Revert the changed values
        style.width = width;
        style.minWidth = minWidth;
        style.maxWidth = maxWidth;
      }
    }

    return ret;
  };
} else if ( document.documentElement.currentStyle ) {
  getStyles = function( elem ) {
    return elem.currentStyle;
  };

  curCSS = function( elem, name, _computed ) {
    var left, rs, rsLeft,
      computed = _computed || getStyles( elem ),
      ret = computed ? computed[ name ] : undefined,
      style = elem.style;

    // Avoid setting ret to empty string here
    // so we don't default to auto
    if ( ret == null && style && style[ name ] ) {
      ret = style[ name ];
    }

    // From the awesome hack by Dean Edwards
    // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

    // If we're not dealing with a regular pixel number
    // but a number that has a weird ending, we need to convert it to pixels
    // but not position css attributes, as those are proportional to the parent element instead
    // and we can't measure the parent instead because it might trigger a "stacking dolls" problem
    if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {

      // Remember the original values
      left = style.left;
      rs = elem.runtimeStyle;
      rsLeft = rs && rs.left;

      // Put in the new values to get a computed value out
      if ( rsLeft ) {
        rs.left = elem.currentStyle.left;
      }
      style.left = name === "fontSize" ? "1em" : ret;
      ret = style.pixelLeft + "px";

      // Revert the changed values
      style.left = left;
      if ( rsLeft ) {
        rs.left = rsLeft;
      }
    }

    return ret === "" ? "auto" : ret;
  };
}

function setPositiveNumber( elem, value, subtract ) {
  var matches = rnumsplit.exec( value );
  return matches ?
    // Guard against undefined "subtract", e.g., when used as in cssHooks
    Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
    value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
  var i = extra === ( isBorderBox ? "border" : "content" ) ?
    // If we already have the right measurement, avoid augmentation
    4 :
    // Otherwise initialize for horizontal or vertical properties
    name === "width" ? 1 : 0,

    val = 0;

  for ( ; i < 4; i += 2 ) {
    // both box models exclude margin, so add it if we want it
    if ( extra === "margin" ) {
      val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
    }

    if ( isBorderBox ) {
      // border-box includes padding, so remove it if we want content
      if ( extra === "content" ) {
        val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
      }

      // at this point, extra isn't border nor margin, so remove border
      if ( extra !== "margin" ) {
        val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
      }
    } else {
      // at this point, extra isn't content, so add padding
      val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

      // at this point, extra isn't content nor padding, so add border
      if ( extra !== "padding" ) {
        val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
      }
    }
  }

  return val;
}

function getWidthOrHeight( elem, name, extra ) {

  // Start with offset property, which is equivalent to the border-box value
  var valueIsBorderBox = true,
    val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
    styles = getStyles( elem ),
    isBorderBox = jQuery.support.boxSizing && jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

  // some non-html elements return undefined for offsetWidth, so check for null/undefined
  // svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
  // MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
  if ( val <= 0 || val == null ) {
    // Fall back to computed then uncomputed css if necessary
    val = curCSS( elem, name, styles );
    if ( val < 0 || val == null ) {
      val = elem.style[ name ];
    }

    // Computed unit is not pixels. Stop here and return.
    if ( rnumnonpx.test(val) ) {
      return val;
    }

    // we need the check for style in case a browser which returns unreliable values
    // for getComputedStyle silently falls back to the reliable elem.style
    valueIsBorderBox = isBorderBox && ( jQuery.support.boxSizingReliable || val === elem.style[ name ] );

    // Normalize "", auto, and prepare for extra
    val = parseFloat( val ) || 0;
  }

  // use the active box-sizing model to add/subtract irrelevant styles
  return ( val +
    augmentWidthOrHeight(
      elem,
      name,
      extra || ( isBorderBox ? "border" : "content" ),
      valueIsBorderBox,
      styles
    )
  ) + "px";
}

// Try to determine the default display value of an element
function css_defaultDisplay( nodeName ) {
  var doc = document,
    display = elemdisplay[ nodeName ];

  if ( !display ) {
    display = actualDisplay( nodeName, doc );

    // If the simple way fails, read from inside an iframe
    if ( display === "none" || !display ) {
      // Use the already-created iframe if possible
      iframe = ( iframe ||
        jQuery("<iframe frameborder='0' width='0' height='0'/>")
        .css( "cssText", "display:block !important" )
      ).appendTo( doc.documentElement );

      // Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
      doc = ( iframe[0].contentWindow || iframe[0].contentDocument ).document;
      doc.write("<!doctype html><html><body>");
      doc.close();

      display = actualDisplay( nodeName, doc );
      iframe.detach();
    }

    // Store the correct default display
    elemdisplay[ nodeName ] = display;
  }

  return display;
}

// Called ONLY from within css_defaultDisplay
function actualDisplay( name, doc ) {
  var elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),
    display = jQuery.css( elem[0], "display" );
  elem.remove();
  return display;
}

jQuery.each([ "height", "width" ], function( i, name ) {
  jQuery.cssHooks[ name ] = {
    get: function( elem, computed, extra ) {
      if ( computed ) {
        // certain elements can have dimension info if we invisibly show them
        // however, it must have a current display style that would benefit from this
        return elem.offsetWidth === 0 && rdisplayswap.test( jQuery.css( elem, "display" ) ) ?
          jQuery.swap( elem, cssShow, function() {
            return getWidthOrHeight( elem, name, extra );
          }) :
          getWidthOrHeight( elem, name, extra );
      }
    },

    set: function( elem, value, extra ) {
      var styles = extra && getStyles( elem );
      return setPositiveNumber( elem, value, extra ?
        augmentWidthOrHeight(
          elem,
          name,
          extra,
          jQuery.support.boxSizing && jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
          styles
        ) : 0
      );
    }
  };
});

if ( !jQuery.support.opacity ) {
  jQuery.cssHooks.opacity = {
    get: function( elem, computed ) {
      // IE uses filters for opacity
      return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "" ) ?
        ( 0.01 * parseFloat( RegExp.$1 ) ) + "" :
        computed ? "1" : "";
    },

    set: function( elem, value ) {
      var style = elem.style,
        currentStyle = elem.currentStyle,
        opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
        filter = currentStyle && currentStyle.filter || style.filter || "";

      // IE has trouble with opacity if it does not have layout
      // Force it by setting the zoom level
      style.zoom = 1;

      // if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652
      // if value === "", then remove inline opacity #12685
      if ( ( value >= 1 || value === "" ) &&
          jQuery.trim( filter.replace( ralpha, "" ) ) === "" &&
          style.removeAttribute ) {

        // Setting style.filter to null, "" & " " still leave "filter:" in the cssText
        // if "filter:" is present at all, clearType is disabled, we want to avoid this
        // style.removeAttribute is IE Only, but so apparently is this code path...
        style.removeAttribute( "filter" );

        // if there is no filter style applied in a css rule or unset inline opacity, we are done
        if ( value === "" || currentStyle && !currentStyle.filter ) {
          return;
        }
      }

      // otherwise, set new filter values
      style.filter = ralpha.test( filter ) ?
        filter.replace( ralpha, opacity ) :
        filter + " " + opacity;
    }
  };
}

// These hooks cannot be added until DOM ready because the support test
// for it is not run until after DOM ready
jQuery(function() {
  if ( !jQuery.support.reliableMarginRight ) {
    jQuery.cssHooks.marginRight = {
      get: function( elem, computed ) {
        if ( computed ) {
          // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
          // Work around by temporarily setting element display to inline-block
          return jQuery.swap( elem, { "display": "inline-block" },
            curCSS, [ elem, "marginRight" ] );
        }
      }
    };
  }

  // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
  // getComputedStyle returns percent when specified for top/left/bottom/right
  // rather than make the css module depend on the offset module, we just check for it here
  if ( !jQuery.support.pixelPosition && jQuery.fn.position ) {
    jQuery.each( [ "top", "left" ], function( i, prop ) {
      jQuery.cssHooks[ prop ] = {
        get: function( elem, computed ) {
          if ( computed ) {
            computed = curCSS( elem, prop );
            // if curCSS returns percentage, fallback to offset
            return rnumnonpx.test( computed ) ?
              jQuery( elem ).position()[ prop ] + "px" :
              computed;
          }
        }
      };
    });
  }

});

if ( jQuery.expr && jQuery.expr.filters ) {
  jQuery.expr.filters.hidden = function( elem ) {
    // Support: Opera <= 12.12
    // Opera reports offsetWidths and offsetHeights less than zero on some elements
    return elem.offsetWidth <= 0 && elem.offsetHeight <= 0 ||
      (!jQuery.support.reliableHiddenOffsets && ((elem.style && elem.style.display) || jQuery.css( elem, "display" )) === "none");
  };

  jQuery.expr.filters.visible = function( elem ) {
    return !jQuery.expr.filters.hidden( elem );
  };
}

// These hooks are used by animate to expand properties
jQuery.each({
  margin: "",
  padding: "",
  border: "Width"
}, function( prefix, suffix ) {
  jQuery.cssHooks[ prefix + suffix ] = {
    expand: function( value ) {
      var i = 0,
        expanded = {},

        // assumes a single number if not a string
        parts = typeof value === "string" ? value.split(" ") : [ value ];

      for ( ; i < 4; i++ ) {
        expanded[ prefix + cssExpand[ i ] + suffix ] =
          parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
      }

      return expanded;
    }
  };

  if ( !rmargin.test( prefix ) ) {
    jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
  }
});
var r20 = /%20/g,
  rbracket = /\[\]$/,
  rCRLF = /\r?\n/g,
  rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
  rsubmittable = /^(?:input|select|textarea|keygen)/i;

jQuery.fn.extend({
  serialize: function() {
    return jQuery.param( this.serializeArray() );
  },
  serializeArray: function() {
    return this.map(function(){
      // Can add propHook for "elements" to filter or add form elements
      var elements = jQuery.prop( this, "elements" );
      return elements ? jQuery.makeArray( elements ) : this;
    })
    .filter(function(){
      var type = this.type;
      // Use .is(":disabled") so that fieldset[disabled] works
      return this.name && !jQuery( this ).is( ":disabled" ) &&
        rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
        ( this.checked || !manipulation_rcheckableType.test( type ) );
    })
    .map(function( i, elem ){
      var val = jQuery( this ).val();

      return val == null ?
        null :
        jQuery.isArray( val ) ?
          jQuery.map( val, function( val ){
            return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
          }) :
          { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
    }).get();
  }
});

//Serialize an array of form elements or a set of
//key/values into a query string
jQuery.param = function( a, traditional ) {
  var prefix,
    s = [],
    add = function( key, value ) {
      // If value is a function, invoke it and return its value
      value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
      s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
    };

  // Set traditional to true for jQuery <= 1.3.2 behavior.
  if ( traditional === undefined ) {
    traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
  }

  // If an array was passed in, assume that it is an array of form elements.
  if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
    // Serialize the form elements
    jQuery.each( a, function() {
      add( this.name, this.value );
    });

  } else {
    // If traditional, encode the "old" way (the way 1.3.2 or older
    // did it), otherwise encode params recursively.
    for ( prefix in a ) {
      buildParams( prefix, a[ prefix ], traditional, add );
    }
  }

  // Return the resulting serialization
  return s.join( "&" ).replace( r20, "+" );
};

function buildParams( prefix, obj, traditional, add ) {
  var name;

  if ( jQuery.isArray( obj ) ) {
    // Serialize array item.
    jQuery.each( obj, function( i, v ) {
      if ( traditional || rbracket.test( prefix ) ) {
        // Treat each array item as a scalar.
        add( prefix, v );

      } else {
        // Item is non-scalar (array or object), encode its numeric index.
        buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
      }
    });

  } else if ( !traditional && jQuery.type( obj ) === "object" ) {
    // Serialize object item.
    for ( name in obj ) {
      buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
    }

  } else {
    // Serialize scalar item.
    add( prefix, obj );
  }
}
jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
  "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
  "change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

  // Handle event binding
  jQuery.fn[ name ] = function( data, fn ) {
    return arguments.length > 0 ?
      this.on( name, null, data, fn ) :
      this.trigger( name );
  };
});

jQuery.fn.extend({
  hover: function( fnOver, fnOut ) {
    return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
  },

  bind: function( types, data, fn ) {
    return this.on( types, null, data, fn );
  },
  unbind: function( types, fn ) {
    return this.off( types, null, fn );
  },

  delegate: function( selector, types, data, fn ) {
    return this.on( types, selector, data, fn );
  },
  undelegate: function( selector, types, fn ) {
    // ( namespace ) or ( selector, types [, fn] )
    return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
  }
});
var
  // Document location
  ajaxLocParts,
  ajaxLocation,
  ajax_nonce = jQuery.now(),

  ajax_rquery = /\?/,
  rhash = /#.*$/,
  rts = /([?&])_=[^&]*/,
  rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, // IE leaves an \r character at EOL
  // #7653, #8125, #8152: local protocol detection
  rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
  rnoContent = /^(?:GET|HEAD)$/,
  rprotocol = /^\/\//,
  rurl = /^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,

  // Keep a copy of the old load method
  _load = jQuery.fn.load,

  /* Prefilters
   * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
   * 2) These are called:
   *    - BEFORE asking for a transport
   *    - AFTER param serialization (s.data is a string if s.processData is true)
   * 3) key is the dataType
   * 4) the catchall symbol "*" can be used
   * 5) execution will start with transport dataType and THEN continue down to "*" if needed
   */
  prefilters = {},

  /* Transports bindings
   * 1) key is the dataType
   * 2) the catchall symbol "*" can be used
   * 3) selection will start with transport dataType and THEN go to "*" if needed
   */
  transports = {},

  // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
  allTypes = "*/".concat("*");

// #8138, IE may throw an exception when accessing
// a field from window.location if document.domain has been set
try {
  ajaxLocation = location.href;
} catch( e ) {
  // Use the href attribute of an A element
  // since IE will modify it given document.location
  ajaxLocation = document.createElement( "a" );
  ajaxLocation.href = "";
  ajaxLocation = ajaxLocation.href;
}

// Segment location into parts
ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

  // dataTypeExpression is optional and defaults to "*"
  return function( dataTypeExpression, func ) {

    if ( typeof dataTypeExpression !== "string" ) {
      func = dataTypeExpression;
      dataTypeExpression = "*";
    }

    var dataType,
      i = 0,
      dataTypes = dataTypeExpression.toLowerCase().match( core_rnotwhite ) || [];

    if ( jQuery.isFunction( func ) ) {
      // For each dataType in the dataTypeExpression
      while ( (dataType = dataTypes[i++]) ) {
        // Prepend if requested
        if ( dataType[0] === "+" ) {
          dataType = dataType.slice( 1 ) || "*";
          (structure[ dataType ] = structure[ dataType ] || []).unshift( func );

        // Otherwise append
        } else {
          (structure[ dataType ] = structure[ dataType ] || []).push( func );
        }
      }
    }
  };
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

  var inspected = {},
    seekingTransport = ( structure === transports );

  function inspect( dataType ) {
    var selected;
    inspected[ dataType ] = true;
    jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
      var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
      if( typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {
        options.dataTypes.unshift( dataTypeOrTransport );
        inspect( dataTypeOrTransport );
        return false;
      } else if ( seekingTransport ) {
        return !( selected = dataTypeOrTransport );
      }
    });
    return selected;
  }

  return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
  var deep, key,
    flatOptions = jQuery.ajaxSettings.flatOptions || {};

  for ( key in src ) {
    if ( src[ key ] !== undefined ) {
      ( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];
    }
  }
  if ( deep ) {
    jQuery.extend( true, target, deep );
  }

  return target;
}

jQuery.fn.load = function( url, params, callback ) {
  if ( typeof url !== "string" && _load ) {
    return _load.apply( this, arguments );
  }

  var selector, response, type,
    self = this,
    off = url.indexOf(" ");

  if ( off >= 0 ) {
    selector = url.slice( off, url.length );
    url = url.slice( 0, off );
  }

  // If it's a function
  if ( jQuery.isFunction( params ) ) {

    // We assume that it's the callback
    callback = params;
    params = undefined;

  // Otherwise, build a param string
  } else if ( params && typeof params === "object" ) {
    type = "POST";
  }

  // If we have elements to modify, make the request
  if ( self.length > 0 ) {
    jQuery.ajax({
      url: url,

      // if "type" variable is undefined, then "GET" method will be used
      type: type,
      dataType: "html",
      data: params
    }).done(function( responseText ) {

      // Save response for use in complete callback
      response = arguments;

      self.html( selector ?

        // If a selector was specified, locate the right elements in a dummy div
        // Exclude scripts to avoid IE 'Permission Denied' errors
        jQuery("<div>").append( jQuery.parseHTML( responseText ) ).find( selector ) :

        // Otherwise use the full result
        responseText );

    }).complete( callback && function( jqXHR, status ) {
      self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
    });
  }

  return this;
};

// Attach a bunch of functions for handling common AJAX events
jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ){
  jQuery.fn[ type ] = function( fn ){
    return this.on( type, fn );
  };
});

jQuery.extend({

  // Counter for holding the number of active queries
  active: 0,

  // Last-Modified header cache for next request
  lastModified: {},
  etag: {},

  ajaxSettings: {
    url: ajaxLocation,
    type: "GET",
    isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
    global: true,
    processData: true,
    async: true,
    contentType: "application/x-www-form-urlencoded; charset=UTF-8",
    /*
    timeout: 0,
    data: null,
    dataType: null,
    username: null,
    password: null,
    cache: null,
    throws: false,
    traditional: false,
    headers: {},
    */

    accepts: {
      "*": allTypes,
      text: "text/plain",
      html: "text/html",
      xml: "application/xml, text/xml",
      json: "application/json, text/javascript"
    },

    contents: {
      xml: /xml/,
      html: /html/,
      json: /json/
    },

    responseFields: {
      xml: "responseXML",
      text: "responseText",
      json: "responseJSON"
    },

    // Data converters
    // Keys separate source (or catchall "*") and destination types with a single space
    converters: {

      // Convert anything to text
      "* text": String,

      // Text to html (true = no transformation)
      "text html": true,

      // Evaluate text as a json expression
      "text json": jQuery.parseJSON,

      // Parse text as xml
      "text xml": jQuery.parseXML
    },

    // For options that shouldn't be deep extended:
    // you can add your own custom options here if
    // and when you create one that shouldn't be
    // deep extended (see ajaxExtend)
    flatOptions: {
      url: true,
      context: true
    }
  },

  // Creates a full fledged settings object into target
  // with both ajaxSettings and settings fields.
  // If target is omitted, writes into ajaxSettings.
  ajaxSetup: function( target, settings ) {
    return settings ?

      // Building a settings object
      ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

      // Extending ajaxSettings
      ajaxExtend( jQuery.ajaxSettings, target );
  },

  ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
  ajaxTransport: addToPrefiltersOrTransports( transports ),

  // Main method
  ajax: function( url, options ) {

    // If url is an object, simulate pre-1.5 signature
    if ( typeof url === "object" ) {
      options = url;
      url = undefined;
    }

    // Force options to be an object
    options = options || {};

    var // Cross-domain detection vars
      parts,
      // Loop variable
      i,
      // URL without anti-cache param
      cacheURL,
      // Response headers as string
      responseHeadersString,
      // timeout handle
      timeoutTimer,

      // To know if global events are to be dispatched
      fireGlobals,

      transport,
      // Response headers
      responseHeaders,
      // Create the final options object
      s = jQuery.ajaxSetup( {}, options ),
      // Callbacks context
      callbackContext = s.context || s,
      // Context for global events is callbackContext if it is a DOM node or jQuery collection
      globalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?
        jQuery( callbackContext ) :
        jQuery.event,
      // Deferreds
      deferred = jQuery.Deferred(),
      completeDeferred = jQuery.Callbacks("once memory"),
      // Status-dependent callbacks
      statusCode = s.statusCode || {},
      // Headers (they are sent all at once)
      requestHeaders = {},
      requestHeadersNames = {},
      // The jqXHR state
      state = 0,
      // Default abort message
      strAbort = "canceled",
      // Fake xhr
      jqXHR = {
        readyState: 0,

        // Builds headers hashtable if needed
        getResponseHeader: function( key ) {
          var match;
          if ( state === 2 ) {
            if ( !responseHeaders ) {
              responseHeaders = {};
              while ( (match = rheaders.exec( responseHeadersString )) ) {
                responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
              }
            }
            match = responseHeaders[ key.toLowerCase() ];
          }
          return match == null ? null : match;
        },

        // Raw string
        getAllResponseHeaders: function() {
          return state === 2 ? responseHeadersString : null;
        },

        // Caches the header
        setRequestHeader: function( name, value ) {
          var lname = name.toLowerCase();
          if ( !state ) {
            name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
            requestHeaders[ name ] = value;
          }
          return this;
        },

        // Overrides response content-type header
        overrideMimeType: function( type ) {
          if ( !state ) {
            s.mimeType = type;
          }
          return this;
        },

        // Status-dependent callbacks
        statusCode: function( map ) {
          var code;
          if ( map ) {
            if ( state < 2 ) {
              for ( code in map ) {
                // Lazy-add the new callback in a way that preserves old ones
                statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
              }
            } else {
              // Execute the appropriate callbacks
              jqXHR.always( map[ jqXHR.status ] );
            }
          }
          return this;
        },

        // Cancel the request
        abort: function( statusText ) {
          var finalText = statusText || strAbort;
          if ( transport ) {
            transport.abort( finalText );
          }
          done( 0, finalText );
          return this;
        }
      };

    // Attach deferreds
    deferred.promise( jqXHR ).complete = completeDeferred.add;
    jqXHR.success = jqXHR.done;
    jqXHR.error = jqXHR.fail;

    // Remove hash character (#7531: and string promotion)
    // Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
    // Handle falsy url in the settings object (#10093: consistency with old signature)
    // We also use the url parameter if available
    s.url = ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" ).replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

    // Alias method option to type as per ticket #12004
    s.type = options.method || options.type || s.method || s.type;

    // Extract dataTypes list
    s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( core_rnotwhite ) || [""];

    // A cross-domain request is in order when we have a protocol:host:port mismatch
    if ( s.crossDomain == null ) {
      parts = rurl.exec( s.url.toLowerCase() );
      s.crossDomain = !!( parts &&
        ( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
          ( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
            ( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
      );
    }

    // Convert data if not already a string
    if ( s.data && s.processData && typeof s.data !== "string" ) {
      s.data = jQuery.param( s.data, s.traditional );
    }

    // Apply prefilters
    inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

    // If request was aborted inside a prefilter, stop there
    if ( state === 2 ) {
      return jqXHR;
    }

    // We can fire global events as of now if asked to
    fireGlobals = s.global;

    // Watch for a new set of requests
    if ( fireGlobals && jQuery.active++ === 0 ) {
      jQuery.event.trigger("ajaxStart");
    }

    // Uppercase the type
    s.type = s.type.toUpperCase();

    // Determine if request has content
    s.hasContent = !rnoContent.test( s.type );

    // Save the URL in case we're toying with the If-Modified-Since
    // and/or If-None-Match header later on
    cacheURL = s.url;

    // More options handling for requests with no content
    if ( !s.hasContent ) {

      // If data is available, append data to url
      if ( s.data ) {
        cacheURL = ( s.url += ( ajax_rquery.test( cacheURL ) ? "&" : "?" ) + s.data );
        // #9682: remove data so that it's not used in an eventual retry
        delete s.data;
      }

      // Add anti-cache in url if needed
      if ( s.cache === false ) {
        s.url = rts.test( cacheURL ) ?

          // If there is already a '_' parameter, set its value
          cacheURL.replace( rts, "$1_=" + ajax_nonce++ ) :

          // Otherwise add one to the end
          cacheURL + ( ajax_rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ajax_nonce++;
      }
    }

    // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
    if ( s.ifModified ) {
      if ( jQuery.lastModified[ cacheURL ] ) {
        jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
      }
      if ( jQuery.etag[ cacheURL ] ) {
        jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
      }
    }

    // Set the correct header, if data is being sent
    if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
      jqXHR.setRequestHeader( "Content-Type", s.contentType );
    }

    // Set the Accepts header for the server, depending on the dataType
    jqXHR.setRequestHeader(
      "Accept",
      s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
        s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
        s.accepts[ "*" ]
    );

    // Check for headers option
    for ( i in s.headers ) {
      jqXHR.setRequestHeader( i, s.headers[ i ] );
    }

    // Allow custom headers/mimetypes and early abort
    if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
      // Abort if not done already and return
      return jqXHR.abort();
    }

    // aborting is no longer a cancellation
    strAbort = "abort";

    // Install callbacks on deferreds
    for ( i in { success: 1, error: 1, complete: 1 } ) {
      jqXHR[ i ]( s[ i ] );
    }

    // Get transport
    transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

    // If no transport, we auto-abort
    if ( !transport ) {
      done( -1, "No Transport" );
    } else {
      jqXHR.readyState = 1;

      // Send global event
      if ( fireGlobals ) {
        globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
      }
      // Timeout
      if ( s.async && s.timeout > 0 ) {
        timeoutTimer = setTimeout(function() {
          jqXHR.abort("timeout");
        }, s.timeout );
      }

      try {
        state = 1;
        transport.send( requestHeaders, done );
      } catch ( e ) {
        // Propagate exception as error if not done
        if ( state < 2 ) {
          done( -1, e );
        // Simply rethrow otherwise
        } else {
          throw e;
        }
      }
    }

    // Callback for when everything is done
    function done( status, nativeStatusText, responses, headers ) {
      var isSuccess, success, error, response, modified,
        statusText = nativeStatusText;

      // Called once
      if ( state === 2 ) {
        return;
      }

      // State is "done" now
      state = 2;

      // Clear timeout if it exists
      if ( timeoutTimer ) {
        clearTimeout( timeoutTimer );
      }

      // Dereference transport for early garbage collection
      // (no matter how long the jqXHR object will be used)
      transport = undefined;

      // Cache response headers
      responseHeadersString = headers || "";

      // Set readyState
      jqXHR.readyState = status > 0 ? 4 : 0;

      // Determine if successful
      isSuccess = status >= 200 && status < 300 || status === 304;

      // Get response data
      if ( responses ) {
        response = ajaxHandleResponses( s, jqXHR, responses );
      }

      // Convert no matter what (that way responseXXX fields are always set)
      response = ajaxConvert( s, response, jqXHR, isSuccess );

      // If successful, handle type chaining
      if ( isSuccess ) {

        // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
        if ( s.ifModified ) {
          modified = jqXHR.getResponseHeader("Last-Modified");
          if ( modified ) {
            jQuery.lastModified[ cacheURL ] = modified;
          }
          modified = jqXHR.getResponseHeader("etag");
          if ( modified ) {
            jQuery.etag[ cacheURL ] = modified;
          }
        }

        // if no content
        if ( status === 204 || s.type === "HEAD" ) {
          statusText = "nocontent";

        // if not modified
        } else if ( status === 304 ) {
          statusText = "notmodified";

        // If we have data, let's convert it
        } else {
          statusText = response.state;
          success = response.data;
          error = response.error;
          isSuccess = !error;
        }
      } else {
        // We extract error from statusText
        // then normalize statusText and status for non-aborts
        error = statusText;
        if ( status || !statusText ) {
          statusText = "error";
          if ( status < 0 ) {
            status = 0;
          }
        }
      }

      // Set data for the fake xhr object
      jqXHR.status = status;
      jqXHR.statusText = ( nativeStatusText || statusText ) + "";

      // Success/Error
      if ( isSuccess ) {
        deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
      } else {
        deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
      }

      // Status-dependent callbacks
      jqXHR.statusCode( statusCode );
      statusCode = undefined;

      if ( fireGlobals ) {
        globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
          [ jqXHR, s, isSuccess ? success : error ] );
      }

      // Complete
      completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

      if ( fireGlobals ) {
        globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
        // Handle the global AJAX counter
        if ( !( --jQuery.active ) ) {
          jQuery.event.trigger("ajaxStop");
        }
      }
    }

    return jqXHR;
  },

  getJSON: function( url, data, callback ) {
    return jQuery.get( url, data, callback, "json" );
  },

  getScript: function( url, callback ) {
    return jQuery.get( url, undefined, callback, "script" );
  }
});

jQuery.each( [ "get", "post" ], function( i, method ) {
  jQuery[ method ] = function( url, data, callback, type ) {
    // shift arguments if data argument was omitted
    if ( jQuery.isFunction( data ) ) {
      type = type || callback;
      callback = data;
      data = undefined;
    }

    return jQuery.ajax({
      url: url,
      type: method,
      dataType: type,
      data: data,
      success: callback
    });
  };
});

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {
  var firstDataType, ct, finalDataType, type,
    contents = s.contents,
    dataTypes = s.dataTypes;

  // Remove auto dataType and get content-type in the process
  while( dataTypes[ 0 ] === "*" ) {
    dataTypes.shift();
    if ( ct === undefined ) {
      ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
    }
  }

  // Check if we're dealing with a known content-type
  if ( ct ) {
    for ( type in contents ) {
      if ( contents[ type ] && contents[ type ].test( ct ) ) {
        dataTypes.unshift( type );
        break;
      }
    }
  }

  // Check to see if we have a response for the expected dataType
  if ( dataTypes[ 0 ] in responses ) {
    finalDataType = dataTypes[ 0 ];
  } else {
    // Try convertible dataTypes
    for ( type in responses ) {
      if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
        finalDataType = type;
        break;
      }
      if ( !firstDataType ) {
        firstDataType = type;
      }
    }
    // Or just use first one
    finalDataType = finalDataType || firstDataType;
  }

  // If we found a dataType
  // We add the dataType to the list if needed
  // and return the corresponding response
  if ( finalDataType ) {
    if ( finalDataType !== dataTypes[ 0 ] ) {
      dataTypes.unshift( finalDataType );
    }
    return responses[ finalDataType ];
  }
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
  var conv2, current, conv, tmp, prev,
    converters = {},
    // Work with a copy of dataTypes in case we need to modify it for conversion
    dataTypes = s.dataTypes.slice();

  // Create converters map with lowercased keys
  if ( dataTypes[ 1 ] ) {
    for ( conv in s.converters ) {
      converters[ conv.toLowerCase() ] = s.converters[ conv ];
    }
  }

  current = dataTypes.shift();

  // Convert to each sequential dataType
  while ( current ) {

    if ( s.responseFields[ current ] ) {
      jqXHR[ s.responseFields[ current ] ] = response;
    }

    // Apply the dataFilter if provided
    if ( !prev && isSuccess && s.dataFilter ) {
      response = s.dataFilter( response, s.dataType );
    }

    prev = current;
    current = dataTypes.shift();

    if ( current ) {

      // There's only work to do if current dataType is non-auto
      if ( current === "*" ) {

        current = prev;

      // Convert response if prev dataType is non-auto and differs from current
      } else if ( prev !== "*" && prev !== current ) {

        // Seek a direct converter
        conv = converters[ prev + " " + current ] || converters[ "* " + current ];

        // If none found, seek a pair
        if ( !conv ) {
          for ( conv2 in converters ) {

            // If conv2 outputs current
            tmp = conv2.split( " " );
            if ( tmp[ 1 ] === current ) {

              // If prev can be converted to accepted input
              conv = converters[ prev + " " + tmp[ 0 ] ] ||
                converters[ "* " + tmp[ 0 ] ];
              if ( conv ) {
                // Condense equivalence converters
                if ( conv === true ) {
                  conv = converters[ conv2 ];

                // Otherwise, insert the intermediate dataType
                } else if ( converters[ conv2 ] !== true ) {
                  current = tmp[ 0 ];
                  dataTypes.unshift( tmp[ 1 ] );
                }
                break;
              }
            }
          }
        }

        // Apply converter (if not an equivalence)
        if ( conv !== true ) {

          // Unless errors are allowed to bubble, catch and return them
          if ( conv && s[ "throws" ] ) {
            response = conv( response );
          } else {
            try {
              response = conv( response );
            } catch ( e ) {
              return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
            }
          }
        }
      }
    }
  }

  return { state: "success", data: response };
}
// Install script dataType
jQuery.ajaxSetup({
  accepts: {
    script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
  },
  contents: {
    script: /(?:java|ecma)script/
  },
  converters: {
    "text script": function( text ) {
      jQuery.globalEval( text );
      return text;
    }
  }
});

// Handle cache's special case and global
jQuery.ajaxPrefilter( "script", function( s ) {
  if ( s.cache === undefined ) {
    s.cache = false;
  }
  if ( s.crossDomain ) {
    s.type = "GET";
    s.global = false;
  }
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function(s) {

  // This transport only deals with cross domain requests
  if ( s.crossDomain ) {

    var script,
      head = document.head || jQuery("head")[0] || document.documentElement;

    return {

      send: function( _, callback ) {

        script = document.createElement("script");

        script.async = true;

        if ( s.scriptCharset ) {
          script.charset = s.scriptCharset;
        }

        script.src = s.url;

        // Attach handlers for all browsers
        script.onload = script.onreadystatechange = function( _, isAbort ) {

          if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

            // Handle memory leak in IE
            script.onload = script.onreadystatechange = null;

            // Remove the script
            if ( script.parentNode ) {
              script.parentNode.removeChild( script );
            }

            // Dereference the script
            script = null;

            // Callback if not abort
            if ( !isAbort ) {
              callback( 200, "success" );
            }
          }
        };

        // Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending
        // Use native DOM manipulation to avoid our domManip AJAX trickery
        head.insertBefore( script, head.firstChild );
      },

      abort: function() {
        if ( script ) {
          script.onload( undefined, true );
        }
      }
    };
  }
});
var oldCallbacks = [],
  rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup({
  jsonp: "callback",
  jsonpCallback: function() {
    var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( ajax_nonce++ ) );
    this[ callback ] = true;
    return callback;
  }
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

  var callbackName, overwritten, responseContainer,
    jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
      "url" :
      typeof s.data === "string" && !( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") && rjsonp.test( s.data ) && "data"
    );

  // Handle iff the expected data type is "jsonp" or we have a parameter to set
  if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

    // Get callback name, remembering preexisting value associated with it
    callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
      s.jsonpCallback() :
      s.jsonpCallback;

    // Insert callback into url or form data
    if ( jsonProp ) {
      s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
    } else if ( s.jsonp !== false ) {
      s.url += ( ajax_rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
    }

    // Use data converter to retrieve json after script execution
    s.converters["script json"] = function() {
      if ( !responseContainer ) {
        jQuery.error( callbackName + " was not called" );
      }
      return responseContainer[ 0 ];
    };

    // force json dataType
    s.dataTypes[ 0 ] = "json";

    // Install callback
    overwritten = window[ callbackName ];
    window[ callbackName ] = function() {
      responseContainer = arguments;
    };

    // Clean-up function (fires after converters)
    jqXHR.always(function() {
      // Restore preexisting value
      window[ callbackName ] = overwritten;

      // Save back as free
      if ( s[ callbackName ] ) {
        // make sure that re-using the options doesn't screw things around
        s.jsonpCallback = originalSettings.jsonpCallback;

        // save the callback name for future use
        oldCallbacks.push( callbackName );
      }

      // Call if it was a function and we have a response
      if ( responseContainer && jQuery.isFunction( overwritten ) ) {
        overwritten( responseContainer[ 0 ] );
      }

      responseContainer = overwritten = undefined;
    });

    // Delegate to script
    return "script";
  }
});
var xhrCallbacks, xhrSupported,
  xhrId = 0,
  // #5280: Internet Explorer will keep connections alive if we don't abort on unload
  xhrOnUnloadAbort = window.ActiveXObject && function() {
    // Abort all pending requests
    var key;
    for ( key in xhrCallbacks ) {
      xhrCallbacks[ key ]( undefined, true );
    }
  };

// Functions to create xhrs
function createStandardXHR() {
  try {
    return new window.XMLHttpRequest();
  } catch( e ) {}
}

function createActiveXHR() {
  try {
    return new window.ActiveXObject("Microsoft.XMLHTTP");
  } catch( e ) {}
}

// Create the request object
// (This is still attached to ajaxSettings for backward compatibility)
jQuery.ajaxSettings.xhr = window.ActiveXObject ?
  /* Microsoft failed to properly
   * implement the XMLHttpRequest in IE7 (can't request local files),
   * so we use the ActiveXObject when it is available
   * Additionally XMLHttpRequest can be disabled in IE7/IE8 so
   * we need a fallback.
   */
  function() {
    return !this.isLocal && createStandardXHR() || createActiveXHR();
  } :
  // For all other browsers, use the standard XMLHttpRequest object
  createStandardXHR;

// Determine support properties
xhrSupported = jQuery.ajaxSettings.xhr();
jQuery.support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
xhrSupported = jQuery.support.ajax = !!xhrSupported;

// Create transport if the browser can provide an xhr
if ( xhrSupported ) {

  jQuery.ajaxTransport(function( s ) {
    // Cross domain only allowed if supported through XMLHttpRequest
    if ( !s.crossDomain || jQuery.support.cors ) {

      var callback;

      return {
        send: function( headers, complete ) {

          // Get a new xhr
          var handle, i,
            xhr = s.xhr();

          // Open the socket
          // Passing null username, generates a login popup on Opera (#2865)
          if ( s.username ) {
            xhr.open( s.type, s.url, s.async, s.username, s.password );
          } else {
            xhr.open( s.type, s.url, s.async );
          }

          // Apply custom fields if provided
          if ( s.xhrFields ) {
            for ( i in s.xhrFields ) {
              xhr[ i ] = s.xhrFields[ i ];
            }
          }

          // Override mime type if needed
          if ( s.mimeType && xhr.overrideMimeType ) {
            xhr.overrideMimeType( s.mimeType );
          }

          // X-Requested-With header
          // For cross-domain requests, seeing as conditions for a preflight are
          // akin to a jigsaw puzzle, we simply never set it to be sure.
          // (it can always be set on a per-request basis or even using ajaxSetup)
          // For same-domain requests, won't change header if already provided.
          if ( !s.crossDomain && !headers["X-Requested-With"] ) {
            headers["X-Requested-With"] = "XMLHttpRequest";
          }

          // Need an extra try/catch for cross domain requests in Firefox 3
          try {
            for ( i in headers ) {
              xhr.setRequestHeader( i, headers[ i ] );
            }
          } catch( err ) {}

          // Do send the request
          // This may raise an exception which is actually
          // handled in jQuery.ajax (so no try/catch here)
          xhr.send( ( s.hasContent && s.data ) || null );

          // Listener
          callback = function( _, isAbort ) {
            var status, responseHeaders, statusText, responses;

            // Firefox throws exceptions when accessing properties
            // of an xhr when a network error occurred
            // http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)
            try {

              // Was never called and is aborted or complete
              if ( callback && ( isAbort || xhr.readyState === 4 ) ) {

                // Only called once
                callback = undefined;

                // Do not keep as active anymore
                if ( handle ) {
                  xhr.onreadystatechange = jQuery.noop;
                  if ( xhrOnUnloadAbort ) {
                    delete xhrCallbacks[ handle ];
                  }
                }

                // If it's an abort
                if ( isAbort ) {
                  // Abort it manually if needed
                  if ( xhr.readyState !== 4 ) {
                    xhr.abort();
                  }
                } else {
                  responses = {};
                  status = xhr.status;
                  responseHeaders = xhr.getAllResponseHeaders();

                  // When requesting binary data, IE6-9 will throw an exception
                  // on any attempt to access responseText (#11426)
                  if ( typeof xhr.responseText === "string" ) {
                    responses.text = xhr.responseText;
                  }

                  // Firefox throws an exception when accessing
                  // statusText for faulty cross-domain requests
                  try {
                    statusText = xhr.statusText;
                  } catch( e ) {
                    // We normalize with Webkit giving an empty statusText
                    statusText = "";
                  }

                  // Filter status for non standard behaviors

                  // If the request is local and we have data: assume a success
                  // (success with no data won't get notified, that's the best we
                  // can do given current implementations)
                  if ( !status && s.isLocal && !s.crossDomain ) {
                    status = responses.text ? 200 : 404;
                  // IE - #1450: sometimes returns 1223 when it should be 204
                  } else if ( status === 1223 ) {
                    status = 204;
                  }
                }
              }
            } catch( firefoxAccessException ) {
              if ( !isAbort ) {
                complete( -1, firefoxAccessException );
              }
            }

            // Call complete if needed
            if ( responses ) {
              complete( status, statusText, responses, responseHeaders );
            }
          };

          if ( !s.async ) {
            // if we're in sync mode we fire the callback
            callback();
          } else if ( xhr.readyState === 4 ) {
            // (IE6 & IE7) if it's in cache and has been
            // retrieved directly we need to fire the callback
            setTimeout( callback );
          } else {
            handle = ++xhrId;
            if ( xhrOnUnloadAbort ) {
              // Create the active xhrs callbacks list if needed
              // and attach the unload handler
              if ( !xhrCallbacks ) {
                xhrCallbacks = {};
                jQuery( window ).unload( xhrOnUnloadAbort );
              }
              // Add to list of active xhrs callbacks
              xhrCallbacks[ handle ] = callback;
            }
            xhr.onreadystatechange = callback;
          }
        },

        abort: function() {
          if ( callback ) {
            callback( undefined, true );
          }
        }
      };
    }
  });
}
var fxNow, timerId,
  rfxtypes = /^(?:toggle|show|hide)$/,
  rfxnum = new RegExp( "^(?:([+-])=|)(" + core_pnum + ")([a-z%]*)$", "i" ),
  rrun = /queueHooks$/,
  animationPrefilters = [ defaultPrefilter ],
  tweeners = {
    "*": [function( prop, value ) {
      var tween = this.createTween( prop, value ),
        target = tween.cur(),
        parts = rfxnum.exec( value ),
        unit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

        // Starting value computation is required for potential unit mismatches
        start = ( jQuery.cssNumber[ prop ] || unit !== "px" && +target ) &&
          rfxnum.exec( jQuery.css( tween.elem, prop ) ),
        scale = 1,
        maxIterations = 20;

      if ( start && start[ 3 ] !== unit ) {
        // Trust units reported by jQuery.css
        unit = unit || start[ 3 ];

        // Make sure we update the tween properties later on
        parts = parts || [];

        // Iteratively approximate from a nonzero starting point
        start = +target || 1;

        do {
          // If previous iteration zeroed out, double until we get *something*
          // Use a string for doubling factor so we don't accidentally see scale as unchanged below
          scale = scale || ".5";

          // Adjust and apply
          start = start / scale;
          jQuery.style( tween.elem, prop, start + unit );

        // Update scale, tolerating zero or NaN from tween.cur()
        // And breaking the loop if scale is unchanged or perfect, or if we've just had enough
        } while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );
      }

      // Update tween properties
      if ( parts ) {
        start = tween.start = +start || +target || 0;
        tween.unit = unit;
        // If a +=/-= token was provided, we're doing a relative animation
        tween.end = parts[ 1 ] ?
          start + ( parts[ 1 ] + 1 ) * parts[ 2 ] :
          +parts[ 2 ];
      }

      return tween;
    }]
  };

// Animations created synchronously will run synchronously
function createFxNow() {
  setTimeout(function() {
    fxNow = undefined;
  });
  return ( fxNow = jQuery.now() );
}

function createTween( value, prop, animation ) {
  var tween,
    collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
    index = 0,
    length = collection.length;
  for ( ; index < length; index++ ) {
    if ( (tween = collection[ index ].call( animation, prop, value )) ) {

      // we're done with this property
      return tween;
    }
  }
}

function Animation( elem, properties, options ) {
  var result,
    stopped,
    index = 0,
    length = animationPrefilters.length,
    deferred = jQuery.Deferred().always( function() {
      // don't match elem in the :animated selector
      delete tick.elem;
    }),
    tick = function() {
      if ( stopped ) {
        return false;
      }
      var currentTime = fxNow || createFxNow(),
        remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
        // archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)
        temp = remaining / animation.duration || 0,
        percent = 1 - temp,
        index = 0,
        length = animation.tweens.length;

      for ( ; index < length ; index++ ) {
        animation.tweens[ index ].run( percent );
      }

      deferred.notifyWith( elem, [ animation, percent, remaining ]);

      if ( percent < 1 && length ) {
        return remaining;
      } else {
        deferred.resolveWith( elem, [ animation ] );
        return false;
      }
    },
    animation = deferred.promise({
      elem: elem,
      props: jQuery.extend( {}, properties ),
      opts: jQuery.extend( true, { specialEasing: {} }, options ),
      originalProperties: properties,
      originalOptions: options,
      startTime: fxNow || createFxNow(),
      duration: options.duration,
      tweens: [],
      createTween: function( prop, end ) {
        var tween = jQuery.Tween( elem, animation.opts, prop, end,
            animation.opts.specialEasing[ prop ] || animation.opts.easing );
        animation.tweens.push( tween );
        return tween;
      },
      stop: function( gotoEnd ) {
        var index = 0,
          // if we are going to the end, we want to run all the tweens
          // otherwise we skip this part
          length = gotoEnd ? animation.tweens.length : 0;
        if ( stopped ) {
          return this;
        }
        stopped = true;
        for ( ; index < length ; index++ ) {
          animation.tweens[ index ].run( 1 );
        }

        // resolve when we played the last frame
        // otherwise, reject
        if ( gotoEnd ) {
          deferred.resolveWith( elem, [ animation, gotoEnd ] );
        } else {
          deferred.rejectWith( elem, [ animation, gotoEnd ] );
        }
        return this;
      }
    }),
    props = animation.props;

  propFilter( props, animation.opts.specialEasing );

  for ( ; index < length ; index++ ) {
    result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
    if ( result ) {
      return result;
    }
  }

  jQuery.map( props, createTween, animation );

  if ( jQuery.isFunction( animation.opts.start ) ) {
    animation.opts.start.call( elem, animation );
  }

  jQuery.fx.timer(
    jQuery.extend( tick, {
      elem: elem,
      anim: animation,
      queue: animation.opts.queue
    })
  );

  // attach callbacks from options
  return animation.progress( animation.opts.progress )
    .done( animation.opts.done, animation.opts.complete )
    .fail( animation.opts.fail )
    .always( animation.opts.always );
}

function propFilter( props, specialEasing ) {
  var index, name, easing, value, hooks;

  // camelCase, specialEasing and expand cssHook pass
  for ( index in props ) {
    name = jQuery.camelCase( index );
    easing = specialEasing[ name ];
    value = props[ index ];
    if ( jQuery.isArray( value ) ) {
      easing = value[ 1 ];
      value = props[ index ] = value[ 0 ];
    }

    if ( index !== name ) {
      props[ name ] = value;
      delete props[ index ];
    }

    hooks = jQuery.cssHooks[ name ];
    if ( hooks && "expand" in hooks ) {
      value = hooks.expand( value );
      delete props[ name ];

      // not quite $.extend, this wont overwrite keys already present.
      // also - reusing 'index' from above because we have the correct "name"
      for ( index in value ) {
        if ( !( index in props ) ) {
          props[ index ] = value[ index ];
          specialEasing[ index ] = easing;
        }
      }
    } else {
      specialEasing[ name ] = easing;
    }
  }
}

jQuery.Animation = jQuery.extend( Animation, {

  tweener: function( props, callback ) {
    if ( jQuery.isFunction( props ) ) {
      callback = props;
      props = [ "*" ];
    } else {
      props = props.split(" ");
    }

    var prop,
      index = 0,
      length = props.length;

    for ( ; index < length ; index++ ) {
      prop = props[ index ];
      tweeners[ prop ] = tweeners[ prop ] || [];
      tweeners[ prop ].unshift( callback );
    }
  },

  prefilter: function( callback, prepend ) {
    if ( prepend ) {
      animationPrefilters.unshift( callback );
    } else {
      animationPrefilters.push( callback );
    }
  }
});

function defaultPrefilter( elem, props, opts ) {
  /* jshint validthis: true */
  var prop, value, toggle, tween, hooks, oldfire,
    anim = this,
    orig = {},
    style = elem.style,
    hidden = elem.nodeType && isHidden( elem ),
    dataShow = jQuery._data( elem, "fxshow" );

  // handle queue: false promises
  if ( !opts.queue ) {
    hooks = jQuery._queueHooks( elem, "fx" );
    if ( hooks.unqueued == null ) {
      hooks.unqueued = 0;
      oldfire = hooks.empty.fire;
      hooks.empty.fire = function() {
        if ( !hooks.unqueued ) {
          oldfire();
        }
      };
    }
    hooks.unqueued++;

    anim.always(function() {
      // doing this makes sure that the complete handler will be called
      // before this completes
      anim.always(function() {
        hooks.unqueued--;
        if ( !jQuery.queue( elem, "fx" ).length ) {
          hooks.empty.fire();
        }
      });
    });
  }

  // height/width overflow pass
  if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
    // Make sure that nothing sneaks out
    // Record all 3 overflow attributes because IE does not
    // change the overflow attribute when overflowX and
    // overflowY are set to the same value
    opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

    // Set display property to inline-block for height/width
    // animations on inline elements that are having width/height animated
    if ( jQuery.css( elem, "display" ) === "inline" &&
        jQuery.css( elem, "float" ) === "none" ) {

      // inline-level elements accept inline-block;
      // block-level elements need to be inline with layout
      if ( !jQuery.support.inlineBlockNeedsLayout || css_defaultDisplay( elem.nodeName ) === "inline" ) {
        style.display = "inline-block";

      } else {
        style.zoom = 1;
      }
    }
  }

  if ( opts.overflow ) {
    style.overflow = "hidden";
    if ( !jQuery.support.shrinkWrapBlocks ) {
      anim.always(function() {
        style.overflow = opts.overflow[ 0 ];
        style.overflowX = opts.overflow[ 1 ];
        style.overflowY = opts.overflow[ 2 ];
      });
    }
  }


  // show/hide pass
  for ( prop in props ) {
    value = props[ prop ];
    if ( rfxtypes.exec( value ) ) {
      delete props[ prop ];
      toggle = toggle || value === "toggle";
      if ( value === ( hidden ? "hide" : "show" ) ) {
        continue;
      }
      orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
    }
  }

  if ( !jQuery.isEmptyObject( orig ) ) {
    if ( dataShow ) {
      if ( "hidden" in dataShow ) {
        hidden = dataShow.hidden;
      }
    } else {
      dataShow = jQuery._data( elem, "fxshow", {} );
    }

    // store state if its toggle - enables .stop().toggle() to "reverse"
    if ( toggle ) {
      dataShow.hidden = !hidden;
    }
    if ( hidden ) {
      jQuery( elem ).show();
    } else {
      anim.done(function() {
        jQuery( elem ).hide();
      });
    }
    anim.done(function() {
      var prop;
      jQuery._removeData( elem, "fxshow" );
      for ( prop in orig ) {
        jQuery.style( elem, prop, orig[ prop ] );
      }
    });
    for ( prop in orig ) {
      tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

      if ( !( prop in dataShow ) ) {
        dataShow[ prop ] = tween.start;
        if ( hidden ) {
          tween.end = tween.start;
          tween.start = prop === "width" || prop === "height" ? 1 : 0;
        }
      }
    }
  }
}

function Tween( elem, options, prop, end, easing ) {
  return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
  constructor: Tween,
  init: function( elem, options, prop, end, easing, unit ) {
    this.elem = elem;
    this.prop = prop;
    this.easing = easing || "swing";
    this.options = options;
    this.start = this.now = this.cur();
    this.end = end;
    this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
  },
  cur: function() {
    var hooks = Tween.propHooks[ this.prop ];

    return hooks && hooks.get ?
      hooks.get( this ) :
      Tween.propHooks._default.get( this );
  },
  run: function( percent ) {
    var eased,
      hooks = Tween.propHooks[ this.prop ];

    if ( this.options.duration ) {
      this.pos = eased = jQuery.easing[ this.easing ](
        percent, this.options.duration * percent, 0, 1, this.options.duration
      );
    } else {
      this.pos = eased = percent;
    }
    this.now = ( this.end - this.start ) * eased + this.start;

    if ( this.options.step ) {
      this.options.step.call( this.elem, this.now, this );
    }

    if ( hooks && hooks.set ) {
      hooks.set( this );
    } else {
      Tween.propHooks._default.set( this );
    }
    return this;
  }
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
  _default: {
    get: function( tween ) {
      var result;

      if ( tween.elem[ tween.prop ] != null &&
        (!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
        return tween.elem[ tween.prop ];
      }

      // passing an empty string as a 3rd parameter to .css will automatically
      // attempt a parseFloat and fallback to a string if the parse fails
      // so, simple values such as "10px" are parsed to Float.
      // complex values such as "rotate(1rad)" are returned as is.
      result = jQuery.css( tween.elem, tween.prop, "" );
      // Empty strings, null, undefined and "auto" are converted to 0.
      return !result || result === "auto" ? 0 : result;
    },
    set: function( tween ) {
      // use step hook for back compat - use cssHook if its there - use .style if its
      // available and use plain properties where available
      if ( jQuery.fx.step[ tween.prop ] ) {
        jQuery.fx.step[ tween.prop ]( tween );
      } else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
        jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
      } else {
        tween.elem[ tween.prop ] = tween.now;
      }
    }
  }
};

// Support: IE <=9
// Panic based approach to setting things on disconnected nodes

Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
  set: function( tween ) {
    if ( tween.elem.nodeType && tween.elem.parentNode ) {
      tween.elem[ tween.prop ] = tween.now;
    }
  }
};

jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
  var cssFn = jQuery.fn[ name ];
  jQuery.fn[ name ] = function( speed, easing, callback ) {
    return speed == null || typeof speed === "boolean" ?
      cssFn.apply( this, arguments ) :
      this.animate( genFx( name, true ), speed, easing, callback );
  };
});

jQuery.fn.extend({
  fadeTo: function( speed, to, easing, callback ) {

    // show any hidden elements after setting opacity to 0
    return this.filter( isHidden ).css( "opacity", 0 ).show()

      // animate to the value specified
      .end().animate({ opacity: to }, speed, easing, callback );
  },
  animate: function( prop, speed, easing, callback ) {
    var empty = jQuery.isEmptyObject( prop ),
      optall = jQuery.speed( speed, easing, callback ),
      doAnimation = function() {
        // Operate on a copy of prop so per-property easing won't be lost
        var anim = Animation( this, jQuery.extend( {}, prop ), optall );

        // Empty animations, or finishing resolves immediately
        if ( empty || jQuery._data( this, "finish" ) ) {
          anim.stop( true );
        }
      };
      doAnimation.finish = doAnimation;

    return empty || optall.queue === false ?
      this.each( doAnimation ) :
      this.queue( optall.queue, doAnimation );
  },
  stop: function( type, clearQueue, gotoEnd ) {
    var stopQueue = function( hooks ) {
      var stop = hooks.stop;
      delete hooks.stop;
      stop( gotoEnd );
    };

    if ( typeof type !== "string" ) {
      gotoEnd = clearQueue;
      clearQueue = type;
      type = undefined;
    }
    if ( clearQueue && type !== false ) {
      this.queue( type || "fx", [] );
    }

    return this.each(function() {
      var dequeue = true,
        index = type != null && type + "queueHooks",
        timers = jQuery.timers,
        data = jQuery._data( this );

      if ( index ) {
        if ( data[ index ] && data[ index ].stop ) {
          stopQueue( data[ index ] );
        }
      } else {
        for ( index in data ) {
          if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
            stopQueue( data[ index ] );
          }
        }
      }

      for ( index = timers.length; index--; ) {
        if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
          timers[ index ].anim.stop( gotoEnd );
          dequeue = false;
          timers.splice( index, 1 );
        }
      }

      // start the next in the queue if the last step wasn't forced
      // timers currently will call their complete callbacks, which will dequeue
      // but only if they were gotoEnd
      if ( dequeue || !gotoEnd ) {
        jQuery.dequeue( this, type );
      }
    });
  },
  finish: function( type ) {
    if ( type !== false ) {
      type = type || "fx";
    }
    return this.each(function() {
      var index,
        data = jQuery._data( this ),
        queue = data[ type + "queue" ],
        hooks = data[ type + "queueHooks" ],
        timers = jQuery.timers,
        length = queue ? queue.length : 0;

      // enable finishing flag on private data
      data.finish = true;

      // empty the queue first
      jQuery.queue( this, type, [] );

      if ( hooks && hooks.stop ) {
        hooks.stop.call( this, true );
      }

      // look for any active animations, and finish them
      for ( index = timers.length; index--; ) {
        if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
          timers[ index ].anim.stop( true );
          timers.splice( index, 1 );
        }
      }

      // look for any animations in the old queue and finish them
      for ( index = 0; index < length; index++ ) {
        if ( queue[ index ] && queue[ index ].finish ) {
          queue[ index ].finish.call( this );
        }
      }

      // turn off finishing flag
      delete data.finish;
    });
  }
});

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
  var which,
    attrs = { height: type },
    i = 0;

  // if we include width, step value is 1 to do all cssExpand values,
  // if we don't include width, step value is 2 to skip over Left and Right
  includeWidth = includeWidth? 1 : 0;
  for( ; i < 4 ; i += 2 - includeWidth ) {
    which = cssExpand[ i ];
    attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
  }

  if ( includeWidth ) {
    attrs.opacity = attrs.width = type;
  }

  return attrs;
}

// Generate shortcuts for custom animations
jQuery.each({
  slideDown: genFx("show"),
  slideUp: genFx("hide"),
  slideToggle: genFx("toggle"),
  fadeIn: { opacity: "show" },
  fadeOut: { opacity: "hide" },
  fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
  jQuery.fn[ name ] = function( speed, easing, callback ) {
    return this.animate( props, speed, easing, callback );
  };
});

jQuery.speed = function( speed, easing, fn ) {
  var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
    complete: fn || !fn && easing ||
      jQuery.isFunction( speed ) && speed,
    duration: speed,
    easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
  };

  opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
    opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

  // normalize opt.queue - true/undefined/null -> "fx"
  if ( opt.queue == null || opt.queue === true ) {
    opt.queue = "fx";
  }

  // Queueing
  opt.old = opt.complete;

  opt.complete = function() {
    if ( jQuery.isFunction( opt.old ) ) {
      opt.old.call( this );
    }

    if ( opt.queue ) {
      jQuery.dequeue( this, opt.queue );
    }
  };

  return opt;
};

jQuery.easing = {
  linear: function( p ) {
    return p;
  },
  swing: function( p ) {
    return 0.5 - Math.cos( p*Math.PI ) / 2;
  }
};

jQuery.timers = [];
jQuery.fx = Tween.prototype.init;
jQuery.fx.tick = function() {
  var timer,
    timers = jQuery.timers,
    i = 0;

  fxNow = jQuery.now();

  for ( ; i < timers.length; i++ ) {
    timer = timers[ i ];
    // Checks the timer has not already been removed
    if ( !timer() && timers[ i ] === timer ) {
      timers.splice( i--, 1 );
    }
  }

  if ( !timers.length ) {
    jQuery.fx.stop();
  }
  fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
  if ( timer() && jQuery.timers.push( timer ) ) {
    jQuery.fx.start();
  }
};

jQuery.fx.interval = 13;

jQuery.fx.start = function() {
  if ( !timerId ) {
    timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
  }
};

jQuery.fx.stop = function() {
  clearInterval( timerId );
  timerId = null;
};

jQuery.fx.speeds = {
  slow: 600,
  fast: 200,
  // Default speed
  _default: 400
};

// Back Compat <1.8 extension point
jQuery.fx.step = {};

if ( jQuery.expr && jQuery.expr.filters ) {
  jQuery.expr.filters.animated = function( elem ) {
    return jQuery.grep(jQuery.timers, function( fn ) {
      return elem === fn.elem;
    }).length;
  };
}
jQuery.fn.offset = function( options ) {
  if ( arguments.length ) {
    return options === undefined ?
      this :
      this.each(function( i ) {
        jQuery.offset.setOffset( this, options, i );
      });
  }

  var docElem, win,
    box = { top: 0, left: 0 },
    elem = this[ 0 ],
    doc = elem && elem.ownerDocument;

  if ( !doc ) {
    return;
  }

  docElem = doc.documentElement;

  // Make sure it's not a disconnected DOM node
  if ( !jQuery.contains( docElem, elem ) ) {
    return box;
  }

  // If we don't have gBCR, just use 0,0 rather than error
  // BlackBerry 5, iOS 3 (original iPhone)
  if ( typeof elem.getBoundingClientRect !== core_strundefined ) {
    box = elem.getBoundingClientRect();
  }
  win = getWindow( doc );
  return {
    top: box.top  + ( win.pageYOffset || docElem.scrollTop )  - ( docElem.clientTop  || 0 ),
    left: box.left + ( win.pageXOffset || docElem.scrollLeft ) - ( docElem.clientLeft || 0 )
  };
};

jQuery.offset = {

  setOffset: function( elem, options, i ) {
    var position = jQuery.css( elem, "position" );

    // set position first, in-case top/left are set even on static elem
    if ( position === "static" ) {
      elem.style.position = "relative";
    }

    var curElem = jQuery( elem ),
      curOffset = curElem.offset(),
      curCSSTop = jQuery.css( elem, "top" ),
      curCSSLeft = jQuery.css( elem, "left" ),
      calculatePosition = ( position === "absolute" || position === "fixed" ) && jQuery.inArray("auto", [curCSSTop, curCSSLeft]) > -1,
      props = {}, curPosition = {}, curTop, curLeft;

    // need to be able to calculate position if either top or left is auto and position is either absolute or fixed
    if ( calculatePosition ) {
      curPosition = curElem.position();
      curTop = curPosition.top;
      curLeft = curPosition.left;
    } else {
      curTop = parseFloat( curCSSTop ) || 0;
      curLeft = parseFloat( curCSSLeft ) || 0;
    }

    if ( jQuery.isFunction( options ) ) {
      options = options.call( elem, i, curOffset );
    }

    if ( options.top != null ) {
      props.top = ( options.top - curOffset.top ) + curTop;
    }
    if ( options.left != null ) {
      props.left = ( options.left - curOffset.left ) + curLeft;
    }

    if ( "using" in options ) {
      options.using.call( elem, props );
    } else {
      curElem.css( props );
    }
  }
};


jQuery.fn.extend({

  position: function() {
    if ( !this[ 0 ] ) {
      return;
    }

    var offsetParent, offset,
      parentOffset = { top: 0, left: 0 },
      elem = this[ 0 ];

    // fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent
    if ( jQuery.css( elem, "position" ) === "fixed" ) {
      // we assume that getBoundingClientRect is available when computed position is fixed
      offset = elem.getBoundingClientRect();
    } else {
      // Get *real* offsetParent
      offsetParent = this.offsetParent();

      // Get correct offsets
      offset = this.offset();
      if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
        parentOffset = offsetParent.offset();
      }

      // Add offsetParent borders
      parentOffset.top  += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
      parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
    }

    // Subtract parent offsets and element margins
    // note: when an element has margin: auto the offsetLeft and marginLeft
    // are the same in Safari causing offset.left to incorrectly be 0
    return {
      top:  offset.top  - parentOffset.top - jQuery.css( elem, "marginTop", true ),
      left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true)
    };
  },

  offsetParent: function() {
    return this.map(function() {
      var offsetParent = this.offsetParent || docElem;
      while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) && jQuery.css( offsetParent, "position") === "static" ) ) {
        offsetParent = offsetParent.offsetParent;
      }
      return offsetParent || docElem;
    });
  }
});


// Create scrollLeft and scrollTop methods
jQuery.each( {scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function( method, prop ) {
  var top = /Y/.test( prop );

  jQuery.fn[ method ] = function( val ) {
    return jQuery.access( this, function( elem, method, val ) {
      var win = getWindow( elem );

      if ( val === undefined ) {
        return win ? (prop in win) ? win[ prop ] :
          win.document.documentElement[ method ] :
          elem[ method ];
      }

      if ( win ) {
        win.scrollTo(
          !top ? val : jQuery( win ).scrollLeft(),
          top ? val : jQuery( win ).scrollTop()
        );

      } else {
        elem[ method ] = val;
      }
    }, method, val, arguments.length, null );
  };
});

function getWindow( elem ) {
  return jQuery.isWindow( elem ) ?
    elem :
    elem.nodeType === 9 ?
      elem.defaultView || elem.parentWindow :
      false;
}
// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
  jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
    // margin is only for outerHeight, outerWidth
    jQuery.fn[ funcName ] = function( margin, value ) {
      var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
        extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

      return jQuery.access( this, function( elem, type, value ) {
        var doc;

        if ( jQuery.isWindow( elem ) ) {
          // As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
          // isn't a whole lot we can do. See pull request at this URL for discussion:
          // https://github.com/jquery/jquery/pull/764
          return elem.document.documentElement[ "client" + name ];
        }

        // Get document width or height
        if ( elem.nodeType === 9 ) {
          doc = elem.documentElement;

          // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest
          // unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no good, small way to fix it.
          return Math.max(
            elem.body[ "scroll" + name ], doc[ "scroll" + name ],
            elem.body[ "offset" + name ], doc[ "offset" + name ],
            doc[ "client" + name ]
          );
        }

        return value === undefined ?
          // Get width or height on the element, requesting but not forcing parseFloat
          jQuery.css( elem, type, extra ) :

          // Set width or height on the element
          jQuery.style( elem, type, value, extra );
      }, type, chainable ? margin : undefined, chainable, null );
    };
  });
});
// Limit scope pollution from any deprecated API
// (function() {

// The number of elements contained in the matched element set
jQuery.fn.size = function() {
  return this.length;
};

jQuery.fn.andSelf = jQuery.fn.addBack;

// })();
if ( typeof module === "object" && module && typeof module.exports === "object" ) {
  // Expose jQuery as module.exports in loaders that implement the Node
  // module pattern (including browserify). Do not create the global, since
  // the user will be storing it themselves locally, and globals are frowned
  // upon in the Node module world.
  module.exports = jQuery;
} else {
  // Otherwise expose jQuery to the global object as usual
  window.jQuery = window.$ = jQuery;

  // Register as a named AMD module, since jQuery can be concatenated with other
  // files that may use define, but not via a proper concatenation script that
  // understands anonymous AMD modules. A named AMD is safest and most robust
  // way to register. Lowercase jquery is used because AMD module names are
  // derived from file names, and jQuery is normally delivered in a lowercase
  // file name. Do this after creating the global so that if an AMD module wants
  // to call noConflict to hide this version of jQuery, it will work.
  if ( typeof define === "function" && define.amd ) {
    define( "jquery", [], function () { return jQuery; } );
  }
}

})( window );
},{}],32:[function(_dereq_,module,exports){
var tempElem;
var $ = _dereq_("./jquery.js");
var $b = $.build;

var that = {};

that.init = function (container){
  tempElem = container.clone().empty().removeAttr("id").css({visibility:"hidden", position:"absolute", top:-500, left:-1000, width:$(window).width()});
  $("body").append(tempElem);
  return that;
};

that.measure = function (elemToMeasure, selector){
  if(!tempElem){
    throw new Error("Must call init before measure");
  }
  //measures the real size of a previously unrendered element, by putting it in a 
  //fake form in a hidden part of the dom then taking its outerWidth then removing it.
  var clone = elemToMeasure.clone();
  //clone.show();
  tempElem.append(clone);

  var tgt = clone;
  var w = clone.outerWidth();
  var h = clone.outerHeight();
  clone.remove();
  return {w:w, h:h};
};

module.exports = that;
},{"./jquery.js":31}],33:[function(_dereq_,module,exports){
var $ = _dereq_("./jquery.js");
var $b = $.build;
var measure = _dereq_("./measure.js");

var create = function (elem, opts){
  var that = {};
  opts = $.extend({closeBtn:true}, opts);

  var modalElem, maskElem, contentElem, mainElem, closeElem, winResizeEvt;

  var makeElems = function (){
    modalElem = $b(".mktoModal",[
      maskElem = $b(".mktoModalMask"),
      contentElem = $b(".mktoModalContent", [
        closeElem = $b(".mktoModalClose", [" X "]).click(that.modalCloseClicked),
        mainElem = $b(".mktoModalMain")
      ])
    ]);
    return modalElem;
  };
  that.modalCloseClicked = function (){
    that.hide();
  };
  var positionContent = function (){
    var h = contentElem.height();
    var w = contentElem.width();
    if(!h || !w){
      setTimeout(positionContent, 25);
      return;
    }

    var winW = $(window).width();
    var winH = $(window).height();
    var scrollTop = $(window).scrollTop();
    var docHeight = $(document).height();

    var offsetW = Math.max(0, (winW/2) - (w/2));
    var offsetH = Math.max(10, (winH/2) - (h/2));
    contentElem.css({
      top:(offsetH + scrollTop )+ "px",
      left:offsetW + "px"
    });
    maskElem.css("height", docHeight);
  };
  
  that.show = function (){
    var modalElem = makeElems();
    var elemSize = measure.measure(elem);
    mainElem.css("width", elemSize.w);
    mainElem.append(elem);
    if(!opts.closeBtn){
      closeElem.remove();
    }
    maskElem.hide();
    contentElem.hide();
    positionContent();
    $("body").append(modalElem);
    maskElem.fadeIn();
    contentElem.fadeIn();
    $(window).on("resize.mktoModal", positionContent);
    return that;
  };

  that.hide = function (){
    maskElem.fadeOut();
    contentElem.fadeOut(function (){
      setTimeout(function (){
        modalElem.remove();
        $(window).off("resize.mktoModal");
      },10);
    });
    return that;
  };
  return that;
}
module.exports = create;
},{"./jquery.js":31,"./measure.js":32}],34:[function(_dereq_,module,exports){
/* Modernizr 2.6.2 (Custom Build) | MIT & BSD
 * Build: http://modernizr.com/download/#-input-inputtypes-localstorage-postmessage-addtest-prefixed-teststyles-testprop-testallprops-hasevent-prefixes-domprefixes-css_boxsizing-forms_validation-load
 * 
 * Modified by itaylor to simplify form validation checking and to make it browerserifyable. 
 */
;



var Modernizr = (function( window, document, undefined ) {

    var version = '2.6.2',

    Modernizr = {},


    docElement = document.documentElement,

    mod = 'modernizr',
    modElem = document.createElement(mod),
    mStyle = modElem.style,

    inputElem  = document.createElement('input')  ,

    smile = ':)',

    toString = {}.toString,

    prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),



    omPrefixes = 'Webkit Moz O ms',

    cssomPrefixes = omPrefixes.split(' '),

    domPrefixes = omPrefixes.toLowerCase().split(' '),


    tests = {},
    inputs = {},
    attrs = {},

    classes = [],

    slice = classes.slice,

    featureName, 


    injectElementWithStyles = function( rule, callback, nodes, testnames ) {

      var style, ret, node, docOverflow,
          div = document.createElement('div'),
                body = document.body,
                fakeBody = body || document.createElement('body');

      if ( parseInt(nodes, 10) ) {
                      while ( nodes-- ) {
              node = document.createElement('div');
              node.id = testnames ? testnames[nodes] : mod + (nodes + 1);
              div.appendChild(node);
          }
      }

                style = ['&#173;','<style id="s', mod, '">', rule, '</style>'].join('');
      div.id = mod;
          (body ? div : fakeBody).innerHTML += style;
      fakeBody.appendChild(div);
      if ( !body ) {
                fakeBody.style.background = '';
                fakeBody.style.overflow = 'hidden';
          docOverflow = docElement.style.overflow;
          docElement.style.overflow = 'hidden';
          docElement.appendChild(fakeBody);
      }

      ret = callback(div, rule);
        if ( !body ) {
          fakeBody.parentNode.removeChild(fakeBody);
          docElement.style.overflow = docOverflow;
      } else {
          div.parentNode.removeChild(div);
      }

      return !!ret;

    },



    isEventSupported = (function() {

      var TAGNAMES = {
        'select': 'input', 'change': 'input',
        'submit': 'form', 'reset': 'form',
        'error': 'img', 'load': 'img', 'abort': 'img'
      };

      function isEventSupported( eventName, element ) {

        element = element || document.createElement(TAGNAMES[eventName] || 'div');
        eventName = 'on' + eventName;

            var isSupported = eventName in element;

        if ( !isSupported ) {
                if ( !element.setAttribute ) {
            element = document.createElement('div');
          }
          if ( element.setAttribute && element.removeAttribute ) {
            element.setAttribute(eventName, '');
            isSupported = is(element[eventName], 'function');

                    if ( !is(element[eventName], 'undefined') ) {
              element[eventName] = undefined;
            }
            element.removeAttribute(eventName);
          }
        }

        element = null;
        return isSupported;
      }
      return isEventSupported;
    })(),


    _hasOwnProperty = ({}).hasOwnProperty, hasOwnProp;

    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {
      hasOwnProp = function (object, property) {
        return _hasOwnProperty.call(object, property);
      };
    }
    else {
      hasOwnProp = function (object, property) { 
        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));
      };
    }


    if (!Function.prototype.bind) {
      Function.prototype.bind = function bind(that) {

        var target = this;

        if (typeof target != "function") {
            throw new TypeError();
        }

        var args = slice.call(arguments, 1),
            bound = function () {

            if (this instanceof bound) {

              var F = function(){};
              F.prototype = target.prototype;
              var self = new F();

              var result = target.apply(
                  self,
                  args.concat(slice.call(arguments))
              );
              if (Object(result) === result) {
                  return result;
              }
              return self;

            } else {

              return target.apply(
                  that,
                  args.concat(slice.call(arguments))
              );

            }

        };

        return bound;
      };
    }

    function setCss( str ) {
        mStyle.cssText = str;
    }

    function setCssAll( str1, str2 ) {
        return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));
    }

    function is( obj, type ) {
        return typeof obj === type;
    }

    function contains( str, substr ) {
        return !!~('' + str).indexOf(substr);
    }

    function testProps( props, prefixed ) {
        for ( var i in props ) {
            var prop = props[i];
            if ( !contains(prop, "-") && mStyle[prop] !== undefined ) {
                return prefixed == 'pfx' ? prop : true;
            }
        }
        return false;
    }

    function testDOMProps( props, obj, elem ) {
        for ( var i in props ) {
            var item = obj[props[i]];
            if ( item !== undefined) {

                            if (elem === false) return props[i];

                            if (is(item, 'function')){
                                return item.bind(elem || obj);
                }

                            return item;
            }
        }
        return false;
    }

    function testPropsAll( prop, prefixed, elem ) {

        var ucProp  = prop.charAt(0).toUpperCase() + prop.slice(1),
            props   = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');

            if(is(prefixed, "string") || is(prefixed, "undefined")) {
          return testProps(props, prefixed);

            } else {
          props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');
          return testDOMProps(props, prefixed, elem);
        }
    }    tests['postmessage'] = function() {
      return !!window.postMessage;
    };



    tests['localstorage'] = function() {
        try {
            localStorage.setItem(mod, mod);
            localStorage.removeItem(mod);
            return true;
        } catch(e) {
            return false;
        }
    };


    function webforms() {
                                            Modernizr['input'] = (function( props ) {
            for ( var i = 0, len = props.length; i < len; i++ ) {
                attrs[ props[i] ] = !!(props[i] in inputElem);
            }
            if (attrs.list){
                                  attrs.list = !!(document.createElement('datalist') && window.HTMLDataListElement);
            }
            return attrs;
        })('autocomplete autofocus list placeholder max min multiple pattern required step'.split(' '));
                            Modernizr['inputtypes'] = (function(props) {

            for ( var i = 0, bool, inputElemType, defaultView, len = props.length; i < len; i++ ) {

                inputElem.setAttribute('type', inputElemType = props[i]);
                bool = inputElem.type !== 'text';

                                                    if ( bool ) {

                    inputElem.value         = smile;
                    inputElem.style.cssText = 'position:absolute;visibility:hidden;';

                    if ( /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined ) {

                      docElement.appendChild(inputElem);
                      defaultView = document.defaultView;

                                        bool =  defaultView.getComputedStyle &&
                              defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== 'textfield' &&
                                                                                  (inputElem.offsetHeight !== 0);

                      docElement.removeChild(inputElem);

                    } else if ( /^(search|tel)$/.test(inputElemType) ){
                                                                                    } else if ( /^(url|email)$/.test(inputElemType) ) {
                                        bool = inputElem.checkValidity && inputElem.checkValidity() === false;

                    } else {
                                        bool = inputElem.value != smile;
                    }
                }

                inputs[ props[i] ] = !!bool;
            }
            return inputs;
        })('search tel url email datetime date month week time datetime-local number range color'.split(' '));
        }
    for ( var feature in tests ) {
        if ( hasOwnProp(tests, feature) ) {
                                    featureName  = feature.toLowerCase();
            Modernizr[featureName] = tests[feature]();

            classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);
        }
    }

    Modernizr.input || webforms();


     Modernizr.addTest = function ( feature, test ) {
       if ( typeof feature == 'object' ) {
         for ( var key in feature ) {
           if ( hasOwnProp( feature, key ) ) {
             Modernizr.addTest( key, feature[ key ] );
           }
         }
       } else {

         feature = feature.toLowerCase();

         if ( Modernizr[feature] !== undefined ) {
                                              return Modernizr;
         }

         test = typeof test == 'function' ? test() : test;

         if (typeof enableClasses !== "undefined" && enableClasses) {
           docElement.className += ' ' + (test ? '' : 'no-') + feature;
         }
         Modernizr[feature] = test;

       }

       return Modernizr; 
     };


    setCss('');
    modElem = inputElem = null;


    Modernizr._version      = version;

    Modernizr._prefixes     = prefixes;
    Modernizr._domPrefixes  = domPrefixes;
    Modernizr._cssomPrefixes  = cssomPrefixes;


    Modernizr.hasEvent      = isEventSupported;

    Modernizr.testProp      = function(prop){
        return testProps([prop]);
    };

    Modernizr.testAllProps  = testPropsAll;


    Modernizr.testStyles    = injectElementWithStyles;
    Modernizr.prefixed      = function(prop, obj, elem){
      if(!obj) {
        return testPropsAll(prop, 'pfx');
      } else {
            return testPropsAll(prop, obj, elem);
      }
    };

    return Modernizr;

})(window, window.document);
var yepnope = _dereq_("./yepnope.js");
Modernizr.load=function(){yepnope.apply(window,[].slice.call(arguments,0));};

// developer.mozilla.org/en/CSS/box-sizing
// github.com/Modernizr/Modernizr/issues/248

Modernizr.addTest("boxsizing",function(){
  return Modernizr.testAllProps("boxSizing") && (document.documentMode === undefined || document.documentMode > 7);
});

Modernizr.addTest("borderradius", function (){
  return Modernizr.testAllProps('borderRadius');    
});

Modernizr.addTest('formvalidation', function(){
  var form = document.createElement('form');
  return ('checkValidity' in form);
});

Modernizr.addTest('cors', function (){
  return !!(window.XMLHttpRequest && 'withCredentials' in new window.XMLHttpRequest());
});

Modernizr.addTest('textareamaxlength', function (){
  var ta = document.createElement('textarea');
  return ('maxLength' in ta);
});

Modernizr.addTest('csstransforms', function() {
  return !!Modernizr.testAllProps('transform');
});

Modernizr.addTest('csschecked', function(){
  return Modernizr.testStyles('#modernizr input {width:100px} #modernizr input:checked {width:200px;display:block}', function(elem, rule){
     var cb = document.createElement('input');
     cb.setAttribute("type", "checkbox");
     cb.setAttribute("checked", "checked");
     elem.appendChild(cb);
     return cb.offsetWidth >= 200;
   });
 });

Modernizr.addTest('json', function (){
  return !! (window.JSON && JSON.stringify && JSON.parse);
});

module.exports = Modernizr;

},{"./yepnope.js":41}],35:[function(_dereq_,module,exports){
var fh = _dereq_("./fields/fieldHelpers.js");
var $ = _dereq_("./jquery.js");

var inArr = function (arr, val){
  return $.inArray(val, arr) != -1;
}
var truthish = ["true", "1", "yes", "Yes"];
var falseish = ["false", "0", "no", "No"];
var booleanish = truthish.concat(falseish);


//Looks for the real string value of a pick list value.
//So if the field has values "Yes"/"No" and you pass 1 as the candidate, it'd return "Yes".
//If it can't find a match, the stringified input is returned.
function findPicklistRealValue(field, candidate){
  var orig = candidate;
  candidate = ("" + candidate);
  var arrToUse = inArr(truthish, candidate) ? truthish : falseish; 

  for(var i = 0; i < field.PicklistValues.length ; i++){
    var realVal = field.PicklistValues[i].value || "";
    if(inArr(arrToUse, realVal)){
      return realVal;
    }
  }
  return "" + orig; //Not found, return string  
}

function hasTruthyAndFalsey(field){
  var hasTruthy = false;
  var hasFalsey = false;

  for(var i=0; i < field.PicklistValues.length ; i++ ){
    var val = (field.PicklistValues[i].value || "");
    if(inArr(truthish, val)){
      hasTruthy = true;
    }
    if(inArr(falseish, val)){
      hasFalsey = true;
    }
  }
  return hasTruthy && hasFalsey;
}

function hasBlankValue(field){
  for(var i=0; i < field.PicklistValues.length ; i++ ){
    var val = field.PicklistValues[i].value;
    if(val === ""){
      return true;
    }
  }
  return false;
}


//For a picklist to be boolean, it must have a truthy and a falsey value and must have 2 or 3 choices (blanks are allowed)
//but it cannot be a multi-select picklist.
function isPicklistBoolean(field){
  if(!field.PicklistValues || field.IsMultiselect){
    return false;
  }
  if(field.PicklistValues.length == 2){
    return hasTruthyAndFalsey(field);
  }
  if(field.PicklistValues.length == 3){
    return hasTruthyAndFalsey(field) && hasBlankValue(field);
  }
  return false;
}

//A checkbox is a boolean if it has exactly one field, and that field is truthy
function isCheckboxBoolean(field){
  if(!field.PicklistValues){
    return false;
  }
  return field.PicklistValues.length == 1 && inArr(truthish, (field.PicklistValues[0].value || ""));
}

//For a radio to be boolean, it must have a truthy and a falsey value and must have 2 choices
function isRadioBoolean(field){
  if(!field.PicklistValues){
    return false;
  }
  if(field.PicklistValues.length == 2){
    return hasTruthyAndFalsey(field);
  }
  return false;
}

function coercePicklist(field, value){
  if(value === null || value === undefined){
    return "";
  }
  //A picklist is either a boolean yes/no, or a nullable boolean ""/yes/no, 
  //a single string, or a comma separated string representing multiple values being selected.
  var isBool = isPicklistBoolean(field); 
  if(value === "" && isBool && !hasBlankValue(field)){
    value = false;
  }
  if(value !== "" && isBool){
    value = findPicklistRealValue(field, value);
  }
  return "" + value;
}

function coerceRadio(field, value){
  if(value === null || value === undefined){
    return "";
  }
  //A radio without a blank field that is set to empty string "" should 
  //check the falsey of the two values.
  var isBool = isRadioBoolean(field); 
  if(value === "" && isBool){
    value = false;
  }
  if(isBool){
    value = findPicklistRealValue(field, value);
  }
  return "" + value;
}

//Form prefill sets full iso date times like this...
//2001-01-01 15:00
//but we only accept the date part.
function coerceDate(field, value){
  if(value === null || value === undefined){
    return "";
  }
  value = "" + value;
  return value.split(/\s|T/)[0];
}

function coerceCheckbox(field, value){
  if(value === null || value === undefined){
    return "";
  }
  if(isCheckboxBoolean(field)){
    value = findPicklistRealValue(field, value);
  }
  return "" + value;
}

function coerceTypes(prefillData, formData){
  var result = {};
  var fieldsByName = fh.getFieldsByName(fh.getFlattenedFields(formData));
  $.each(prefillData, function (key, value){
    var field = fieldsByName[key];
    //Don't set values for fields that don't exist in the form
    if(!field || value === null){
      //mktoPrefilFields uses null to mean "Never Set", not "has a value and that value is null" 
      //so any field with value === null should be removed from the list of fields to set and 
      //remain with its current value;
      return;
    }
    var dt = field.Datatype;
    if(dt === "picklist"){
      result[key] = coercePicklist(field, value);
    }else if(dt === "radio"){
      result[key] = coerceRadio(field, value);
    }else if (dt === "checkbox" || dt === "single_checkbox"){
      result[key] = coerceCheckbox(field, value);
    }else if (dt === "date"){
      result[key] = coerceDate(field, value);
    }else{
      value = "" + value;
      result[key] = value;
    }
  });
  return result;
}

module.exports.coerceTypes = coerceTypes;

},{"./fields/fieldHelpers.js":15,"./jquery.js":31}],36:[function(_dereq_,module,exports){
module.exports = safeLog;

function safeLog(){
  try{
    if(typeof console !== 'undefined' && typeof console.log === 'function'){
      try{
        console.log.apply(console, arguments);
      }catch(ex){
        console.log(Array.prototype.slice.call(arguments, 0));
      }
    }
  }catch(ex){
    //logging is not worth throwing an exception over
  }
}
},{}],37:[function(_dereq_,module,exports){
//In a perfect world, Old IE wouldn't exist, or we wouldn't care about it.
//In a more perfect world, Browserify would be able to handle/guarantee old IE compatibility
//In an ok world, we'd be able to include a whole ES5-shim without bloating the download size or messing up customer's existing JS
//In the real world, we're stuck with only monkey patching the things that are blatantly broken.

//This file contains selected ES5 monkey patches that are as minimal in size and scope as possible. 
module.exports = {};
var $ = _dereq_("./jquery.js");

//
// Function
// ========
//

// ES-5 15.3.4.5
// http://es5.github.com/#x15.3.4.5

function Empty() {}

if (!Function.prototype.bind) {
    Function.prototype.bind = function bind(that) { // .length is 1
        // 1. Let Target be the this value.
        var target = this;
        // 2. If IsCallable(Target) is false, throw a TypeError exception.
        if (typeof target != "function") {
            throw new TypeError("Function.prototype.bind called on incompatible " + target);
        }
        // 3. Let A be a new (possibly empty) internal list of all of the
        //   argument values provided after thisArg (arg1, arg2 etc), in order.
        // XXX slicedArgs will stand in for "A" if used
        var args = _Array_slice_.call(arguments, 1); // for normal call
        // 4. Let F be a new native ECMAScript object.
        // 11. Set the [[Prototype]] internal property of F to the standard
        //   built-in Function prototype object as specified in 15.3.3.1.
        // 12. Set the [[Call]] internal property of F as described in
        //   15.3.4.5.1.
        // 13. Set the [[Construct]] internal property of F as described in
        //   15.3.4.5.2.
        // 14. Set the [[HasInstance]] internal property of F as described in
        //   15.3.4.5.3.
        var binder = function () {

            if (this instanceof bound) {
                // 15.3.4.5.2 [[Construct]]
                // When the [[Construct]] internal method of a function object,
                // F that was created using the bind function is called with a
                // list of arguments ExtraArgs, the following steps are taken:
                // 1. Let target be the value of F's [[TargetFunction]]
                //   internal property.
                // 2. If target has no [[Construct]] internal method, a
                //   TypeError exception is thrown.
                // 3. Let boundArgs be the value of F's [[BoundArgs]] internal
                //   property.
                // 4. Let args be a new list containing the same values as the
                //   list boundArgs in the same order followed by the same
                //   values as the list ExtraArgs in the same order.
                // 5. Return the result of calling the [[Construct]] internal
                //   method of target providing args as the arguments.

                var result = target.apply(
                    this,
                    args.concat(_Array_slice_.call(arguments))
                );
                if (Object(result) === result) {
                    return result;
                }
                return this;

            } else {
                // 15.3.4.5.1 [[Call]]
                // When the [[Call]] internal method of a function object, F,
                // which was created using the bind function is called with a
                // this value and a list of arguments ExtraArgs, the following
                // steps are taken:
                // 1. Let boundArgs be the value of F's [[BoundArgs]] internal
                //   property.
                // 2. Let boundThis be the value of F's [[BoundThis]] internal
                //   property.
                // 3. Let target be the value of F's [[TargetFunction]] internal
                //   property.
                // 4. Let args be a new list containing the same values as the
                //   list boundArgs in the same order followed by the same
                //   values as the list ExtraArgs in the same order.
                // 5. Return the result of calling the [[Call]] internal method
                //   of target providing boundThis as the this value and
                //   providing args as the arguments.

                // equiv: target.call(this, ...boundArgs, ...args)
                return target.apply(
                    that,
                    args.concat(_Array_slice_.call(arguments))
                );

            }

        };

        // 15. If the [[Class]] internal property of Target is "Function", then
        //     a. Let L be the length property of Target minus the length of A.
        //     b. Set the length own property of F to either 0 or L, whichever is
        //       larger.
        // 16. Else set the length own property of F to 0.

        var boundLength = Math.max(0, target.length - args.length);

        // 17. Set the attributes of the length own property of F to the values
        //   specified in 15.3.5.1.
        var boundArgs = [];
        for (var i = 0; i < boundLength; i++) {
            boundArgs.push("$" + i);
        }

        // XXX Build a dynamic function with desired amount of arguments is the only 
        // way to set the length property of a function. 
        // In environments where Content Security Policies enabled (Chrome extensions, 
        // for ex.) all use of eval or Function costructor throws an exception. 
        // However in all of these environments Function.prototype.bind exists 
        // and so this code will never be executed.
        /*jshint -W061 */
        var bound = Function("binder", "return function(" + boundArgs.join(",") + "){return binder.apply(this,arguments)}")(binder);

        if (target.prototype) {
            Empty.prototype = target.prototype;
            bound.prototype = new Empty();
            // Clean up dangling references.
            Empty.prototype = null;
        }

        // TODO
        // 18. Set the [[Extensible]] internal property of F to true.

        // TODO
        // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).
        // 20. Call the [[DefineOwnProperty]] internal method of F with
        //   arguments "caller", PropertyDescriptor {[[Get]]: thrower, [[Set]]:
        //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and
        //   false.
        // 21. Call the [[DefineOwnProperty]] internal method of F with
        //   arguments "arguments", PropertyDescriptor {[[Get]]: thrower,
        //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},
        //   and false.

        // TODO
        // NOTE Function objects created using Function.prototype.bind do not
        // have a prototype property or the [[Code]], [[FormalParameters]], and
        // [[Scope]] internal properties.
        // XXX can't delete prototype in pure-js.

        // 22. Return F.
        return bound;
    };
}

// Shortcut to an often accessed properties, in order to avoid multiple
// dereference that costs universally.
// _Please note: Shortcuts are defined after `Function.prototype.bind` as we
// us it in defining shortcuts.
var call = Function.prototype.call;
var prototypeOfArray = Array.prototype;
var prototypeOfObject = Object.prototype;
var _Array_slice_ = prototypeOfArray.slice;
// Having a toString local variable name breaks in Opera so use _toString.
var _toString = call.bind(prototypeOfObject.toString);
var owns = call.bind(prototypeOfObject.hasOwnProperty);


// ES5 15.2.3.14
// http://es5.github.com/#x15.2.3.14
if (!Object.keys) {
    // http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation
    var hasDontEnumBug = true,
        hasProtoEnumBug = (function () {}).propertyIsEnumerable('prototype'),
        dontEnums = [
            "toString",
            "toLocaleString",
            "valueOf",
            "hasOwnProperty",
            "isPrototypeOf",
            "propertyIsEnumerable",
            "constructor"
        ],
        dontEnumsLength = dontEnums.length;

    for (var key in {"toString": null}) {
        hasDontEnumBug = false;
    }

    /* jshint -W004 */
    Object.keys = function keys(object) {
        var isFunction = _toString(object) === '[object Function]',
            isObject = object !== null && typeof object === 'object';

        if (!isObject && !isFunction) {
            throw new TypeError("Object.keys called on a non-object");
        }

        var keys = [],
            skipProto = hasProtoEnumBug && isFunction;
        for (var name in object) {
            if (!(skipProto && name === 'prototype') && owns(object, name)) {
                keys.push(name);
            }
        }

        if (hasDontEnumBug) {
            var ctor = object.constructor,
                skipConstructor = ctor && ctor.prototype === object;
            for (var i = 0; i < dontEnumsLength; i++) {
                var dontEnum = dontEnums[i];
                if (!(skipConstructor && dontEnum === 'constructor') && owns(object, dontEnum)) {
                    keys.push(dontEnum);
                }
            }
        }
        return keys;
    };
}

if(!String.prototype.trim){
  String.prototype.trim = function (){
    return $.trim(this);
  }
}

if (!Array.prototype.map){
  Array.prototype.map = function(fn){
    return $.map(this, fn);
  }
}

// ECMA-262, 3rd B.2.3
// Note an ECMAScript standart, although ECMAScript 3rd Edition has a
// non-normative section suggesting uniform semantics and it should be
// normalized across all browsers
// [bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE
if ("".substr && "0b".substr(-1) !== "b") {
    var string_substr = String.prototype.substr;
    /**
     *  Get the substring of a string
     *  @param  {integer}  start   where to start the substring
     *  @param  {integer}  length  how many characters to return
     *  @return {string}
     */
    String.prototype.substr = function(start, length) {
        return string_substr.call(
            this,
            start < 0 ? ((start = this.length + start) < 0 ? 0 : start) : start,
            length
        );
    }
}
},{"./jquery.js":31}],38:[function(_dereq_,module,exports){
var $ = _dereq_("./jquery.js");
/**  
  Weird token template renderer.
  "Tokens" look like {{namespace.name:attribute=value&attribute2=some other value}}.  
  Sometimes, a token is a simple substitution, sometimes it's a method call to pass a value.
 
  so given a string template
  "here is a value tag: {{token.number1}} and here is a method call tag: {{something.special:key=value}}""
  And mappings object:
  { 
    token:{
      number1:1
    },
    something:{
      special:function (attrs){
        return "special " + attrs.key;
      }
    }
  }
  You'd get "here is a value tag: 1 and here is a method call tag: special value"
*/
function tokenTemplate (template, mappings){
  var tokens = template.match(/\{\{.*?\}\}/g);
  if(!tokens){
    return template;
  }
  var swaps = {}
  $.each(tokens, function (i, token){
    var tok = token.match(/\{\{\s?(\w*)\.(\w*)\s?:?\s?(.*?)\}\}/);
    if(tok){
      var tokVal = tok[0];
      var namespace = tok[1];
      var name= tok[2];
      var attribs = tok[3] || "";
      if(!namespace || !name || !mappings[namespace] || !mappings[namespace][name]){
        return;
      }
      var thing = mappings[namespace][name];
      if(typeof thing == "function"){
        attribParts = attribs.split("&");
        var attribMap = {};
        $.each(attribParts, function (i, attr){
          var p = attr.split("=");
          if(p.length == 2){
            attribMap[$.trim(decodeURIComponent(p[0]))] = $.trim(decodeURIComponent(p[1]));
          }
        });
        swaps[tokVal] = thing(attribMap);
      }else{
        swaps[tokVal] = thing.toString();
      }
    }
  });
  var result = template;
  $.each(swaps, function (k, v){
    result = result.split(k).join(v);
  });
  return result;
}

module.exports = tokenTemplate;
},{"./jquery.js":31}],39:[function(_dereq_,module,exports){
var url = _dereq_("url");
var $ = _dereq_("./jquery.js");

function swapHostsProtocols(dest, source){
  if(!dest || !source){
    return dest;
  }
  dest = url.parse(dest);
  source = url.parse(source);
  dest.protocol = source.protocol;
  dest.host = source.host;
  return url.format(dest);
}

//This function takes a url like:
//http://whatever.mycustomercname.com/foobar.html?blah=whatever as dest
//and a url like:
//https://pod-name.marketo.com/lp/mycustomername/fizbuzz.html as source
//and creates a new url that preserves the customer source protocol, hostname, and partial path, like:
//https://pod-name.markteo.com/lp/mycustomername/foobar.html?blah=whatever

function remapLandingPageUrl(dest, source){
  if(!dest || !source){
    return dest;
  }
  dest = url.parse(dest);
  source = url.parse(source);
  dest.protocol = source.protocol;
  dest.host = source.host;
  destPathParts = dest.path.split("/");
  sourcePathParts = source.path.split("/");
  if(sourcePathParts[1] === "lp" && sourcePathParts.length >= 3 && destPathParts[1] !== "lp"){
    dest.pathname = sourcePathParts.slice(0, 3).join("/").concat(dest.pathname);
  }
  return url.format(dest);
}

function addQueryParams(u, params){
  var urlObj = url.parse(u, true);
  $.extend(urlObj.query, params);
  urlObj.search = "";
  u = url.format(urlObj);
  return u;
}

function removeQueryParams(u, params){
  if(!params){
    return u;
  }
  if(!$.isArray(params)){
    params = [""+params]
  }
  var urlObj = url.parse(u, true);
  $.each(params, function (i, param){
    delete urlObj.query[param];
  });
  urlObj.search = "";
  u = url.format(urlObj);
  return u;
}

module.exports = {
  swapHostsProtocols:swapHostsProtocols,
  addQueryParams:addQueryParams,
  removeQueryParams:removeQueryParams,
  remapLandingPageUrl:remapLandingPageUrl
};
},{"./jquery.js":31,"url":6}],40:[function(_dereq_,module,exports){
var $ = _dereq_("./jquery.js");
var $b = $.build;
var measure = _dereq_("./measure.js");
var modernizr = _dereq_("./modernizr.js");

var Validation = function (formElem){
  var that = {};
  that.currentErrorElem = null;
  that.currentErrorMsg = null;
  var selector = ".mktoFieldDescriptor";

  that.checkOne = function(elem){
    var okRequired = true;
    var okValidator = true;
    var desc = elem.data("mktoFieldDescriptor"); 
    var val = desc.val();
    if(desc.required){
      if(desc.requiredValFn){
        okRequired = desc.requiredValFn(val);
      }else{
        okRequired = !! $.trim(val);
      }
    }
    if(desc.validator){
      okValidator = desc.validator(desc.val());
    }
    if(okRequired && okValidator && desc.validatorElem){
      desc.validatorElem.removeClass("mktoInvalid");
      desc.validatorElem.addClass("mktoValid");
    }
    else if(desc.validatorElem){
      desc.validatorElem.removeClass("mktoValid");
      desc.validatorElem.addClass("mktoInvalid");
    }
    if(!okRequired){
      return desc.requiredMessage || desc.validationMessage || "This field is required";
    }
    if(!okValidator){
      return desc.validationMessage || "Validation failed";
    }
    return null;
  };

  that.checkOneAndHide = function (){
    var e = $(this);
    var msg = that.checkOne(e);
    if(!msg && that.currentErrorMsg){
      that.currentErrorMsg.fadeOut();  
    }      
  }

  that.checkOneAndShow = function (){
    var e = $(this);  
    if(e.data("mktoErrorShowBlocked")){
      return that.checkOneAndHide.call(this);
    }
    var validatorElem = e.data("mktoFieldDescriptor").validatorElem;
    var msg = that.checkOne(e);
    if(msg){
      if(that.currentErrorElem != e){
        if(that.currentErrorMsg){
          that.currentErrorMsg.fadeOut();
        }
        that.showError(validatorElem, msg);   
      }     
    }else{
      if(that.currentErrorMsg){
        that.currentErrorMsg.fadeOut();  
      }      
    }
  }

  that.initScoped = function (scope){
    var initFn = function (i, e){
      e = $(e);
      e.data("mktoErrorShowBlocked", true);
      var unblock = function (){
        e.data("mktoErrorShowBlocked", false);
        that.checkOneAndHide.call(this);
      }
      e.on("focusin", that.checkOneAndShow)
        .on("focusout", unblock)
        .on("keyup", unblock)
        .on("click", that.checkOneAndHide);
    };
    scope.find(selector).each(initFn);
    if(scope.is(selector)){
      var e = scope.get(0); 
      initFn.call(e, 0, e);
    }
  }

  that.init = function (){
    that.clear();
    that.initScoped(formElem);
  }

  that.showError = function (elem, errorMsg){
    if(that.currentErrorMsg){
      that.currentErrorMsg.remove();
    }
    var arrowWrap;
    var errorBox = $b(".mktoError", [
      arrowWrap = $b(".mktoErrorArrowWrap",[$b(".mktoErrorArrow")]),
      $b(".mktoErrorMsg", $b.html(errorMsg))
    ]).hide();

    if(!modernizr.csstransforms){
      arrowWrap.addClass("mktoArrowImage");
    }

    elem.after(errorBox);
    that.currentErrorElem = elem;
    that.currentErrorMsg = errorBox;
    var dims = measure.measure(errorBox);
    var right;
    var ow = elem.outerWidth();
    if( ow < dims.w){
      right = -1 * (dims.w - ow); 
    }else{
      right = (ow - dims.w) / 2;
    }
    errorBox.css({
      right: right,
      bottom: -1 * dims.h
    })
    errorBox.fadeIn();    
  };

  that.check = function (){
    that.clear();
    var firstError = null;
    formElem.find(selector).each(function (){
      var e = $(this);
      e.data("mktoErrorShowBlocked", false);
      var errorMsg = that.checkOne(e);
      if(errorMsg && !firstError){
        firstError = e;
      }
    })
    if(firstError){
      var desc = firstError.data("mktoFieldDescriptor");
      var errorElem = desc.validatorFocusElem || desc.validatorElem;
      if(errorElem){
        setTimeout(function (){
          errorElem.focus();
        }, 10);
      }
      return false;
    }
    return true;
  };

  that.clear = function (){
    that.currentErrorElem = null;
    that.currentErrorMsg = null;
    formElem.find(".mktoInvalid").removeClass("mktoInvalid");
    formElem.find(".mktoValid").removeClass("mktoValid"); 
    formElem.find(".mktoError").remove(); 
  };
  return that;
}

module.exports = Validation
},{"./jquery.js":31,"./measure.js":32,"./modernizr.js":34}],41:[function(_dereq_,module,exports){
// yepnope.js
// Version - 1.5.4pre
//
// by
// Alex Sexton - @SlexAxton - AlexSexton[at]gmail.com
// Ralph Holzmann - @ralphholzmann - ralphholzmann[at]gmail.com
//
// http://yepnopejs.com/
// https://github.com/SlexAxton/yepnope.js/
//
// Tri-license - WTFPL | MIT | BSD
//
// Please minify before use.
// Also available as Modernizr.load via the Modernizr Project
//
( function ( window, doc, undef ) {

var docElement            = doc.documentElement,
    sTimeout              = window.setTimeout,
    firstScript           = doc.getElementsByTagName( "script" )[ 0 ],
    toString              = {}.toString,
    execStack             = [],
    started               = 0,
    noop                  = function () {},
    // Before you get mad about browser sniffs, please read:
    // https://github.com/Modernizr/Modernizr/wiki/Undetectables
    // If you have a better solution, we are actively looking to solve the problem
    isGecko               = ( "MozAppearance" in docElement.style ),
    isGeckoLTE18          = isGecko && !! doc.createRange().compareNode,
    insBeforeObj          = isGeckoLTE18 ? docElement : firstScript.parentNode,
    // Thanks to @jdalton for showing us this opera detection (by way of @kangax) (and probably @miketaylr too, or whatever...)
    isOpera               = window.opera && toString.call( window.opera ) == "[object Opera]",
    isIE                  = !! doc.attachEvent && !isOpera,
    // isOlderWebkit fix for #95 - https://github.com/SlexAxton/yepnope.js/issues/95
    isOlderWebkit     = ( 'webkitAppearance' in docElement.style ) && !( 'async' in doc.createElement('script') ),
    strJsElem             = isGecko ? "object" : (isIE || isOlderWebkit)  ? "script" : "img",
    strCssElem            = isIE ? "script" : (isOlderWebkit) ? "img" : strJsElem,
    isArray               = Array.isArray || function ( obj ) {
      return toString.call( obj ) == "[object Array]";
    },
    isObject              = function ( obj ) {
      return Object(obj) === obj;
    },
    isString              = function ( s ) {
      return typeof s == "string";
    },
    isFunction            = function ( fn ) {
      return toString.call( fn ) == "[object Function]";
    },
    readFirstScript       = function() {
        if (!firstScript || !firstScript.parentNode) {
            firstScript = doc.getElementsByTagName( "script" )[ 0 ];
        }
    },
    globalFilters         = [],
    scriptCache           = {},
    prefixes              = {
      // key value pair timeout options
      timeout : function( resourceObj, prefix_parts ) {
        if ( prefix_parts.length ) {
          resourceObj['timeout'] = prefix_parts[ 0 ];
        }
        return resourceObj;
      }
    },
    handler,
    yepnope;

  /* Loader helper functions */
  function isFileReady ( readyState ) {
    // Check to see if any of the ways a file can be ready are available as properties on the file's element
    return ( ! readyState || readyState == "loaded" || readyState == "complete" || readyState == "uninitialized" );
  }


  // Takes a preloaded js obj (changes in different browsers) and injects it into the head
  // in the appropriate order
  function injectJs ( src, cb, attrs, timeout, /* internal use */ err, internal ) {
    
    var script = doc.createElement( "script" ),
        done, i;

    timeout = timeout || yepnope['errorTimeout'];

    script.src = src;

    // Add our extra attributes to the script element
    for ( i in attrs ) {
        script.setAttribute( i, attrs[ i ] );
    }

    cb = internal ? executeStack : ( cb || noop );

    // Bind to load events
    script.onreadystatechange = script.onload = function () {

      if ( ! done && isFileReady( script.readyState ) ) {

        // Set done to prevent this function from being called twice.
        done = 1;
        cb();

        // Handle memory leak in IE
        script.onload = script.onreadystatechange = null;
      }
    };

    // 404 Fallback
    setTimeout(function () {
      if ( ! done ) {
        done = 1;
        // Might as well pass in an error-state if we fire the 404 fallback
        cb(1);
      }
    }, timeout );

    // Inject script into to document
    // or immediately callback if we know there
    // was previously a timeout error
    readFirstScript();
    err ? script.onload() : firstScript.parentNode.insertBefore( script, firstScript );
  }

  // Takes a preloaded css obj (changes in different browsers) and injects it into the head
  function injectCss ( href, cb, attrs, timeout, /* Internal use */ err, internal ) {

    // Create stylesheet link
    var link = doc.createElement( "link" ),
        done, i;

    timeout = timeout || yepnope['errorTimeout'];

    cb = internal ? executeStack : ( cb || noop );

    // Add attributes
    link.href = href;
    link.rel  = "stylesheet";
    link.type = "text/css";

    // Add our extra attributes to the link element
    for ( i in attrs ) {
      link.setAttribute( i, attrs[ i ] );
    }

    if ( ! err ) {
      readFirstScript();
      firstScript.parentNode.insertBefore( link, firstScript );
      setTimeout(cb, 0);
    }
  }

  function executeStack ( ) {
    // shift an element off of the stack
    var i   = execStack.shift();
    started = 1;

    // if a is truthy and the first item in the stack has an src
    if ( i ) {
      // if it's a script, inject it into the head with no type attribute
      if ( i['t'] ) {
        // Inject after a timeout so FF has time to be a jerk about it and
        // not double load (ignore the cache)
        setTimeout( function () {
          (i['t'] == "c" ?  yepnope['injectCss'] : yepnope['injectJs'])( i['s'], 0, i['a'], i['x'], i['e'], 1 );
        }, 0 );
      }
      // Otherwise, just call the function and potentially run the stack
      else {
        i();
        executeStack();
      }
    }
    else {
      // just reset out of recursive mode
      started = 0;
    }
  }

  function preloadFile ( elem, url, type, splicePoint, dontExec, attrObj, timeout ) {

    timeout = timeout || yepnope['errorTimeout'];

    // Create appropriate element for browser and type
    var preloadElem = doc.createElement( elem ),
        done        = 0,
        firstFlag   = 0,
        stackObject = {
          "t": type,     // type
          "s": url,      // src
        //r: 0,        // ready
          "e": dontExec,// set to true if we don't want to reinject
          "a": attrObj,
          "x": timeout
        };

    // The first time (common-case)
    if ( scriptCache[ url ] === 1 ) {
      firstFlag = 1;
      scriptCache[ url ] = [];
    }

    function onload ( first ) {
      // If the script/css file is loaded
      if ( ! done && isFileReady( preloadElem.readyState ) ) {

        // Set done to prevent this function from being called twice.
        stackObject['r'] = done = 1;

        ! started && executeStack();

        if ( first ) {
          if ( elem != "img" ) {
            setTimeout(function(){ insBeforeObj.removeChild( preloadElem ) }, 50);
          }

          for ( var i in scriptCache[ url ] ) {
            if ( scriptCache[ url ].hasOwnProperty( i ) ) {
              scriptCache[ url ][ i ].onload();
            }
          }
          
          // Handle memory leak in IE
           preloadElem.onload = preloadElem.onreadystatechange = null;
        }
      }
    }


    // Setting url to data for objects or src for img/scripts
    if ( elem == "object" ) {
      preloadElem.data = url;
    
      // Setting the type attribute to stop Firefox complaining about the mimetype when running locally.
      // The type doesn't matter as long as it's real, thus text/css instead of text/javascript.
      preloadElem.setAttribute("type", "text/css");
    } else {
      preloadElem.src = url;

      // Setting bogus script type to allow the script to be cached
      preloadElem.type = elem;
    }

    // Don't let it show up visually
    preloadElem.width = preloadElem.height = "0";

    // Attach handlers for all browsers
    preloadElem.onerror = preloadElem.onload = preloadElem.onreadystatechange = function(){
      onload.call(this, firstFlag);
    };
    // inject the element into the stack depending on if it's
    // in the middle of other scripts or not
    execStack.splice( splicePoint, 0, stackObject );

    // The only place these can't go is in the <head> element, since objects won't load in there
    // so we have two options - insert before the head element (which is hard to assume) - or
    // insertBefore technically takes null/undefined as a second param and it will insert the element into
    // the parent last. We try the head, and it automatically falls back to undefined.
    if ( elem != "img" ) {
      // If it's the first time, or we've already loaded it all the way through
      if ( firstFlag || scriptCache[ url ] === 2 ) {
        readFirstScript();
        insBeforeObj.insertBefore( preloadElem, isGeckoLTE18 ? null : firstScript );

        // If something fails, and onerror doesn't fire,
        // continue after a timeout.
        setTimeout( onload, timeout );
      }
      else {
        // instead of injecting, just hold on to it
        scriptCache[ url ].push( preloadElem );
      }
    }
  }

  function load ( resource, type, dontExec, attrObj, timeout ) {
    // If this method gets hit multiple times, we should flag
    // that the execution of other threads should halt.
    started = 0;

    // We'll do 'j' for js and 'c' for css, yay for unreadable minification tactics
    type = type || "j";
    if ( isString( resource ) ) {
      // if the resource passed in here is a string, preload the file
      preloadFile( type == "c" ? strCssElem : strJsElem, resource, type, this['i']++, dontExec, attrObj, timeout );
    } else {
      // Otherwise it's a callback function and we can splice it into the stack to run
      execStack.splice( this['i']++, 0, resource );
      execStack.length == 1 && executeStack();
    }

    // OMG is this jQueries? For chaining...
    return this;
  }

  // return the yepnope object with a fresh loader attached
  function getYepnope () {
    var y = yepnope;
    y['loader'] = {
      "load": load,
      "i" : 0
    };
    return y;
  }

  /* End loader helper functions */
  // Yepnope Function
  yepnope = function ( needs ) {

    var i,
        need,
        // start the chain as a plain instance
        chain = yepnope.loader;

    function satisfyPrefixes ( url ) {
      // split all prefixes out
      var parts   = url.split( "!" ),
      gLen    = globalFilters.length,
      origUrl = parts.pop(),
      pLen    = parts.length,
      res     = {
        "url"      : origUrl,
        // keep this one static for callback variable consistency
        "origUrl"  : origUrl,
        "prefixes" : parts
      },
      mFunc,
      j,
      prefix_parts;

      // loop through prefixes
      // if there are none, this automatically gets skipped
      for ( j = 0; j < pLen; j++ ) {
        prefix_parts = parts[ j ].split( '=' );
        mFunc = prefixes[ prefix_parts.shift() ];
        if ( mFunc ) {
          res = mFunc( res, prefix_parts );
        }
      }

      // Go through our global filters
      for ( j = 0; j < gLen; j++ ) {
        res = globalFilters[ j ]( res );
      }

      // return the final url
      return res;
    }

     function getExtension ( url ) {
      //The extension is always the last characters before the ? and after a period.
      //The previous method was not accounting for the possibility of a period in the query string.
      var b = url.split('?')[0];
      return b.substr(b.lastIndexOf('.')+1);
    }

    function loadScriptOrStyle ( input, callback, chain, index, testResult ) {
      // run through our set of prefixes
      var resource     = satisfyPrefixes( input ),
          autoCallback = resource['autoCallback'],
          extension    = getExtension( resource['url'] );

      // if no object is returned or the url is empty/0 just exit the load
      if ( resource['bypass'] ) {
        return;
      }

      // Determine callback, if any
      if ( callback ) {
        callback = isFunction( callback ) ?
          callback :
          callback[ input ] ||
          callback[ index ] ||
          callback[ ( input.split( "/" ).pop().split( "?" )[ 0 ] ) ];
      }

      // if someone is overriding all normal functionality
      if ( resource['instead'] ) {
        return resource['instead']( input, callback, chain, index, testResult );
      }
      else {
        // Handle if we've already had this url and it's completed loaded already
        if ( scriptCache[ resource['url'] ] && resource['reexecute'] !== true) {
          // don't let this execute again
          resource['noexec'] = true;
        }
        else {
          scriptCache[ resource['url'] ] = 1;
        }

        // Throw this into the queue
        input && chain.load( resource['url'], ( ( resource['forceCSS'] || ( ! resource['forceJS'] && "css" == getExtension( resource['url'] ) ) ) ) ? "c" : undef, resource['noexec'], resource['attrs'], resource['timeout'] );

        // If we have a callback, we'll start the chain over
        if ( isFunction( callback ) || isFunction( autoCallback ) ) {
          // Call getJS with our current stack of things
          chain['load']( function () {
            // Hijack yepnope and restart index counter
            getYepnope();
            // Call our callbacks with this set of data
            callback && callback( resource['origUrl'], testResult, index );
            autoCallback && autoCallback( resource['origUrl'], testResult, index );

            // Override this to just a boolean positive
            scriptCache[ resource['url'] ] = 2;
          } );
        }
      }
    }

    function loadFromTestObject ( testObject, chain ) {
        var testResult = !! testObject['test'],
            group      = testResult ? testObject['yep'] : testObject['nope'],
            always     = testObject['load'] || testObject['both'],
            callback   = testObject['callback'] || noop,
            cbRef      = callback,
            complete   = testObject['complete'] || noop,
            needGroupSize,
            callbackKey;
            
        // Reusable function for dealing with the different input types
        // NOTE:: relies on closures to keep 'chain' up to date, a bit confusing, but
        // much smaller than the functional equivalent in this case.
        function handleGroup ( needGroup, moreToCome ) {
          if ( '' !== needGroup && ! needGroup ) {
            // Call the complete callback when there's nothing to load.
            ! moreToCome && complete();
          }
          // If it's a string
          else if ( isString( needGroup ) ) {
            // if it's a string, it's the last
            if ( !moreToCome ) {
              // Add in the complete callback to go at the end
              callback = function () {
                var args = [].slice.call( arguments );
                cbRef.apply( this, args );
                complete();
              };
            }
            // Just load the script of style
            loadScriptOrStyle( needGroup, callback, chain, 0, testResult );
          }
          // See if we have an object. Doesn't matter if it's an array or a key/val hash
          // Note:: order cannot be guaranteed on an key value object with multiple elements
          // since the for-in does not preserve order. Arrays _should_ go in order though.
          else if ( isObject( needGroup ) ) {
            // I hate this, but idk another way for objects.
            needGroupSize = (function(){
              var count = 0, i
              for (i in needGroup ) {
                if ( needGroup.hasOwnProperty( i ) ) {
                  count++;
                }
              }
              return count;
            })();

            for ( callbackKey in needGroup ) {
              // Safari 2 does not have hasOwnProperty, but not worth the bytes for a shim
              // patch if needed. Kangax has a nice shim for it. Or just remove the check
              // and promise not to extend the object prototype.
              if ( needGroup.hasOwnProperty( callbackKey ) ) {
                // Find the last added resource, and append to it's callback.
                if ( ! moreToCome && ! ( --needGroupSize ) ) {
                  // If this is an object full of callbacks
                  if ( ! isFunction( callback ) ) {
                    // Add in the complete callback to go at the end
                    callback[ callbackKey ] = (function( innerCb ) {
                      return function () {
                        var args = [].slice.call( arguments );
                        innerCb && innerCb.apply( this, args );
                        complete();
                      };
                    })( cbRef[ callbackKey ] );
                  }
                  // If this is just a single callback
                  else {
                    callback = function () {
                      var args = [].slice.call( arguments );
                      cbRef.apply( this, args );
                      complete();
                    };
                  }
                }
                loadScriptOrStyle( needGroup[ callbackKey ], callback, chain, callbackKey, testResult );
              }
            }
          }
        }

        // figure out what this group should do
        handleGroup( group, !!always || !!testObject['complete']);

        // Run our loader on the load/both group too
        // the always stuff always loads second.
        always && handleGroup( always );

  // If complete callback is used without loading anything
        !always && !!testObject['complete'] && handleGroup('');

    }

    // Someone just decides to load a single script or css file as a string
    if ( isString( needs ) ) {
      loadScriptOrStyle( needs, 0, chain, 0 );
    }
    // Normal case is likely an array of different types of loading options
    else if ( isArray( needs ) ) {
      // go through the list of needs
      for( i = 0; i < needs.length; i++ ) {
        need = needs[ i ];

        // if it's a string, just load it
        if ( isString( need ) ) {
          loadScriptOrStyle( need, 0, chain, 0 );
        }
        // if it's an array, call our function recursively
        else if ( isArray( need ) ) {
          yepnope( need );
        }
        // if it's an object, use our modernizr logic to win
        else if ( isObject( need ) ) {
          loadFromTestObject( need, chain );
        }
      }
    }
    // Allow a single object to be passed in
    else if ( isObject( needs ) ) {
      loadFromTestObject( needs, chain );
    }
  };

  // This publicly exposed function is for allowing
  // you to add functionality based on prefixes on the
  // string files you add. 'css!' is a builtin prefix
  //
  // The arguments are the prefix (not including the !) as a string
  // and
  // A callback function. This function is passed a resource object
  // that can be manipulated and then returned. (like middleware. har.)
  //
  // Examples of this can be seen in the officially supported ie prefix
  yepnope['addPrefix'] = function ( prefix, callback ) {
    prefixes[ prefix ] = callback;
  };

  // A filter is a global function that every resource
  // object that passes through yepnope will see. You can
  // of course conditionally choose to modify the resource objects
  // or just pass them along. The filter function takes the resource
  // object and is expected to return one.
  //
  // The best example of a filter is the 'autoprotocol' officially
  // supported filter
  yepnope['addFilter'] = function ( filter ) {
    globalFilters.push( filter );
  };

  // Default error timeout to 10sec - modify to alter
  yepnope['errorTimeout'] = 1e4;

  // Webreflection readystate hack
  // safe for jQuery 1.4+ ( i.e. don't use yepnope with jQuery 1.3.2 )
  // if the readyState is null and we have a listener
  if ( doc.readyState == null && doc.addEventListener ) {
    // set the ready state to loading
    doc.readyState = "loading";
    // call the listener
    doc.addEventListener( "DOMContentLoaded", handler = function () {
      // Remove the listener
      doc.removeEventListener( "DOMContentLoaded", handler, 0 );
      // Set it to ready
      doc.readyState = "complete";
    }, 0 );
  }

  // Attach loader &
  // Leak it

  module.exports = getYepnope();

  // Exposing executeStack to better facilitate plugins
  module.exports['executeStack'] = executeStack;
  module.exports['injectJs'] = injectJs;
  module.exports['injectCss'] = injectCss;

})( this, document );
},{}]},{},[29])
(29)
});
/*1.0*/
!(function ($) {

  var idCounter = 1;
  var currentlyOpenPopover = null;

  $(document).on('click', function(event) {
    if( currentlyOpenPopover ) {
      if( currentlyOpenPopover.isEventOutsidePopover(event) ) {
        currentlyOpenPopover.hidePjaxPopover();
      }
    }
  });

  var PjaxPopover = function( triggerElement, options ) {
    this.pjaxPopoverInit( 'pjaxPopover', triggerElement, options );
  };

  PjaxPopover.prototype = $.extend({}, $.fn.sui_popover.Constructor.prototype, {

    constructor: PjaxPopover,

    pjaxPopoverInit: function(type, triggerElement, options) {
      this.init( type, triggerElement, options );

      this.$triggerElement = this.$element; // this.$element set by tooltip init
      this.$element.on( 'mouseenter', $.proxy( this.loadCardAndShow, this ) );
      this.id = (idCounter += 1);
    },

    loadCardAndShow: function() {
      if( !this.showing ) {
        if( !this.htmlContent ) {
          $.get( this.$triggerElement.attr('data-popup-url') )
          .done( $.proxy( this.showPopoverAfterTimeout, this ) );
        }
        else {
          this.showPopoverAfterTimeout(this.htmlContent);
        }
      }
    },

    setContent: function() {
      var $tip = this.tip(),
          content = this.getContent();

      $tip.find('.sui-popover_content-body')[this.options.html ? 'html' : 'text'](content)
    },

    getContent: function() {
      return this.htmlContent;
    },

    showPopoverAfterTimeout: function(data) {
      this.htmlContent = data;
      $(document).on( 'mousemove.pjaxPopover.' + this.id, $.proxy( this.closePopover, this ) );
      this.openTimer = setTimeout( $.proxy( this.showPopover, this), 300 );
    },

    showPopover: function() {
      this.showing = true;

      if( currentlyOpenPopover ) {
        currentlyOpenPopover.hidePjaxPopover();
      }
      currentlyOpenPopover = this;

      this.show();

      // Init generic follow buttons (user, group, blog, etc)
      this.tip().find('[data-followpath][data-unfollowpath]').sui_follow_button()
      .on('sui-follow-button:followed',   $.proxy(this.genericFollow, this) )
      .on('sui-follow-button:unfollowed', $.proxy(this.genericUnfollow, this) );

      // Looks like vendor popup has special logic around its follow button so treat
      // it specially
      this.$tip.find('.sui-followlink[data-followable-class="VendorPage"]').followbutton()
      .on('follow',   $.proxy(this.followVendor, this) )
      .on('unfollow', $.proxy(this.unfollowVendor, this) );

      // [data-action] handler (eg 'mute')
      this.$tip.find('[data-action]').on( 'click', $.proxy( this.handleGenericAction, this ) );
      this.$element.trigger('sui-pjax-popover:shown', this.$tip);
    },

    handleGenericAction: function(event) {
      var $target = $(event.target);
      var action = $target.data('action');

      if( action ) {
        // Simulates code from the old spiceworks.ui.js (simple menus)
        this.$element.trigger( action, $target.data('action-args') );

        if( action === 'mute_author' || action === 'unmute_author' ) {
          $target.text( action === 'mute_author' ? 'Unmute' : 'Mute' );
          $target.data( 'action', action === 'mute_author' ? 'unmute_author' : 'mute_author' );
          this.hidePjaxPopover();
        }

        this.htmlContent = null; // Reload from server on hide & re-show
      }
    },

    genericFollow: function(event, followButton) {
      $.post( followButton.options.followpath );
      this.htmlContent = null; // Reload from server on hide & re-show
    },

    genericUnfollow: function(event, followButton) {
      $.post( followButton.options.unfollowpath );
      this.htmlContent = null; // Reload from server on hide & re-show
    },

    followVendor: function(event, followLink) {
      $.post(followLink.options.uri);
      this.htmlContent = null; // Reload from server on hide & re-show
    },

    unfollowVendor: function(event, followLink) {
      $.post(followLink.options.uri);
      this.htmlContent = null; // Reload from server on hide & re-show
    },

    isEventOutsidePopover: function(event) {
      var closestFollowToggle = $(event.target).closest('[data-action="follow-toggle"]');
      var closestBody = $(event.target).closest('body');

      // Special case for clicking on our sui-follow-button when inside the popup.
      // The spice button gets the event first and orphans the element that was
      // clicked so when we check if it's in the popup we get a false false.
      // This _will_ result in the popup staying open if the user happens to
      // close it by clicking a follow button _outside_ the popup o_O
      if( closestBody.length === 0 && closestFollowToggle.length !== 0 ) {
        return false;
      }

      var closestTrigger = $(event.target).closest('[data-popup-url]');
      var closestPopover = $(event.target).closest('.sui-popover_content');

      return (closestTrigger.length === 0 || closestTrigger[0] !== this.$element[0] ) &&
             (closestPopover.length === 0 || closestPopover[0] !== this.$tip[0] );
    },

    closePopover: function(event) {
      if( this.isEventOutsidePopover(event) ) {
        if( this.openTimer ) {
          clearTimeout( this.openTimer );
          this.openTimer = null;
        }
        this.scheduleHide();
      }
      else {
        if( this.hideTimer ) {
          this.cancelHideSchedule();
        }
      }
    },

    scheduleHide: function() {
      if( this.showing ) {
        if( !this.hideTimer ) {
          this.hideTimer = setTimeout( $.proxy( this.hidePjaxPopover, this ), 100 );
        }
      }
      else {
        $(document).off( 'mousemove.pjaxPopover.' + this.id );
      }
    },

    hidePjaxPopover: function() {
      this.hide();
      this.showing = false;
      this.cancelHideSchedule();
      $(document).off( 'mousemove.pjaxPopover.' + this.id );
      currentlyOpenPopover = null;
    },

    cancelHideSchedule: function() {
      clearTimeout(this.hideTimer);
      this.hideTimer = null;
    },

    // Copied this directly from bootstrap-tooltip.js in the Toolkit & changed it a bit
    // because we need to change the placement to left-align w/ the trigger
    applyPlacement: function(offset, placement){
      var $tip = this.tip(),
          actualWidth;

      $tip
        .offset(offset)
        .addClass(placement)
        .addClass('in')

      actualWidth = $tip[0].offsetWidth

      // Left align w/ trigger
      offset.left = offset.left + (actualWidth/2) - (this.$element[0].offsetWidth/2);

      // Push down to make room for arrow
      offset.top = offset.top + 9;

      $tip.offset(offset);
    },

  });

  $.fn.pjaxPopover = function (option) {
    return this.each(function () {
      var $this = $(this),
        data = $this.data('pjaxPopover'),
        options = typeof option == 'object' && option;
      if (!data) $this.data('pjaxPopover', (data = new PjaxPopover(this, options)));
      if (typeof option == 'string') data[option]();
    })
  }

  $.fn.pjaxPopover.defaults = $.extend({} , $.fn.sui_popover.defaults, {
    placement: 'bottom',
    trigger: 'manual',
    template: '<div class="is-shown sui-popover_content sui-popover_content--bottom sui-popover_content--align-left"><div class="sui-popover_content-body"></div></div>'
  });

  $(function() {
    $('[data-popup-url]').pjaxPopover();
  });

})(jQuery);
/*1.0*/
/*************************************************************************************************/
/*  MobileCollapsedLinkLists */
/*************************************************************************************************/

!(function($) {

  window.MobileCollapsedLinkLists = {
    findAndCollapse: function() {
      if(!$UI.useMobile) { return; }

      jQuery("[data-mobile-collapse]").each(function(index, section) {
        var min = 3
        if(jQuery(section).find("li").length > min) {
          var name = jQuery(section).attr("data-mobile-collapse");
          var additional = jQuery('<ul class="collapsed-more-links" style="display: none;" id="' + name  + '_more_links"></ul>');
          jQuery(section).after(additional);
          jQuery(section).find("li").each(function(index, item) {
            if(index >= min) {
              additional.append(item);
            }
          });
          jQuery(section).after('<a href="#" class="collapsed-see-more" id="' + name + '_see_more">+ See More</a>');
          jQuery("#" + name + "_see_more").click(function(e) {
            e.preventDefault();
            jQuery("#" + name + "_see_more").hide();
            jQuery("#" + name + "_more_links").slideDown();
          });
        }
      });
    }
  };

  $(window).load(function() { MobileCollapsedLinkLists.findAndCollapse(); });
  $(document).ajaxComplete( MobileCollapsedLinkLists.findAndCollapse );

}(jQuery));


/*************************************************************************************************/
/*  MovingSecitons */
/*************************************************************************************************/
!(function($) {

  window.MobileMovingSections = {
    findAndMove: function(event) {
      if(!$UI.useMobile) { return; }
      var ajaxEvent = typeof event !== "undefined" && event.type === "ajaxComplete";

      $("[data-mobile-target]").each(function(index, section) {
        var $section = $(section);
        var value = $section.attr("data-mobile-target");
        if(!ajaxEvent || !$section.attr("data-mobile-no-ajax")) {
          var $destination = $("[data-mobile-destination='" + value  + "']");
          if($destination.length > 0) {
            $destination.append($section.clone());
          }
        }
      });
    }
  };

  $(window).load(function() { MobileMovingSections.findAndMove(); });
  $(document).ajaxComplete( MobileMovingSections.findAndMove );

}(jQuery));


/*************************************************************************************************/
/*  MobileTabs - Convert tabs to sui-droplist if they are too wide to fit on the display         */
/*************************************************************************************************/

!(function($) {

  window.MobileTabs = {
    findAndConvert: function() {
      if(!$UI.useMobile) { return; }

      $(".tabbed_menu ul, .nav-tabs, .rounded_tabs ul, .local_nav ul.sui-side-navigation, .section-navbar").not(".nav-roll-up").each( function( index, tabs ) {
        if( MobileTabs.tabsNeedDropdown( $(tabs) ) && ! $(tabs).hasClass('sui-dropdown-menu') && ! MobileTabs.dropdownBreaksStuff( $(tabs) ) ) {
          MobileTabs.convert( $(tabs) );
        }
      });
    },
    convert: function(tabs) {
      var dropdown = $('<div class="sui-dropdown mobile-tabs sui-opt-in"></div>');

      dropdown.insertBefore( tabs );
      dropdown.html( tabs );
      tabs.addClass('sui-dropdown-menu');

      tabs.removeClass('nav').removeClass('nav-tabs');

      dropdown.prepend( $('<a href="#" class="sui-dropdown-toggle sui-bttn" data-toggle="dropdown" onclick="return false;"></a>') );
      MobileTabs.updateActive( dropdown, tabs.find('li.active a, li a.active') );

      tabs.find('a').on( 'click', function() {
        MobileTabs.updateActive( dropdown, $(this) );
      });

      tabs.parents('.local_nav').on( 'change', function(event) {
        MobileTabs.updateActive( dropdown, $(event.target).find('li.active a, li a.active') );
      });
    },
    tabsNeedDropdown: function(tabs) {
      var total_width = 0;
      tabs.find("li").each(function(index, item) {
        total_width += $(item).outerWidth(true);
      });

      //If the tabs are hidden, they will have width zero and we don't want to convert in that case
      if(total_width == 0){
        return false;
      }
      // Check list and it's container...tabs need replaced if they run into two lines
      return total_width >= $(tabs).parent().width() || total_width >= $(tabs).width();
    },
    dropdownBreaksStuff: function(tabs) {
      return tabs.hasClass('section-navbar') && tabs.find('ul.nav li .sui-dropdown-toggle').size() > 0;
    },
    updateActive: function(dropdown, activeItem ) {
      dropdown.find('.sui-dropdown-toggle').html( activeItem.text() + ' <span class="caret"></span>' );
    }
  };
  $(window).load(function() { MobileTabs.findAndConvert(); });
  $(document).ajaxComplete( MobileTabs.findAndConvert );

}(jQuery));

/*************************************************************************************************/
/*  MobilePagination - Convert pagination to next/prev button and sui-droplist for page numbers  */
/*************************************************************************************************/

!(function($) {

  window.MobilePagination = {
    findAndConvert: function() {
      if(!$UI.useMobile) { return; }

      $('.sui-pagination, .pages, .pagination').each( function(index,pages) {
        if( ! $(pages).find('ul').hasClass('sui-dropdown_content') ) {
          MobilePagination.convert( $(pages) );
        }
      });
    },
    convert: function($pagination) {
      $pagination.addClass('mobile-page-numbers');
      var nextLink = $pagination.find('.sui-next, .next, .next_page').addClass('mobile-page-bttn');
      var prevLink = $pagination.find('.sui-previous, .prev, .previous_page').addClass('mobile-page-bttn');
      var pageLinks = $pagination.find('.sui-pagination_entry').toggleClass('sui-dropdown_entry sui-pagination_entry');

      if( pageLinks.length > 0 ) {
        var currentPage = pageLinks.find('.active').html();
        var dropdown = $('<div class="sui-dropdown is-closed"><a href="#" class="sui-dropdown_trigger" data-toggle="sui_dropdown" onclick="return false;">Page ' + currentPage + '<span class="sui-caret"></span></a></div>');

        // first and last entries are prev/next buttons
        pageLinks = pageLinks.slice(1, -1);

        dropdown.append($('<ul class="sui-dropdown_content is-hidden">').html(pageLinks));

        pageLinks.find('.sui-pagination_ellipses').parent().html('').toggleClass('sui-dropdown_divider sui-dropdown_entry');
        pageLinks.find('.sui-pagination_page-link').each( function(index, el) { $(el).html( 'Page ' + $(el).html() ); });

        $pagination.html('').append(prevLink, dropdown, nextLink);

        pageLinks.find('a').on( 'click', function() {
          MobilePagination.updateActive( dropdown, $(this) );
        });
      }
    },
    updateActive: function(dropdown, activeItem) {
      dropdown.find('.sui-dropdown-toggle').html( activeItem.text() + ' <span class="caret"></span>' );
    }
  };
  $(window).load(function() { MobilePagination.findAndConvert(); });
  $(document).ajaxComplete( MobilePagination.findAndConvert );

}(jQuery));
/*1.0*/

if (typeof UrlHelpers === 'undefined') { UrlHelpers = {}; }

UrlHelpers.asset_path = function(path) {
  if( path == null || path == '' ) { return null; }

  if ( path.substring(0,2) === '//' ||  path.substring(0,4) === 'http' ) {
    return path;
  }

  if( path[0] == '/' ) {
    return '/' + path.substring(1);
  }

  var cdn_path = '//static.spiceworks.com';
  if($UI_ENV && $UI_ENV.environment === 'development') {
    cdn_path = '';
  }

  return cdn_path + '/assets/' + path;
};

UrlHelpers.avatar_path = function(path) {
  if( path == null || path == '' ) { return null; }

  if ( path.substring(0,2) === '//' ||  path.substring(0,4) === 'http' ) {
    return path;
  }
  else {
    return '//static.spiceworks.com' + path;
  }
};

UrlHelpers.invitation_join_waiting_list_path = function() {
  return "/invitation/join_waiting_list";
};

UrlHelpers.invitation_activate_code_path = function() {
  return "/invitation/activate_code";
};

UrlHelpers.invitation_check_invitation_status_path = function() {
  return "/invitation/check_invitation_status";
};

UrlHelpers.invitation_peer_code_generate_path = function() {
  return "/invitation/peer_code_generate";
};

UrlHelpers.has_insecure_link = function(content) {
  return content.indexOf('http://') != -1;
};

UrlHelpers.best_answer_link = function(id) {
  return '/posts/' + id;
}


if (typeof SocialHelpers === 'undefined') { SocialHelpers = {}; }

// used on topics
SocialHelpers.sharePath = function( siteName, title, contentLink ) {
  var shareUrl = '';

  if( !contentLink.match('http://') && !contentLink.match('https://')) {
    contentLink = 'https://community.spiceworks.com' + contentLink;
  }
  title = encodeURIComponent(title);
  contentLink = _.escape(contentLink);

  switch (siteName) {
    case 'twitter':
      shareUrl = 'https://twitter.com/intent/tweet?text=' + title + ' ' + contentLink;
      break;
    case 'facebook':
      shareUrl = 'http://www.facebook.com/sharer.php?u=' + contentLink + '&amp;t=' + title;
      break;
    case 'linkedin':
      shareUrl = 'http://www.linkedin.com/shareArticle?mini=true&amp;url=' + contentLink + '&amp;title=' + title;
      break;
    case 'reddit':
      shareUrl = 'http://www.reddit.com/submit?url=' + contentLink + '&amp;title=' + title;
      break;
    case 'googleplus':
      shareUrl = 'https://plus.google.com/share?url=' + contentLink + '&amp;title=' + title;
      break;
    case 'stumbleupon':
      shareUrl = 'http://www.stumbleupon.com/submit?url=' + contentLink + '&amp;title=' + title;
      break;
    case 'mail':
      shareUrl = 'mailto:?subject=Spiceworks%20Community:' + title + '&body=I%20wanted%20to%20share%20this%20page%20from%20the%20Spiceworks%20IT%20Community%20with%20you:%0D%0A' + contentLink;
      break;
  }

  return shareUrl;
}

if (typeof UIHelpers === 'undefined') { UIHelpers = {}; }

if (typeof TextHelpers === 'undefined') { TextHelpers = {}; }
if (typeof ImageHelpers === 'undefined') { ImageHelpers = {}; }

TextHelpers.parameterize = function(text) {
  var result = jQuery.trim(text).toLowerCase();
  return result.replace(/[^a-z0-9\-_]/g, "-").replace(/\-{2}/g, "-").replace(/^\-|\-$/g, "");
}

TextHelpers.simpleFormat = function(text) {
  text = (text || '').replace(/\r\n?/, "\n");
  text = jQuery.trim(text);
  text = Handlebars.Utils.escapeExpression(text);
  if (text.length > 0) {
    text = '<p>' + text.replace(/\n\s*\n+/g, '</p><p>').replace(/\n/g, '<br />') + '</p>';
  }
  return text;
}

TextHelpers.truncate = function(text, truncate_length) {
  if((typeof text !== undefined) && (text !== undefined) && (text !== null)) {
    if(text.length <= truncate_length) {
      return text;
    }
    else {
      return text.substr(0, truncate_length) + "...";
    }
  }
  return "";
}


ImageHelpers.resizeImageByDimensions = function(image, divWidth, divHeight, fill) {
  var imageWidth, imageHeight, ratio, topShift, leftShift;
  imageWidth = image.naturalWidth;
  imageHeight = image.naturalHeight;

  // IE8 doesn't support naturalWidth and naturalHeight
  // this is the work around
  if(imageWidth === undefined || imageHeight === undefined) {
    var new_image = new Image();
    new_image.src = jQuery(image).attr("src");
    imageWidth = new_image.width;
    imageHeight = new_image.height;
  }

  // always resize if we want to fill the container fully
  // otherwise, only do it if image is too big
  resize = (fill || (imageWidth > divWidth || imageHeight > divHeight));

  if(resize) {
    // don't need to fill the container, center vertically
    if(!fill && imageWidth < divWidth) {
      leftShift = 0;
      topShift = Math.round((imageHeight - divHeight)/2);
    }
    // don't need to fill the container, center horizontally
    else if(!fill && imageHeight < divHeight) {
      topShift = 0;
      leftShift = Math.round((imageWidth - divWidth)/2);
    }
    // image too tall
    else if((divWidth/divHeight) > (imageWidth/imageHeight)) {
      ratio = divWidth / imageWidth;
      imageWidth = divWidth;
      imageHeight = Math.round(imageHeight * ratio);
      leftShift = 0;
      topShift = Math.round((imageHeight - divHeight)/2);
    }
    // image too wide
    else {
      ratio = divHeight / imageHeight;
      imageWidth = Math.round(imageWidth * ratio);
      imageHeight = divHeight;
      topShift = 0;
      leftShift = Math.round((imageWidth - divWidth)/2);
    }
    jQuery(image).css({
      width: imageWidth + "px",
      height: imageHeight + "px",
      "margin-top": "-" + topShift + "px",
      "margin-left": "-" + leftShift + "px",
      'min-width': 0,
      'min-height': 0,
      'max-width': 'none',
      'max-height': 'none'
    });
  }
  return resize;
}

UIHelpers.parseXhrJson = function(jqXHR) {
  // JsLogging showed this function is in use
  if( jqXHR && jqXHR.responseText ) {
    var json = null;
    try { json = jQuery.parseJSON(jqXHR.responseText); } catch(err) {}
    return json;
  }
  return null;
}

UIHelpers.parseXhrErrorMessage = function(jqXHR) {
  // JsLogging showed this function is in use
  var json = UIHelpers.parseXhrJson(jqXHR);
  return json && json.message;
}

UIHelpers.showUnhandledError = function(options) {
  // JsLogging showed this function is in use
  if( !options ) { options = {}; }
  if( _.isString(options) ) { options = { message: options }; }
  var jqXHR = options.jqXHR || options; // TODO: Track down where we are passing jqXHR as a property and just pass it directly
  var message = UIHelpers.parseXhrErrorMessage(jqXHR) || options.message || "Well, that didn't work as expected. Contact support if this happens again.";
  $UI.growl({ caption:message, type:'error' });
};

(function( $ ) {
  var proto = $.ui.autocomplete.prototype,
    initSource = proto._initSource;
  function filter( array, term ) {
    var matcher = new RegExp( $.ui.autocomplete.escapeRegex(term), "i" );
    return $.grep( array, function(value) {
      return matcher.test( $( "<div>" ).html( value.label || value.value || value ).text() );
    });
  }
  $.extend( proto, {
    _initSource: function() {
      if ( this.options.html && $.isArray(this.options.source) ) {
        this.source = function( request, response ) {
          response( filter( this.options.source, request.term ) );
        };
      } else {
        initSource.call( this );
      }
    },
    _renderItem: function( ul, item) {
      return $( "<li></li>" )
        .data( "item.autocomplete", item )
        .append( $( "<a></a>" )[ this.options.html ? "html" : "text" ]( item.label ) )
        .appendTo( ul );
    }
  });
})( jQuery );

if (typeof AutoCompleteHelpers === 'undefined') {AutoCompleteHelpers = {}; }

AutoCompleteHelpers.usernameAutocomplete = function(input_id) {
  $input = jQuery('#'+input_id);
  $input.autocomplete({
    source: function(req, add) {
      jQuery.getJSON('/messages/username_auto_complete?', req, function(data) {
        var suggestions = [];
        jQuery.each(data, function(i, val){
          var label_html = "<img src='" + val.image_url + "'><span id='" + val.id + "'class='" + val.kind + "'>" + val.name + "</span>";
          suggestions.push({label : label_html, value : val.name, id : val.id});
        });
        add(suggestions);
      });
    },
    select: function(e, ui){
      jQuery('.form-with-autocomplete input#'+input_id).css({ 'color' : jQuery('span#'+ui.item.id).css('color'), 'font-weight' : 'bold' });
    },
    appendTo: 'div.form-with-autocomplete',
    html: true,
    delay: 100
  });
  jQuery(".ui-autocomplete").css("top", $input.position().top+24);
  jQuery(".ui-autocomplete").css("left", $input.position().left);
}

if (typeof LinkHelpers === 'undefined') {LinkHelpers = {}; }

LinkHelpers.external_link_to = function(body, url, html_options) {
  html_options = (typeof html_options !== 'undefined') ? html_options : {};
  body = body === null ? url : body;
  var tag = jQuery("<a></a>")
          .attr('href', url)
          .attr('target', '_blank')
          .append(body);

  if(!url.match(/^https?:\/\/(?:www\.)?community\.spiceworks\.com/)){
    tag.attr('rel', 'nofollow noreferrer');
  }

  jQuery.each(html_options, function(opt_name, opt_value){
    tag.attr(opt_name, opt_value);
  })

  return tag.prop('outerHTML');
}

LinkHelpers.removeNoreferrerFromChromeAndFF = function() {
  /*
      Hack to remove noreferrer from Chrome and Firefox 52
  */
  var isChrome = navigator.userAgent.indexOf("Chrome") != -1,
      firefoxInfo = navigator.userAgent.match(/Firefox\/(.*)/),
      isFirefox52 = !!firefoxInfo && Number(firefoxInfo[1]) >= 52;
  if (isChrome || isFirefox52) {
    jQuery('.post-body a, .root-post a, .how-to .references a').each(function(i, el) {
      jQuery(el).attr('rel', function(i, val) {
        if(val) {
          return val.replace('noreferrer', '');
        }
      });
    })
  }
};
/*1.0*/
/*
    http://www.JSON.org/json2.js
    2011-02-23

    Public Domain.

    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.

    See http://www.JSON.org/js.html


    This code should be minified before deployment.
    See http://javascript.crockford.com/jsmin.html

    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO
    NOT CONTROL.


    This file creates a global JSON object containing two methods: stringify
    and parse.

        JSON.stringify(value, replacer, space)
            value       any JavaScript value, usually an object or array.

            replacer    an optional parameter that determines how object
                        values are stringified for objects. It can be a
                        function or an array of strings.

            space       an optional parameter that specifies the indentation
                        of nested structures. If it is omitted, the text will
                        be packed without extra whitespace. If it is a number,
                        it will specify the number of spaces to indent at each
                        level. If it is a string (such as '\t' or '&nbsp;'),
                        it contains the characters used to indent at each level.

            This method produces a JSON text from a JavaScript value.

            When an object value is found, if the object contains a toJSON
            method, its toJSON method will be called and the result will be
            stringified. A toJSON method does not serialize: it returns the
            value represented by the name/value pair that should be serialized,
            or undefined if nothing should be serialized. The toJSON method
            will be passed the key associated with the value, and this will be
            bound to the value

            For example, this would serialize Dates as ISO strings.

                Date.prototype.toJSON = function (key) {
                    function f(n) {
                        // Format integers to have at least two digits.
                        return n < 10 ? '0' + n : n;
                    }

                    return this.getUTCFullYear()   + '-' +
                         f(this.getUTCMonth() + 1) + '-' +
                         f(this.getUTCDate())      + 'T' +
                         f(this.getUTCHours())     + ':' +
                         f(this.getUTCMinutes())   + ':' +
                         f(this.getUTCSeconds())   + 'Z';
                };

            You can provide an optional replacer method. It will be passed the
            key and value of each member, with this bound to the containing
            object. The value that is returned from your method will be
            serialized. If your method returns undefined, then the member will
            be excluded from the serialization.

            If the replacer parameter is an array of strings, then it will be
            used to select the members to be serialized. It filters the results
            such that only members with keys listed in the replacer array are
            stringified.

            Values that do not have JSON representations, such as undefined or
            functions, will not be serialized. Such values in objects will be
            dropped; in arrays they will be replaced with null. You can use
            a replacer function to replace those with JSON values.
            JSON.stringify(undefined) returns undefined.

            The optional space parameter produces a stringification of the
            value that is filled with line breaks and indentation to make it
            easier to read.

            If the space parameter is a non-empty string, then that string will
            be used for indentation. If the space parameter is a number, then
            the indentation will be that many spaces.

            Example:

            text = JSON.stringify(['e', {pluribus: 'unum'}]);
            // text is '["e",{"pluribus":"unum"}]'


            text = JSON.stringify(['e', {pluribus: 'unum'}], null, '\t');
            // text is '[\n\t"e",\n\t{\n\t\t"pluribus": "unum"\n\t}\n]'

            text = JSON.stringify([new Date()], function (key, value) {
                return this[key] instanceof Date ?
                    'Date(' + this[key] + ')' : value;
            });
            // text is '["Date(---current time---)"]'


        JSON.parse(text, reviver)
            This method parses a JSON text to produce an object or array.
            It can throw a SyntaxError exception.

            The optional reviver parameter is a function that can filter and
            transform the results. It receives each of the keys and values,
            and its return value is used instead of the original value.
            If it returns what it received, then the structure is not modified.
            If it returns undefined then the member is deleted.

            Example:

            // Parse the text. Values that look like ISO date strings will
            // be converted to Date objects.

            myData = JSON.parse(text, function (key, value) {
                var a;
                if (typeof value === 'string') {
                    a =
/^(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2}(?:\.\d*)?)Z$/.exec(value);
                    if (a) {
                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],
                            +a[5], +a[6]));
                    }
                }
                return value;
            });

            myData = JSON.parse('["Date(09/09/2001)"]', function (key, value) {
                var d;
                if (typeof value === 'string' &&
                        value.slice(0, 5) === 'Date(' &&
                        value.slice(-1) === ')') {
                    d = new Date(value.slice(5, -1));
                    if (d) {
                        return d;
                    }
                }
                return value;
            });


    This is a reference implementation. You are free to copy, modify, or
    redistribute.
*/

/*jslint evil: true, strict: false, regexp: false */

/*members "", "\b", "\t", "\n", "\f", "\r", "\"", JSON, "\\", apply,
    call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,
    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,
    lastIndex, length, parse, prototype, push, replace, slice, stringify,
    test, toJSON, toString, valueOf
*/


// Create a JSON object only if one does not already exist. We create the
// methods in a closure to avoid creating global variables.

var JSON;
if (!JSON) {
    JSON = {};
}

(function () {
    "use strict";

    function f(n) {
        // Format integers to have at least two digits.
        return n < 10 ? '0' + n : n;
    }

    if (typeof Date.prototype.toJSON !== 'function') {

        Date.prototype.toJSON = function (key) {

            return isFinite(this.valueOf()) ?
                this.getUTCFullYear()     + '-' +
                f(this.getUTCMonth() + 1) + '-' +
                f(this.getUTCDate())      + 'T' +
                f(this.getUTCHours())     + ':' +
                f(this.getUTCMinutes())   + ':' +
                f(this.getUTCSeconds())   + 'Z' : null;
        };

        String.prototype.toJSON      =
            Number.prototype.toJSON  =
            Boolean.prototype.toJSON = function (key) {
                return this.valueOf();
            };
    }

    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        gap,
        indent,
        meta = {    // table of character substitutions
            '\b': '\\b',
            '\t': '\\t',
            '\n': '\\n',
            '\f': '\\f',
            '\r': '\\r',
            '"' : '\\"',
            '\\': '\\\\'
        },
        rep;


    function quote(string) {

// If the string contains no control characters, no quote characters, and no
// backslash characters, then we can safely slap some quotes around it.
// Otherwise we must also replace the offending characters with safe escape
// sequences.

        escapable.lastIndex = 0;
        return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
            var c = meta[a];
            return typeof c === 'string' ? c :
                '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
        }) + '"' : '"' + string + '"';
    }


    function str(key, holder) {

// Produce a string from holder[key].

        var i,          // The loop counter.
            k,          // The member key.
            v,          // The member value.
            length,
            mind = gap,
            partial,
            value = holder[key];

// If the value has a toJSON method, call it to obtain a replacement value.

        if (value && typeof value === 'object' &&
                typeof value.toJSON === 'function') {
            value = value.toJSON(key);
        }

// If we were called with a replacer function, then call the replacer to
// obtain a replacement value.

        if (typeof rep === 'function') {
            value = rep.call(holder, key, value);
        }

// What happens next depends on the value's type.

        switch (typeof value) {
        case 'string':
            return quote(value);

        case 'number':

// JSON numbers must be finite. Encode non-finite numbers as null.

            return isFinite(value) ? String(value) : 'null';

        case 'boolean':
        case 'null':

// If the value is a boolean or null, convert it to a string. Note:
// typeof null does not produce 'null'. The case is included here in
// the remote chance that this gets fixed someday.

            return String(value);

// If the type is 'object', we might be dealing with an object or an array or
// null.

        case 'object':

// Due to a specification blunder in ECMAScript, typeof null is 'object',
// so watch out for that case.

            if (!value) {
                return 'null';
            }

// Make an array to hold the partial results of stringifying this object value.

            gap += indent;
            partial = [];

// Is the value an array?

            if (Object.prototype.toString.apply(value) === '[object Array]') {

// The value is an array. Stringify every element. Use null as a placeholder
// for non-JSON values.

                length = value.length;
                for (i = 0; i < length; i += 1) {
                    partial[i] = str(i, value) || 'null';
                }

// Join all of the elements together, separated with commas, and wrap them in
// brackets.

                v = partial.length === 0 ? '[]' : gap ?
                    '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' :
                    '[' + partial.join(',') + ']';
                gap = mind;
                return v;
            }

// If the replacer is an array, use it to select the members to be stringified.

            if (rep && typeof rep === 'object') {
                length = rep.length;
                for (i = 0; i < length; i += 1) {
                    if (typeof rep[i] === 'string') {
                        k = rep[i];
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                    }
                }
            } else {

// Otherwise, iterate through all of the keys in the object.

                for (k in value) {
                    if (Object.prototype.hasOwnProperty.call(value, k)) {
                        v = str(k, value);
                        if (v) {
                            partial.push(quote(k) + (gap ? ': ' : ':') + v);
                        }
                    }
                }
            }

// Join all of the member texts together, separated with commas,
// and wrap them in braces.

            v = partial.length === 0 ? '{}' : gap ?
                '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' :
                '{' + partial.join(',') + '}';
            gap = mind;
            return v;
        }
    }

// If the JSON object does not yet have a stringify method, give it one.

    if (typeof JSON.stringify !== 'function') {
        JSON.stringify = function (value, replacer, space) {

// The stringify method takes a value and an optional replacer, and an optional
// space parameter, and returns a JSON text. The replacer can be a function
// that can replace values, or an array of strings that will select the keys.
// A default replacer method can be provided. Use of the space parameter can
// produce text that is more easily readable.

            var i;
            gap = '';
            indent = '';

// If the space parameter is a number, make an indent string containing that
// many spaces.

            if (typeof space === 'number') {
                for (i = 0; i < space; i += 1) {
                    indent += ' ';
                }

// If the space parameter is a string, it will be used as the indent string.

            } else if (typeof space === 'string') {
                indent = space;
            }

// If there is a replacer, it must be a function or an array.
// Otherwise, throw an error.

            rep = replacer;
            if (replacer && typeof replacer !== 'function' &&
                    (typeof replacer !== 'object' ||
                    typeof replacer.length !== 'number')) {
                throw new Error('JSON.stringify');
            }

// Make a fake root object containing our value under the key of ''.
// Return the result of stringifying the value.

            return str('', {'': value});
        };
    }


// If the JSON object does not yet have a parse method, give it one.

    if (typeof JSON.parse !== 'function') {
        JSON.parse = function (text, reviver) {

// The parse method takes a text and an optional reviver function, and returns
// a JavaScript value if the text is a valid JSON text.

            var j;

            function walk(holder, key) {

// The walk method is used to recursively walk the resulting structure so
// that modifications can be made.

                var k, v, value = holder[key];
                if (value && typeof value === 'object') {
                    for (k in value) {
                        if (Object.prototype.hasOwnProperty.call(value, k)) {
                            v = walk(value, k);
                            if (v !== undefined) {
                                value[k] = v;
                            } else {
                                delete value[k];
                            }
                        }
                    }
                }
                return reviver.call(holder, key, value);
            }


// Parsing happens in four stages. In the first stage, we replace certain
// Unicode characters with escape sequences. JavaScript handles many characters
// incorrectly, either silently deleting them, or treating them as line endings.

            text = String(text);
            cx.lastIndex = 0;
            if (cx.test(text)) {
                text = text.replace(cx, function (a) {
                    return '\\u' +
                        ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
                });
            }

// In the second stage, we run the text against regular expressions that look
// for non-JSON patterns. We are especially concerned with '()' and 'new'
// because they can cause invocation, and '=' because it can cause mutation.
// But just to be safe, we want to reject all unexpected forms.

// We split the second stage into 4 regexp operations in order to work around
// crippling inefficiencies in IE's and Safari's regexp engines. First we
// replace the JSON backslash pairs with '@' (a non-JSON character). Second, we
// replace all simple value tokens with ']' characters. Third, we delete all
// open brackets that follow a colon or comma or that begin the text. Finally,
// we look to see that the remaining characters are only whitespace or ']' or
// ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.

            if (/^[\],:{}\s]*$/
                    .test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')
                        .replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']')
                        .replace(/(?:^|:|,)(?:\s*\[)+/g, ''))) {

// In the third stage we use the eval function to compile the text into a
// JavaScript structure. The '{' operator is subject to a syntactic ambiguity
// in JavaScript: it can begin a block or an object literal. We wrap the text
// in parens to eliminate the ambiguity.

                j = eval('(' + text + ')');

// In the optional fourth stage, we recursively walk the new structure, passing
// each name/value pair to a reviver function for possible transformation.

                return typeof reviver === 'function' ?
                    walk({'': j}, '') : j;
            }

// If the text is not JSON parseable, then a SyntaxError is thrown.

            throw new SyntaxError('JSON.parse');
        };
    }
}());
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["backbone/tags/templates/external-product"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div id="',  id ,'" class="product" data-default="',  link_safe ,'">\n  <h5>',  label ,'</h5>\n  <div class="content">\n    <div class="module">\n      ',  link ,'\n    </div>\n    <div class="info">\n      <div class="label">Copy the code below to use on your site:</div>\n      <div class="display-link">\n        ',  link_safe ,'\n      </div>\n    </div>\n    <button class="sui-bttn" data-clipboard-text="',  link ,'">Copy to Clipboard</button>\n  </div>\n</div>\n');}return __p.join('');};
}).call(this);
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["backbone/tags/templates/flyout_app"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div class="product-focus flyout-app">\n\t\n\t<div class="top">\n\n\t\t<div class="product-image-wrapper">\n\t\t\t<a target="_blank" href="',  tag_link ,'"><img class="product-image" src="//static.spiceworks.com/',  tag_image ,'" /></a>\n\t\t</div>\n\t\t\n\t\t<div class="product-info">\n\t\t\t<h5><span>',  tag_subtype ,': </span><a target="_blank" href=',  tag_link ,'>',  tag_title ,'</a></h5>\n\n\t\t\t');  if (tag_categories.length > 0) { ; __p.push('\n\t\t\t\t<ul>\n\t\t\t\t');  for(var i=0; i < tag_categories.length && i < 5; i++) { ; __p.push('\n\t\t\t\t\t<li>',  tag_categories[i].display_name ,'</li>\n\t\t\t\t');  } ; __p.push('\t\n\t\t\t\t</ul>\n\t\t\t');  } ; __p.push('\n\n\t\t\t<div class="secondary-info">\n\t\t\t\t\n\t\t\t\t',  SUI.rating(tag_rating).html() ,'\n\n\t\t\t\t<a class="reviews" target="_blank" href=',  tag_link ,'>',  tag_times_rated ,' ');  if(tag_num_reviews == 1) { ; __p.push(' review ');  } else { ; __p.push(' reviews ');  } ; __p.push('</a> <span class="downloads">',  tag_downloads ,'</span>\n\n\t\t\t\t<p>by <a href="',  tag_author_link ,'">',  tag_author ,'</a></p>\n\n\t\t\t</div>\n\t\t</div>\n\n\t</div>\n\n\t<div class="intro">\n\t\t<div class="description">',  tag_intro ,'</div>\n\t\t<a href="',  tag_link ,'" class="read-more">Read more</a>\n\t</div>\n\n\t',  tag_content_block ,'\n\n\t<a href="#" class="modal-close"></a>\n\n\t<div class="context-controls">\n\t\t<a target="_blank" href=',  tag_link ,' class="sui-bttn sui-bttn--primary">Get the App</a>\n\t</div>\n\n</div>\t\n');}return __p.join('');};
}).call(this);
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["backbone/tags/templates/flyout_guide"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div class="product-focus flyout-guide">\n\t\n\t<div class="top">\n\n\t\t');  if (tag_image != "") { ; __p.push('\n\n\t\t\t<div class="product-image-wrapper">\n\t\t\t\t<a target="_blank" href="',  tag_link ,'"><img class="product-image" src="',  tag_image ,'" /></a>\n\t\t\t</div>\n\t\t\n\t\t');  } ; __p.push('\n\n\t\t<div class="product-info">\n\t\t\t<h5><span>Research Guide: </span><a target="_blank" href=',  tag_link ,'>',  tag_title ,'</a></h5>\n\n\t\t\t');  if (tag_categories.length > 0) { ; __p.push('\n\t\t\t\t<ul>\n\t\t\t\t');  for(var i=0; i < tag_categories.length && i < 5; i++) { ; __p.push('\n\t\t\t\t\t<li><a target="_blank" href="',  tag_categories[i].link ,'">',  tag_categories[i].display_name ,'</a></li>\n\t\t\t\t');  } ; __p.push('\t\n\t\t\t\t</ul>\n\t\t\t');  } ; __p.push('\n\n\t\t\t<p class="intro">\n\t\t\t\t',  tag_intro ,'\n\t\t\t</p>\n\n\t\t\t');  if (tag_sections.length > 0) { ; __p.push('\n\n\t\t\t\t<h5>Sections Include:</h5>\n\t\t\t\t<ol class="sections">\n\t\t\t\t\t');  for(var i=0; i < tag_sections.length && i < 6; i++) { ; __p.push('\n\t\t\t\t\t\t<li><span>',  i+1 ,'</span>',  tag_sections[i].heading ,'</li>\n\t\t\t\t\t');  } ; __p.push('\t\n\t\t\t\t</ol>\n\n\t\t\t\t');  if (tag_sections.length > 6) { ; __p.push('\n\t\t\t\t\t<p class="more-text">and more...</p>\n\t\t\t\t');  } ; __p.push('\n\n\t\t\t');  } ; __p.push('\n\n\t\t</div>\n\n\t</div>\n\n\t',  tag_content_block ,'\n\n\t<a href="#" class="modal-close"></a>\n\n\t<div class="context-controls">\n\t\t<a target="_blank" href=',  tag_link ,' class="sui-bttn sui-bttn--primary">Open Guide</a>\n\t</div>\n\n</div>\t\n');}return __p.join('');};
}).call(this);
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["backbone/tags/templates/flyout_help"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div class="product-focus flyout-help">\n\t\n\t<div class="help-info">\n\t\t<h5><span>Help Doc: </span><a target="_blank" href=',  tag_link ,'>',  tag_title ,'</a></h5>\n\t\t\n\t\t');  if (tag_description) { ; __p.push('\n\t\t\t<p>',  tag_description ,'</p>\n\t\t');  } ; __p.push('\n\n\t\t');  if (tag_table_of_contents) { ; __p.push('\n\t\t\t');  if (tag_table_of_contents.length > 0) { ; __p.push('\n\t\t\t\t<div class="table-of-contents">\t\n\t\t\t\t\t<h5>Table of Contents:</h5>\n\t\t\t\t\t<ul>\n\t\t\t\t\t');  for(var i=0; i < tag_table_of_contents.length && i < 7; i++) { ; __p.push('\n\t\t\t\t\t\t<li><a target="_blank" href="',  tag_table_of_contents[i].link ,'">',  tag_table_of_contents[i].display_name ,'</a></li>\n\t\t\t\t\t');  } ; __p.push('\t\n\t\t\t\t\t</ul>\n\n\t\t\t\t\t');  if (tag_table_of_contents.length > 0) { ; __p.push('\n\t\t\t\t\t\t<a target="_blank" class="read-more" href=',  tag_link ,'>Read More</a>\n\t\t\t\t\t');  } ; __p.push('\n\t\t\t\t</div>\t\n\t\t\t');  } ; __p.push('\n\t\t');  } ; __p.push('\n\t</div>\n\n\t<a href="#" class="modal-close"></a>\n\n\t',  tag_content_block ,'\n\n\t<div class="context-controls empty"></div>\n\n</div>\t\n');}return __p.join('');};
}).call(this);
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["backbone/tags/templates/flyout_howto"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div class="product-focus flyout-howto">\n\n\t<div class="top">\n\n\t\t<div class="product-info">\n\t\t\t<h5><span>How-to Article: </span><a target="_blank" href=',  tag_link ,'>',  tag_title ,'</a></h5>\n\n\t\t\t');  if (tag_categories.length > 0) { ; __p.push('\n\t\t\t\t<ul>\n\t\t\t\t');  for(var i=0; i < tag_categories.length && i < 5; i++) { ; __p.push('\n\t\t\t\t\t<li><a target="_blank" href="',  tag_categories[i].link ,'">',  tag_categories[i].display_name ,'</a></li>\n\t\t\t\t');  } ; __p.push('\n\t\t\t\t</ul>\n\t\t\t');  } ; __p.push('\n\n\t\t\t<p class="intro">\n\t\t\t\t',  tag_intro ,'\n\n\t\t\t\t');  if(tag_intro_full == false) { ; __p.push('\n\t\t\t\t\t<a target="_blank" href=',  tag_link ,'>Read More</a>\n\t\t\t\t');  } ; __p.push('\n\t\t\t</p>\n\n\t\t\t');  if (tag_sections.length > 0) { ; __p.push('\n\n\t\t\t\t<h5>Steps Include:</h5>\n\t\t\t\t<div class="sections">\n\t\t\t\t\t');  for(var i=0; i < tag_sections.length && i < 6; i++) { ; __p.push('\n\t\t\t\t\t\t<li><span>',  tag_sections[i].index + 1 ,'.</span>',  tag_sections[i].step.title ,'</li>\n\t\t\t\t\t');  } ; __p.push('\n\t\t\t\t</div>\n\n\t\t\t\t');  if(tag_sections.length > 6) { ; __p.push('\n\t\t\t\t\t<a target="_blank" class="more-text" href=',  tag_link ,'>and more...</a>\n\t\t\t\t');  } ; __p.push('\n\n\t\t\t');  } ; __p.push('\n\n\t\t</div>\n\n\t</div>\n\n\t',  tag_content_block ,'\n\n\t<a href="#" class="modal-close"></a>\n\n\t<div class="context-controls">\n\t\t<a href=',  tag_link ,' class="sui-bttn sui-bttn--primary">Open How To Article</a>\n\t</div>\n\n</div>\n');}return __p.join('');};
}).call(this);
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["backbone/tags/templates/flyout_msp"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div class="product-focus flyout-msp">\n\t\n\t<div class="msp-info">\n\t\t<h5><a target="_blank" href=',  tag_link ,'>',  tag_title ,'</a></h5>\n\t\t<div class="category"><a target="_blank" href="/service-providers">MANAGED SERVICE PROVIDER</a></div>\n\n\t\t');  if (tag_services.length > 0) { ; __p.push('\n\t\t\t<div class="services">\t\n\t\t\t\t<h5>Services');  if (tag_service_type) { ; __p.push('<span> - Available ',  tag_service_type ,'</span> ');  } ; __p.push('</h5>\n\t\t\t\t<ul>\n\t\t\t\t');  for(var i=0; i < tag_services.length; i++) { ; __p.push('\n\n\t\t\t\t\t<li>',  tag_services[i] ,'</li>\n\n\t\t\t\t');  } ; __p.push('\t\n\t\t\t\t</ul>\n\t\t\t</div>\t\n\t\t');  } ; __p.push('\n\n\t\t');  if (tag_certificates.length > 0) { ; __p.push('\n\t\t\t<div class="certificates">\t\n\t\t\t\t<h5>Certifications</h5>\n\t\t\t\t<ul>\n\t\t\t\t');  for(var i=0; i < tag_certificates.length; i++) { ; __p.push('\n\n\t\t\t\t\t<li>',  tag_certificates[i] ,'</li>\n\n\t\t\t\t');  } ; __p.push('\t\n\t\t\t\t</ul>\n\t\t\t</div>\t\n\t\t');  } ; __p.push('\n\n\t\t<div class="activity">\t\n\t\t\t<h5>Activity <span>in Spiceworks</span></h5>\n\t\t\t<ul>\n\t\t\t\t<li><span>',  tag_num_answers ,'</span> Best Answers</li>\n\t\t\t\t<li><span>',  tag_num_helpful ,'</span> Helpful Posts</li>\n\t\t\t\t<li><span>',  tag_num_reviews ,'</span> Product Reviews</li>\t\t\t\t\t\t\t\t\t\t\n\t\t\t</ul>\n\t\t</div>\t\n\n\t</div>\n\n\t');  if (tag_top_employees.length > 0) { ; __p.push('\n\n\t<div class="context-list">\n\t\t<h5>',  tag_title ,' Employees in Spiceworks</h5>\n\t\t<ul>\n\t\t\t');  for(var i=0; i < tag_top_employees.length && i < 3; i++) { ; __p.push('\n\t\t\t\n\t\t\t\t<li ');  if(i == 2) { ; __p.push(' class="last" ');  } ; __p.push('>\n\t\t\t\t\t<a target="_blank" href=',  tag_top_employees[i].link ,'><img src=',  tag_top_employees[i].image ,' /></a>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a target="_blank" href=',  tag_top_employees[i].link ,'>',  tag_top_employees[i].display_name ,'</a>\n\t\t\t\t\t\t<span>',  tag_top_employees[i].years ,'</span>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\n\t\t\t');  } ; __p.push('\t\n\t\t</ul>\n\t</div>\n\n\t');  } else { ; __p.push('\n\n\t\t<div class="context-controls empty"></div>\n\n\t');  } ; __p.push('\t\n\n\t<a href="#" class="modal-close"></a>\n\n\t',  tag_content_block ,'\n\n</div>\t\n');}return __p.join('');};
}).call(this);
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["backbone/tags/templates/flyout_product"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div class="product-focus flyout-product">\n\t\n\t<div class="top">\n\n\t\t<div class="product-image-wrapper">\n\t\t\t<a target="_blank" href="',  tag_link ,'"><img class="product-image" src="',  tag_image ,'" /></a>\n\t\t</div>\n\t\t\n\t\t<div class="product-info">\n\t\t\t<h5><a target="_blank" href=',  tag_link ,'>',  tag_title ,'</a></h5>\n\n\t\t\t');  if (tag_categories.length > 0) { ; __p.push('\n\t\t\t\t<ul>\n\t\t\t\t');  for(var i=0; i < tag_categories.length && i < 5; i++) { ; __p.push('\n\t\t\t\t\t<li><a target="_blank" href="',  tag_categories[i].link ,'">',  tag_categories[i].display_name ,'</a></li>\n\t\t\t\t');  } ; __p.push('\t\n\t\t\t\t</ul>\n\t\t\t');  } ; __p.push('\n\n\t\t\t<div class="secondary-info">\n\t\t\t\t\n\t\t\t\t',  SUI.rating(tag_rating).html() ,'\n\n\t\t\t\t<a class="reviews" target="_blank" href=',  tag_reviews_link ,'>',  tag_num_reviews ,' ');  if(tag_num_reviews == 1) { ; __p.push(' review ');  } else { ; __p.push(' reviews ');  } ; __p.push('</a>\n\t\t\t\n\t\t\t\t');  if (tag_badge) { ; __p.push('\n\t\t\t\t\t<img src=',  tag_badge ,' />\n\t\t\t\t');  } ; __p.push('\n\n\t\t\t</div>\n\t\t</div>\n\n\t</div>\n\n\t');  if (tag_review_text) { ; __p.push('\n\t\t\n\t\t');  var tag_read_more = tag_link + "&target=product_comment_" +tag_review_id; ; __p.push('\n\n\t\t<div class="testimonial">\n\n\t\t\t');  if (tag_review_is_spicy) { ; __p.push('\n\t\t\t\t<span class="review-label">Spicy Review</span>\n\t\t\t');  } ; __p.push('\n\n\t\t\t');  if (tag_review_rating != 0) { ; __p.push(' ',  SUI.rating(tag_review_rating).html() ,' - ');  } ; __p.push('<span class="testimonial-text" data-link="',  tag_read_more ,'">"',  tag_review_text ,'"</span>\n\n\t\t</div>\n\n\t\t<a target="_blank" class="username" href=',  tag_review_user_link ,'><img src=',  tag_review_icon ,' /><span>',  tag_review_name ,'</span></a>\n\n\t');  } else { ; __p.push('\n\n\t\t');  if (tag_is_guest === "false" && User.verified) { ; __p.push('\n\t\t\t<div class="first-review">Be the first to <a href=',  tag_reviews_link ,'>write a review</a>.</div>\n\t\t');  } else { ; __p.push('\n\t\t\t');  if(tag_is_guest !== "false") { ; __p.push('\n\t\t\t\t<div class="first-review">Please log in to write a review.</div>\n\t\t\t');  } ; __p.push('\n\t\t');  } ; __p.push('\n\n\t');  } ; __p.push('\n\n\t',  tag_content_block ,'\n\n\t<a class="more-info" target="_blank" href=',  tag_link ,'>More info</a>\n\t<a class="modal-close" href="#"></a>\n\n</div>\n');}return __p.join('');};
}).call(this);
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["backbone/tags/templates/flyout_project"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div class="product-focus flyout-project">\n\t\n\t<div class="project-info">\n\t\t<h5><span>Project: </span><a target="_blank" href=',  tag_link ,'>',  tag_title ,'</a></h5>\n\t\t<div class="author">by <a target="_blank" href="',  tag_author_link ,'">',  tag_author ,'</a></div>\n\t\t\n\t\t');  if (tag_intro) { ; __p.push('\n\t\t\t<p>',  tag_intro ,'</p>\n\t\t');  } ; __p.push('\n\n\t\t');  if (tag_technologies.length > 0) { ; __p.push('\n\t\t\t<div class="technologies">\t\n\t\t\t\t<h5>Technologies Used</h5>\n\t\t\t\t<ul>\n\t\t\t\t');  for(var i=0; i < tag_technologies.length && i < 4; i++) { ; __p.push('\n\t\t\t\t\t<li><div class="image-wrapper"><a target="_blank" rel="tooltip" title="',  tag_technologies[i].display_name ,'" href="',  tag_technologies[i].link ,'"><img src=',  tag_technologies[i].image ,' /></a></div></li>\n\t\t\t\t');  } ; __p.push('\t\n\t\t\t\t</ul>\n\t\t\t</div>\t\n\t\t');  } ; __p.push('\n\t</div>\n\n\t<a href="#" class="modal-close"></a>\n\n\t',  tag_content_block ,'\n\n\t<div class="context-controls empty"></div>\n\n</div>\t\n');}return __p.join('');};
}).call(this);
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["backbone/tags/templates/flyout_selector"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div class="product-focus flyout-selector">\n\t\n\t<div class="top">\n\n\t\t');  if (tag_image != "") { ; __p.push('\n\n\t\t<div class="product-image-wrapper">\n\t\t\t<a target="_blank" href="',  tag_link ,'"><img class="product-image" src="',  tag_image ,'" /></a>\n\t\t</div>\n\t\t\n\t\t');  } ; __p.push('\n\n\t\t<div class="product-info">\n\t\t\t<h5><span>Reviews: </span><a target="_blank" href=',  tag_link ,'>',  tag_title ,'</a></h5>\n\n\t\t\t');  if (tag_categories.length > 0) { ; __p.push('\n\t\t\t\t<ul>\n\t\t\t\t');  for(var i=0; i < tag_categories.length && i < 5; i++) { ; __p.push('\n\t\t\t\t\t<li><a target="_blank" href="',  tag_categories[i].link ,'">',  tag_categories[i].display_name ,'</a></li>\n\t\t\t\t');  } ; __p.push('\t\n\t\t\t\t</ul>\n\t\t\t');  } ; __p.push('\n\n\t\t\t<div class="secondary-info">\n\t\t\t\t\n\t\t\t\t<span class="num-products">',  tag_num_products ,'</span>\n\n\t\t\t</div>\n\t\t</div>\n\n\t</div>\n\n\t');  if (tag_top_products.length > 0) { ; __p.push('\n\n\t<div class="context-list selectors">\n      <h5>Top ',  tag_title ,' <a target="_blank" href=',  tag_link ,'>See all</a></h5>\n      <ul>\n        ');  for(var i=0; i < tag_top_products.length && i < 3; i++) { ; __p.push('\n\n          <li ');  if(i == 2) { ; __p.push(' class="last" ');  } ; __p.push('>\n            <a target="_blank" href=',  tag_top_products[i].link ,'><img src=',  tag_top_products[i].icon ,' /></a>\n            <div>\n              <a target="_blank" href=',  tag_top_products[i].link ,'><span>',  i+1 ,'.</span>',  tag_top_products[i].display_name ,'</a>\n\t\t\t  <span class="rating">',  SUI.rating(tag_top_products[i].rating).html() ,' (',  tag_top_products[i].num_reviews ,')</span>\n\t\t\t<div>  \n          </li>\n\n        ');  } ; __p.push(' \n      </ul>\n    </div>\n\n    ');  } ; __p.push('\n\n\t',  tag_content_block ,'\n\n\t<div class="context-controls">\n\t\t<a target="_blank" href=',  tag_link ,' class="sui-bttn sui-bttn--primary">See all Products</a>\n\t</div>\n\n\t<a class="modal-close" href="#"></a>\n\n</div>\t\n');}return __p.join('');};
}).call(this);
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["backbone/tags/templates/flyout_user"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div class="product-focus flyout-user">\n\n\t<div class="top">\n\n\t\t');  if (tag_image != "") { ; __p.push('\n\n\t\t\t<div class="product-image-wrapper">\n\t\t\t\t<a target="_blank" href="',  tag_link ,'"><img class="product-image" src="',  tag_image ,'" /></a>\n\t\t\t</div>\n\n\t\t');  } ; __p.push('\n\n\t\t<div class="product-info">\n\n\t\t\t');  if (tag_username != "" && tag_title != "") { ; __p.push('\n\t\t\t\t<h5><a target="_blank" href=',  tag_link ,'>',  tag_title ,'</a></h5>\n\t\t\t\t<div class="username ',  tag_user_role_class ,'">',  tag_username ,'</div>\n\t\t\t');  } else if (tag_title != "") { ; __p.push('\n\t\t\t\t<h5><a target="_blank" class="',  tag_user_role_class ,'" href=',  tag_link ,'>',  tag_title ,'</a></h5>\n\t\t\t');  } else { ; __p.push('\n\t\t\t\t<h5><a target="_blank" class="',  tag_user_role_class ,'" href=',  tag_link ,'>',  tag_username ,'</a></h5>\n\t\t\t');  } ; __p.push('\n\n\t\t\t<div>\n\t\t\t\t<span class="followers">',  tag_followers ,'</span>\n\n\t\t\t\t<div class="user-actions">\n\t\t\t\t\t');  if(!tag_is_followed) { ; __p.push('\n\n\t\t\t\t\t\t<a class="sui-followbutton sui-bttn sui-followbttn" data-toggle="followbttn" href="#" data-original-title="" data-following="false" title=""><span class="button-text">Follow</span></a>\n\n\t\t\t\t\t');  } else { ; __p.push('\n\n\t\t\t\t\t\t<a class="sui-followbutton sui-bttn sui-followbttn following" data-toggle="followbttn" href="#" title="" data-following="true" data-original-title="Unfollow"><span class="button-text">Following</span></a>\n\n\t\t\t\t\t');  } ; __p.push('\n\n\t\t\t\t\t');  message_url = "/messages/new_message?redirect=/profile/show/"+ encodeURIComponent(tag_username) +"?tab=activity&amp;to="+ encodeURIComponent(tag_username) ; __p.push('\n\t\t\t\t\t');  message_alt = "Send a private message to "+tag_username ; __p.push('\n\t\t\t\t\t<a href=',  message_url ,' target="_blank" class="sui-bttn send-message" title=',  message_alt ,'><i class="sui-icon sui-icon-email sui-icon--16"></i></a>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<div class="badges shared-badges-div">\n\t\t\t\t');  for(var i=0; i < tag_badges.length; i++) { ; __p.push('\n\t\t\t\t\t',  tag_badges[i] ,'\n\t\t\t\t');  } ; __p.push('\n\t\t\t</div>\n\n\t\t</div>\n\n\t\t<ul class="user-stats">\n\t\t\t<li>\n\t\t\t\t<a target="_blank" href=',  tag_contributions_url ,'>',  tag_contributions ,'</a>\n\t\t\t\t');  if (tag_contributions == 1) { ; __p.push(' <span>Contribution</span>');  } else { ; __p.push('<span>Contributions</span>');  } ; __p.push('\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<a target="_blank" href=',  tag_best_answers_url ,'>',  tag_best_answers ,'</a>\n\t\t\t\t');  if (tag_best_answers == 1) { ; __p.push(' <span>Best Answer</span>');  } else { ; __p.push('<span>Best Answers</span>');  } ; __p.push('\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<a target="_blank" href=',  tag_helpful_posts_url ,'>',  tag_helpful_posts ,'</a>\n\t\t\t\t');  if (tag_helpful_posts == 1) { ; __p.push(' <span>Helpful Post</span>');  } else { ; __p.push('<span>Helpful Posts</span>');  } ; __p.push('\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<a target="_blank" href=',  tag_projects_url ,'>',  tag_projects ,'</a>\n\t\t\t\t');  if (tag_projects == 1) { ; __p.push(' <span>Project</span>');  } else { ; __p.push('<span>Projects</span>');  } ; __p.push('\n\t\t\t</li>\n\t\t</ul>\n\n\t\t');  if (tag_contributions > 0) { ; __p.push('\n\t\t<div class="user-contributions">\n\n\t\t\t<h5>Main Areas of Contribution</h5>\n\n\t\t\t');  if (tag_contribution_areas.length > 0) { ; __p.push('\n\t\t\t<ul>\n\t\t\t\t');  for(var i=0; i < tag_contribution_areas.length; i++) { ; __p.push('\n\t\t\t\t\t<li>',  tag_contribution_areas[i] ,'</li>\n\t\t\t\t');  } ; __p.push('\n\t\t\t</ul>\n\t\t\t');  } ; __p.push('\n\n\t\t</div>\n\t\t');  } ; __p.push('\n\n\t</div>\n\n\t',  tag_content_block ,'\n\n\t<a href="#" class="modal-close"></a>\n\n\t<div class="context-controls">\n\t\t<a target="_blank" href=',  tag_link ,' class="sui-bttn sui-bttn--primary">View User Profile</a>\n\t</div>\n\n</div>\n');}return __p.join('');};
}).call(this);
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["backbone/tags/templates/flyout_vendor"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div class="product-focus flyout-vendor">\n  <div class="top">\n    <div class="product-image-wrapper">\n      <a target="_blank" href="',  tag_link ,'"><img class="product-image" src="',  tag_image ,'" /></a>\n    </div>\n\n    <div class="vendor-header">\n      <h5><a target="_blank" href=',  tag_link ,'>',  tag_title ,'</a></h5>\n\n      <ul class="vendor-categories">\n        ');  for(var i=0; i < tag_categories.length && i < 2; i++) { ; __p.push('\n          <li>\n            <a target="_blank" href="',  tag_categories[i].link ,'">',  tag_categories[i].display_name ,'</a>\n          </li>\n        ');  } ; __p.push('\n      </ul>\n\n      <div class="vendor-badges">\n        <ul class="vendor-badge-list">\n          ');  for (var i=0; i < tag_badges.length; i ++) { ; __p.push('\n            <li class="badge-item">\n              <img src="',  tag_badges[i].image_url ,'" title="',  tag_badges[i].title ,'" alt="',  tag_badges[i].title ,'"/>\n            </li>\n          ');  } ; __p.push('\n        </ul>\n      </div>\n    </div>\n\n    <div class="follower-info">\n      ');  if(!tag_is_followed) { ; __p.push('\n        <a href="#" class="follow-button sui-bttn sui-followbttn" data-display-name=',  tag_title ,' data-followable-class="VendorPage" data-followable-id=',  tag_id ,' data-following="false" data-id=',  tag_id ,' data-name="Spiceworks" data-show-followup="true" data-similar-path=',  tag_link+"/similar" ,' data-status-only="false" data-toggle="followbttn" data-uri=',  "/api/vendor_pages/toggle?vendor_page_id="+tag_id ,' rel="tooltip" title="" data-original-title="Follow"><span class="button-text">Follow</span></a>\n      ');  } else { ; __p.push('\n        <a href="#" class="follow-button sui-bttn sui-followbttn following" data-display-name=',  tag_title ,' data-followable-class="VendorPage" data-followable-id=',  tag_id ,' data-following="true" data-id=',  tag_id ,' data-name="Spiceworks" data-show-followup="true" data-similar-path=',  tag_link+"/similar" ,' data-status-only="false" data-toggle="followbttn" data-uri=',  "/api/vendor_pages/toggle?vendor_page_id="+tag_id ,' rel="tooltip" title="" data-original-title="Unfollow"><span class="button-text">Following</span></a>\n      ');  } ; __p.push('\n      <span class="followers">',  tag_followers ,'</span>\n    </div>\n  </div>\n\n  <div class="vendor-description">\n    ',  tag_description ,'\n  </div>\n\n  ');  if((tag_email && tag_email.trim()) || (tag_phone && tag_phone.trim())) { ; __p.push('\n    <div class="vendor-contact vendor-section">\n      ');  if(tag_email && tag_email.trim()) { ; __p.push('\n        <div class="vendor-email">\n          <span class="vendor-label">Email</span>\n          <span class="vendor-value">\n            <a href="mailto:',  tag_email ,'">',  tag_email ,'</a>\n          </span>\n        </div>\n      ');  } ; __p.push('\n\n      ');  if(tag_phone && tag_phone.trim()) { ; __p.push('\n        <div class="vendor-phone">\n          <span class="vendor-label">Phone</span>\n          <span class="vendor-value">',  tag_phone ,'</span>\n        </div>\n      ');  } ; __p.push('\n    </div>\n  ');  } ; __p.push('\n\n  ');  if (tag_featured_post) { ; __p.push('\n    '); 
        var authorClass = "";
        if(tag_featured_post.is_partner) {
          authorClass = "partner";
        } else if(tag_featured_post.is_admin) {
          authorClass = "admin";
        }
      ; __p.push('\n    <div class="vendor-post vendor-section">\n      <span class="vendor-label">Featured Post</span>\n      <a class="more-link" target="_blank" href=',  tag_featured_post.tab_url ,'>See all</a>\n      <div class="vendor-item-info">\n        <a class="item-name post-name" target="_blank" href="',  tag_featured_post.url ,'">',  tag_featured_post.title ,'</a>\n        ',  tag_featured_post.content ,'\n        <a href="',  tag_featured_post.author_url ,'" class=',  authorClass ,'>\n          ',  tag_featured_post.author ,'\n        </a>\n        <span class="post-timestamp" data-js-postprocess="timestamp" data-timestamp-format="from_now" datetime="',  tag_featured_post.created_at ,'"></span>\n      </div>\n    </div>\n  ');  } else if (tag_featured_product) { ; __p.push('\n    <div class="vendor-product vendor-section">\n      <span class="vendor-label">Featured Product</span>\n      <a class="more-link" target="_blank" href=',  tag_featured_product.tab_url ,'>See all</a>\n      <div class="vendor-item-info">\n        <img src=',  tag_featured_product.image_url ,' />\n        <div class="vendor-product-description">\n          <a class="item-name" target="_blank" href="',  tag_featured_product.product_url ,'">',  tag_featured_product.display_name ,'</a>\n          <p>',  tag_featured_product.description ,'</p>\n          <div class="vendor-product-rating">\n            ',  SUI.rating(tag_featured_product.rating).html() ,'\n            <a class="reviews" target="_blank" href=',  tag_featured_product.reviews_url ,'>\n              (',  tag_featured_product.num_ratings ,')\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  ');  } ; __p.push('\n\n  ');  if (tag_vendor_reps.length > 0) { ; __p.push('\n    <div class="vendor-contacts vendor-section">\n      <span class="vendor-label">People</span>\n      <a class="more-link" target="_blank" href=',  tag_link+"&employees=true" ,'>See all</a>\n      <ul>\n        ');  for(var i=0; i < tag_vendor_reps.length; i++) { ; __p.push('\n          '); 
              var contact = tag_vendor_reps[i],
                  contactClass = "";
              if(contact.is_partner) {
                contactClass = "partner";
              } else if(contact.is_admin) {
                contactClass = "admin";
              }
            ; __p.push('\n\n          <li title="',  contact.display_name,'&#013;',  contact.comp_title ,'">\n            <div class="contact-avatar">\n              <a target="_blank" href=',  contact.link ,'>\n                <img src=',  contact.icon ,' />\n              </a>\n              <div class="rank_title align-center" title="',  contact.level_name ,'">\n                <span class="',  contact.level_class ,'">',  contact.level_name ,'</span>\n              </div>\n            </div>\n            <div class="contact-details">\n              <a target="_blank" class=',  contactClass ,' href=',  contact.link ,'>\n                ',  contact.display_name ,'\n              </a>\n              <span class="vendor-label">',  contact.comp_title ,'</span>\n            </div>\n          </li>\n        ');  } ; __p.push('\n      </ul>\n    </div>\n  ');  } ; __p.push('\n</div>\n');}return __p.join('');};
}).call(this);
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["backbone/tags/templates/modal-review"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div data-ID="',  product_id ,'" class="modal-review">\n\t<div class="modal-review-content">\n\t\t<h3>How did you use this technology? Was it good?</h3>\n\t\t<p>Let everyone know what you think about the <strong>',  product_name ,'</strong></p>\n\t\t\n\t\t<div class="container">\n\t\t\t<textarea>',  product_review ,'</textarea>\n\t\t\t<span class="product-rating"><span class="stars ',  product_rating ,'"></span></span>\n\t\t\t<span class="notice">20 word minimum</span>\n\t\t</div>\t\n\n\t\t<div class="controls">\n\t\t\t<button class="cancel">No thanks</button>\n\t\t\t<button class="confirm">Save</button>\n\t\t</div>\n\t</div>\n\t<div class="modal-review-backdrop"></div>\n</div>\n');}return __p.join('');};
}).call(this);
/*1.0*/

//


/*global $ document*/

var SPICE = window.SPICE || {};
SPICE.ProductViewUtilities = SPICE.ProductViewUtilities || {};

(function($) {

    // UTILITIES //////////////////////////////////////////

    // Source the URLs
    SPICE.ProductViewUtilities.sourceURL = function(url, identifier, optionalIdentifier) {

      // If there is an optional identifier, include it
      optionalIdentifier = optionalIdentifier ? "_"+String(optionalIdentifier) : "";

      // Parse the url
      if(url)
      {
        if(url.indexOf('?') > -1)
        {
          var tempArray = url.split('?');
          var baseURL = tempArray[0];
          var queryParamArray = tempArray[1].split('&');

          for(var i = 0; i < queryParamArray.length; i++)
          {
            if(queryParamArray[i].indexOf('source=') > -1)
            {
              // Remove the existing source param if there is one
              queryParamArray.splice(i, 1);
            }
          }

          // If there was a source param, get rid of the old one and add the new one
          return baseURL +"?"+ queryParamArray.join('&') + "&source=dynamic_tagging_" + String(identifier) + optionalIdentifier;

        }
        else
        {
          return url +"?"+ "source=dynamic_tagging_" + String(identifier) + optionalIdentifier;
        }
      }

    }

    // Convert the rating class into an integer
    SPICE.ProductViewUtilities.getRatingInteger = function(ratingClass) {

      switch(ratingClass)
      {
        case "one":
          return 1;
          break;
        case "two":
          return 2;
          break;
        case "three":
          return 3;
          break;
        case "four":
          return 4;
          break;
        case "five":
          return 5;
          break;
        default:
          return 0;
          break;
      }

    }

    // Convert the rating integer into a class
    SPICE.ProductViewUtilities.getRatingClass = function(ratingInteger) {

      switch(ratingInteger)
      {
        case 1:
          return "one";
          break;
        case 2:
          return "two";
          break;
        case 3:
          return "three";
          break;
        case 4:
          return "four";
          break;
        case 5:
          return "five";
          break;
        default:
          return "";
          break;
      }

    }

    SPICE.ProductViewUtilities.isFollowed = function(tagType, ID, isFollowed) {

      if(User.following){

        switch(tagType.toUpperCase())
        {
          case "VENDORPAGE":
            return User.following.VendorPage && User.following.VendorPage.includes(ID);
            break;
          case "USER":
            return isFollowed ? true : false ;
            break;
          default:
            return false;
            break;
        }

      } else {
        return false;
      }

      /*
      if((tagType.toUpperCase() === 'VENDORPAGE' || tagType.toUpperCase() === 'USER') && User.following){
        var idx = User.following.VendorPage.indexOf(vpID);
        return (idx > -1);
      } else {
        return false;
      }
      */
    };

    // DATA OBJECTS //////////////////////////////////////////

    SPICE.ProductDataObject = function(module) {

      // Set data type
      this.tagType = "PRODUCT";
      var json = module.data('tagdata');

      // Set data
      this.userID = json.userid;
      this.postID = json.postid;
      this.tagID = json.tagid;
      this.tagLink = json.taglink;
      this.image = json.tagimage;
      this.title = json.tagtitle;
      this.categories = json.categories;
      this.tagRating = json.productrating;
      this.numReviews = json.numreviews;
      this.reviewsLink = json.reviewslink;
      this.badge = json.badge;
      this.isUserReview = json.isuserreview ? true : false;
      this.isUserRating = json.isuserrating ? true : false;
      this.isReviewSpicy = json.isreviewspicy ? true : false;
      this.reviewID = json.reviewid;
      this.reviewUserLink = json.reviewuserlink;
      this.reviewRating = json.reviewrating;
      this.userRating = json.userrating;
      this.ratingClass = SPICE.ProductViewUtilities.getRatingClass(this.userRating);
      this.reviewText = json.reviewtext;
      this.reviewIcon = json.reviewicon;
      this.reviewName = json.reviewname;
      this.contentBlock = json.contentblock;
      this.userName = json.username;
      this.userIcon = json.usericon;
      this.userLink = json.userlink;

      // Remove all data attributes
      var data = module.data();
      for(var name in data){
          module.removeAttr("data-"+name);
      }

    }

    SPICE.VendorDataObject = function(module) {

      // Set data type
      this.tagType = "VENDORPAGE";
      var json = module.data('tagdata');

      // Set data
      this.userID = json.userid;
      this.postID = json.postid;
      this.tagID = json.tagid;
      this.tagLink = json.taglink;
      this.image = json.tagimage;
      this.title = json.tagtitle;
      this.categories = json.tagcategories;
      this.description = json.tagdescription;
      this.email = json.tagemail;
      this.phone = json.tagphone;
      this.featured_product = json.tagfeaturedproduct;
      this.featured_post = json.tagfeaturedpost;
      this.vendorReps = json.tagvendorreps;
      this.followers = json.tagfollowers;
      this.badges = json.tagbadges;
      this.contentBlock = json.contentblock;

      if (this.featured_post){
        this.featured_post.created_at = new Date(this.featured_post.created_at);
      }

      // Remove all data attributes
      var data = module.data();
      for(var name in data){
          module.removeAttr("data-"+name);
      }

    }

    SPICE.SelectorDataObject = function(module) {

      // Set data type
      this.tagType = "PRODUCTSELECTORCONFIG";
      var json = module.data('tagdata');

      // Set data
      this.userID = json.userid;
      this.postID = json.postid;
      this.tagID = json.tagid;
      this.tagLink = json.taglink;
      this.image = json.tagimage;
      this.title = json.tagtitle;
      this.categories = json.tagcategories;
      this.numProducts = json.tagnumproducts;
      this.topProducts = json.tagtopproducts;
      this.contentBlock = json.contentblock;

      // Remove all data attributes
      var data = module.data();
      for(var name in data){
          module.removeAttr("data-"+name);
      }

    }

    SPICE.ResearchGuideObject = function(module) {

      // Set data type
      this.tagType = "RESEARCHGUIDE";
      var json = module.data('tagdata');

      // Set data
      this.userID = json.userid;
      this.postID = json.postid;
      this.tagID = json.tagid;
      this.tagLink = json.taglink;
      this.image = json.tagimage;
      this.title = json.tagtitle;
      this.categories = json.tagcategories;
      this.intro = json.intro;
      this.sections = json.sections;

      // Remove all data attributes
      var data = module.data();
      for(var name in data){
          module.removeAttr("data-"+name);
      }

    }

    SPICE.ApplicationObject = function(module) {

      // Set data type
      this.tagType = "APP";
      var json = module.data('tagdata');



      // Set data
      this.userID = json.userid;
      this.postID = json.postid;
      this.tagID = json.tagid;
      this.tagLink = json.taglink;
      this.categories = json.categories;
      this.tagRating = json.tagrating;
      this.tagDownloads = json.tagdownloads;
      this.tagTimesRated = json.tagtimesrated;
      this.author = json.tagauthor;
      this.authorLink = json.tagauthorlink;
      this.tagSubtype = json.tagsubtype.toUpperCase();
      this.tagClass = json.tagclass.toUpperCase();
      this.image = json.tagimage;
      this.title = json.tagtitle;
      this.intro = json.intro;

      // Remove all data attributes
      var data = module.data();
      for(var name in data){
          module.removeAttr("data-"+name);
      }

    }

    SPICE.HowToArticleObject = function(module) {

      // Set data type
      this.tagType = "HOWTOARTICLE";
      var json = module.data('tagdata');

      // Set data
      this.userID = json.userid;
      this.postID = json.postid;
      this.tagID = json.tagid;
      this.tagLink = json.taglink;
      this.title = json.tagtitle;
      this.categories = json.tagcategories;
      this.intro = json.intro;
      this.introFull = json.introfull;
      this.sections = json.sections;

      // Remove all data attributes
      var data = module.data();
      for(var name in data){
          module.removeAttr("data-"+name);
      }

    }


    SPICE.UserObject = function(module) {

      // Set data type
      this.tagType = "USER";
      var json = module.data('tagdata');

      // Set data
      this.userID = json.userid;
      this.postID = json.postid;
      this.tagID = json.tagid;
      this.tagLink = json.taglink;
      this.image = json.tagimage;
      this.title = json.tagtitle;
      this.username = json.tagusername;
      this.urlName = json.tagurlname;
      this.contributionAreas = json.tagcontributionareas;
      this.contributions = json.tagcontributions;
      this.contributionsURL = json.tagcontributionsurl;
      this.bestAnswers = json.tagbestanswers;
      this.bestAnswersURL = json.tagbestanswersurl;
      this.helpfulPosts = json.taghelpfulposts;
      this.userRoleClass = json.taguserroleclass;
      this.helpfulPostsURL = json.taghelpfulpostsurl;
      this.projects = json.tagprojects;
      this.projectsURL = json.tagprojectsurl;
      this.badges = json.tagbadges;
      this.followers = json.tagfollowers;
      this.isFollowed = json.tagisfollowed;

      // Remove all data attributes
      var data = module.data();
      for(var name in data){
          module.removeAttr("data-"+name);
      }

    }

    SPICE.HelpObject = function(module) {

      // Set data type
      this.tagType = "HELPCATEGORYNODE";
      var json = module.data('tagdata');

      // Set data
      this.userID = json.userid;
      this.postID = json.postid;
      this.tagID = json.tagid;
      this.tagLink = json.taglink;
      this.title = json.tagtitle;
      this.description = json.tagdescription;
      this.tableOfContents = json.tableofcontents;
      this.contentBlock = json.contentblock;

      // Remove all data attributes
      var data = module.data();
      for(var name in data){
          module.removeAttr("data-"+name);
      }

    }

    SPICE.ProjectObject = function(module) {

      // Set data type
      this.tagType = "PROJECT";
      var json = module.data('tagdata');

      // Set data
      this.userID = json.userid;
      this.postID = json.postid;
      this.tagID = json.tagid;
      this.tagLink = json.taglink;
      this.title = json.tagtitle;
      this.author = json.tagauthor;
      this.authorLink = json.tagauthorlink;
      this.intro = json.intro;
      this.technologies = json.tagtechnologies;
      this.contentBlock = json.contentblock;

      // Remove all data attributes
      var data = module.data();
      for(var name in data){
          module.removeAttr("data-"+name);
      }

    }

    SPICE.MSPObject = function(module) {

      // Set data type
      this.tagType = "MSPPROFILE";
      var json = module.data('tagdata');

      // Set data
      this.userID = json.userid;
      this.postID = json.postid;
      this.tagID = json.tagid;
      this.image = json.tagimage;
      this.tagLink = json.taglink;
      this.title = json.tagtitle;
      this.tagServices = json.tagservices;
      this.tagServiceType = json.tagservicetype;
      this.tagCertificates = json.tagcertificates;
      this.tagNumAnswers = json.tagnumanswers;
      this.tagNumHelpful = json.tagnumhelpful;
      this.numReviews = json.tagnumreviews;
      this.tagTopEmployees = json.tagtopemployees;
      this.contentBlock = json.contentblock;

      // Remove all data attributes
      var data = module.data();
      for(var name in data){
          module.removeAttr("data-"+name);
      }

    }

    // TAGS //////////////////////////////////////////

    SPICE.ProductViewTag = function(tag) {

      // The tag module
      this.tag = tag;

      // The tag elements
      this.trigger = this.tag.find('.js-focus');
      this.reviews = this.tag.find('.tag-review');
      this.message = this.reviews.find('.rating-message');

      // The tag data
      this.model;
      this.tagType = this.tag.data("tagdata").type;

      switch(this.tagType.toUpperCase())
      {
        case "PRODUCT":
          this.model = new SPICE.ProductDataObject(tag);
          break;
        case "APP":
          this.model = new SPICE.ApplicationObject(tag);
          break;
        case "VENDORPAGE":
          this.model = new SPICE.VendorDataObject(tag);
          break;
        case "PRODUCTSELECTORCONFIG":
          this.model = new SPICE.SelectorDataObject(tag);
          break;
        case "RESEARCHGUIDE":
          this.model = new SPICE.ResearchGuideObject(tag);
          break;
        case "HOWTOARTICLE":
          this.model = new SPICE.HowToArticleObject(tag);
          break;
        case "USER":
          this.model = new SPICE.UserObject(tag);
          break;
        case "MSPPROFILE":
          this.model = new SPICE.MSPObject(tag);
          break;
        case "PROJECT":
          this.model = new SPICE.ProjectObject(tag);
          break;
        case "HELPCATEGORYNODE":
          this.model = new SPICE.HelpObject(tag);
          break;
      }

      // Get the related inline tags
      var mainObj = this;
      this.inlineTags = this.tag.closest('.post_content, #root_post, .blog-entry-wrapper, .best-answer-under-root-post').find('.inline-tag').filter(function() {

        var currentTag = $(this);
        if(currentTag.attr("data-id") && currentTag.attr("data-type"))
        {
          return currentTag.attr("data-id") == mainObj.model.tagID && (currentTag.attr("data-type").toUpperCase() == mainObj.tagType.toUpperCase() || currentTag.attr("data-type").toUpperCase() == mainObj.model.tagClass.toUpperCase());
        }

      });

      // Modules
      this.modalModule;
      this.focusModule;
      this.ratingModule = new SPICE.ProductViewRatings(this.tag, this.model);

      // Initialize the module
      this.initialize();

    }

    SPICE.ProductViewTag.prototype = {

        initialize: function() {

          // Reference to main object
          var mainObj = this;

          // When the review is cancelled, set it back to the previous rating
          $(document).on('review-confirmed.product', $.proxy(function(e, reviewModel, isUpdatedReview){

            // If this is a clone post by the same user
            if(this.isUsersTag(reviewModel))
            {
              // Update all similar tags with current information
              this.cloneUpdate(reviewModel.ratingClass, reviewModel.reviewText, isUpdatedReview);
            }

          }, this));

          // When the review is cancelled, set it back to the previous rating
          $(document).on('review-cancelled.product', $.proxy(function(e, reviewModel){

            if(this.isSourceTag(reviewModel))
            {
              this.ratingModule.resetRating();
            }

          }, this));

          // When a rating has been made
          $(document).on('rating.product', $.proxy(function(e, ratingModel){

            if(this.isSourceTag(ratingModel))
            {
              // Show the modal
              new SPICE.ProductViewReviewModal(this.tag, this.model, ratingModel.ratingClass);
            }

          }, this));

          // Focus trigger events
          this.focusModule = new SPICE.ProductViewFocus(this.tag, this.model);

          this.trigger.on('click', function(e){
            mainObj.clickTag(e, mainObj.tag, 'Show Detail Bubble - From Main Tag');
          });

          this.inlineTags.on('click', function(e){
            mainObj.clickTag(e, $(this), 'Show Detail Bubble - From Inline Tag');
          });

          this.trigger.hover(function(e){
            mainObj.hoverTag(e, mainObj.tag, 'Show Detail Bubble - From Main Tag Hover');
          }, function(){
            mainObj.unhoverTag();
          });

          this.inlineTags.hover(function(e){
            mainObj.hoverTag(e, $(this), 'Show Detail Bubble - From Inline Tag Hover');
          }, function(){
            mainObj.unhoverTag();
          });

          // Setup the initial rating and review
          this.setRatingClass();
          this.setReviewText();

        },

        isUsersTag: function(model)
        {
          return this.model.userID === model.userID && this.model.tagID === model.tagID && this.model.tagType === model.tagType ? true : false ;
        },

        isSourceTag: function(model)
        {
          return this.model === model ? true : false ;
        },

        cloneUpdate: function(ratingClass, reviewText, isUpdatedReview) {

          if(isUpdatedReview || this.model.isUserReview)
          {
            this.model.reviewName = this.model.userName;
            this.model.reviewUserLink = this.model.userLink;
            this.model.reviewIcon = this.model.userIcon;

            this.model.isUserReview = true;
            this.model.isReviewSpicy = false;

            // Set the new user review
            if(reviewText)
            {
              this.setReviewText(reviewText);
            }
          }

          // Set the new user rating
          if(ratingClass)
          {
            this.model.isUserRating = true;
            this.model.userRating = SPICE.ProductViewUtilities.getRatingInteger(ratingClass);
            this.setRatingClass(ratingClass, true);
          }

        },

        clickTag: function(e, target, eventText) {
          e.preventDefault();

          clearTimeout(this.focusModule.hoverTimer);
          clearTimeout(this.focusModule.unhoverTimer);

          if(!this.focusModule.flyout) {
            GoogleAnalytics.trackEvent('Dynamic Tagging', eventText, String(this.model.postID));
            $(document).trigger('show-focus.product', [this.model, target, true]);
          }
        },

        hoverTag: function(e, target, eventText) {
          var tag = this;

          e.preventDefault();

          clearTimeout(this.focusModule.unhoverTimer);

          if(!this.focusModule.flyout) {
            this.focusModule.hoverTimer = setTimeout(function(){
              $(document).trigger('show-focus.product', [tag.model, target]);
            }, 250);
          }
        },

        unhoverTag: function() {
          var tag = this;

          clearTimeout(this.focusModule.hoverTimer);

          if(this.focusModule.fromClick !== true) {
            this.focusModule.unhoverTimer = setTimeout(function(){
              $(document).trigger('hide-focus.product', [tag.model]);
            }, 450);
          }
        },

        setRatingClass: function(ratingClass, isNewModel) {

          // If there is new ratingClass, store it in the object
          if(ratingClass)
          {
            this.model.ratingClass = ratingClass;
          }

          // Enable the rating
          this.ratingModule.setRatingClass(this.model.ratingClass, isNewModel);
          this.ratingModule.enableRating();

        },
        setReviewText: function(reviewText) {

          // If there is new reviewText, store it in the object
          if(reviewText)
          {
            this.model.reviewText = reviewText;
          }

          // Change the message and the number
          this.model.isUserReview ? this.message.html('My Review:') : this.message.html('Review it:');

          // Enable the rating
          this.ratingModule.enableRating();

        }

    };


    SPICE.ProductViewFollowBtn = function(followBtn) {

      // The tag model
      this.followBtn = followBtn;
      this.followIcon = this.followBtn.find('i');
      this.followBtnLabel = this.followBtn.find('span');
      this.assetType = this.followBtn.attr('data-followable-class');
      this.assetID = this.followBtn.attr('data-followable-id');

      // Initialize the module
      this.initialize();

    }

    SPICE.ProductViewFollowBtn.prototype = {

        initialize: function() {

          this.events();

        },

        events: function() {

          this.followBtn.on("follow unfollow", $.proxy(function(e, btn){

            var options = btn.options,
                following = options.following;

            $.post('/api/vendor_pages/toggle?vendor_page_id='+this.assetID, $.proxy(function(data)
            {
              // Toggle the followed state
              if(data.following===true){
                User.following.VendorPage.push(data.vendor_page_id);
              }
              else{
                User.following.VendorPage = _.without(User.following.VendorPage, data.vendor_page_id);
              }

              $(document).trigger('sync.follow_button', [this.assetType, this.assetID, data.following])

            }, this));

          }, this));

          $(document).on("sync.follow_button", $.proxy(function(e, type, ID, following){

            if(this.assetType.toUpperCase() === type.toUpperCase() && Number(this.assetID) === Number(ID))
            {
              this.followBtn.followbutton({ following: following })
            }

          }, this));

        }

    };


    // RATINGS //////////////////////////////////////////

    SPICE.ProductViewRatings = function(container, model, isModalRating) {

      // The tag model
      this.container = container;
      this.model = model;
      this.isModalRating = isModalRating ? isModalRating : false;

      this.tempRating = "";
      this.storedRatingClass = this.model.ratingClass;

      // The elements for the rating module
      this.rating = this.container.find('.product-rating');
      this.stars = this.container.find('.stars');

      // Initialize the module
      this.initialize();

    }

    SPICE.ProductViewRatings.prototype = {

        initialize: function() {

          this.setRatingClass(this.model.ratingClass);

        },
        mouseMove: function(e) {

          // Clear the previous classes
          this.clearStars();

          // Get the XPosition
          var xPos = parseInt(e.pageX) - parseInt(this.stars.offset().left);

          // Determine how many stars to show
          if(xPos <= 14)
          {
            this.tempRating = 'one';
          }
          else if(xPos > 14 && xPos <= 28)
          {
            this.tempRating = 'two';
          }
          else if(xPos > 28 && xPos <= 42)
          {
            this.tempRating = 'three';
          }
          else if(xPos > 42 && xPos <= 56)
          {
            this.tempRating = 'four';
          }
          else
          {
            this.tempRating = 'five';
          }

          this.stars.addClass(this.tempRating);

        },
        mouseLeave: function(e) {

          // Clear the previous rating class
          this.resetRating();

        },
        ratingClick: function(e) {

          // Prevent the default
          e.preventDefault();

          // Disable the ratings
          this.disableRating();

          // Set the model to the temp rating
          this.model.ratingClass = this.tempRating;

          // Broadcast an event to show the modal
          if(!this.isModalRating)
          {
            $(document).trigger('rating.product', this.model);
            this.setRatingClass(this.model.ratingClass);
          }
          else
          {
            // If multiple ratings are allowed, set the rating class
            this.setRatingClass(this.model.ratingClass, true);
          }

        },
        enableRating: function() {

          // Get rid of the old handlers
          this.disableRating();

          // Create new handlers
          this.rating.on('mouseleave', $.proxy(this.mouseLeave, this));
          this.rating.on('mousemove', $.proxy(this.mouseMove, this));
          this.rating.on('click', $.proxy(this.ratingClick, this));

        },
        disableRating: function() {

          // Get rid of the old handlers
          this.rating.off('mouseleave', $.proxy(this.mouseLeave, this));
          this.rating.off('mousemove', $.proxy(this.mouseMove, this));
          this.rating.off('click', $.proxy(this.ratingClick, this));

        },
        resetRating: function() {

          // Clear the existing star class
          this.clearStars();

          // Clear the stored rating and reset the class back to the original
          this.stars.addClass(this.storedRatingClass);

          // Enable the rating
          this.enableRating();

        },
        setRatingClass: function(ratingClass, isNewModel) {

          // Clear the old handlers
          this.disableRating();

          // Clear the previous rating class
          this.clearStars();

          // If there is new reviewText, store it in the object
          if(ratingClass)
          {
            this.model.ratingClass = ratingClass;
          }

          // Clear the stored value if a new model has been set
          if(isNewModel)
          {
            this.storedRatingClass = this.model.ratingClass;
          }

          // Set the rating class
          this.stars.addClass(this.model.ratingClass);

          // Enable the rating system
          this.enableRating();

        },
        getRatingClass: function() {

          return this.model.ratingClass;

        },
        clearStars: function() {

          // Remove the star class
          this.stars.removeClass('one two three four five half');

        }
    };

    // MODAL ////////////////////////////////////////////

    SPICE.ProductViewReviewModal = function(tag, model) {

      // The modal
      this.modal;
      this.model = model;
      this.body = $('body');
      this.template = JST["backbone/tags/templates/modal-review"];
      this.tag = tag;
      this.ratingModule;
      this.minReviewNumWords = 20;

      // The elements of the modal
      this.backdrop;
      this.textarea;
      this.cancelBtn;
      this.confirmBtn;
      this.stars;
      this.productNameField;

      // Initialize the module
      this.initialize();
    }

    SPICE.ProductViewReviewModal.prototype = {

      initialize: function() {

        // Show the modal
        this.showModal();

      },

      showModal: function() {

        // Create the review modal
        this.body.append(this.template({
          product_id: this.model.tagID,
          product_name: this.model.title,
          product_rating: this.model.ratingClass,
          product_review: this.model.isUserReview ?
            _.escape(this.model.reviewText) : ""
        }));

        this.modal = this.body.find('.modal-review');
        this.content = this.modal.find('.modal-review-content');

        // The elements of the modal
        this.backdrop = this.modal.find('.modal-review-backdrop');
        this.textarea = this.modal.find('textarea');
        this.cancelBtn = this.modal.find('.cancel');
        this.container = this.modal.find('.container');
        this.confirmBtn = this.modal.find('.confirm');
        this.stars = this.modal.find('.stars');
        this.notice = this.modal.find('.notice');
        this.productNameField = this.modal.find('.modal-review-content strong');
        this.noticeMessage;

        // Setup the rating module
        this.ratingModule = new SPICE.ProductViewRatings(this.modal, this.model, true);

        // Setup the events for the modal
        this.setupEvents();

        // Show the modal
        this.modal.show().hide().fadeIn('slow');

        // Broadcast an event and record metrics
        $(document).trigger('show-review-modal.product', []);

      },

      hideModal: function() {

        if(this.modal)
        {
          // Hide the spinner
          this.hideSpinner();

          // Remove the modal
          $('.modal-review').remove();
        }

      },

      showSpinner: function() {

        this.content.addClass('masked-relative masked');
        this.content.suiLoadMask('show');

      },

      hideSpinner: function() {

        this.content.removeClass('masked-relative masked');
        this.content.suiLoadMask('hide');

      },

      setupEvents: function() {

        // Special keys
        $(document).keydown($.proxy(function(e){

          // Escape to normal mode
          if(e.which == 27)
          {
            // Prevent the default action
            e.preventDefault();

            // Hide the modal
            this.hideModal();

            // Broadcast an event
            $(document).trigger('review-cancelled.product', [this.model]);
          }

        }, this));

        // When there is a keypress in the text area
        this.textarea.keyup($.proxy(function(e){

          // Count the words
          this.countWords();

        }, this));

        // If the modal is cancelled
        this.cancelBtn.on('click', $.proxy(function(e){

          // Hide the modal
          this.hideModal();

          // Broadcast an event
          $(document).trigger('review-cancelled.product', [this.model]);

        }, this));

        // If the modal is cancelled
        this.backdrop.on('click', $.proxy(function(e){

          // Hide the modal
          this.hideModal();

          // Broadcast an event
          $(document).trigger('review-cancelled.product', [this.model]);

        }, this));

        // If the modal review is saved
        this.confirmBtn.on('click', $.proxy(function(e){

          if(!this.model.ratingClass)
          {
            this.showNotice(this.countWords(), "You must rate the product to submit a review.");
            return false;
          }

          var mainObj = this;

          // If the number of words is greater than or equal to 20
          if(this.countWords() >= this.minReviewNumWords || this.countWords() == 0)
          {
            // Show the spinner
            this.showSpinner();

            // Send the review data
            var reviewData = {id:this.model.tagID, rating: SPICE.ProductViewUtilities.getRatingInteger(this.ratingModule.getRatingClass()), comment: this.textarea.val(), postId: this.model.postID}
            var reviewPromise = $.ajax({
              type: "POST",
              url: "/reviews/review",
              data: reviewData
            });

            // When the request has completed
            $.when(reviewPromise).done( $.proxy(function(reviewXHRObject) {

              // Hide the modal
              mainObj.hideModal();

              var isUpdatedReview = false;

              // Set the new review text
              if(this.textarea.val() != "")
              {
                mainObj.model.reviewText = mainObj.textarea.val();
                isUpdatedReview = true
              }

              // Broadcast an event
              $(document).trigger('review-confirmed.product', [mainObj.model, isUpdatedReview]);

            }, this));

          }
          else
          {
            this.showNotice(this.countWords(), "Please continue your review!");
          }

        }, this));

      },

      countWords: function() {

        // Trim off the beginning and trailing whitespace
        var input = $.trim(this.textarea.val());

        // Return the number of words
        if(input == "")
        {
          // If they haven't entered anything at all
          numWords = 0;
          this.showNotice(numWords);
        }
        else
        {
          // Count the number of words
          var numWords = input.replace(/\s+/gi, ' ').split(" ").length;

          // Check the number of words
          if(numWords > 0 && numWords < this.minReviewNumWords)
          {
            // If the number of words is greater than 0 but less than the minimum
            this.showNotice(numWords);
          }
          else if(numWords >= this.minReviewNumWords)
          {
            // If the number of words is greater than the minimum
            this.showNotice(numWords, "Thank you for the review!");
          }
          else
          {
            // If there is only one word
            numWords = 1;
            this.showNotice(numWords);
          }
        }

        // Return the number of words
        return numWords;

      },

      showNotice: function(numWords, notice) {

        // If there is an existing error
        this.noticeMessage ? this.noticeMessage.remove() : null ;

        // Give them an error message
        if(notice && numWords >= this.minReviewNumWords)
        {
          this.notice.append('<span class="notice-message"> - '+ notice +'</span>');
        }
        else if(notice)
        {
          this.notice.append('<span class="notice-message"> ('+ numWords +' of '+this.minReviewNumWords+') - '+ notice +'</span>');
        }
        else
        {
          this.notice.append('<span class="notice-message"> ('+ numWords +' of '+this.minReviewNumWords+')</span>');
        }

        this.noticeMessage = this.notice.find('.notice-message');

      },

      pluralize: function(count, singular, plural) {

        return count == 1 ? singular : plural;

      }

    };

    // FOCUS ////////////////////////////////////////////

    SPICE.ProductViewFocus = function(tag, model) {

      // Elements
      this.body = $('body');
      this.tag = tag;
      this.trigger;
      this.model = model;
      this.isFocus = false;
      this.flyout;
      this.flyoutHeight;
      this.flyoutWidth;
      this.followBtn;
      this.closeBtn;

      // Determine the template file
      this.template;
      switch(this.model.tagType.toUpperCase())
      {
        case "PRODUCT":
          this.template = JST["backbone/tags/templates/flyout_product"];
          break;
        case "VENDORPAGE":
          this.template = JST["backbone/tags/templates/flyout_vendor"];
          break;
        case "APP":
          this.template = JST["backbone/tags/templates/flyout_app"];
          break;
        case "PRODUCTSELECTORCONFIG":
          this.template = JST["backbone/tags/templates/flyout_selector"];
          break;
        case "RESEARCHGUIDE":
          this.template = JST["backbone/tags/templates/flyout_guide"];
          break;
        case "HOWTOARTICLE":
          this.template = JST["backbone/tags/templates/flyout_howto"];
          break;
        case "USER":
          this.template = JST["backbone/tags/templates/flyout_user"];
          break;
        case "MSPPROFILE":
          this.template = JST["backbone/tags/templates/flyout_msp"];
          break;
        case "PROJECT":
          this.template = JST["backbone/tags/templates/flyout_project"];
          break;
        case "HELPCATEGORYNODE":
          this.template = JST["backbone/tags/templates/flyout_help"];
          break;
      }

      // Initialize the module
      this.initialize();

    }

    SPICE.ProductViewFocus.prototype = {

        initialize: function() {
          //Get a reference to the main object
          var mainObj = this;

          this.hoverTimer = null;
          this.unhoverTimer = null;
          this.fromClick = false;

          //Special keys
          $(document).keydown($.proxy(function(e){

            // Escape to normal mode
            if(e.which == 27)
            {
              // Prevent the default action
              e.preventDefault();

              // Hide the flyout
              this.hideFocus();
            }

          }, this));

          // When the show focus event occurs
          $(document).on('show-review-modal.product', $.proxy(function(e){

              this.hideFocus();

          }, this));

          // When the show focus event occurs
          $(document).on('show-focus.product', $.proxy(function(e, model, trigger, fromClick){
            // If this flyout has been triggered
            if(this.model === model) {
              this.trigger = trigger;
              this.fromClick = fromClick === true;

              this.showFocus();
            } else {
              this.hideFocus();
            }
          }, this));

          // When the hide focus event occurs
          $(document).on('hide-focus.product', $.proxy(function(e, model){
            if(this.model === model && this.flyout) {
              this.hideFocus();
            }
          }, this));

          // When the rate product event occurs
          $(document).on('rating.product', $.proxy(function(e){

            this.hideFocus();

          }, this));

          // When the rate product event occurs
          $(document).on('hideall.product', $.proxy(function(e){

            this.hideFocus();

          }, this));

          // When the read more link is clicked
          $(document).on('read-more.product', $.proxy(function(e){

            this.positionFocus();

          }, this));

          // When the user clicks outside of the flyout
          $(document).on('mouseup', $.proxy(function(e){

            // If the target of the click isn't the flyout (or a descendant of the flyout)
            if(this.flyout)
            {
              if(!this.flyout.is(e.target) && this.flyout.has(e.target).length === 0)
              {
                  this.hideFocus();
              }
            }


          },this));

          
          // When the resize event occurs
          var timeout;
          $(window).resize($.proxy(function(){

            // putting this in a timeout because the landscape<->portrait transition
            // fires this event at somewhat random times (not always at the very end)
            // and screws up the math on redraw
            clearTimeout(timeout);
            timeout = setTimeout(this.positionFocus.bind(this), 150);

          }, this));

        },
        showFocus: function() {

          // Reference to main object
          var mainObj = this,
              existingFocusWindows,
              sourceIdentifier,
              categoryArray,
              categoryData,
              featuredProduct,
              featuredPost,
              sourceIdentifier;

          // Remove any unwanted focus windows from the view
          existingFocusWindows = $('body').find('.product-focus');
          if(existingFocusWindows.length > 0)
          {
            existingFocusWindows.remove();
          }

          // Flag the focus modal as active
          this.isFocus = true;

          // Process the categories
          categoryArray = new Array();
          categoryData = this.model.categories;
          featuredProduct = this.model.featured_product;
          featuredPost = this.model.featured_post;

          // If this is an inline tag, add an "inline" identifier
          sourceIdentifier = this.trigger.is('.inline-tag') ? "inline" : "main";

          // Replace the existing link with a new sourced link
          if(categoryData)
          {
            for(var i = 0; i < categoryData.length; i++)
            {
              categoryData[i].link = SPICE.ProductViewUtilities.sourceURL(categoryData[i].link, this.model.postID, sourceIdentifier);
              categoryArray.push(categoryData[i]);
            }
          }

          if(featuredPost) {
            featuredPost.tab_url = SPICE.ProductViewUtilities.sourceURL(featuredPost.tab_url, this.model.postID, sourceIdentifier);
            featuredPost.author_url = SPICE.ProductViewUtilities.sourceURL(featuredPost.author_url, this.model.postID, sourceIdentifier);
            featuredPost.url = SPICE.ProductViewUtilities.sourceURL(featuredPost.url, this.model.postID, sourceIdentifier);
          }

          if(featuredProduct) {
            featuredProduct.reviews_url = SPICE.ProductViewUtilities.sourceURL(featuredProduct.reviews_url, this.model.postID, sourceIdentifier);
            featuredProduct.product_url = SPICE.ProductViewUtilities.sourceURL(featuredProduct.product_url, this.model.postID, sourceIdentifier);
            featuredProduct.tab_url = SPICE.ProductViewUtilities.sourceURL(featuredProduct.tab_url, this.model.postID, sourceIdentifier);
          }

          if(this.model.vendorReps) {
            _.each(this.model.vendorReps, function(vendorRep){
              vendorRep.link = SPICE.ProductViewUtilities.sourceURL(vendorRep.link, this.model.postID, sourceIdentifier);
            }, this);
          }

          var displayRating = this.model.isUserReview ? this.model.userRating : this.model.reviewRating;

          // Create the new flyout window
          this.flyout = $(this.template({
            tag_author: this.model.author,
            tag_author_link: this.model.authorLink,
            tag_type: this.model.tagType,
            tag_subtype: this.model.tagSubtype,
            tag_technologies: this.model.technologies,
            tag_id: this.model.tagID,
            tag_link: SPICE.ProductViewUtilities.sourceURL(this.model.tagLink, this.model.postID, sourceIdentifier),
            tag_image: this.model.image,
            tag_title: this.model.title,
            tag_username: this.model.username,
            tag_url_name: this.model.urlName,
            tag_categories: categoryArray,
            tag_reviews_link: SPICE.ProductViewUtilities.sourceURL(this.model.reviewsLink, this.model.postID, sourceIdentifier),
            tag_num_reviews: this.model.numReviews,
            tag_badge: this.model.badge,
            tag_badges: this.model.badges,
            tag_rating: this.model.tagRating,
            tag_downloads: this.model.tagDownloads,
            tag_times_rated: this.model.tagTimesRated,
            tag_review_user_id: this.model.reviewUserID,
            tag_review_user_link: SPICE.ProductViewUtilities.sourceURL(this.model.reviewUserLink, this.model.postID, sourceIdentifier),
            tag_review_is_spicy: this.model.isReviewSpicy,
            tag_review_rating: displayRating,
            tag_review_id: this.model.reviewID,
            tag_review_text: _.escape(this.model.reviewText),
            tag_review_icon: this.model.reviewIcon,
            tag_review_name: this.model.reviewName,
            tag_is_guest: String(CurrentUser.guest()),
            tag_vendor_reps: this.model.vendorReps,
            tag_is_followed: SPICE.ProductViewUtilities.isFollowed(this.model.tagType, this.model.tagID, this.model.isFollowed),
            tag_user_role_class: this.model.userRoleClass,
            tag_followers: this.model.followers,
            tag_contribution_areas: this.model.contributionAreas,
            tag_contributions: this.model.contributions,
            tag_contributions_url: this.model.contributionsURL,
            tag_best_answers: this.model.bestAnswers,
            tag_best_answers_url: this.model.bestAnswersURL,
            tag_helpful_posts: this.model.helpfulPosts,
            tag_helpful_posts_url: this.model.helpfulPostsURL,
            tag_description: this.model.description,
            tag_email: this.model.email,
            tag_phone: this.model.phone,
            tag_table_of_contents: this.model.tableOfContents,
            tag_featured_product: this.model.featured_product,
            tag_featured_post: this.model.featured_post,
            tag_projects: this.model.projects,
            tag_projects_url: this.model.projectsURL,
            tag_num_products: this.model.numProducts,
            tag_top_products: this.model.topProducts,
            tag_services: this.model.tagServices,
            tag_service_type: this.model.tagServiceType,
            tag_certificates: this.model.tagCertificates,
            tag_num_answers: this.model.tagNumAnswers,
            tag_num_helpful: this.model.tagNumHelpful,
            tag_top_employees: this.model.tagTopEmployees,
            tag_intro: this.model.intro,
            tag_intro_full: this.model.introFull,
            tag_sections: this.model.sections,
            tag_content_block: _.unescape(this.model.contentBlock)
          })).appendTo(this.body);

          this.flyout.find('[data-js-postprocess="timestamp"]').timestamp();

          // If there is testimonial text, set up an ellipsis
          if(this.flyout.find('.testimonial-text').length > 0)
          {
            new SPICE.ProductViewEllipsis(this.flyout.find('.testimonial-text'));
          }

          // Set up the write a review link if there is one
          this.flyout.find('.first-review a').on('click', $.proxy(function(e){

            // Prevent the default
            e.preventDefault();

             // Broadcast an event to show the modal
            $(document).trigger('rating.product', this.model);

          }, this));

          // Setup the follow button (VENDORS ONLY)
          this.followBtn = this.flyout.find('.sui-followbttn');
          if(this.followBtn)
          {
            var cls = this.followBtn.data("followableClass");
            var id = this.followBtn.data("followableId");

            this.followBtn.on("click", $.proxy(function(e){

              if(CurrentUser.guest())
              {
                e.preventDefault();
                e.stopPropagation();
                JoinAndLogin.showLogin();
              }

            }, this));

            // When it is followed/unfollowed
            this.followBtn.on("follow unfollow", $.proxy(function(e, btn){

              // Prevent the default
              e.preventDefault();

              // If the user is logged in
              if(!CurrentUser.guest())
              {

                switch(this.model.tagType.toUpperCase())
                {
                  case "VENDORPAGE":

                    var options = btn.options,
                        uri = options.uri,
                        following = options.following;

                    $.post(uri, $.proxy(function(data)
                    {
                      // Toggle the followed state

                      this.model.isFollowed = data.following;
                      if(data.following===true){
                        User.following.VendorPage.push(data.vendor_page_id);
                      }
                      else{
                        User.following.VendorPage = _.without(User.following.VendorPage, data.vendor_page_id);
                      }

                      $(document).trigger('sync.follow_button', [this.model.tagType, this.model.tagID, data.following])

                    }, this));

                    break;
                  case "USER":

                    if(this.model.isFollowed)
                    {
                      $.post( "/users/" + encodeURIComponent(this.model.username) + "/unfollow" );
                      this.model.isFollowed = false;
                    }
                    else
                    {
                      $.post( "/users/" + encodeURIComponent(this.model.username) + "/follow" );
                      this.model.isFollowed = true;
                    }

                    break;
                }

              }

            }, this));

          }


          // Get the height of the flyout
          this.flyoutHeight = this.flyout.height();

          // Get the default width of the flyout to judge whether we want 
          // the responsive view or not
          this.flyoutWidth = this.flyout.width();

          //Fade in the focus
          this.flyout.addClass('opened');

          // When the close button is clicked
          this.closeBtn = this.flyout.find('.modal-close, .modal-close-button');
          this.closeBtn.on('click', $.proxy(function(e){

            e.preventDefault();
            mainObj.hideFocus();

          }, this));

          // Position the focus
          this.positionFocus();

          // Keep on showing flyout on hover, hide on unhover
          this.flyout.hover(function(e){
            clearTimeout(mainObj.unhoverTimer);
          }, function(){
            if(mainObj.fromClick !== true) {
              mainObj.unhoverTimer = setTimeout(function(){
                mainObj.hideFocus();
              }, 500);
            }
          });

        },
        isResponsive: function() { 
          return $(window).width() <= (this.flyoutWidth + 40);
        },
        positionFocus: function() {

          var topAdjustment;     // Magic offset to get the focus modal in the right place
          var bottomAdjustment;  // Magic offset to get the focus modal in the right place
          var leftAdjustment;    // Magic offset to get the focus modal in the right place
          var isUnderFlipLimit;
          var isOverScreenTop;
          var isRootPost;
          var responsiveOffset = 20;

          if(this.flyout)
          {

            if (this.isResponsive()) {
              this.flyout.addClass('responsive');
            } else {
              this.flyout.removeClass('responsive');
            }
            this.flyoutHeight = this.flyout.height();

            isUnderFlipLimit = (this.trigger.offset().top - this.flyoutHeight - (document.body.scrollTop + 86)) < 0    // This is a special check to flip the modal if it would be under the floating nav at the top of the page
            isOverScreenTop = this.flyoutHeight > (this.trigger.offset().top - 90)                                     // This is a special check to flip the modal if it would be above the top of the page
            isRootPost = this.trigger.closest('#root_post').length > 0;

            // If this is an inline tag, treat it differently than the normal tags
            if(this.trigger.is('.inline-tag'))
            {
              topAdjustment = 50;     // Magic offset to get the focus modal in the right place
              bottomAdjustment = 30;  // Magic offset to get the focus modal in the right place
              leftAdjustment = 47;    // Magic offset to get the focus modal in the right place

              // Special conditional to flip the flyout when it is in the root post or when it is under the floating nav
              if(isOverScreenTop || isUnderFlipLimit || isRootPost)
              {
                // Calculate Position based on trigger
                var xPos = this.isResponsive() ? responsiveOffset : this.trigger.offset().left - leftAdjustment;
                var yPos = this.trigger.offset().top + bottomAdjustment;

                // Position the modal
                this.flyout.addClass('flip');
              }
              else
              {
                // Calculate Position based on trigger
                var xPos = this.isResponsive() ? responsiveOffset : this.trigger.offset().left - leftAdjustment;
                var yPos = this.trigger.offset().top - this.flyoutHeight - topAdjustment;
              }

            }
            else
            {
              topAdjustment = 41;     // Magic offset to get the focus modal in the right place
              bottomAdjustment = 56;  // Magic offset to get the focus modal in the right place
              leftAdjustment = 0;     // Magic offset to get the focus modal in the right place

              // Special conditional to flip the flyout when it is in the root post or when it is under the floating nav
              if(isOverScreenTop || isUnderFlipLimit || isRootPost)
              {
                // Calculate Position based on trigger
                var xPos = this.isResponsive() ? responsiveOffset : this.trigger.offset().left - leftAdjustment;
                var yPos = this.trigger.offset().top + bottomAdjustment;

                // Position the modal
                this.flyout.addClass('flip');
              }
              else
              {
                var triggerTopOffset = this.trigger.offset().top;
                // Calculate Position based on trigger
                var xPos = this.isResponsive() ? responsiveOffset : this.trigger.offset().left - leftAdjustment;
                var yPos = triggerTopOffset - this.flyoutHeight - topAdjustment;
                this.flyout.removeClass('flip');
              }
            }

            // Position the modal
            this.flyout.offset({left: xPos, top: yPos });
          }

        },
        hideFocus: function() {
          if(this.flyout)
          {
            var flyout = this.flyout;

            //Hide the focus
            flyout.addClass('closed');


            // Flag the focus modal as inactive
            this.isFocus = false;
            this.flyout = null;

            flyout.on('transitionend webkitTransitionEnd oTransitionEnd', function() {
              flyout.remove();
            });
          }
        }

    };

    // ELLIPSIS ////////////////////////////////////////

    SPICE.ProductViewEllipsis = function(textarea) {

      // Elements
      this.textarea = textarea;
      this.moreBtn = $('<a class="read-more" target="_blank" href="#">Read More</a>');
      this.charLimit = 300;
      this.originalText = this.textarea.html();
      this.shortText;

      // Initialize the module
      this.initialize();

    }

    SPICE.ProductViewEllipsis.prototype = {

      initialize: function() {

        // If the string is already within the limit
        if(this.originalText.length < this.charLimit)
        {
          this.showMore();
        }
        else
        {
          this.showLess();
        }

      },
      showMore: function() {

        // Show all of the text
        this.textarea.html(this.originalText);

        // Remove the show more button if there is one
        this.textarea.parent().find('.read-more').remove();

      },
      showLess: function() {

        // If it is the end of a word or sentence
        if(this.originalText.charAt(this.charLimit) == " ")
        {
          // Get the string at that point
          this.shortText = this.originalText.substr(0, this.charLimit) + " ...\" ";
        }
        else
        {
          // Set a temp char limit
          var tempCharLimit = this.charLimit;

          // Roll back one word
          while (tempCharLimit > 0)
          {
            // If the current character is the end of a word or a sentence
            if(this.originalText.charAt(tempCharLimit) == " ")
            {
              this.shortText = this.originalText.substr(0, tempCharLimit) + "...\" ";
              break;
            }

            // Decrement the loop
            tempCharLimit--;
          }
        }

        // Show short text
        this.textarea.html(this.shortText);

        // Append the read more button
        this.createReadMore();

      },

      createReadMore: function() {

        // Add the show more button
        this.moreBtn.attr('href', this.textarea.data('link'));
        this.textarea.after(this.moreBtn);

        // DISABLING THE READ MORE FUNCTIONALITY BECAUSE IN SOME CASES, IT CAUSES THE MODAL TO EXTEND BEYOND THE VIEWABLE SCREEN - LINKING TO THE PRODUCT COMMENT PAGE INSTEAD

        // When the more button is clicked
        // this.moreBtn.on('click', $.proxy(function(e){

        // Prevent Default
        // e.preventDefault();

        // Show more
        // this.showMore();

        // Broadcast that the focus modal will need to reposition
        // $(document).trigger('read-more.product');

        // }, this));


      }

    };

    // SHOW ALL ////////////////////////////////////////

    SPICE.ProductViewTagShowAll = function(module) {

      // Elements
      this.tagShowAllLink = module;
      this.tagCount = this.tagShowAllLink.data('tagcount');
      this.tagViewport = this.tagShowAllLink.closest('.post_content, #root_post, .blog-entry-tags, .comment-content-container').find('.tag-viewport');
      this.isOpen = false;
      this.originalHeight = this.tagViewport.height();

      // Initialize the module
      this.initialize();

    }

    SPICE.ProductViewTagShowAll.prototype = {

      initialize: function() {

        // Get reference to main object
        var mainObj = this;

        // When a show all tags link is clicked
        this.tagShowAllLink.on("click", function(e){

          // Prevent the default action
          e.preventDefault();

          // Toggle the show more
          mainObj.isOpen ? mainObj.showLess() : mainObj.showMore();

          // Broadcast and event to close all of the focus windows
          $(document).trigger('hideall.product');

        });

      },

      showMore: function() {

        // Get reference to main object
        var mainObj = this;

        // Set the flag
        this.isOpen = true;

        // Get the original height
        this.originalHeight = this.tagViewport.height();

        // Remove the truncated class and show the tags
        mainObj.tagViewport.stop().animate({

          height: mainObj.tagViewport.find('.tags').height()

        }, 500, "easeInOutCubic", function() {

          // Animation complete
          mainObj.tagViewport.removeClass('truncated');

        });

        // Set the text for the link
        this.tagShowAllLink.html(' (Show Less Tags)');

      },

      showLess: function() {

        // Get reference to main object
        var mainObj = this;

        // Set the flag
        this.isOpen = false;

        // Remove the truncated class and show the tags
        mainObj.tagViewport.stop().animate({

          height: mainObj.originalHeight

        }, 500, "easeInOutCubic", function() {

          // Animation complete
          mainObj.tagViewport.addClass('truncated');

        });

        // Set the text for the link
        var label = ' (Show All '+ String(this.tagCount) +' Tags)';
        this.tagShowAllLink.html(label);

      }

    };


    // DOCUMENT READY ///////////////////////////////////

    $(document).ready(function() {

      $('#topic .post, #topic .original-post, #topic .blog_entry, .blog-entry-tags, .comment-container, .blog-entry-wrapper .post').each(function(){
        var post = $(this);
        var my_post = (post.data('user-name') === User.name)
        post.addClass(my_post ? 'my-post' : 'their-post');
      });


      // Activate the tags
      $('ul.tags li').each(function(){

        // Create a new product tag
        var ProductViewTag = new SPICE.ProductViewTag($(this));

      });

      // Setup follow btns to stay in sync
      $('.sui-followlink').each(function(){

        var followBtn = new SPICE.ProductViewFollowBtn($(this));

      });

      // Activate the show more / show less for tags
      $('.tags-show-all').each(function(){

        // Create a new product show all
        var ProductViewTagShowAll = new SPICE.ProductViewTagShowAll($(this));

      });

    });

})(jQuery);
/*1.0*/
/*! jstz - v1.0.4 - 2012-12-12 */

(function(e){var t=function(){"use strict";var e="s",n=function(e){var t=-e.getTimezoneOffset();return t!==null?t:0},r=function(e,t,n){var r=new Date;return e!==undefined&&r.setFullYear(e),r.setDate(n),r.setMonth(t),r},i=function(e){return n(r(e,0,2))},s=function(e){return n(r(e,5,2))},o=function(e){var t=e.getMonth()>7?s(e.getFullYear()):i(e.getFullYear()),r=n(e);return t-r!==0},u=function(){var t=i(),n=s(),r=i()-s();return r<0?t+",1":r>0?n+",1,"+e:t+",0"},a=function(){var e=u();return new t.TimeZone(t.olson.timezones[e])};return{determine:a,date_is_dst:o}}();t.TimeZone=function(e){"use strict";var n=null,r=function(){return n},i=function(){var e=t.olson.ambiguity_list[n],r=e.length,i=0,s=e[0];for(;i<r;i+=1){s=e[i];if(t.date_is_dst(t.olson.dst_start_dates[s])){n=s;return}}},s=function(){return typeof t.olson.ambiguity_list[n]!="undefined"};return n=e,s()&&i(),{name:r}},t.olson={},t.olson.timezones={"-720,0":"Etc/GMT+12","-660,0":"Pacific/Pago_Pago","-600,1":"America/Adak","-600,0":"Pacific/Honolulu","-570,0":"Pacific/Marquesas","-540,0":"Pacific/Gambier","-540,1":"America/Anchorage","-480,1":"America/Los_Angeles","-480,0":"Pacific/Pitcairn","-420,0":"America/Phoenix","-420,1":"America/Denver","-360,0":"America/Guatemala","-360,1":"America/Chicago","-360,1,s":"Pacific/Easter","-300,0":"America/Bogota","-300,1":"America/New_York","-270,0":"America/Caracas","-240,1":"America/Halifax","-240,0":"America/Santo_Domingo","-240,1,s":"America/Santiago","-210,1":"America/St_Johns","-180,1":"America/Godthab","-180,0":"America/Argentina/Buenos_Aires","-180,1,s":"America/Montevideo","-120,0":"Etc/GMT+2","-120,1":"Etc/GMT+2","-60,1":"Atlantic/Azores","-60,0":"Atlantic/Cape_Verde","0,0":"Etc/UTC","0,1":"Europe/London","60,1":"Europe/Berlin","60,0":"Africa/Lagos","60,1,s":"Africa/Windhoek","120,1":"Asia/Beirut","120,0":"Africa/Johannesburg","180,0":"Asia/Baghdad","180,1":"Europe/Moscow","210,1":"Asia/Tehran","240,0":"Asia/Dubai","240,1":"Asia/Baku","270,0":"Asia/Kabul","300,1":"Asia/Yekaterinburg","300,0":"Asia/Karachi","330,0":"Asia/Kolkata","345,0":"Asia/Kathmandu","360,0":"Asia/Dhaka","360,1":"Asia/Omsk","390,0":"Asia/Rangoon","420,1":"Asia/Krasnoyarsk","420,0":"Asia/Jakarta","480,0":"Asia/Shanghai","480,1":"Asia/Irkutsk","525,0":"Australia/Eucla","525,1,s":"Australia/Eucla","540,1":"Asia/Yakutsk","540,0":"Asia/Tokyo","570,0":"Australia/Darwin","570,1,s":"Australia/Adelaide","600,0":"Australia/Brisbane","600,1":"Asia/Vladivostok","600,1,s":"Australia/Sydney","630,1,s":"Australia/Lord_Howe","660,1":"Asia/Kamchatka","660,0":"Pacific/Noumea","690,0":"Pacific/Norfolk","720,1,s":"Pacific/Auckland","720,0":"Pacific/Tarawa","765,1,s":"Pacific/Chatham","780,0":"Pacific/Tongatapu","780,1,s":"Pacific/Apia","840,0":"Pacific/Kiritimati"},t.olson.dst_start_dates=function(){"use strict";var e=new Date(2010,6,15,1,0,0,0);return{"America/Denver":new Date(2011,2,13,3,0,0,0),"America/Mazatlan":new Date(2011,3,3,3,0,0,0),"America/Chicago":new Date(2011,2,13,3,0,0,0),"America/Mexico_City":new Date(2011,3,3,3,0,0,0),"America/Asuncion":new Date(2012,9,7,3,0,0,0),"America/Santiago":new Date(2012,9,3,3,0,0,0),"America/Campo_Grande":new Date(2012,9,21,5,0,0,0),"America/Montevideo":new Date(2011,9,2,3,0,0,0),"America/Sao_Paulo":new Date(2011,9,16,5,0,0,0),"America/Los_Angeles":new Date(2011,2,13,8,0,0,0),"America/Santa_Isabel":new Date(2011,3,5,8,0,0,0),"America/Havana":new Date(2012,2,10,2,0,0,0),"America/New_York":new Date(2012,2,10,7,0,0,0),"Asia/Beirut":new Date(2011,2,27,1,0,0,0),"Europe/Helsinki":new Date(2011,2,27,4,0,0,0),"Europe/Istanbul":new Date(2011,2,28,5,0,0,0),"Asia/Damascus":new Date(2011,3,1,2,0,0,0),"Asia/Jerusalem":new Date(2011,3,1,6,0,0,0),"Asia/Gaza":new Date(2009,2,28,0,30,0,0),"Africa/Cairo":new Date(2009,3,25,0,30,0,0),"Pacific/Auckland":new Date(2011,8,26,7,0,0,0),"Pacific/Fiji":new Date(2010,11,29,23,0,0,0),"America/Halifax":new Date(2011,2,13,6,0,0,0),"America/Goose_Bay":new Date(2011,2,13,2,1,0,0),"America/Miquelon":new Date(2011,2,13,5,0,0,0),"America/Godthab":new Date(2011,2,27,1,0,0,0),"Europe/Moscow":e,"Asia/Yekaterinburg":e,"Asia/Omsk":e,"Asia/Krasnoyarsk":e,"Asia/Irkutsk":e,"Asia/Yakutsk":e,"Asia/Vladivostok":e,"Asia/Kamchatka":e,"Europe/Minsk":e,"Australia/Perth":new Date(2008,10,1,1,0,0,0)}}(),t.olson.ambiguity_list={"America/Denver":["America/Denver","America/Mazatlan"],"America/Chicago":["America/Chicago","America/Mexico_City"],"America/Santiago":["America/Santiago","America/Asuncion","America/Campo_Grande"],"America/Montevideo":["America/Montevideo","America/Sao_Paulo"],"Asia/Beirut":["Asia/Beirut","Europe/Helsinki","Europe/Istanbul","Asia/Damascus","Asia/Jerusalem","Asia/Gaza"],"Pacific/Auckland":["Pacific/Auckland","Pacific/Fiji"],"America/Los_Angeles":["America/Los_Angeles","America/Santa_Isabel"],"America/New_York":["America/Havana","America/New_York"],"America/Halifax":["America/Goose_Bay","America/Halifax"],"America/Godthab":["America/Miquelon","America/Godthab"],"Asia/Dubai":["Europe/Moscow"],"Asia/Dhaka":["Asia/Yekaterinburg"],"Asia/Jakarta":["Asia/Omsk"],"Asia/Shanghai":["Asia/Krasnoyarsk","Australia/Perth"],"Asia/Tokyo":["Asia/Irkutsk"],"Australia/Brisbane":["Asia/Yakutsk"],"Pacific/Noumea":["Asia/Vladivostok"],"Pacific/Tarawa":["Asia/Kamchatka"],"Africa/Johannesburg":["Asia/Gaza","Africa/Cairo"],"Asia/Baghdad":["Europe/Minsk"]},typeof exports!="undefined"?exports.jstz=t:e.jstz=t})(this);
/*1.0*/
/**
  # ReadTheseNext

  ## Params:
    url {String} is the URL it will use to load more items
    itemId {Number} is the id of the curated item to leave out
      (to be used if you are on a curent item's page)
    limit {Number} is the amount of items to load next
    source {String} is the name of the page to be referenced in GA
    height {Number} is the pixels before the end of container it will
      fire the infinite scroll
    throttleTime {Number} is the amount of milliseconds to throttle the scroll

  ## Standard Usage:

  ```html.erb
  <%= render partial: 'shared/read_these_next', locals: { items: {your_items_variable} } %>
  ```

  ```css
  <% content_for :styles do %>
    <%= stylesheet_link_tag 'read_these_next' %>
  <% end %>
  ```

  ```js
  jQuery('.js-read-next-footer').read_this_next({
    itemId: {topicId},
    source: 'topic',
  });
  ```
**/


(function($) {
  "use strict";

  var defaultOptions = {
    url: '/api/curated_items/more_for_read_these_next',
    limit: 6,
    source: '',
    height: 400,
    throttleTime: 750,
  };

  var ReadTheseNext = function(element, options) {
    this.$el = $(element);
    this.init( options );
  };

  ReadTheseNext.prototype = {

    init: function(options) {
      this.options = _.extend(defaultOptions, options);

      // Set initial card amount
      this.updateCardCount();

      this.columnContainer = this.$el.find('.card-columns');
      this.columns = this.columnContainer.find('.card-column');

      // Setup initial layout and items
      this.setColumnHeight();
      this.setItemPositionParams();

      // Initialize and setup infinite scroll
      this.scrollProcessing = false;
      this.setAjaxParams();
      this.setupInfiniteScroll();

      this.shownAd = false;
    },
    updateCardCount: function() {
      this.numCards = this.$el.find('.card').length;
    },
    setColumnHeight: function() {
      // This doesn't work for the mobile version
      if($UI.useMobile) { return false; }

      var heights = this.columns.map(function() { return $(this).height(); })
      var max = _.max(heights);

      this.columns.height(max + 10);
    },
    setItemPositionParams: function() {
      var _readTheseNext = this;

      var updateUrls = function(el, source, position) {
        // Strip away and overwrite previous query params
        var url = el.attr('href').split('?')[0];
        var newUrl = url + '?source=' + source + '&pos=' + position;

        el.attr('href', newUrl);
      };

      // Card column groups
      var num_columns = this.columns.length;

      this.columns.each(function (column_index) {
        column_index++;

        $(this).find('.card').each(function (row_index) {
          row_index++;

          var el = $(this); // .card $ object
          var position = ((row_index -1) * num_columns) + column_index;

          if (el.attr('href')) {
            updateUrls(el, _readTheseNext.options.source, position);
          }

          el.find('a').each(function () {
            updateUrls($(this), _readTheseNext.options.source, position);
          });
        });
      });
    },
    setAjaxParams: function() {
      // Set all the params available now...add the offset at each call
      this.ajaxParams = { limit: this.options.limit };

      if(!_.isNull(this.options.itemId) && !_.isUndefined(this.options.itemId)) {
        this.ajaxParams.item_id = this.options.itemId;
      }
    },
    setupInfiniteScroll: function () {
      var _readTheseNext = this;

      $(window).on('scroll', _.throttle(function() {
        if (_readTheseNext.scrollProcessing) return;

        var win = $(window);
        var winBottom = win.scrollTop() + win.height();

        var cardColumnsBottom = _readTheseNext.columnContainer.offset().top + _readTheseNext.columnContainer.outerHeight();

        if (winBottom >= (cardColumnsBottom - _readTheseNext.options.height)) {
          _readTheseNext.scrollProcessing = true;

          // Add the current card offset to our static ajax params
          var params = _.extend(_readTheseNext.ajaxParams, { offset: _readTheseNext.numCards });

          $.get(_readTheseNext.options.url, params,
            function(response_data, success, jqxhr) {
              var html;
              if (jqxhr.getResponseHeader('Content-Type').indexOf('application/json') !== -1 ) {
                html = response_data.cards_html
              } else {
                html = response_data;
              }

              var inserted = [],
                gekkoSacrifice;

              // disperse new cards into their respective columns
              $(html).find('.card-column').each(function(i) {
                var el = $(this);
                var cards = el.find('.card');
                cards.addClass('faded-out');

                // the corresponding column to append the cards to!
                var col = $(_readTheseNext.columns[i]);

                // adjust the heights of the parent cols...
                col.css('height', 'auto');

                // Create a div for the ad if it's the first call
                // We want to put this in the middle column
                if (!_readTheseNext.shownAd && i === Math.floor(_readTheseNext.columns.length / 2)) {
                  gekkoSacrifice = document.createElement('div');
                  gekkoSacrifice.id = 'read_more';
                  gekkoSacrifice.className = 'card generic-card sui-opt-in';
                  gekkoSacrifice.style.display = 'none';

                  col.append(gekkoSacrifice);
                }

                // throw 'em in!
                col.append(el.html());
                _readTheseNext.setColumnHeight();

                // we have to re-select the cards since their HTML was inserted...
                var finalCards = col.find('.card');
                inserted = $.merge(inserted, finalCards.slice(finalCards.length - cards.length));
              });

              $('.card.faded-out').removeClass('faded-out');
              if (!_readTheseNext.shownAd && gekkoSacrifice) {
                gekko.cmd.push(function() {
                  gekko.display(gekkoSacrifice.id);
                });

                _readTheseNext.shownAd = true;
              }

              // Update URLs on the new cards to have source and pos query parameters
              _readTheseNext.setItemPositionParams();
              _readTheseNext.updateCardCount();
              _readTheseNext.scrollProcessing = false;
            });
        }

      }, _readTheseNext.options.throttleTime, { trailing: false }));
    }

  };

  $.fn.read_these_next = function(option) {
    return this.each(function() {
      var options = (typeof option == 'object') && option;
      var data = $(this).data("read_these_next");

      if( !data ) {
        $(this).data('read_these_next', new ReadTheseNext( this, options) );
      }
      else {
        data.init(options);
      }
    });
  };

})(jQuery);
/*1.0*/
/**
  # SuiFollowButton
  
  ## Params:
    following {Boolean} is the user following the object (default=false)
    alternateActions {Array, Function} objects with link text and event names if you want a droplist when
                                       the user is already following the object (default=null)

  ## Standard Usage:

  ```html
  <div data-component="my-follow-button"></div>
  ```

  ```js
  jQuery('[data-component="my-follow-button"]').sui_follow_button({ following: true })
  .on( 'sui-follow-button:followed', function() { ... } )
  .on( 'sui-follow-button:unfollowed', function() { ... } );
  ```

  ## Extended Usage:

  Notes: `alternateActions` can also be just a literal array.

  ```html
  <div data-component="another-follow-button"></div>
  ```

  ```js
  jQuery('[data-component="another-follow-button"]').sui_follow_button({
    following: true,
    alternateActions: function() { return [
      { text: 'Do Something', action: 'foo' },
      { text: 'Another Thing', action: 'bar:thing' }
    ]; }
  })
  .on( 'sui-follow-button:followed', function() { ... } )
  .on( 'sui-follow-button:unfollowed', function() { ... } );
  .on( 'foo', function() { ... } )
  .on( 'bar:thing', function() { ... } );
  ```

**/

(function($) {

  "use strict";

  var normalTemplate = _.template('<div class="sui-bttn sui-bttn--small" data-action="follow-toggle"><span><%= text %></span></div>');
  var outlineTemplate = _.template('<div class="sui-bttn sui-bttn--outline" data-action="follow-toggle"><span><%= text %></span></div>');
  var templateWithDropdown = _.template('<div class="sui-dropdown"><a class="sui-dropdown-toggle sui-bttn sui-bttn--small" data-toggle="dropdown" href="#" onclick="return false;"><%= text %> <span class="caret"></span></a><div class="sui-dropdown_content-caret"></div><ul class="sui-dropdown-menu" data-menu="alternate-actions"></ul></div>');
  var alternateActionTemplate = _.template('<li><a href="#"><%= text %></a></li>');

  var followEvent = 'sui-follow-button:followed';
  var unfollowEvent = 'sui-follow-button:unfollowed';

  var SuiFollowButton = function(element, options) {
    this.$el = $(element);
    this.init( options );
  };

  SuiFollowButton.prototype = {

    init: function(options) {
      this.options = options;
      this.options = _.extend(this.options || {}, options, this.$el.data());

      if( !_.isNull(this.options.following) && !_.isUndefined(this.options.following) ) {
        this.following = this.options.following;
      }

      this.render();
    },

    render: function() {
      this.$el.addClass('sui-follow-button');

      if( this.following && this.alternateActions() ) {
        this.$el.html( templateWithDropdown( this.templateData() ) );

        var actionsMenu = this.$el.find('[data-menu="alternate-actions"]');

        _.each( this.alternateActions(), function(action) {
          var actionEl = $( alternateActionTemplate(action) );
          actionEl.on( 'click', $.proxy( this.fireAlternateAction, this, action.action ) );
          actionsMenu.append( actionEl );
        }, this );
      }
      else {
        if(this.options.template && this.options.template == 'outline') {
          this.$el.html( outlineTemplate( this.templateData() ) );
        }
        else {
          this.$el.html( normalTemplate( this.templateData() ) );
        }

        this.$el.find('[data-action="follow-toggle"]').on( 'click', $.proxy( this.toggle, this ) );
      }
    },

    templateData: function() {
      return {
        icon: this.following ? 'following' : 'follow',
        text: this.following ? 'Following' : 'Follow'
      };
    },

    alternateActions: function() {
      if( !this.options.alternateActions ) {
        return;
      }

      var alternateActions = this.options.alternateActions;
      if( typeof alternateActions === 'function' ) {
        alternateActions = alternateActions();
      }

      alternateActions = alternateActions.slice();
      alternateActions.push({ text: 'Unfollow', action: unfollowEvent });

      return alternateActions;
    },

    fireAlternateAction: function(action, event) {
      if( action === unfollowEvent ) {
        if (this.options.disableUnfollow){
          $UI.growl({
            type: 'error',
            caption: this.options.disableUnfollow.reason
          })
        }
        else{
          this.toggle(event);
        }
      }
      else {
        event.preventDefault();
        this.$el.trigger(action);
      }
    },

    toggle: function(event) {
      event.preventDefault();

      // If user is a guest, prompt to login
      // TODO: Find more elegant way to hook in besides relying on User global object
      if (User.kind === 'guest') {
        JoinAndLogin.showJoin();
        return;
      }

      this.$el.trigger( this.following ? unfollowEvent : followEvent, this);
      this.following = !this.following;
      this.render();
    }

  };

  $.fn.sui_follow_button = function(option) {
    return this.each(function() {
      var options = (typeof option == 'object') && option;
      var data = $(this).data("follow_button");

      if( !data ) {
        $(this).data('follow_button', new SuiFollowButton( this, options) );
      }
      else {
        data.init(options);
      }

      if (typeof option == 'string') {
        data[option]();
      }
    });
  };

})(jQuery);
/*1.0*/
(function($) {

  window.ContentBlock = {
    showEditForm: function(id){
      var contentBlock = $('#' + id);
      contentBlock.find('div.content_block_wrapper').hide();
      contentBlock.find('div.content_block_form').show();
    },
    cancelEdit: function(id){
      var contentBlock = $('#' + id);
      contentBlock.find('div.content_block_wrapper').show();
      contentBlock.find('div.content_block_form').hide();
      contentBlock.find('div.content_block_form form')[0].reset();
    },
    deleteBlock: function(id) {
      if(confirm("Are you sure you want to delete this content block?")) {
        $.ajax({
          url: '/content_blocks/' + id,
          type: 'delete',
          dataType: 'json'
        }).done(function(data) {
          $('#' + data.dom_id).replaceWith(data.partial);
          $UI.growl({
            type: 'success',
            caption: 'Content block deleted'
          });
        }).fail(UIHelpers.showUnhandledError);
      }
    },
    initForm: function(dom_id) {
      $('body').on('click', '#' + dom_id + ' form [data-button-type=submit]', function(e) {
        var form_content = $('#' + dom_id + ' form textarea');
        if( UrlHelpers.has_insecure_link(form_content.val()) ) {
          $('#' + dom_id + '_http_warning').modal('show');

          if( $('#edit_css_modal').length > 0 && $('#edit_css_modal').is(':visible') ) {
            $('#edit_css_modal').modal('hide');
            $('#' + dom_id + '_http_warning').attr('data-type', 'warning_for_modal');
          }
          return false;
        }
        return true;
      });

      $('body').on('ajax:success', '#'+ dom_id + ' form[data-type=content_block]', function(e, data) {
        $('#' + data.dom_id).replaceWith(data.partial);
        // calling json_form from here because
        // there's weird partial replacement stuff from the controller
        $('#' + dom_id + ' form[data-type=content_block]').json_form();
      });

      $('body').on('click', '#' + dom_id + '_http_warning [data-action=save_form]', function(e) {
        ContentBlock.sendFormData(dom_id); 
      });

      // special case for http warnings off of content in a modal
      $('body').on('click', '#' + dom_id + '_http_warning[data-type=warning_for_modal] [data-action=cancel_modal]', function(e) {
        if( $('#edit_css_modal').length > 0 ) {
          $('#edit_css_modal').modal('show');
        }
      });
    },
    sendFormData: function(dom_id) {
      var $form = $('#' + dom_id + ' form');

      $('#' + dom_id + '_http_warning').modal('hide').remove();
      $.ajax({
        type: 'POST',
        dataType: 'json',
        url: $form.attr('action'),
        data: $form.serialize()
      }).done(function(data) {
        $('#' + data.dom_id).replaceWith(data.partial);
      }).fail(UIHelpers.showUnhandledError);
    }
  };

})(jQuery);
/*1.0*/

//


/*global $ document*/

var SPICE = window.SPICE || {};

(function($) {

  // DYNAMIC TAGGING MAIN EDITOR /////////////////////
  SPICE.DynamicTaggingMainEditor = function(module) {

    //Taglist Elements
    this.module = module;
    this.isExternalProductSelector = module.is('.external-product');
    this.tagList = this.module.find('.tag-editor');
    this.tagListField = this.module.find('#post_tags');
    this.activeTag;
    this.defaultTextSingular = 'Use + to tag people and products and vendors...';
    this.defaultTextPlural = 'Tag more resources in the community';
    this.externalTextSingular = 'Click and type a product name';
    this.externalTextPlural = 'Click and type a product name';
    this.noUserTextSingular = 'Tag resources in the community';
    this.noUserTextPlural = 'Tag more resources in the community';
    this.storedLabel;
    this.AJAXRequest;
    this.isFocus = false;
    this.cursorIndex = 0;
    this.regExp = /^[\w ]+$/;

    //Initialize the module
    this.initialize();
  }

  SPICE.DynamicTaggingMainEditor.prototype = {
    initialize: function() {

      // Prevent the backspace key from navigating back.
      var mainObj = this;
      $(document).on('keydown', this.module, function (event) {
        if ((event.keyCode || event.which) == 8 || (event.keyCode || event.which) == 46) {
            var d = event.srcElement || event.target;

            if($(d) == mainObj.module)
            {
              event.preventDefault();
            }
        }

        if ((event.keyCode || event.which) == 32) {
            var d = event.srcElement || event.target;

            if($(d) == mainObj.module)
            {
              event.preventDefault();
            }
        }
      });

      //When you click outside of the tag area, switch back to normal mode
      $(document).on("click", $.proxy(function(e){

        var target = $(e.target).parent()[0];
        var taglist = this.tagList[0];
        var autolistSections = $('.autolist .section, .autolist .container');
        var targetIsAutolist = $.inArray(target, autolistSections) != -1;

        if (target != taglist && !targetIsAutolist)
        {
          this.undoSelection();
        }
        else if (targetIsAutolist)
        {
          $(document).trigger("return_focus.dynamic_tagging");
        }

      }, this));

      //When the module receives an update signal from the autolist
      $(document).on("update.dynamic_tagging", $.proxy(function(e, selection){

        //Set the active tag to the last tag so that it is available
        this.activeTag = this.tagList.find('.add');

        //Update the selection
        this.updateSelection(selection);

      }, this));

      //When a certain type of inline tag goes extinct in the inline field
      $(document).on("update_tag_inventory.dynamic_tagging", $.proxy(function(e, inlineTagInventory, isFullRefresh){

        //Before you do anything else, determine if there are pending tags that were just loaded from the DB
        if(this.tagList.find('.js-tag-pending').length > 0)
        {
          //Get all of the tags in the main
          var tags = this.tagList.find('li');
          for (var i = 0; i < tags.length; i++)
          {
            var currentTag = $(tags[i]);
            currentTag.removeClass('js-tag-pending');
            currentTag.attr('data-primarytag', 'true');

            var isInline = false;

            //If any of the tags in the main editor are pending, loop through the inline tag inventory
            for (var j = 0; j < inlineTagInventory.length; j++)
            {
              //If there is a match, it is an inline tag
              if(String(currentTag.attr('data-id')) == String(inlineTagInventory[j].id) && String(currentTag.attr('data-type')) == String(inlineTagInventory[j].type))
              {
                currentTag.removeAttr('data-primarytag');
              }
            }

          }
        }

        var tags = this.tagList.find('li');

        //Convert the main editor tags into a cached array
        var mainTags = new Array();
        for (var i = 0; i < tags.length; i++)
        {
          var currentTag = $(tags[i]);
          var isPrimaryTag = currentTag.attr('data-primarytag') || currentTag.is('.add') ? true : false;
          mainTags.push({tag: currentTag, id: currentTag.attr('data-id'), type: currentTag.attr('data-type'), primarytag: isPrimaryTag, label: currentTag.html()});
        }

        //If it is a full refresh
        if(isFullRefresh)
        {
          //Remove any tag that isn't a primary tag
          var primaryTags = new Array();
          for (var i = 0; i < mainTags.length; i++)
          {
            if(!mainTags[i].primarytag)
            {
              this.activeTag = mainTags[i].tag;
              this.removeTag();
            }
            else
            {
              primaryTags.push(mainTags[i]);
            }
          }

          //Cycle through the list of inline tags and add them if they aren't there already
          for (var i = 0; i < inlineTagInventory.length; i++)
          {
            var isDuplicate = false;

            for (var j = 0; j < primaryTags.length; j++)
            {
              if(primaryTags[j].id == inlineTagInventory[i].id && primaryTags[j].type == inlineTagInventory[i].type)
              {
                isDuplicate = true;
              }
            }

            //If it isn't a duplicate, add it
            if(!isDuplicate)
            {
              //Set the active tag to the last tag so that it is available
              this.activeTag = this.tagList.find('.add');

              //Update the selection
              this.updateSelection(inlineTagInventory[i]);

              //Remove the primary tag because it is inline
              this.activeTag.removeAttr('data-primarytag');
            }
          }

        }
        else
        {
          //Determine what has been removed
          for (var i = 0; i < mainTags.length; i++)
          {
            var isInlineTag = false;
            var isPrimaryTag = Boolean(mainTags[i].primarytag);

            for (var j = 0; j < inlineTagInventory.length; j++)
            {
              if(mainTags[i].id == inlineTagInventory[j].id && mainTags[i].type == inlineTagInventory[j].type)
              {
                isInlineTag = true;
              }
            }

            //Determine how the update is handled
            if(!isInlineTag && !isPrimaryTag)
            {
              //If it isn't in the inline list and it isn't a primary tag, delete it
              this.activeTag = mainTags[i].tag;
              this.removeTag();
            }
          }
        }

      }, this));

      //Get the focus when you click on the main list
      this.tagList.on("click", $.proxy(function(e){

        //Stop the bubbling of the event
        e.preventDefault();
        e.stopPropagation();

        //Get the focus of the taglist
        this.getFocus();

      },this));

      //Enable the tag clicking
      this.tagList.on("click", "li", $.proxy(function(e){

        this.isFocus = true;

        //Stop the bubbling of the event
        e.preventDefault();
        e.stopPropagation();

        //Shift to edit mode
        this.editMode(e);

      },this));

      //Special keys
      $(document).keydown($.proxy(function(e){

        //Escape to normal mode
        if((e.keyCode || e.which) == 27)
        {
          //Prevent the defaultmain_editor_focus action
          e.preventDefault();

          //Undo the selection
          this.undoSelection();
        }

        //Plus key
        if((e.keyCode || e.which) == 61 && e.shiftKey && this.isFocus)
        {
          //e.preventDefault();
        }

        //Delete key
        if(((e.keyCode || e.which) == 8 || (e.keyCode || e.which) == 46) && this.activeTag && this.isFocus)
        {
          if(((e.keyCode || e.which) == 8 || (e.keyCode || e.which) == 46) && !this.activeTag.hasClass('add'))
          {
            //Don't allow the delete
            e.preventDefault();

            //Let the inline editor know that a tag has been removed
            var id = this.activeTag.attr('data-id');
            var type = this.activeTag.attr('data-type');
            $(document).trigger("remove_related_tags.dynamic_tagging", [id, type]);

            //Remove the tag
            this.removeTag();

            //Get the focus on the last new tag
            this.getFocus();
          }
          else if (this.activeTag.hasClass('add') && (this.activeTag.html()== "&nbsp;" || this.activeTag.html()== ""))
          {
            //Don't allow the delete
            e.preventDefault();

            //Get the previous tag
            this.getPreviousTag();
          }
        }

        //Left arrow
        if((e.keyCode || e.which) == 37 && this.isFocus)
        {
          e.preventDefault();
          var isAutoListActive = $('.autolist').length > 0;
          if(!isAutoListActive)
          {
            this.getPreviousTag();
          }
          else
          {
            $(document).trigger("cursor-left.dynamic_tagging");
          }
        }

        //Right arrow
        if((e.keyCode || e.which) == 39 && this.isFocus)
        {
          e.preventDefault();
          var isAutoListActive = $('.autolist').length > 0;
          if(!isAutoListActive)
          {
            this.getNextTag();
          }
          else
          {
            $(document).trigger("cursor-right.dynamic_tagging");
          }
        }

      }, this));

      var debounceTrigger = _.debounce(function(event,params){
        $(document).trigger(event, params);
      }, 300);
      //Get the query results
      this.tagList.keyup($.proxy(function(e){

        //As long as the ESC button isn't pressed
        if((e.keyCode || e.which) != 27 && (e.keyCode || e.which) != 37 && (e.keyCode || e.which) != 38 && (e.keyCode || e.which) != 39 && (e.keyCode || e.which) != 40 && (e.keyCode || e.which) != 13)
        {
          this.activeTag.removeClass('mode-research mode-user mode-help')

          var query = $(e.target).html();
          switch(query.charAt(0))
          {
            case "@":
              this.activeTag.addClass('mode-research')
              break;
            case "^":
              this.activeTag.addClass('mode-research')
              break;
            default:
              this.activeTag.addClass('mode-research')
              break;
          }
          debounceTrigger("query.dynamic_tagging", [query, this, this.activeTag, this.isExternalProductSelector]);
        }

      }, this));

      //When the user selects something for an inline tag, remove the focus on the main field
      $(document).on('remove_taglist_focus.dynamic_tagging', $.proxy(function(e){

        //Undo the selection
        this.undoSelection();

      },this));

      //Create the add button
      this.createAddButton();

    },
    removeTag: function() {

      //Remove the tag
      this.activeTag.blur();
      this.activeTag.remove();

      //Update the default text for the add button
      this.module.find('.add').html(this.getDefaultText());

      //Update the tag list
      this.updateTagList();

    },
    updateSelection: function(selection) {

      //Get title of tag
      var optionalPrefix = "";
      switch(selection.type)
      {
        case "ProductSelectorConfig":
          optionalPrefix = selection.isFamily ? "Family - " : "Selector - ";
          break;
        case "ResearchGuide":
          optionalPrefix = "Research Guide - "
          break;
        case "HowToArticle":
          optionalPrefix = "Article - "
          break;
        case "Plugin":
          optionalPrefix = 'Plugin - ';
          break;
        case "LanguagePack":
          optionalPrefix = 'Language Pack - ';
          break;
        case "SharedReport":
          optionalPrefix = 'Report - ';
          break;
        case "Extension":
          optionalPrefix = 'Extension - ';
          break;
        case "ExtensionCenterFeature":
          optionalPrefix = 'App Feature - ';
          break;
        case "User":
          optionalPrefix = selection.isEmployee ? "Employee - " : "User - ";
          break;
        case "MspProfile":
          optionalPrefix = "MSP - "
          break;
        case "HelpCategoryNode":
          optionalPrefix = "HelpDoc - "
          break;
        case "Project":
          optionalPrefix = "Project - "
          break;
        default:
          break;
      }

      var label = optionalPrefix + selection.label;
      var id = selection.id;
      var type = selection.type;
      var mode = selection.mode;

      //Set the title to the new product tag and get rid of the stored value
      this.setLabel(label);

      //If the active tag is the add button
      if(this.activeTag.hasClass('add'))
      {
        //Remove the add / active classes
        this.activeTag.removeClass("add active");

        //Create a new add button
        this.createAddButton();
      }

      //Switch back to normal mode
      this.normalMode();

      //Check for duplicates
      if(this.isDuplicate(id, type))
      {
        //Get rid of duplicate
        this.activeTag.addClass('duplicate').html('Duplicate').stop().delay(1000).animate({

          opacity: 0

        }, 500, function() {

          $(this).remove();

        });
      }
      else
      {
        //Set the id on the li tag
        if(id && type)
        {
          this.activeTag.attr("data-id", id);
          this.activeTag.attr("data-type", type);
        }

        if(mode)
        {
          this.activeTag.removeClass('mode-research mode-user mode-help')

          switch(mode.toUpperCase())
          {
            case "RESEARCH":
              this.activeTag.addClass("mode-research");
              break;
            case "USERS":
              this.activeTag.addClass("mode-research");
              break;
            case "HELP":
              this.activeTag.addClass("mode-research");
              break;
          }
        }

        //Update the taglist
        this.updateTagList();
      }

      //Get the next focus
      if(this.isFocus)
      {
        this.getFocus();
      }

    },
    isDuplicate: function(tagID, tagType)
    {
      var count = 0;
      var isDuplicate = false;

      var tagList = this.tagList.find('li');
      tagList.each(function(index, value) {

        tagID == $(this).attr('data-id') && tagType == $(this).attr('data-type') ? count++ : null ;
        if(count > 0)
        {
          isDuplicate = true;
        }

      });

      return isDuplicate;

    },
    undoSelection: function() {

      //Hide the results
      $(document).trigger('hide-results.dynamic_tagging');

      //Unset the focus on the taglist
      this.isFocus = false;

      //If there is an active tag
      if(this.activeTag)
      {
        //If this is the add button
        if(this.activeTag.hasClass("add"))
        {
          //Set the label back to the default text
          this.activeTag.html(this.getDefaultText());

          //Remove the primarytag flag
          this.activeTag.removeAttr("data-primarytag");
        }
        else if(this.storedLabel)
        {
          //Set the label back to the data attribute
          this.setLabel(this.storedLabel);
        }

        //Switch back to normal mode
        this.normalMode();
      }

    },
    getDefaultText: function(isTagAdded) {

      var tagList = this.tagList.find('li');
      var totalTags = isTagAdded ? tagList.length + 1 : tagList.length ;
      var text = this.noUserTextPlural;

      if(this.isExternalProductSelector) {
        return totalTags <= 1 ? this.externalTextSingular : this.externalTextPlural ;
      } else {
        return totalTags <= 1 ? this.defaultTextSingular : this.defaultTextPlural ;
      }

    },
    getTagCount: function() {

      return this.tagList.find('li').length;

    },
    setLabel: function(label) {

      this.activeTag.html(label);
      this.storedLabel = null;

    },
    updateTagList: function() {

      // Trigger custom event for consumption
      $.event.trigger("dynamicTagListChanged");

      //Main Object
      var mainObj = this;

      //Update the tag list
      var tagListArray = new Array();
      var tagList = this.tagList.find('li');

      tagList.each(function(index, value) {

        var currentTag = $(this);
        var currentTagID = currentTag.attr('data-id');
        var currentTagType = currentTag.attr('data-type');

        if(currentTagID)
        {
          tagListArray.push(currentTagID+"&"+currentTagType);
        }

      });

      this.tagListField.val(tagListArray.join(','));

    },
    getLabel: function(label) {

      //If this is not the add button
      if(!this.activeTag.hasClass('add') && !this.storedLabel)
      {
        //Store the label in a data attribute
        this.storedLabel = this.activeTag.html();
      }

    },
    getPreviousTag: function() {

      //Click the previous tag
      if(!this.isFirstTag() && this.activeTag)
      {
        this.normalMode();
        this.activeTag.prev('li').click();
      }

    },
    getNextTag: function() {

      //Click the next tag
      if(!this.isLastTag() && this.activeTag)
      {
        this.normalMode();
        this.activeTag.next('li').click();
      }

    },
    isLastTag: function(tag) {

      if(this.activeTag)
      {
        return this.activeTag.is(':last-child');
      }

    },
    isFirstTag: function(tag) {

      if(this.activeTag)
      {
        return this.activeTag.is(':first-child')
      }
    },
    getFocus: function() {

      this.isFocus = true;

      //Simulate a click on the last tag
      var activeTag = $('li', this.tagList).last();
      activeTag.click();

       //Let the other modules know that the main editor has focus
      $(document).trigger('main_editor_focus.dynamic_tagging', activeTag);

    },
    createAddButton: function() {

      //Create a new add button
      this.tagList.append('<li class="add">'+ this.getDefaultText(true) +'</li>');

    },
    editMode: function(e){
      //Undo the current selection
      this.undoSelection();

      //Get the new target
      this.activeTag = $(e.target);
      var width = this.activeTag.width();

      //Let the other modules know that the main editor has focus
      $(document).trigger('main_editor_focus.dynamic_tagging', this.activeTag);

      //If the active tag is the add button
      if(this.activeTag.hasClass('add'))
      {
        //Get the label for storage
        this.getLabel();

        //Make the new section editable
        this.activeTag.addClass("active");
        this.activeTag.attr("contenteditable", true);

        //Clear out the text of the tag
        this.activeTag.html("&nbsp;");
        this.activeTag.css({"min-width": width});

        //If they click on it, it is a primary tag
        this.activeTag.attr("data-primarytag", "true");
      }
      else
      {
        this.activeTag.addClass("active");
      }

      //Give the active tag the focus
      this.activeTag.focus();
      this.isFocus = true;

    },
    normalMode: function(){

      if(this.activeTag)
      {
        //Unset the active status
        this.activeTag.removeClass("active");
        this.activeTag.attr("contenteditable", false);
        this.activeTag.css({"min-width": "inherit"});
        this.activeTag.blur();
      }

    }

  };

  // DOCUMENT READY ///////////////////////////////////

  jQuery(document).ready(function() {

    //Check for the presence of the wysihtml5 or the tag editor
    var isWysihtml5 = $('#postform, #new_post').length > 0;
    var isTagEditor = $('#tag-editor').length > 0;

    isTagEditor ? new SPICE.DynamicTaggingMainEditor($('#tag-editor')) : null ;

  });

})(jQuery);
/*1.0*/

//


/*global $ document*/

var SPICE = window.SPICE || {};

(function($) {

  // DYNAMIC TAGGING INLINE EDITOR /////////////////////

  SPICE.DynamicTaggingInlineEditor = function() {

    //Inline Elements - Delay initialization until signal is sent from editor
    this.editor;
    this.iframe;
    this.iframeDoc;
    this.textarea;
    this.composer;
    this.activeTag;
    this.selectedTag;
    this.initialMessage = "Press + while typing to create a tag!";
    this.postForm = $('#new_post');
    this.defaultTextSpan;
    this.focusedTagSpan             //Hack for FF deletion - Remove when possible
    this.preBackspaceTagWidths;     //Hack for FF deletion - Remove when possible
    this.maxQueryLength = 30;
    this.inlineTagInventory = new Array();

    //Initialize the module
    this.initialize();
  }

  SPICE.DynamicTaggingInlineEditor.prototype = {

    initialize: function() {

      //Get reference to main object
      var mainObj = this;

      //Set the default flag on the form
      //this.postForm.attr('data-default', 'true');

      //When the editor has been created
      $(document).on("editor_ready.wysihtml5", $.proxy(function(e, editor){
        //When the editor is loaded
        this.editor = editor;
        this.editor.on('load', $.proxy(function(){
          //Get the references to the editor
          this.iframe = $('iframe.wysihtml5-sandbox');

          this.iframeDoc = $(this.editor.composer.doc);

          this.textarea = this.iframeDoc.find('body');
          this.composer = this.editor.composer;

          //If there is still an active tag from a previous reload, get rid of it
          if(this.textarea.find('.inline-tag.new').length > 0)
          {
            this.activeTag = this.textarea.find('.inline-tag.new');
            this.escapeQueryMode();
          }

          //When a key is pressed in the editor
          this.textarea.on('keydown click', $.proxy(function(e){

            var isTag = this.checkForNewTag();

            //If the user clicks on the editor field
            if(e.type.toUpperCase() == "CLICK")
            {
              //Remove focus from the taglist (if it has it) - This resolves issues with which element retains focus
              $(document).trigger("remove_taglist_focus.dynamic_tagging");

              //If they is a selected tag, deselect it
              if(this.selectedTag)
              {
                this.deselectAllTags();
              }

              if(this.activeTag)
              {
                this.convertTagToText(this.activeTag);
              }

            }

            //If backspace is pressed and there is an active tag
            if(((e.keyCode || e.which) == 8 || (e.keyCode || e.which) == 46) && this.selectedTag)
            {
              e.preventDefault();
              e.stopPropagation();

              //Remove the actual tag
              this.convertTagToText(this.selectedTag);
              this.deselectAllTags();

              //Refresh the tag inventory
              this.refreshTagInventory();
            }

            if ($.browser.mozilla) //This is a terrible hack to get around a Firefox specific issue with deleting non-contenteditable elements within a content editable block.  Jquery disables $.browser in version 1.9, so if we upgrade to Jquery 1.9+, we will need to add the Jquery migrate plugin as well.  Hopefully Firefox will fix the issue before then.  See the following Mozilla bug for more details: https://bugzilla.mozilla.org/show_bug.cgi?id=454191
            {
              var inlineTags = this.textarea.find('.inline-tag.completed')
              this.preBackspaceTagWidths = new Array();
              for (var i = 0; i < inlineTags.length; i++)
              {
                this.preBackspaceTagWidths.push($(inlineTags[i]).width());
              }
            }

            //Left arrow
            if((e.keyCode || e.which) == 37 && this.selectedTag)
            {
              //Prevent the default behavior
              e.preventDefault();

              //Set the cursor before the selected tag
              var range = rangy.createRange();
              range.selectNode(this.selectedTag.get(0));
              range.collapse(true);
              var sel = rangy.getSelection();
              sel.setSingleRange(range);

              //Deselect the tags
              this.deselectAllTags();
            }

            //Right arrow
            if((e.keyCode || e.which) == 39 && this.selectedTag)
            {
              //Prevent the default behavior
              e.preventDefault();

              //Set the cursor after the selected tag
              var range = rangy.createRange();
              range.selectNode(this.selectedTag.get(0));
              range.collapse(false);
              var sel = rangy.getSelection();
              sel.setSingleRange(range);

              //Deselect the tags
              this.deselectAllTags();
            }

            if(isTag)
            {
              //If the escape key is pressed
              if((e.keyCode || e.which) == 27)
              {
                this.escapeQueryMode();
              }

              //Up arrow
              if((e.keyCode || e.which) == 38)
              {
                e.preventDefault();
                e.stopPropagation();
                $(document).trigger("cursor-up.dynamic_tagging");
              }

              //Down arrow
              if((e.keyCode || e.which) == 40)
              {
                e.preventDefault();
                e.stopPropagation();
                $(document).trigger("cursor-down.dynamic_tagging");
              }

              //Left arrow
              if((e.keyCode || e.which) == 37)
              {
                e.preventDefault();
                e.stopPropagation();
                $(document).trigger("cursor-left.dynamic_tagging");
              }

              //Right arrow
              if((e.keyCode || e.which) == 39)
              {
                e.preventDefault();
                e.stopPropagation();
                $(document).trigger("cursor-right.dynamic_tagging");
              }

              //Enter key
              if((e.keyCode || e.which) == 13)
              {
                e.preventDefault();
                e.stopPropagation();
                $(document).trigger("selection.dynamic_tagging");
              }
            }

            if(this.checkForNewTag())
            {
              var current = this.textarea.find('.inline-tag.new').html();

              //If it is a delete or a backspace, remove one character
              if((e.keyCode || e.which) == 8 || (e.keyCode || e.which) == 46)
              {
                //Prevent default
                e.preventDefault();

                //If there is something in the tag
                if(current.length > 1)
                {
                  //Get the length of the string before the trim
                  if(current.substring(current.length - 6, current.length) == "&nbsp;")
                  {
                    current = current.substring(0, current.length - 6);
                  }
                  else if(current.substring(current.length - 5, current.length) == "&amp;")
                  {
                    current = current.substring(0, current.length - 5);
                  }
                  else
                  {
                    current = current.substring(0, current.length - 1);
                  }
                }
                else
                {
                  this.escapeQueryMode();
                }
              }
              else if((e.keyCode || e.which) == 32)
              {
                //current = String(current) + "&nbsp;";
              }

              //Update the tag html
              this.textarea.find('.inline-tag.new').html(current);

            }

          }, this));

          this.textarea.on('keypress', $.proxy(function(e){

            //In IE, the tag loses focus due to the resize handles... You have to fake the input into the tag
            if(this.checkForNewTag())
            {
              var key = (typeof e.which == "number") ? e.which : e.keyCode
              var current = this.textarea.find('.inline-tag.new').html();

              e.preventDefault();

              if(key != 0)
              {
                characterMap = [];

                if(e.shiftKey)
                {
                  characterMap[49] = "!";
                  characterMap[50] = "@";
                  characterMap[51] = "#";
                  characterMap[52] = "$";
                  characterMap[54] = "^";
                  characterMap[37] = "%";
                  characterMap[38] = "&";
                  characterMap[56] = "*";
                  characterMap[40] = "(";
                  characterMap[48] = ")";
                  characterMap[61] = "+";
                  characterMap[173] = "_";
                  characterMap[192] = "~";
                  characterMap[219] = "{";
                  characterMap[221] = "}";
                  characterMap[220] = "|";
                  characterMap[186] = ":";
                  characterMap[187] = "+";
                  characterMap[188] = "<";
                  characterMap[189] = "_";
                  characterMap[190] = ">";
                  characterMap[191] = "?";
                  characterMap[222] = "\"";
                  characterMap[106] = "*";
                  characterMap[107] = "+";
                  characterMap[108] = "_";
                  characterMap[109] = "_";
                  characterMap[110] = ".";
                  characterMap[111] = "/";
                }
                else
                {
                  characterMap[49] = "1";
                  characterMap[50] = "2";
                  characterMap[51] = "3";
                  characterMap[52] = "4";
                  characterMap[53] = "5";
                  characterMap[54] = "6";
                  characterMap[55] = "7";
                  characterMap[56] = "8";
                  characterMap[57] = "9";
                  characterMap[48] = "0";
                  characterMap[61] = "=";
                  characterMap[186] = ";";
                  characterMap[190] = ".";
                  characterMap[191] = "/";
                  characterMap[39] = "`";
                  characterMap[187] = "=";
                  characterMap[188] = ",";
                  characterMap[189] = "-";
                  characterMap[219] = "[";
                  characterMap[220] = "\\";
                  characterMap[221] = "]";
                  characterMap[222] = "\'";
                }

                // Don't print anything for arrow keys or spaces
                characterMap[32] = "&nbsp;";

                if(typeof characterMap[key] != 'undefined')
                {
                  character = characterMap[key];
                }
                else
                {
                  character = String.fromCharCode(key).toLowerCase();

                  if(typeof character == 'undefined')
                  {
                    character = "";
                  }
                }

                current = String(current) + character;

              }

              //Update the tag html
              this.textarea.find('.inline-tag.new').html(current);

              //Set the cursor
              if(current.length != 1)
              {
                if(this.activeTag)
                {
                  if ($.browser.mozilla) //This is another hack to get around limitations in firefox...  The caret implementation for content editable is unstable in FF and it doesn't respond to Rangy commands.  The only way to mimic the correct cursor position is to create a temporary node (which absorbs the cursor), and then remove the temporary node to set the cursor to the correct position.  Not sure if there is another way to handle this or if Firefox has plans to fix it in the future.  If we upgrade to Jquery 1.9+, we will need to add the jquery migrate plugin to support the browser detection.
                  {
                    var range = rangy.createRange();
                    range.selectNode(this.activeTag.get(0));
                    var contents = range.cloneContents();
                    range.insertNode(contents);
                    this.activeTag.remove();
                    this.activeTag = this.textarea.find('.inline-tag.new');
                  }
                  else
                  {
                    var range = rangy.createRange();
                    range.selectNode(this.activeTag.get(0));
                    range.collapse(false);
                    var sel = rangy.getSelection();
                    sel.setSingleRange(range);
                  }
                }
              }

            }

            //Standard editor actions
            this.onEditorAction(e);

          }, this));

          this.textarea.on('keyup', $.proxy(function(e){

            //Check to see if the user is creating a new tag
            if(this.checkForNewTag())
            {
              var query = this.iframeDoc.find('.inline-tag.new').html();

              //Special case to allow "+1" agreement
              if($.trim(query) == '1')
              {
                this.escapeQueryMode();
              }
              else
              {
                //As long as the ESC button isn't pressed
                if((e.keyCode || e.which) != 27 && (e.keyCode || e.which) != 37 && (e.keyCode || e.which) != 38 && (e.keyCode || e.which) != 39 && (e.keyCode || e.which) != 40 && (e.keyCode || e.which) != 13)
                {

                  if(this.activeTag)
                  {
                    if(this.activeTag.html() != "" && this.activeTag.html() != "")
                    {
                      //Get the query string param
                      query = query.split('&nbsp;').join(' ');

                      //If the query has exceeded the max number of characters, break out of query mode
                      if(query.length > this.maxQueryLength)
                      {
                        if(this.activeTag)
                        {
                          this.escapeQueryMode();
                        }
                      }
                      else
                      {
                        //Send the query
                        $(document).trigger("query.dynamic_tagging", [query, this, this.activeTag]);
                      }
                    }
                  }

                }
              }
            }
            else
            {
              if ($.browser.mozilla) //This is a terrible hack to get around a Firefox specific issue with deleting non-contenteditable elements within a content editable block.  Jquery disables $.browser in version 1.9, so if we upgrade to Jquery 1.9+, we will need to add the Jquery migrate plugin as well.  Hopefully Firefox will fix the issue before then.  See the following Mozilla bug for more details: https://bugzilla.mozilla.org/show_bug.cgi?id=454191
              {
                if(this.preBackspaceTagWidths.length > 0)
                {
                  var postBackspaceTags = this.textarea.find('.inline-tag.completed');
                  if(this.preBackspaceTagWidths.length == postBackspaceTags.length)
                  {
                    if(this.focusedTagSpan)
                    {
                      this.focusedTagSpan.remove();
                      this.focusedTagSpan = null;
                    }
                    else
                    {
                      for(var i = 0; i < this.preBackspaceTagWidths.length; i++)
                      {
                        if(this.preBackspaceTagWidths[i] != $(postBackspaceTags[i]).width())
                        {
                          $(postBackspaceTags[i]).remove();
                        }
                      }
                    }
                  }
                }
                this.refreshTagInventory();
              }
              else
              {
                //Update the list - Only on delete or backspace
                if((e.keyCode || e.which) == 8 || (e.keyCode || e.which) == 46)
                {
                  this.refreshTagInventory();
                }
              }

              $(document).trigger('hide-results.dynamic_tagging');
            }

          }, this));

          //Sets up a space after the last tag
          this.textarea.on('blur', $.proxy(function(e){

            //Check to see if there is a space for the cursor
            this.checkForLastSpace();

            //Remove highlight from tags
            this.deselectAllTags();

          }, this));

          //Special case for when the user pastes content into the window
          this.textarea.on('cut paste', $.proxy(function(e){

            //Get a reference to the main object
            var mainObj = this;

            //Do a full refresh on the tag inventory
            setTimeout(function() {

              //Reinitialize the tags
              mainObj.initializeTags();

              //Remove the focus from the main editor
              $(document).trigger("remove_taglist_focus.dynamic_tagging");

            }, 100);

          },this));

          //Initialize the tags
          mainObj.initializeTags();

          //Initialize the tags when the user performs an undo
          this.editor.on('undo:composer', function(){

            mainObj.initializeTags();

          });

          //Initialize the tags when the user performs an undo
          this.editor.on('redo:composer', function(){

            mainObj.initializeTags();

          });

          // Prevent the backspace key from navigating back.
          $(document).on('keydown', this.textarea, function (event) {
            if ((event.keyCode || event.which) == 8 || (event.keyCode || event.which) == 46) {
                var d = event.srcElement || event.target;

                if($(d) == mainObj.module)
                {
                  event.preventDefault();
                }
            }

            if ((event.keyCode || event.which) == 32) {
                var d = event.srcElement || event.target;

                if($(d) == mainObj.module)
                {
                  event.preventDefault();
                }
            }

          });

          //When the form is submitted with the tags - EXTREMELY IMPORTANT, if the content isn't wrapped in a <p> tag, the inline tags won't show bubbles due to a bug in the editor
          $('#ask_question_submit, #post_form_submit').on('click', function(e){

            //Get rid of any unfinished tags
            if(mainObj.textarea.find('.inline-tag.new').length > 0)
            {
              mainObj.textarea.find('.inline-tag.new').each(function(){
                mainObj.convertTagToText($(this));
              });
            }

            if(mainObj.textarea.find('p').length == 0)
            {
              //Wrap content in a p tag
              mainObj.textarea.wrapInner('<p></p>');
            }

            mainObj.textarea.find('span[contenteditable]').removeAttr('contenteditable');

            //Sync textarea before submit
            mainObj.editor.synchronizer.sync(true);

          });

        },this));

      }, this));

      //When the module receives an update signal from the autolist
      $(document).on("update.dynamic_tagging", $.proxy(function(e, selection){

        //Update the selection
        this.updateSelection(selection);

      }, this));

      //When the module receives an update signal from the autolist
      $(document).on("main_editor_focus.dynamic_tagging", $.proxy(function(e, mainEditorTag){

        //Hack for IE to deselect the tag (otherwise, if you added a tag to the main editor, it would show up inline)
        if(this.activeTag)
        {
          //Escape out of query mode
          this.escapeQueryMode();

          //Reactivate the main editor tag
          setTimeout(function(){ mainEditorTag.click() }, 50);
        }

      }, this));

      //When a tag is deleted from the main editor
      $(document).on("remove_related_tags.dynamic_tagging", $.proxy(function(e, id, type){

        //Get all of the inline tags that have the same id as the tag that was removed from the main editor
        var inlineTags = this.textarea.find('.inline-tag').filter(function() {
          return $(this).attr("data-id") == id && $(this).attr("data-type") == type ;
        });

        //Convert the tags into normal text
        if(inlineTags.length > 0)
        {
          $(inlineTags).addClass('destroyed');

          setTimeout($.proxy(function() {

            for(var i = 0; i < inlineTags.length; i++)
            {
              this.convertTagToText($(inlineTags[i]));
            }

          },this), 2000);

        }

      }, this));

    },

    onEditorAction: function(e) {

      //Get a reference to the main object
      var mainObj = this;
      var charCode = (typeof e.which == "number") ? e.which : e.keyCode

      //Create a range object and test to see if the user is on a new tag
      var isTag = this.checkForNewTag();

      //When the + or @ button is pressed
      if(charCode === 43)
      {
        //Prevent default
        e.preventDefault();

        //If it isn't in a tag, create a new one
        if(!isTag)
        {
          //Create the new inline span
          wysihtml5.commands.formatInline.exec(this.composer, null, {
            nodeName: "span",
            className: "inline-tag-new"
          });

          // Process the new tag
          this.activeTag = $(this.textarea).find('.inline-tag-new');
          this.activeTag.removeClass('inline-tag-new').addClass('inline-tag new');
          this.activeTag.attr('contenteditable', 'false');

          if(charCode === 43)
          {
            this.activeTag.addClass('mode-research');
          }

          var range = rangy.createRange();
          range.selectNode(this.activeTag.get(0));
          range.collapse(false);
          var sel = rangy.getSelection();
          sel.setSingleRange(range);

          //If there is a previous character, break out of query mode
          if(this.isPreviousCharacter())
          {
            //Because IE is atrocious, we have to delay the escape of the query mode or the textarea will lose focus in IE and the user will become stuck
            var mainObj = this;
            setTimeout(function(){

              mainObj.escapeQueryMode();

            }, 50);

          }
        }

      }
      else
      {
        //If you are typing outside of a new tag
        if(!isTag)
        {
          if(this.activeTag)
          {
            this.convertTagToText(this.activeTag);
          }
        }

      }

    },

    initializeTags: function() {

      //Refresh the tag inventory
      this.refreshTagInventory(true);

      //Get all tags in the new window
      var inlineTags = this.textarea.find('.inline-tag');

      //Setup the new tags as though they had always been there
      for(var i = 0; i < inlineTags.length; i++)
      {
        this.activeTag = $(inlineTags[i]);
        this.createTag();
      }

    },
    checkForLastSpace: function() {

      if(this.textarea.html() != "")
      {
        var lastParagraph = $('p', this.textarea).last();

        if(lastParagraph.length > 0)
        {
          var lastParagraphTest = lastParagraph.html().substr(lastParagraph.length - 7, 6);
          var lastChild = lastParagraph.children().last();

          if(lastChild.is('.inline-tag') && lastParagraphTest != "&nbsp;")
          {
            var lastTag = $('.inline-tag', lastParagraph).last();
            lastTag.after('&nbsp;');
          }
        }
        else
        {
          var textareaContent = this.textarea.html();

          if(textareaContent != "")
          {
            var lastCharacters = textareaContent.substring(textareaContent.length - 6, textareaContent.length);
            if(lastCharacters != "&nbsp;")
            {
              this.textarea.append('&nbsp;');
            }
          }
        }
      }

    },
    selectTag: function(tag) {

      //Deselect all existing active tags
      this.deselectAllTags();

      //Activate the tag
      tag.addClass('active');
      this.selectedTag = tag;

    },
    refreshTagInventory: function(isFullRefresh) {

      //Determine if this is going to be a full refresh
      isFullRefresh = isFullRefresh ? true : false;

      //Get all of the inline tags in the textarea
      var inlineTags = this.textarea.find('.inline-tag');

      //Convert them all into an array of objects
      var tempArray = new Array();
      for (var i = 0; i < inlineTags.length; i++)
      {
        var currentTag = $(inlineTags[i]);

        var id = currentTag.attr('data-id');
        var type = currentTag.attr('data-type');
        var label = currentTag.html();

        //Check to see if it is a duplicate
        var isDuplicate = false;
        for (var j = 0; j < tempArray.length; j++)
        {
          if(tempArray[j].id == id && tempArray[j].type == type)
          {
            isDuplicate = true;
          }
        }

        //If it isn't a duplicate, add it to the array
        if(!isDuplicate)
        {
          tempArray.push({tag: currentTag, id: id, type: type, label:label});
        }
      }

      //Check to see if any changes have taken place in the tag inventory
      if(this.hasInventoryChanged(tempArray, this.inlineTagInventory))
      {
        //Update the inline tag inventory
        this.inlineTagInventory = tempArray;

        //Let the main tag editor know about the change
        $(document).trigger('update_tag_inventory.dynamic_tagging', [this.inlineTagInventory, isFullRefresh]);
      }

    },
    hasInventoryChanged: function(newInventory, oldInventory)
    {

      //If the length of the arrays is different
      if(newInventory.length != oldInventory.length)
      {
        return true;
      }
      else
      {
        for(var i = 0; i < newInventory.length; i++)
        {
          if(newInventory[i].id == oldInventory[i].id && newInventory[i].type == oldInventory[i].type)
          {
            return true;
          }
        }
      }
      return false;

    },
    deselectAllTags: function() {

      this.textarea.find('.inline-tag.active').removeClass('active');
      this.selectedTag = null;

    },
    checkForNewTag: function() {

      return this.textarea.find('.inline-tag.new').length > 0 ? true : false ;

    },
    createTag: function() {

      //Make sure the text area maintains focus
      this.textarea.focus();
      this.activeTag.attr('readonly', 'true').attr('contenteditable', 'false').addClass('completed');
      if ($.browser.mozilla) { this.activeTag.wrapInner('<span contenteditable="true"></span>'); } //This is a terrible hack to get around a Firefox specific issue with deleting non-contenteditable elements within a content editable block.  Jquery disables $.browser in version 1.9, so if we upgrade to Jquery 1.9+, we will need to add the Jquery migrate plugin as well.  Hopefully Firefox will fix the issue before then.  See the following Mozilla bug for more details: https://bugzilla.mozilla.org/show_bug.cgi?id=454191

      //Check for users clicking on a tag
      var mainObj = this;

      this.activeTag.off('focus click mousedown');
      this.activeTag.on('focus click mousedown', function(e){

        e.stopPropagation();
        e.preventDefault();

        //Remove the focus from the main editor
        $(document).trigger("remove_taglist_focus.dynamic_tagging");

        mainObj.selectTag($(this));
        mainObj.textarea.focus();

      });

      //Special hack for FF deletion
      this.activeTag.find('span').on('focus', function(e){

        mainObj.focusedTagSpan = $(this);

      });

      this.activeTag = null;

      //Make sure that the tag is no longer selected
      this.deselectAllTags();

    },

    isPreviousCharacter: function() {

      if(this.textarea.find('.inline-tag.new').length > 0)
      {
        var newTag = this.textarea.find('.inline-tag.new');
        var range = rangy.createRangyRange();
        var sel = rangy.getSelection();
        range.setStart(this.textarea.get(0), 0);
        range.setEnd(newTag.get(0), 0);
        var precedingChar = range.toString().slice(-1);
        var precedingTwoChar = range.toString().slice(-2);
        var rangeLength = range.toString().length;
        var isFirstChild = newTag.parent().children().first().is('.inline-tag.new') && $.trim(newTag.parent().text()).length == 0;

        return (!precedingChar.match(new RegExp("\\s")) || precedingTwoChar.indexOf('+') > -1) && rangeLength != 0 && !isFirstChild? true : false ;
      }
      else
      {
        return false;
      }

    },

    escapeQueryMode: function() {

      if(this.activeTag)
      {
        var range = rangy.createRange();
        range.selectNode(this.activeTag.get(0));
        var contents = range.cloneContents();
        range.insertNode(contents);

        this.textarea.find('.inline-tag.new').each(function(index, value){
          index == 1 ? $(this).removeClass('inline-tag new').addClass('target') : null ;
        });

        this.activeTag = this.textarea.find('.inline-tag.new');
        var target = this.textarea.find('.target');
        this.convertTagToText(this.activeTag);
        target.remove();

      }

    },
    updateSelection: function(selection) {

      //Create inline tag
      if(this.activeTag)
      {
        //Hide the autolist
        $(document).trigger('hide-results.dynamic_tagging');

        //Set the information for the new tag
        var label = selection.label;
        var id = selection.id;
        var type = selection.type;
        var mode = selection.mode;

        this.activeTag.removeClass('mode-research mode-users mode-help');
        switch(mode.toUpperCase())
        {
          case "RESEARCH":
            this.activeTag.addClass('mode-research');
            break;
          case "USERS":
            this.activeTag.addClass('mode-research');
            break;
          case "HELP":
            this.activeTag.addClass('mode-research');
            break;
          default:
            this.activeTag.addClass('mode-research');
            break;
        }

        //Make sure the text area maintains focus
        this.activeTag.attr('readonly', 'true').attr('contenteditable', 'false').addClass('completed');

        //Add a space after the cursor is set
        this.activeTag.after('&nbsp;');

        //Check for users clicking on a tag
        var mainObj = this;
        this.activeTag.off('focus click mousedown');
        this.activeTag.on('focus click mousedown', function(e){

          e.stopPropagation();
          e.preventDefault();

          //Remove the focus from the main editor
          $(document).trigger("remove_taglist_focus.dynamic_tagging");

          mainObj.selectTag($(this));

        });

        this.activeTag.find('span').on('focus', function(e){

          mainObj.focusedTagSpan = $(this);

        });

        //Make sure that the tag is no longer selected
        this.deselectAllTags();

        //Convert the new tag to a normal tag
        this.activeTag.html(label).attr('data-id', id).attr('data-type', type);
        if ($.browser.mozilla) { this.activeTag.wrapInner('<span contenteditable="true"></span>'); }  //This is a terrible hack to get around a Firefox specific issue with deleting non-contenteditable elements within a content editable block.  Jquery disables $.browser in version 1.9, so if we upgrade to Jquery 1.9+, we will need to add the Jquery migrate plugin as well.  Hopefully Firefox will fix the issue before then.  See the following Mozilla bug for more details: https://bugzilla.mozilla.org/show_bug.cgi?id=454191

        this.setCursorAfterTag(this.activeTag);
        this.activeTag.removeClass('active new');
        this.activeTag = null;

        //Refresh the tag inventory
        this.refreshTagInventory();

      }

    },
    setCursorAfterTag: function(tag) {

      /* This is necessary because the cross browser implementation of contenteditable is a tragedy and it is completely broken in Firefox. */

      //Create two temporary spans in the content of the document, one before, one after
      tag.before('<span id="beacon">&nbsp;</span>');
      var beacon = this.textarea.find('#beacon')[0];

      tag.after("<span id='beacon2'>&nbsp;</span>");
      var beacon2 = this.textarea.find('#beacon2')[0];

      //Move the new tag to the start of the first beacon
      tag.insertBefore($(beacon));

      //Remove the first temp span
      $(beacon).remove();

      //With rangy, move the cursor to the end of the second beacon
      var range = rangy.createRange();
      range.selectNode(beacon2);
      range.collapse(false);
      var sel = rangy.getSelection();
      sel.setSingleRange(range);

      //Remove the second beacon
      $(beacon2).remove();

      //That gives you the right cursor position in all browsers, but there are rendering issues all over the place.  Refresh the cursor position.
      caretBookmark = this.editor.composer.selection.getBookmark();
      if ( caretBookmark ) {
        this.editor.composer.selection.setBookmark( caretBookmark );
      }

      this.textarea.focus();

    },
    convertTagToText: function(tag) {

      //Hide the autolist
      $(document).trigger('hide-results.dynamic_tagging');

      //Remove the entire tag span
      if(this.activeTag)
      {
        var range = rangy.createRange();
        range.selectNode(this.activeTag.get(0));
        range.collapse(false);
        var sel = rangy.getSelection();
        sel.setSingleRange(range);
      }

      if(tag.is('.mode-user'))
      {
        tag.html("@"+tag.text());
      }
      else if(tag.is('.mode-research'))
      {
        tag.html("+"+tag.text());
      }
      else if(tag.is('.mode-help'))
      {
        tag.html("^"+tag.text());
      }

      tag.contents().unwrap();
      this.activeTag = null;

    }

  };

  // DOCUMENT READY ///////////////////////////////////



  function initEditor() {
    //Check for the presence of the wysihtml5 or the tag editor
    var isWysihtml5 = $('#postform, #new_post').length > 0;
    var isTagEditor = $('#tag-editor').length > 0;

    //Create main objects - Disable for IE8
    if(!$('html').is('.ie8') && User.can_see_inline_tagging && isTagEditor)
    {
      return (isWysihtml5 ? new SPICE.DynamicTaggingInlineEditor() : null );
    }
  }

  if( !initEditor() ) {
    jQuery(document).ready(initEditor);
  }

})(jQuery);
/*1.0*/

//


/*global $ document*/

var SPICE = window.SPICE || {};

(function($) {
  // DYNAMIC TAGGING AUTOLIST /////////////////////

  SPICE.DynamicTaggingAutolist = function() {
    // Reference to the tag that is currently being edited
    this.autoList;
    this.previousFocusObj;
    this.research_section;
    this.research_container;
    this.users_section;
    this.users_container;
    this.help_section;
    this.help_container;
    this.sourceObj;
    this.activeTag;
    this.isVisible = false;

    // Initialize the module
    this.initialize();
  }

  SPICE.DynamicTaggingAutolist.prototype = {
    initialize: function() {
      $(document).on('return_focus.dynamic_tagging', $.proxy(function(e) {
        if(this.previousFocusObj) {
          // Return focus to the object that previously had focus
          this.previousFocusObj.focus();

          // If it is the main editor, set the cursor to the end
          var jqueryFocusObj = $(this.previousFocusObj)
          if(jqueryFocusObj.is('.active')) {
            // Remove whitespace
            jqueryFocusObj.html(jqueryFocusObj.html().split('&nbsp;').join(''))

            if(typeof window.getSelection != "undefined" && typeof document.createRange != "undefined") {
              var range = document.createRange();
              range.selectNodeContents(this.previousFocusObj);
              range.collapse(false);
              var sel = window.getSelection();
              sel.removeAllRanges();
              sel.addRange(range);
            } else if(typeof document.body.createTextRange != "undefined") {
              var textRange = document.body.createTextRange();
              textRange.moveToElementText(this.previousFocusObj);
              textRange.collapse(false);
              textRange.select();
            }
          }
        }
      }, this));

      $(document).on('query.dynamic_tagging', $.proxy(function(e, query, sourceObj, activeTag, isExternalProductSelector) {
        if(query) {
          // Store a reference to the activeTag
          this.sourceObj = sourceObj;
          this.activeTag = activeTag;

          // Get the query string
          query = query.split("+").join("");
          query = query.split("^").join("");

          // Get the results for the query
          this.getResults(query, isExternalProductSelector);
        }
      }, this));

      $(document).on('hide-results.dynamic_tagging', $.proxy(function(e, query) {
        // Check the results for the query
        this.hideResults();
      }, this));

      // When you click on one of the selections in the autolist
      $(document).on("click", ".autolist li", $.proxy(function(e) {
        // Prevent the default action
        e.preventDefault();
        e.stopPropagation();

        // Set the target of the click (this handles cases where the sub-elements are clicked)
        var target = $(e.target).closest(".autolist li").length > 0 ? $(e.target).closest(".autolist li") : $(e.target);

        // Get title of tag
        var label = target.find('.title').html()
        if(label.length > 30) {
          var tempLabel = label.substr(0, 30);
          var lastSpaceIndex = tempLabel.lastIndexOf(" ");

          if(lastSpaceIndex != 0) {
            label = tempLabel.substr(0, lastSpaceIndex) + "...";
          } else {
            label = tempLabel + "...";
          }
        }

        var id = target.data('id');
        var type = target.data('type');
        var mode = target.data('mode');

        var dataObj = {}
        switch(type.toUpperCase()) {
          case "USER":
            var isEmployee = target.data('isemployee');
            dataObj = {
              id: id,
              type: type,
              label: label,
              isEmployee: Boolean(isEmployee),
              mode: mode
            }
            break;
          case "PRODUCTSELECTORCONFIG":
            var isFamily = target.data('isfamily');
            dataObj = {
              id: id,
              type: type,
              label: label,
              isFamily: Boolean(isFamily),
              mode: mode
            }
            break;
          default:
            dataObj = {
              id: id,
              type: type,
              label: label,
              mode: mode
            }
            break;
        }

        // Update the selection
        $(document).trigger("update.dynamic_tagging", [dataObj]);
      }, this));

      $(document).on('cursor-up.dynamic_tagging', $.proxy(function(e) {
        if(this.autoList) {
          this.moveCursorUp();
        }
      }, this));

      $(document).on('cursor-down.dynamic_tagging', $.proxy(function(e) {
        if(this.autoList) {
          this.moveCursorDown();
        }
      }, this));

      $(document).on('cursor-left.dynamic_tagging', $.proxy(function(e) {
        if(this.autoList) {
          this.jumpCursorUp();
        }
      }, this));

      $(document).on('cursor-right.dynamic_tagging', $.proxy(function(e) {
        if(this.autoList) {
          this.jumpCursorDown();
        }
      }, this));

      $(document).on('selection.dynamic_tagging', $.proxy(function(e) {
        this.makeSelection(e);
      }, this));

      // When the resize event occurs
      $(window).resize($.proxy(function() {
        // Position the list when the browser screen size changes
        this.positionList();
      }, this));

      // Special keys
      $(document).keydown($.proxy(function(e) {
        // Enter key
        if((e.keyCode || e.which) === 13 && this.sourceObj && this.sourceObj.activeTag) {
          // Don't allow carriage returns
          e.preventDefault();

          if((e.keyCode || e.which) === 13 && !this.sourceObj.activeTag.hasClass('add') && (this.sourceObj.activeTag.html() == "&nbsp;" || this.sourceObj.activeTag.html() == "")) {
            // Don't allow carriage returns
            e.preventDefault();

            // Remove the tag
            this.removeTag();
          } else {
            // Get the selections and loop through them to show the cursor
            if(this.autoList) {
              this.makeSelection(e);
            }
          }
        }

        // Up arrow
        if((e.keyCode || e.which) === 38 && this.isVisible) {
          e.preventDefault();
          e.stopPropagation();
          this.moveCursorUp();
        }

        // Down arrow
        if((e.keyCode || e.which) === 40 && this.isVisible) {
          e.preventDefault();
          e.stopPropagation();
          this.moveCursorDown();
        }
      }, this));
    },

    makeSelection: function(e) {
      if(this.autoList) {
        var selections = this.autoList.find('li');
        if(selections.hasClass('cursor')) {
          // Don't allow carriage returns
          e.preventDefault();

          // Click the selection with the cursor class
          $(selections.filter('.cursor')).click();
        } else {
          // Deselect the tag
          this.undoSelection();
        }
      }
    },

    getResults: function(query, isExternalProductSelector) {
      // Get reference to main object
      var mainObj = this;

      // If it is an empty query, hide the menu
      this.hideResults();

      // Take out artificial spacing
      query = query.split('&nbsp;').join('');
      query = query.split('<br>').join('');
      query = query.split('&amp;').join('&');

      // Cancel the previous request
      if(this.AJAXRequest) {
        this.AJAXRequest.abort();
      }

      // Trim extra whitespace
      query = $.trim(query)
      if(query.length > 1) {
        // Load the search results
        this.AJAXRequest = $.ajax({
          url: '/tagging/subject_autocomplete',
          data: {
            object_type: "Post",
            term: query,
            external: isExternalProductSelector
          },
          success: function(data) {
            mainObj.displayResults(data);
          }
        });
      }
    },

    displayResults: function(data) {
      var mainObj = this;

      // Store the focus so that it can be refocused later
      this.previousFocusObj = document.activeElement;

      // Pull data from JSON
      var research_group = data.research_group
      var research_count = data.research_count
      var users_group = data.users_group
      var users_count = data.users_count
      var help_group = data.help_group
      var help_count = data.help_count

      // Define sections
      this.autoList = $('<div class="autolist"></div>');

      if(this.activeTag) {
        if(this.activeTag.is('.mode-research') || this.activeTag.is('.mode-user')) {
          this.createUsersGroup(users_group, users_count);
          this.createResearchGroup(research_group, research_count);
          if (typeof(help_group) !== 'undefined'){
            this.createHelpGroup(help_group, help_count);
          }
        } else if(this.activeTag.is('.mode-help')) {
          if (typeof(help_group) !== 'undefined'){
            this.createHelpGroup(help_group, help_count);
          }
          this.createResearchGroup(research_group, research_count);
          this.createUsersGroup(users_group, users_count);
        } else {
          this.createResearchGroup(research_group, research_count);
          this.createUsersGroup(users_group, users_count);
          if (typeof(help_group) !== 'undefined'){
            this.createHelpGroup(help_group, help_count);
          }
        }
      }

      // Get rid of the old list
      this.hideResults();

      // Show the list if there is data
      if(research_group.length > 0 || users_group.length > 0 || help_group.length > 0) {
        // Add this to the module
        $('body').append(this.autoList);

        // Set the cursor
        this.resetCursor();

        // Set it as visible
        this.isVisible = true;

        // Position the list
        this.positionList();
      }
    },

    createResearchGroup: function(research_group, research_count) {
      if(research_group.length > 0) {
        this.autoList.append('<div id="research-section-container" class="section-container"><div id="research-section" class="section">Research <span>(' + research_count + ')</span></div><ul id="autolist-research" class="list"></ul></div>');
        var autolistResearch = this.autoList.find('#autolist-research');
        this.research_container = this.autoList.find('#research-section-container').css({
          height: 0
        });
        this.displaySection(research_group, autolistResearch);

        this.research_container.on('click', $.proxy(function(e) {
          if($(e.target).is('.section')) {
            e.preventDefault();
            e.stopPropagation();
          }
          this.jumpToSection('RESEARCH');
        }, this));
      }
    },

    createUsersGroup: function(users_group, users_count) {
      if(users_group.length > 0) {
        this.autoList.append('<div id="users-section-container" class="section-container"><div id="users-section" class="section">People <span>(' + users_count + ')</span></div><ul id="autolist-users" class="list"></ul></div>');
        var autolistUsers = this.autoList.find('#autolist-users');
        this.users_container = this.autoList.find('#users-section-container').css({
          height: 0
        });
        this.displaySection(users_group, autolistUsers);

        this.users_container.on('click', $.proxy(function(e) {
          if($(e.target).is('.section')) {
            e.preventDefault();
            e.stopPropagation();
          }
          this.jumpToSection('USERS');
        }, this));
      }
    },

    createHelpGroup: function(help_group, help_count) {
      if(help_group.length > 0) {
        this.autoList.append('<div id="help-section-container" class="section-container"><div id="help-section" class="section">Help <span>(' + help_count + ')</span></div><ul id="autolist-help" class="list"></ul></div>');
        var autolistHelp = this.autoList.find('#autolist-help');
        this.help_container = this.autoList.find('#help-section-container').css({
          height: 0
        });
        this.displaySection(help_group, autolistHelp);

        this.help_container.on('click', $.proxy(function(e) {
          if($(e.target).is('.section')) {
            e.preventDefault();
            e.stopPropagation();
          }
          this.jumpToSection('HELP');
        }, this));
      }
    },

    displaySection: function(sectionArray, sectionContainer) {
      var listArray = sectionArray;
      var container = $(sectionContainer);

      for(var i = 0; i < listArray.length; i++) {
        var id = listArray[i].id;
        var icon = listArray[i].thumbnail_url ? listArray[i].thumbnail_url : '//static.spiceworks.com/assets/community/product/no_image.png';
        var name = listArray[i].label;
        var image = '<span class="image-wrapper"><img src="' + icon + '" alt="' + _.escape(name) + '" /></span>';
        var type = listArray[i].type;

        var label = listArray[i].type;
        switch(listArray[i].type) {
          case "ProductSelectorConfig":
            label = listArray[i].is_family ? 'Product Family' : 'Product Selector';
            break;
          case "MspProfile":
            label = 'MSP';
            break;
          case "HelpCategoryNode":
            label = 'Help Document';
            break;
          case "VendorPage":
            label = "Vendor";
            break;
          case "HowToArticle":
            label = "HowTo Article";
            break;
          case "ResearchGuide":
            label = 'Research Guide';
            break;
          case "Plugin":
            label = 'Plugin';
            break;
          case "LanguagePack":
            label = 'Language Pack';
            break;
          case "SharedReport":
            label = 'Report';
            break;
          case "Extension":
            label = 'Platform App';
            break;
          case "ExtensionCenterFeature":
            label = 'Feature';
            break;
          case "User":
            if(listArray[i].is_employee) {
              label = 'Employee';
            }
            break;
        }

        var mode = "RESEARCH";
        if(container.is('#autolist-research')) {
          mode = "RESEARCH";
        } else if(container.is('#autolist-users')) {
          mode = "USERS";
        } else if(container.is('#autolist-help')) {
          mode = "HELP";
        }

        var isFamily = listArray[i].is_family ? true : "";
        var isEmployee = listArray[i].is_employee ? true : "";
        var url = listArray[i].link;
        var selection = '<li data-id="' + id + '" data-type="' + type + '" data-mode="' + mode + '" data-isfamily="' + isFamily + '" data-isemployee="' + isEmployee + '" ><a href="' + url + '">' + image + '<span class="info"><span class="title">' + _.escape(name) + '</span><span class="type">' + label + '</span></span></a></li>';
        
        container.append(selection);
      }
    },

    hideResults: function() {
      // Cancel the previous request
      if(this.AJAXRequest) {
        this.AJAXRequest.abort();
      }

      // If the autolist is visible
      if(this.autoList) {
        $('body').find('.autolist').remove();
        this.isVisible = false;
      }
    },

    moveCursorDown: function() {
      this.cursorIndex++;
      var numSelections = this.autoList.find('li').length - 1
      numSelections < this.cursorIndex ? this.cursorIndex = 0 : null;
      this.displayCursor();
    },

    moveCursorUp: function() {
      this.cursorIndex--;
      var numSelections = this.autoList.find('li').length - 1
      this.cursorIndex < 0 ? this.cursorIndex = numSelections : null;
      this.displayCursor();
    },

    checkActiveSection: function(e) {
      var containers = this.autoList.find('.section-container');
      var cursor = this.autoList.find('.cursor');
      var container = cursor.closest('.section-container');
      var sectionHeight = $(container).find('.section').height() + 6; // Additional pixel for border bottom and padding
      var contentHeight = $(container).find('ul').height();

      $(containers).stop().animate({
        height: sectionHeight
      }, 250);
      $(container).stop().animate({
        height: contentHeight + sectionHeight
      }, 250);
    },

    jumpToSection: function(section) {
      var container;
      switch(section.toUpperCase()) {
        case "RESEARCH":
          container = this.research_container;
          break;
        case "USERS":
          container = this.users_container;
          break;
        case "HELP":
          container = this.help_container;
          break;
      }

      if(container) {
        var containers = this.autoList.find('.section-containers');
        var sectionHeight = $(container).find('.section').height() + 6; // Additional pixel for border bottom and padding
        var contentHeight = $(container).find('ul').height();

        this.cursorIndex = this.autoList.find('li').index(container.find('li').first());
        this.displayCursor();

        $(containers).stop().animate({
          height: sectionHeight
        }, 250);
        $(container).stop().animate({
          height: contentHeight + sectionHeight
        }, 250);
      }
    },

    jumpCursorDown: function() {
      var containers = this.autoList.find('.section-container');
      var cursor = this.autoList.find('.cursor');
      var container = cursor.closest('.section-container');
      var targetContainer = $(container).next('.section-container');

      if(targetContainer.length == 1) {
        this.cursorIndex = this.autoList.find('li').index(targetContainer.find('li').first());
      } else {
        this.cursorIndex = this.autoList.find('li').index($(containers).first().find('li').first());
      }

      this.displayCursor();
    },

    jumpCursorUp: function() {
      var containers = this.autoList.find('.section-container');
      var cursor = this.autoList.find('.cursor');
      var container = cursor.closest('.section-container');
      var targetContainer = $(container).prev('.section-container');

      if(targetContainer.length == 1) {
        this.cursorIndex = this.autoList.find('li').index(targetContainer.find('li').last());
      } else {
        this.cursorIndex = this.autoList.find('li').index($(containers).last().find('li').last());
      }

      this.displayCursor();
    },

    displayCursor: function() {
      // Get a reference to the main object
      var mainObj = this;

      // Get the selections and loop through them to show the cursor
      var selections = this.autoList.find('li');
      selections.removeClass('cursor');
      selections.each(function(index, value) {

        if(index == mainObj.cursorIndex) {
          $(selections[index]).addClass('cursor');
        }

      });

      this.checkActiveSection();
    },

    resetCursor: function() {
      this.cursorIndex = 0;
      this.displayCursor();
    },

    positionList: function() {
      if(this.autoList && this.sourceObj.activeTag) {
        // Get the current target position, if it is an inline tag, position based on the iframe
        if(this.sourceObj.activeTag.is('.inline-tag')) {
          var textareaScroll = this.sourceObj.iframeDoc.scroll().scrollTop();

          var xPos = parseInt(this.sourceObj.iframe.offset().left + this.sourceObj.activeTag.offset().left) + 2; // Magic offset to position the dynamic list
          var yPos = parseInt(this.sourceObj.iframe.offset().top + this.sourceObj.activeTag.offset().top - textareaScroll) + 24; // Magic offset to position the dynamic list
        } else {
          var xPos = parseInt(this.sourceObj.activeTag.offset().left); // Magic offset to position the dynamic list
          var yPos = parseInt(this.sourceObj.activeTag.offset().top) + 20; // Magic offset to position the dynamic list
        }

        // Position the new autolist
        this.autoList.css({
          top: yPos,
          left: xPos
        });
      }
    }
  };

  // DOCUMENT READY ///////////////////////////////////

  jQuery(document).ready(function() {
    // Check for the presence of the wysihtml5 or the tag editor
    var isWysihtml5 = $('#postform, #new_post').length > 0;
    var isTagEditor = $('#tag-editor').length > 0;

    isWysihtml5 || isTagEditor ? new SPICE.DynamicTaggingAutolist() : null;
  });
})(jQuery);
/*1.0*/
window.SUI = window.SUI || {};

(function($) {
  var Helpers = {
    icon: function(icon, options) {
      var availableColors = ["gray", "white", "blue"];
      var availableIcons = ["alert-bell", "all-selected", "bookmark", "calculator", "calendar", "cart", "certificate", "check", "clock", "close-circular", "close", "compare", "copy", "down-chevron", "down", "download", "drag", "edit", "email", "exclamation-triangle", "exclamation", "eye-closed", "file", "flag", "gear", "globe", "group", "hourglass", "info", "laptop", "left-chevron", "left", "location", "lock", "message", "minus", "next-circular", "no-selection", "paperclip", "partial-selection", "plus", "previous-circular", "printer", "question", "refresh", "reply-bubble", "reply", "right-chevron", "right", "scan", "screwdriver", "search", "server", "share", "stats", "trash", "up-chevron", "up", "user-portal", "viewcolumns", "viewicons", "viewlist", "viewtiles", "visible", "event-badge", "event-best-answer", "event-follow", "event-helpful-post", "event-message", "event-reply", "event-tag", "alert-error", "alert-info", "alert-neutral", "alert-success", "alert-warning", "error-circular", "error", "event-spice", "info-circular", "pepper", "ribbon", "star-empty", "star-filled", "star-half", "success-circular", "success", "topic-flag", "warning-filled"];
      var availableSizes = [16, 24, 32];
      _.defaults(options || (options = {}), {
        color: _.first(availableColors),
        size: 16,
        html: false
      });
      if(_(availableColors).include(options.color) && _(availableIcons).include(icon)) {
        var $icon = $("<i></i>").addClass('sui-icon sui-icon-' + icon + ' sui-icon--' + options.color + ' sui-icon--' + options.size);
        return options.html ? $icon.wrap("<p>").parent().html() : $icon;
      } else { throw "ArgumentError"; }
    },
    rating: function(rating, options) {
      _.defaults(options || (options = {}), {
        max: 5,
        html: false,
        title: undefined,
        totalRatings: undefined
      });
      if(rating < 0) { rating = 0; }
      if(rating > options.max) { rating = options.max; }
      var full = Math.floor(rating),
        decimal = rating - full,
        empty = options.max - full - 1,
        stars = $("<span></span>").addClass("stars"),
        suiRating = $("<span></span>").addClass("sui-rating").append(stars);

      _(full).times(function() {
        stars.append(SUI.icon("star-filled"));
      });
      if(full < options.max) {
        if(decimal >= 0 && decimal < 0.25) { stars.append(SUI.icon("star-empty")); }
        else if(decimal >= 0.25 && decimal < 0.75) { stars.append(SUI.icon("star-half")); }
        else { stars.append(SUI.icon("star-filled")); }
        _(empty).times(function() {
          stars.append(SUI.icon("star-empty"));
        });
      }

      if(typeof options.totalRatings !== 'undefined') {
        $("<span></span>")
          .addClass("total-ratings")
          .text("(" + options.totalRatings + ")")
          .appendTo(suiRating);
      }

      if(typeof options.title !== 'undefined') {
        suiRating.attr("title", options.title);
      }

      return options.html ? suiRating.wrap("<p>").parent().html() : suiRating;
    }
  };

  _.extend(SUI, Helpers);
})(jQuery);
/*1.0*/
////////////////////////////////////////////////////////////////////////////
// From discussions-performant-vendor.js
////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////
// From 'require from_toolkit/_bundle'
///////////////////////////////////////




            // - autocomplete used by tag_editor. Maybe other uses












/////////////////////////////////////
// From 'require extensions/_bundle'
/////////////////////////////////////




/////////////////////////////////////
// From 'vendor_and_extensions'
/////////////////////////////////////
// Toolkit 3.0




//////////////  sui-plugins  ////////////////////////





////////////  end sui-plugins ///////////////////////


////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////





/////////////////////////////////
// From application.js
/////////////////////////////////





/////////////////////////////////
// From application-jquery.js
/////////////////////////////////










/////////////////////////////////
// Moar from application.js
/////////////////////////////////



            // - used by community_message partial

















            // Used (rating) by product tag popover















            // used for daily challenge in topic footer









(function($) {

  Discussions = $UI.app.module("Discussions", {
    startWithParent: true,
    define: function(Discussions, App, Backbone, Marionette, $, _) {
      this.vent = new Backbone.Wreqr.EventAggregator();
    }
  });

  $.extend(Discussions, { Models: {}, Collections: {}, Views: {}, Routers: {} });

  Discussions.dataElementSelector = '[data-config="topicData"]';

  Discussions.loadData = function() {
    this.topicModel = new Discussions.Models.Topic( jQuery.parseJSON( $(Discussions.dataElementSelector).text() ) );
    this.userModel = new Discussions.Models.User(User);
  };

  Discussions.Controller = Backbone.Marionette.Controller.extend({
    showTopic: function() {
      var suiBody = '.sui-body';

      Discussions.loadData();

      this.topicRegion = new Marionette.Region({ el: suiBody });
      this.topicRegion.attachView( new Discussions.Views.Topic({ el: $(suiBody),
                                                                 topicModel: Discussions.topicModel,
                                                                 userModel: Discussions.userModel }) );

      if( Discussions.userModel.hasAnyAdminPermissions() ) {
        $.getScript( '//static.spiceworks.com/assets/discussions-admin-b3e4cd9c22a606bdcdd4057ac0366c33903bb9bd5aef8a286ced43d0de753dff.js' )
        .fail( function(xhr, errorType, error) {
          console.error( 'Error loading `discussions-admin`:\n', error );
        });
      }

      if(!$UI.useMobile) {
        // Set the height on the header bounding box so the page doesn't jump when the header sticks
        var header = $(suiBody).find('header');
        var height = header.outerHeight() + parseInt( header.css('margin-bottom') );
        $(suiBody).find('.js-topic-header-wrapper').css({ height: height });
        // Affix the topic header when you scroll down
        var margin = parseInt(header.css('margin-bottom').replace('px', '')) || 0;
        var padding = parseInt(header.css('padding-bottom').replace('px', '')) || 0;
        header.affix({
          offset: {
            top: function () {
              var top = $('#content').offset().top - (margin + padding);
              return top;
            }
          }
        });
      }

      LinkHelpers.removeNoreferrerFromChromeAndFF();
      $(document).ready(function() {
        dynamicAdsBehavior.init();
      });
    }
  });


  //------------------------------------------------------------
  // Research Guide Paths
  //------------------------------------------------------------
  Discussions.tagsCollapse = function(maxTagsDefault, post) {
    var numTags = post.find('.tags > li').length;
    post.find('.tag-viewport').removeClass('truncated');
    if( numTags > maxTagsDefault ) {
      var originalHeight = jQuery(post.find('.tag-viewport')).height();
      Discussions.ShowLessTags(originalHeight, numTags, post);
    }
  };

  Discussions.ShowAllTags = function(originalHeight, numTags, post) {
    jQuery(post.find('.tag-viewport')).animate({height: originalHeight}, "fast");
    post.find('.tag-viewport').removeClass('truncated');
    var tagHideLink = jQuery('<a href="#">Show less tags</a>');
    post.find('.js-tag-reveal-link').html( tagHideLink );
    tagHideLink.on('click', function(event) {
      event.preventDefault();
      jQuery(post.find('.tag-viewport')).animate({height:'130px'}, "fast");
      Discussions.ShowLessTags(originalHeight, numTags, post);
    });
  };

  Discussions.ShowLessTags = function(originalHeight, numTags, post) {
    post.find('.tag-viewport').addClass('truncated');
    var tagRevealLink = jQuery('<a href="#">Show all ' + numTags + ' tags</a>');
    post.find('.js-tag-reveal-link').html( tagRevealLink );
    tagRevealLink.on('click', function(event) {
      event.preventDefault();
      Discussions.ShowAllTags(originalHeight, numTags, post);
    });
  };

  Discussions.initEditPmForm = function() {
    jQuery(".post_edit_notice #reason_template").change(function(event) {
      $(".post_edit_notice .pm-message-form textarea").val($(event.target).val());
    });
    jQuery(".post_edit_notice #skip_pm").change(function(event) {
      if($(event.target).is(":checked")) {
        $(".post_edit_notice .pm-message-form").slideUp(300);
      }
      else {
        $(".post_edit_notice .pm-message-form").slideDown(300);
      }
    });
  };

  function togglePostDeletionDetails(event) {
    var target = $(event.target)
    if(target.is(".sui-icon-down")) {
      target.closest(".post-deletion-reason").find(".reason-details").slideDown(300);
      target.prop("title", "Hide");
    }
    else {
      target.closest(".post-deletion-reason").find(".reason-details").slideUp(300);
      target.prop("title", "Show");
    }
    target.toggleClass("sui-icon-up").toggleClass("sui-icon-down");
  }

  var listenForMarketplaceEvents;
  (function() {
    function trackMarketplaceEvent(variation, activity, nonInteraction) {
      GoogleAnalytics.trackEvent('Topics - Marketplace Integration', 'Topic Page Engagement', variation + ' - ' + activity, null, nonInteraction);
    }

    function handleTopBannerEvents(marketplaceInfo) {
      var element = $('.topic-marketplace-top-banner');
      trackMarketplaceEvent('Top Banner: ' + marketplaceInfo.button_text, 'Shown for ' + marketplaceInfo.topic_project_type, true);
      element.on('click', function() {
        trackMarketplaceEvent('Top Banner: ' + marketplaceInfo.button_text, 'Clicked for ' + marketplaceInfo.topic_project_type, null);
      });

      jQuery('.topic-marketplace-top-banner_close').on('click', function(evt) {
        evt.preventDefault();
        evt.stopPropagation();
        jQuery.ajax('/user/dismiss_topic_marketplace_banner', {
          type: 'POST'
        });
        element.remove();
      });
    }

    function handleInlineBannerEvents(marketplaceInfo) {
      var element = $('.topic-marketplace-inline-banner');
      trackMarketplaceEvent('Inline Banner: ' + marketplaceInfo.button_text, 'Shown for ' + marketplaceInfo.topic_project_type, true);
      element.on('click', function() {
        trackMarketplaceEvent('Inline Banner: ' + marketplaceInfo.button_text, 'Clicked for ' + marketplaceInfo.topic_project_type, null);
      });
    }

    listenForMarketplaceEvents = function() {
      var marketplaceData = jQuery('#marketplaceInfo').text().trim(),
          marketplaceInfo = marketplaceData !== '' ? JSON.parse(marketplaceData) : {};

      if (marketplaceInfo && marketplaceInfo.banner_type) {
        if (marketplaceInfo.banner_type === 'top_banner') {
          handleTopBannerEvents(marketplaceInfo);
        } else if (marketplaceInfo.banner_type === 'inline_banner') {
          handleInlineBannerEvents(marketplaceInfo);
        }
      }
    }
  })();

  $(function($) {
    /*
     * Overflow hack for syntax highlighting to get rid of scrollbars...
     */
    $('.highlight pre').each(function() {
      var el = $(this);
      if(el.isOverflown()) {
        el.css('overflow-x', 'scroll');
      }
    });

    $(document).on("click", ".post-deletion-reason .js-show-hide", togglePostDeletionDetails);

    listenForMarketplaceEvents();

    Discussions.initEditPmForm();

    if( $(Discussions.dataElementSelector).length ) {
      (new Discussions.Controller()).showTopic();
    }
  });

  function showAttachmentErrors() {
    var errors = $('[data-errors="post_attachment"]');

    if( errors.length ) {
      errors = errors.text();
      wysi_editor = $('#post_text').data('wysihtml5');

      // There was a validation error with the attachment, show error in editor
      wysi_editor.showError(errors);
      TopicReply.showForm();
      setTimeout(function () {
        wysi_editor.hideError();
      }, 5000);
    }
  }

  $(document).on('editor_ready.wysihtml5', showAttachmentErrors);

  // Dynamic layout - set min height of topic body to match floated featured image or sponsored block
  if($('#dynamic-layout-image-header').length) {
    $(".root-post").css("min-height", function(){
      return $('.topic-image-header').outerHeight(true);
    });
  }

  $(document).ready(function() {
    if($UI.useMobile) {
      MobileCollapse.init($(".root-post_post-content"), 600);
    }
  });

})(jQuery);
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["discussions/templates/discover_questions"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div class="discover-questions">\n  <div class="discover-questions-content">\n    <div class="end-of-all-container"></div>\n    <span class="live-text">Your reply is now live.</span>\n    <span class="answer-text">Answer more questions and earn points!</span>\n    <a href="/unanswered" class="sui-bttn">Check it out</a>\n  </div>\n</div>\n');}return __p.join('');};
}).call(this);
/*1.0*/

$UI.app.module("Discussions", function(Discussions, App, Backbone, Marionette, $, _){

  Discussions.Views.DiscoverQuestions = Backbone.Marionette.ItemView.extend({
    className: 'discover-questions-card',
    template: JST['discussions/templates/discover_questions'],
  });
});
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["discussions/templates/invite-friend-modal"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<button class="sui-modal_close sui-icon sui-icon-close-circular sui-icon--24 sui-icon--blue" data-dismiss="modal"></button>\n<div class="sui-modal_header">Invite a friend to join the conversation</div>\n<div class="sui-modal_body">\n  ');  if( invitationSent ) { ; __p.push('\n    <p>\n      We have sent an invitation to ',(''+ recipient ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'. As soon as your friend registers, you will receive points. Thanks for spreading the spice.\n    </p>\n\n    <p class="light-links">\n      Learn more ways to <a href="',  Discussions.spread_spiceworks_path() ,'">Spread Spiceworks</a> or <a href="javascript:void(0);" data-action="send-new-invitation">invite more friends</a>.\n    </p>\n\n    <div class="sui-modal_footer">\n      <a class="sui-bttn--cancel sui-bttn " data-dismiss="modal" href="#">Close</a>\n    </div>\n  ');  } else { ; __p.push('\n    <form accept-charset="UTF-8" action="',  Discussions.invite_friend_path() ,'" method="post" class="sui-form">\n      <div style="display:none"><input name="utf8" type="hidden" value="✓" class="hidden"></div>\n\n      <p>Think your friend could add to this conversation? Invite them to join by filling out this form. As a bonus, you will get referral points.</p>\n\n      <hr />\n\n      <input id="user_invitation_shared_item_type" name="user_invitation[shared_item_type]" type="hidden" value="Topic" class="hidden">\n      <input id="user_invitation_shared_item_id" name="user_invitation[shared_item_id]" type="hidden" value="',(''+ id ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'" class="hidden">\n\n      <div class="sui-alert sui-alert--error sui-alert--hidden-unless-active generic-error">\n        <div class="sui-alert_body"></div>\n      </div>\n\n      <div class="sui-control-group">\n        <label class="sui-label sui-control-group_label" for="user_invitation_email">Email</label>\n        <div class="sui-control-group_controls sui-input-validity">\n          <input class="sui-text-field" id="user_invitation_email" name="user_invitation[email]" type="text">\n        </div>\n      </div>\n\n      <div class="sui-control-group">\n        <label class="sui-label sui-control-group_label" for="user_invitation_first_name">First name</label>\n        <div class="sui-control-group_controls sui-input-validity">\n          <input class="sui-text-field" id="user_invitation_first_name" name="user_invitation[first_name]" type="text">\n        </div>\n      </div>\n\n      <div class="sui-control-group">\n        <label class="sui-label sui-control-group_label" for="user_invitation_last_name">Last name</label>\n        <div class="sui-control-group_controls sui-input-validity">\n          <input class="sui-text-field" id="user_invitation_last_name" name="user_invitation[last_name]" type="text">\n        </div>\n      </div>\n\n      <div class="sui-control-group">\n        <label class="sui-label sui-control-group_label" for="user_invitation_note">Note</label>\n        <div class="sui-control-group_controls sui-input-validity">\n          <textarea class="sui-text-area" id="user_invitation_note" name="user_invitation[note]"></textarea>\n        </div>\n      </div>\n\n      <div class="sui-modal_footer">\n        <button class="sui-bttn--primary sui-bttn " data-primary="true" id="invite_user_submit" type="submit" data-loading-text="Submit">Submit</button>\n        <a class="sui-bttn--cancel sui-bttn " data-dismiss="modal" href="#">Cancel</a>\n      </div>\n    </form>\n  ');  } ; __p.push('\n</div>\n');}return __p.join('');};
}).call(this);
/*1.0*/

$UI.app.module("Discussions", function(Discussions, App, Backbone, Marionette, $, _){
  Discussions.Views.InviteFriendModal = Backbone.Marionette.ItemView.extend({

    className: 'sui-modal_content sui-modal_content--overflow',

    attributes: {
      'data-modal-el': 'content',
      role: 'dialog'
    },

    template: JST['discussions/templates/invite-friend-modal'],

    events: {
      'click [data-action="send-new-invitation"]': 'sendNewInvitation',
      'click [data-dismiss="modal"]': 'closeModal'
    },

    modalCommand: function(command) {
      this.$el.parents('[data-modal-el="overlay"]').sui_modal(command);
    },

    onRender: function() {
      this.modalCommand('position');
      this.$el.find('form').json_form({ showCannedFieldErrorMessage: false })
      .on('ajax:success', $.proxy( this.invitationSuccess, this ) )
      .on('ajaxSend', $.proxy( this.setInProgress, this ) )
      .on('ajaxComplete', $.proxy( this.clearInProgress, this ) );
    },

    closeModal: function(event) {
      event.preventDefault();
      this.modalCommand('hide');
    },

    invitationSuccess: function() {
      this.first_name = this.$el.find('form [name="user_invitation[first_name]"]').val();
      this.email = this.$el.find('form [name="user_invitation[email]"]').val();
      this.invitationSent = true;
      this.render();

      GoogleAnalytics.trackEvent('UserInvitation', 'Invitation Sent');
    },

    sendNewInvitation: function() {
      this.invitationSent = false;
      this.render();
    },

    setInProgress: function() {
      this.$el.find('[data-primary="true"]').button('loading','Submit');
    },
    
    clearInProgress: function() {
      this.$el.find('[data-primary="true"]').button('reset');
    },

    templateHelpers: function() {
      return {
        invitationSent: this.invitationSent,
        recipient: this.first_name || this.email
      };
    }

  });

  Discussions.Views.InviteFriendModal.showModal = function(params) {
    this.modal = $('<div data-modal-el="overlay" class="sui-modal_overlay sui-u-fadeable is-hidden manage-forums-modal"></div>');
     $('body').append(this.modal);

     this.modalContents = new Discussions.Views.InviteFriendModal(params);
     this.modalContents.render();
     this.modal.append( this.modalContents.$el );
     this.modal.sui_modal({ destroyOnHide: true });
  };

});
/*1.0*/
var Contest = {
  countries: function(contest_id){
    jQuery("#contest_country_ids").select2({
      multiple: true,
      minimumInputLength: 1,
      allowClear: true,
      query: function(query) {
        jQuery.ajax({
          delay: 250,
          url: "/contests/countries",
          data: { q: query.term },
          type: 'GET',
        }).done(function(data){
          var results = _.map(data, function(i) {
            return {
              id: i.id,
              text: i.text
            };
          });
          query.callback({ results: results });
        });
      },
      initSelection: function(element,callback) {
        if(contest_id){
          jQuery.get("/contests/" + contest_id + "/selected_countries")
          .done(function(data){
            callback(data);
          });
          if( jQuery('#contest_world_wide').is(':checked') ) {
            jQuery("#contest_country_ids").select2('disable');
          }
        }
      },
    }).select2('val', []);;

    jQuery('#contest_world_wide').change(function() {
      if( jQuery(this).is(':checked') ) {
        jQuery("#contest_country_ids").select2('disable');
      } else {
        jQuery("#contest_country_ids").select2('enable');
      }
    });
  },
  groups: function(contest_id){
    jQuery('#contest_tagged_group').select2({
      minimumInputLength: 1,
      query: function(query) {
        jQuery.ajax({
          url: '/contests/group_autocomplete',
          data: { q: query.term },
          type: 'GET',
          success: function(data) {
            var results = _.map(data, function(i) {
              return {
                id: i.id,
                name: _.escape(i.name)
              };
            });
            query.callback({ results: results });
          }
        });
      },
      initSelection: function(element, callback) {
        if(contest_id){
          jQuery.get("/contests/" + contest_id + "/selected_group")
          .done(function(data){
            callback(data);
          });
        }
      },
      formatResult: function(group) {
        return group.name;
      },
      formatSelection: function(group) {
        return group.name;
      }
    }).select2('val', []);;
  },
  vendor_pages: function(contest_id){
    jQuery('#contest_vendor_page').select2({
      minimumInputLength: 1,
      query: function(query) {
        jQuery.ajax({
          url: '/contests/vendor_page_autocomplete',
          data: { q: query.term },
          type: 'GET',
          success: function(data) {
            var results = _.map(data, function(i) {
              return {
                id: i.id,
                name: _.escape(i.display_name)
              };
            });
            query.callback({ results: results });
          }
        });
      },
      initSelection: function(element, callback) {
        if(contest_id){
          jQuery.get("/contests/" + contest_id + "/selected_vendor_page")
          .done(function(data){
            callback(data);
          });
        }
      },
      formatResult: function(page) {
        return page.name;
      },
      formatSelection: function(page) {
        return page.name;
      }
    }).select2('val', []);;
  },
  resetContestForm: function(contest_id) {
    Contest.countries(contest_id);
    Contest.groups(contest_id);
    Contest.vendor_pages(contest_id);
  },
  setupTopicType: function() {
    var $contestForm = jQuery("[data-target='contest-form']");
    var $hasContest = $contestForm.find("input[name='has_contest']");
    jQuery("[data-field='topic-type']").change(function() {
      if(jQuery(this).val() === "contest") {
        $contestForm.slideDown();
        $hasContest.val(true);
        if(typeof contestConfig !== "undefined" && contestConfig) {
          var contestId = contestConfig.contest_id;
        }
        else {
          var contestId = null;
        }
        Contest.resetContestForm(contestId);
      }
      else {
        $contestForm.slideUp();
        $hasContest.val(false);
      }
    });
  }
}

var contestConfig = jQuery('script[data-init="contestForm"]');
if(contestConfig.length) {
  var contestConfig = JSON.parse(contestConfig.text());
  jQuery(document).ready(function(){
    Contest.resetContestForm(contestConfig.contest_id);
    Contest.setupTopicType();
  });
}
;
/*1.0*/

$UI.app.module("Discussions", function(Discussions, App, Backbone, Marionette, $, _){

  Discussions.Views.Post = Backbone.Marionette.Layout.extend({
    regions: {
      controls: '.js-post-controls',
      discoverQuestions: '.discover-questions-wrapper'
    },
    events: {
      'click .expand-mute': 'expandMuteGroup'
    },

    expand: function(post) {
      if (post.is('.muted')) {
        post.find('.post-content-wrapper').hide();
        post.removeClass('muted');
        post.find('.post-content-wrapper').fadeIn(400);
      }
    },

    collapse: function(post, hide) {
      if (!post.is('.muted')) {
        hide ?
          post.addClass('muted') :
          post.find('.post-content-wrapper').fadeOut(400, function() { post.addClass('muted'); });
      }
    },

    expandMuteGroup: function() {
      var post = this.$el;
      var subsequentMuted = post.nextUntil('.post:not(.muted):not(.hidden)');

      // Hide the content before removing the class in order to make animations work
      this.expand(post);

      // Fade in subsequent
      var self = this;
      _.each(subsequentMuted, function(subsequent) { self.expand($(subsequent)); });
    },

    //------------------------------------------------------------
    // Post actions if muted by admin
    //------------------------------------------------------------
    mute: function() {
      var post = this.$el;

      // Update controls
      this.controlsView.model.set('muted_by_admin', true);
      this.controlsView.render();

      this.collapse(post);
      post.find('.extra-post-marker-wrapper').prepend('<div class="extra-post-marker post-muted-marker" title="Post has been hidden by moderation">Post Hidden by Moderator</div>');
    },

    unmute: function() {
      var post = this.$el;

      // Update controls
      this.controlsView.model.set('muted_by_admin', false);
      this.controlsView.render();

      post.find('.post-muted-marker').remove();
      this.expand(post);
    },

    //------------------------------------------------------------
    // Post actions if author is muted by user
    //------------------------------------------------------------
    authorMute: function(options) {
      var post = this.$el;

      options && options.hide ? this.collapse(post, options.hide) : this.collapse(post);
      post.find('.extra-post-marker-wrapper').prepend('<div class="extra-post-marker user-muted-marker" title="You have muted this user">User Muted</div>');
    },

    authorUnmute: function() {
      var post = this.$el;

      post.find('.user-muted-marker').remove();
      this.expand(post);
    },

    hideQuotes: function() {
      var post = this.$el;

      // Are there any embedded quotes?
      // These will be hidden by css in discussions.scss, but we need to add the option to expand them
      if(post.find('blockquote blockquote').length) {
        // Find every instance of an embedded quote, get the root quote, and iterate
        post.find('blockquote>blockquote').parent().each(function(idx, element) {
          // This is for the case of triple embedded blockquote > blockquote > blockquote - you need to skip over the blockquote on the second layer
          if($(element).parent('blockquote').length) {
            return true;
          }

          // TODO: Remove the clearfix div after it, but ui-toolkit SASS mixin doesn't work in this instance yet
          $('<div class="expand-quotes">+ expand</div><div class="sui-clearfix"></div>').appendTo($(element));

          post.find('.expand-quotes').click(function(event) {
            var el = $(event.target);
            el.parent().find('blockquote').slideDown();
            el.hide();
          });
        });
      }
    },

    lightboxImages: function () {
      var post = this.$el;

      _.map(post.find('.post-body img[data-id]'), function(el) {
        $el = $(el);
        if(!$UI.useMobile) {
          $el.wrap('<div><a href="' + $el.attr('src') + '" rel="lightbox" class="topic-img-lightbox"></a></div>');
        }
        else {
          $el.wrap('<div><a href="' + $el.attr('src') + '"></a></div>');
        }
      });
    },

    initialize: function(params) {
      this.topicModel = params.topicModel;
      this.userModel = params.userModel;
      this.model.set('original_poster', this.model.get('user_id') === this.topicModel.get('author_id'));

      if(this.model.get('original_poster')) {
        this.$el.find('.avatar').addClass('is-OP');
      }

      this.controlsView = new Discussions.Views.PostControls({
        model: this.model,
        topicModel: this.topicModel,
        userModel: this.userModel
      });
      this.controls.show(this.controlsView);

      if(parseInt(this.model.id) === parseInt(Cookie.get('post_created_id'))) {
        Cookie.set('post_created_id', '', { expires: new Date(new Date().getTime() + 1000), path: '/' });
        this.discoverQuestionsView = new Discussions.Views.DiscoverQuestions({});
        this.discoverQuestions.show(this.discoverQuestionsView);
      }

      Discussions.tagsCollapse( 4, $(this.el) );

      this.$el = $(this.el);
      this.$el.addClass( this.model.get('user_id') == User.id ? 'my-post' : 'their-post');
      this.hideQuotes();
      this.lightboxImages();

      if( $UI.useMobile ) {
        var $popupLink = $(this.el).find('[data-popup-url]'),
          left = $popupLink.offset().left,
          afterStyle = $('<style></style>');

        $popupLink.on('sui-pjax-popover:shown', function(e, tip) {
          var $tip = $(tip),
            tipSelector = '.' + $tip.attr('class').trim().split(' ').join('.'),
            offset = left + 50;
          afterStyle.remove();
          $tip.css({width: '100%'}).offset({left: 0}).find('.card_popup').css('width', '100%');
          // since the bubble caret is in :after and :before pseudo element, we can't change the styles
          // directly from javascript. This puts a style tag with the correct left offset into the 
          // head element.
          afterStyle.text([
            tipSelector, ':after { left: ', offset, 'px;}\n',
            tipSelector, ':before { left: ', offset, 'px;}\n'
          ].join(''));
          afterStyle.appendTo('head');
        });
      }
      
    }
  });

});
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["discussions/templates/post_controls"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<ul class="controls">\n\n  ');  if( canSpice ) { ; __p.push('\n    <li>\n      <div class="sui-spicebttn-wrap">\n        <a href="javascript:void(0);" class="sui-spicebttn sui-spicelink" data-dir="true">\n          <span class="sui-spicelink-text"><!-- placeholder --></span>\n        </a>\n      </div>\n    </li>\n  ');  } ; __p.push('\n\n  <li>\n    <a href="#" on-click="reply_post">Reply</a>\n  </li>\n\n  <li>\n    <div class="sui-dropdown is-closed">\n      <a href="#" class="sui-dropdown_trigger" data-toggle="sui_dropdown" onclick="return false;">Manage <span class="sui-caret"></span></a>\n      <div class="sui-dropdown_content-caret"></div>\n      <ul class="sui-dropdown_content is-hidden">\n        ');  if( canEdit ) { ; __p.push('\n          <li class="sui-dropdown_entry"><a href="#" on-click="edit_post">Edit</a></li>\n        ');  } ; __p.push('\n        ');  if( canMutePost && !isDeleted ) { ; __p.push('\n          ');  if( isMuted ) { ; __p.push('\n            <li class="sui-dropdown_entry"><a href="#" on-click="unmute_post">Unhide</a></li>\n          ');  } else { ; __p.push('\n            <li class="sui-dropdown_entry"><a href="#" on-click="mute_post">Hide</a></li>\n          ');  } ; __p.push('\n        ');  } ; __p.push('\n\n        ');  if( isDeleted && canUndelete ) { ; __p.push('\n          <li class="sui-dropdown_entry"><a href="#" on-click="undelete_post">Undelete</a></li>\n        ');  } else if( !isDeleted && canDelete ) { ; __p.push('\n          <li class="sui-dropdown_entry"><a href="#" on-click="delete_post">Delete</a></li>\n        ');  } ; __p.push('\n\n        ');  if( needsModeration && canApprove ) { ; __p.push('\n          <li class="sui-dropdown_entry"><a href="#" on-click="approve_post">Approve</a></li>\n        ');  } ; __p.push('\n\n        ');  if( canMarkAnswer ) { ; __p.push('\n\n          ');  if( is_answer ) { ; __p.push('\n            <li class="sui-dropdown_entry"><a href="#" on-click="unmark_best_answer_post">Unmark Best Answer</a></li>\n          ');  } else if( is_helpful_post ) { ; __p.push('\n            <li class="sui-dropdown_entry"><a href="#" on-click="unmark_helpful_post">Unmark Helpful Post</a></li>\n          ');  } else { ; __p.push('\n            ');  if( topicNeedsAnswer ) { ; __p.push('\n              <li class="sui-dropdown_entry"><a href="#" on-click="mark_best_answer_post">Mark Best Answer</a></li>\n            ');  } ; __p.push('\n            ');  if( topicCanHaveHelpfulPosts ) { ; __p.push('\n              <li class="sui-dropdown_entry"><a href="#" on-click="mark_helpful_post">Mark Helpful Post</a></li>\n            ');  } ; __p.push('\n          ');  } ; __p.push('\n\n        ');  } ; __p.push('\n\n        ');  if ( isAdmin ) { ; __p.push('\n          <li class="sui-dropdown_entry"><a href="#" on-click="admin_events">Admin Events</a></li>\n          <li class="sui-dropdown_entry"><a href="/posts/',  id,'/versions">Old Versions</a></li>\n          <li class="sui-dropdown_entry"><a href="#" on-click="block">Block IP</a></li>\n        ');  } ; __p.push('\n      </ul>\n    </div>\n  </li>\n\n\n  ');  if( !isAuthor ) { ; __p.push('\n  <li class="flag"><a href="#" on-click="report_post" title="Report Post"><i class="sui-icon sui-icon-topic-flag"></i></a></li>\n  ');  } ; __p.push('\n\n  <li class="sentiment-face"></li>\n\n  ');  if( isAdmin ) { ; __p.push('\n  <li class="post-ip-lookup"><a href="',  ipLookupPath ,'">',  ipAddress ,'</a></li>\n  ');  } ; __p.push('\n</ul>\n\n<span class="spice-count-wrapper js-spice-count" on-click="all_voters_modal"></span>\n');}return __p.join('');};
}).call(this);
/*1.0*/

$UI.app.module("Discussions", function(Discussions, App, Backbone, Marionette, $, _){

  Discussions.Views.SpiceCounter = Backbone.Marionette.ItemView.extend({
    template: _.template('<span class="spice-count" data-count="<%= count %>"><i class="sui-icon <%= iconClass %>"></i><%= count %></span>'),
    modelEvents: { 'change': 'render' },
    templateHelpers: function() {
      return {
        iconClass: this.model.get('state') ? 'sui-icon-pepper-small' : 'icon-graypepper_small'
      };
    }
  });

  Discussions.Views.PostControls = Backbone.Marionette.Layout.extend({
    template: JST['discussions/templates/post_controls'],
    regions: {
      spiceCounter: '.js-spice-count',
      sentimentFace: '.sentiment-face'
    },
    initialize: function(params) {
      this.topicModel = params.topicModel;
      this.userModel = params.userModel;
      this.spicedState = User.spices && User.spices.Post && User.spices.Post[this.model.get('id')];

      if (User.can_override_sentiment) {
        var postSentimentModel = new Discussions.Models.PostSentiment();
        this.postSentimentView = new Discussions.Views.PostSentiment({ model: postSentimentModel, userId: User.id, postId: this.model.get('id') });
      }

      $(this.el).on('click', '[on-click]', _.bind( function(event) {
        event.preventDefault();
        var onClickAction = $(event.target).closest('[on-click]').attr('on-click');

        if (this.ensureLogIn(onClickAction) && this.isGuest()) {
          JoinAndLogin.showJoin();
          return;
        }

        $(this.el).trigger( onClickAction, this.model.get('id') );
      }, this ));
    },
    // TODO: Make more traditional before_filter to be used in Backbone.js
    LOGGED_IN_ACTIONS: ['report_post'],
    ensureLogIn: function (actionName) {
      return _.contains(this.LOGGED_IN_ACTIONS, actionName);
    },
    onRender: function() {
      $(this.el).find('.sui-spicelink').spicebutton({
        spicecount: this.model.get('vote_count'),
        spicedstate: this.spicedState,
        user_can_downspice: false,
        user_can_spice: (CurrentUser.permissionClass != 'guest' && this.model.get('user_id') != User.id)
      })
      .sui_tooltip('enable')
      .on( 'spiced', $.proxy( this.spiceClicked, this ) );

      $(this.el).find('ul.controls a[title]').sui_tooltip('enable'); // Enable tooltips on controls (esp. the report post flag)

      // Initialize sub-views
      this.spiceModel = new Backbone.Model({ count: this.model.get('vote_count'), state: this.spicedState });
      this.spiceCounter.show( new Discussions.Views.SpiceCounter({ model: this.spiceModel }) );

      if (User.can_override_sentiment) {
        // Add sentiment dropdown view to the layout flow
        this.sentimentFace.show(this.postSentimentView);
      }

      // automatically hide empty menus in post controls (namely the "manage" one)
      var controls = this.$el.find('.controls li');
      _.each(controls, function(control) {
        var $el = $(control);
        var dropdown = $el.find('.sui-dropdown_content');
        if(dropdown.length && !dropdown.children().length) { $el.hide(); }
      });
    },
    topicNeedsAnswer: function() {
      return this.topicModel.get('needs_answer') && !this.topicModel.get('answered_post_id');
    },
    isAuthor: function() {
      return User.id === this.model.get('user_id');
    },
    isModerator: function() {
      return this.userModel.get('group_admin');
    },
    isSuperuser: function() {
      return User.kind === 'superuser';
    },
    isGuest: function () {
      return User.kind === 'guest';
    },
    isAdmin: function() {
      return User.kind === 'admin';
    },
    isSpiceuser: function() {
      return User.kind === 'spiceuser';
    },
    hasAbility: function(name) {
      if(User.abilities) {
        return User.abilities[name];
      }
      else {
        return User.kind == 'admin';
      }
    },
    canEdit: function() {
      return (this.isAuthor() && (!this.topicModel.get('locked') || this.hasAbility("edit own post in locked topic"))) || this.isAdmin() || this.hasAbility('edit posts');
    },
    userCanDelete: function() {
      return this.isAuthor() || this.userModel.get('can_delete_posts');
    },
    templateHelpers: function() {
      return {
        spicedState: this.spicedState,
        canSpice: !this.isAuthor(), // authors can't spice their own stuff!
        isAuthor: this.isAuthor(),
        isModerator: this.isModerator() || this.isSuperuser(),
        isGuest: this.isGuest(),
        isAdmin: this.isAdmin(),
        isSpiceuser: this.isSpiceuser(),
        canMarkAnswer: User.can_mark_answer,
        topicNeedsAnswer: this.topicNeedsAnswer(),
        topicCanHaveHelpfulPosts: this.topicModel.get('needs_helpful_posts'),
        needsModeration: this.model.get('moderation_status'),
        ipAddress: this.model.get('ip'),
        ipLookupPath: Discussions.post_ip_lookup_path(this.model.get('ip')),
        isSpotlight: this.model.get('spotlight'),
        canEdit: this.canEdit(),
        canMutePost: this.hasAbility('hide posts'),
        canDelete: this.userCanDelete(),
        canUndelete: this.hasAbility('undelete posts'),
        isMuted: Boolean(this.model.get('muted_by_admin')),
        isDeleted: Boolean(this.model.get('deleted')),
        canApprove: this.isAdmin() || this.hasAbility('approve posts')
      };
    },
    spiceClicked: function() {
      if(this.isGuest()) {
        JoinAndLogin.showJoin();
        return;
      }

      var action = this.spicedState ? 'remove_vote' : 'vote';
      $.post( '/posts/' + action + '/' + this.model.get('id') )
      .fail( UIHelpers.showUnhandledError )
      .done( $.proxy( this.spiceVoteSuccess, this ) );
    },
    spiceVoteSuccess: function() {
      this.spicedState = !this.spicedState;
      this.model.set('vote_count', this.model.get('vote_count') + (this.spicedState ? 1 : -1) );
      this.spiceModel.set({ state: this.spicedState, count: this.model.get('vote_count') });
    }
  });

});
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["discussions/templates/post_sentiment"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<a href="#" class="sui-dropdown_trigger ',  isRootPost ? ' sui-bttn' : '' ,'" data-toggle="sui_dropdown">\n  <img alt="');  sentimentDisplayName ; __p.push('" src="/assets/community/sentiments/sentiment_',  sentimentDisplayName ,'.png">\n</a>\n<ul class="sui-dropdown_content is-hidden">\n  <div class="sentiment-menu-title">Vote on Sentiment</div>\n  <li class="sui-dropdown_entry">\n    <a href="#" class="js-sentiment-choice" data-sentiment_score="1" data-selected="',  selectedSentimentScore == 1 ,'">\n      <img alt="Sentiment is" src="/assets/community/sentiments/sentiment_positive.png"> Positive\n    </a>\n  </li>\n  <li class="sui-dropdown_entry">\n    <a href="#" class="js-sentiment-choice" data-sentiment_score="0" data-selected="',  selectedSentimentScore == 0 ,'">\n      <img alt="Sentiment is" src="/assets/community/sentiments/sentiment_neutral.png"> Neutral\n    </a>\n  </li>\n  <li class="sui-dropdown_entry">\n    <a href="#" class="js-sentiment-choice" data-sentiment_score="-1" data-selected="',  selectedSentimentScore == -1 ,'">\n      <img alt="Sentiment is" src="/assets/community/sentiments/sentiment_negative.png"> Negative\n    </a>\n  </li>\n</ul>\n');}return __p.join('');};
}).call(this);
/*1.0*/

$UI.app.module("Discussions", function(Discussions, App, Backbone, Marionette, $, _){

  Discussions.Models.PostSentiment = Backbone.Model.extend({
    defaults: {
      isRootPost: false,
      selectedSentimentScore: 0
    }
  });

  Discussions.Views.PostSentiment = Backbone.Marionette.ItemView.extend({
    template: JST['discussions/templates/post_sentiment'],
    tagName: 'div',
    className: 'sentiment-dropdown sui-bttn-group sui-dropdown is-closed',
    modelEvents: { 'change': 'render' },
    events: { 'click .js-sentiment-choice': 'changeSentiment' },
    initialize: function (params) {
      var self = this;

      self.userId = params.userId;
      self.postId = params.postId;
      
      $.getJSON('/post_sentiment_overrides/get_score', { post_id: self.postId, user_id: self.userId }, function (score) {
        // Fetch the score from the backend to avoid cacheing it in the HTML tags
        // TODO: Make post sentiment have REST backend for backbone to sync with
        self.model.set('selectedSentimentScore', score);
      });
    },
    changeSentiment: function(event) {
      event.preventDefault();
      var sentimentScore = $(event.currentTarget).data('sentiment_score');
      var viewContext = this;

      $.ajax({
        url: '/post_sentiment_overrides/create',
        data: { post_id: viewContext.postId, user_id: viewContext.userId, score: sentimentScore },
        type: 'POST' 
      })
      .fail( UIHelpers.showUnhandledError )
      .done( function(data) {
        viewContext.model.set('selectedSentimentScore', sentimentScore);

        $UI.growl({ caption: data.message || 'Success', type: 'success' });
      });
    },
    sentimentDisplayName: function () {
      switch (this.model.get('selectedSentimentScore')) {
        case -1:
          return 'negative';
        case 1:
          return 'positive';
        default:
          return 'neutral';
      }
    },
    templateHelpers: function () {
      return {
        sentimentDisplayName: this.sentimentDisplayName()
      }
    }
  });

});
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["discussions/templates/reply_subscribe_controls"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<input id="enable_notify" name="enable_notify" type="hidden" value="f" class="hidden">\n<input id="enable_notify" name="enable_notify" type="checkbox" value="t" class="checkbox"\n       ',  (subscribed_to_topic || subscribe_on_reply) ? 'checked="checked"' : '' ,' >\n<label for="enable_notify">Email me when someone responds</label>\n\n');  if( !subscribe_on_reply ) { ; __p.push('\n  <span class="subscribe-on-reply">(<a href="#" class="js-subscribe-on-reply">Check by default</a>)</span>\n');  } ; __p.push('\n');}return __p.join('');};
}).call(this);
/*1.0*/

$UI.app.module("Discussions", function(Discussions, App, Backbone, Marionette, $, _){

  Discussions.Views.ReplySubscribeControls = Backbone.Marionette.ItemView.extend({
    template: JST['discussions/templates/reply_subscribe_controls'],
    modelEvents: { 'change': 'render' },
    events: { 'click .js-subscribe-on-reply': 'enableSubscribeOnReply' },
    enableSubscribeOnReply: function(event) {
      event.preventDefault();

      var self = this;
      $.ajax({
        url: '/posts/enable_subscribe_on_reply',
        type: 'POST',
        dataType:'text',
        success: function(data) {
          self.model.set('subscribe_on_reply', true);
          _.bind( function() { self.model.set('subscribe_on_reply', true); }, self );
          $('.subscribe-on-reply').html('<em class="highlight">Option saved.</em>');
          $('.subscribe-on-reply').hide();
        },
        error: function() {
          UIHelpers.showUnhandledError;
        }
      });
    }
  });

  Discussions.Views.ReplyForm = Backbone.Marionette.Layout.extend({
    regions: {
      subscribeControls: '.js-subscribe-controls'
    },
    initialize: function() {
      this.subscribeControls.show( new Discussions.Views.ReplySubscribeControls({ model: this.model }) );
      this.initEditorReactiveExpansion();
    },
    initEditorReactiveExpansion: function() {
      var _this = this;
      $(document).on('editor_ready.wysihtml5', function(event, editor) {
        editor.on( 'focus', function() {
          editor.off( 'focus' );
          TopicReply.showForm(null, null, 250, function () {
            _this.$el.addClass('expanded');
          });
        });
      });
    },
  });

});
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["discussions/templates/root_post_controls"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('');  if( canApprove ||
         isAdmin ||
         canLock ||
         canReassign ||
         canMarkSpotlight ||
         canSetTopicType ||
         dynamicAdminActions.length ) { ; __p.push('\n  <div class="admin-actions-dropdown sui-bttn-group sui-dropdown is-closed">\n    <a href="#" class="sui-dropdown_trigger sui-bttn sui-bttn--small" data-toggle="sui_dropdown" onclick="return false;">\n      Admin <span class="sui-caret"></span>\n    </a>\n    <div class="sui-dropdown_content-caret"></div>\n    <ul class="sui-dropdown_content sui-dropdown_content--align-right is-hidden">\n\n      ');  if( rootPostModerated && canApprove ) { ; __p.push('\n        <li class="sui-dropdown_entry"><a href="#" on-click="approve_post">Approve</a></li>\n      ');  } ; __p.push('\n\n      ');  if( isAdmin ) { ; __p.push('\n        <li class="sui-dropdown_entry"><a on-click="block" href="#">Block IP</a></li>\n      ');  } ; __p.push('\n\n      ');  if( canLock ) { ; __p.push('\n        ');  if( isLocked ) { ; __p.push('\n          <li class="sui-dropdown_entry"><a on-click="unlock" href="#">Unlock</a></li>\n        ');  } else { ; __p.push('\n          <li class="sui-dropdown_entry"><a on-click="lock" href="#">Lock</a></li>\n        ');  } ; __p.push('\n      ');  } ; __p.push('\n\n      ');  if( canReassign ) { ; __p.push('\n        <li class="sui-dropdown_entry"><a on-click="reassign" href="#">Reassign</a></li>\n      ');  } ; __p.push('\n\n      ');  if( isAdmin ) { ; __p.push('\n        <li class="sui-dropdown_entry"><a on-click="admin_events" href="#">Admin Events</a></li>\n\n        <li class="sui-dropdown_entry"><a on-click="users_report" href="#">Users report</a></li>\n      ');  } ; __p.push('\n\n      ');  if( isSpotlight && canMarkSpotlight ) { ; __p.push('\n        <li class="sui-dropdown_entry"><a on-click="toggle_spotlight" href="#">Unmark Spotlight on IT</a></li>\n      ');  } else if(canMarkSpotlight) { ; __p.push('\n        <li class="sui-dropdown_entry"><a on-click="toggle_spotlight" href="#">Mark Spotlight on IT</a></li>\n      ');  } ; __p.push('\n\n      ');  if( isAdmin ) { ; __p.push('\n        ');  if( taggingEnabled ) { ; __p.push('\n          <li class="sui-dropdown_entry"><a on-click="toggle_tagging" href="#">Disable Tagging</a></li>\n        ');  } else { ; __p.push('\n          <li class="sui-dropdown_entry"><a on-click="toggle_tagging" href="#">Enable Tagging</a></li>\n        ');  } ; __p.push('\n      ');  } ; __p.push('\n\n      ');  if( isAdmin ) { ; __p.push('\n        <li class="sui-dropdown_entry"><a href="/posts/',  root_post_id,'/versions">Old Versions</a></li>\n      ');  } ; __p.push('\n\n      ');  if( canSetTopicType ) { ; __p.push('\n        <li class="sui-dropdown_entry"><a on-click="set_topic_type" href="#">Set Topic Type</a></li>\n      ');  } ; __p.push('\n\n      ');  _.each( dynamicAdminActions, function(actionDef, index) { ; __p.push('\n        <li class="sui-dropdown_entry">\n          <a href="#" data-dynamic-action-index="',  index ,'">',  actionDef.label ,'</a>\n        </li>\n      ');  }); ; __p.push('\n\n    </ul>\n  </div>\n');  } ; __p.push('\n\n<div class="actions-dropdown sui-bttn-group sui-dropdown is-closed">\n  <a href="#" class="sui-dropdown_trigger sui-bttn sui-bttn--small " data-toggle="sui_dropdown" onclick="return false;"><span class="sui-caret"></span></a>\n  <div class="sui-dropdown_content-caret"></div>\n  <ul class="sui-dropdown_content sui-dropdown_content--align-right is-hidden">\n\n    ');  if( (isAuthor && !isLocked) || canEditAnyPost ) { ; __p.push('\n      <li class="sui-dropdown_entry"><a on-click="edit_post" href="#">Edit</a></li>\n    ');  } ; __p.push('\n\n    ');  if( isDeleted && canUndelete  ) { ; __p.push('\n      <li class="sui-dropdown_entry"><a on-click="undelete_post" href="#">Undelete</a></li>\n    ');  } else if(!isDeleted && canDelete) { ; __p.push('\n      <li class="sui-dropdown_entry"><a on-click="delete_post" href="#">Delete</a></li>\n    ');  } ; __p.push('\n\n    ');  if( canToggleNeedsAnswer ) { ; __p.push('\n      <li class="sui-dropdown_entry"><a on-click="toggle_needs_answer" href="#">',  needs_answer ? 'No Answer' : 'Need Answer' ,'</a></li>\n    ');  } ; __p.push('\n\n    <li class="sui-dropdown_entry"><a on-click="subscribe_topic" href="#" id="subscribe_topic_dropdown" data-subscribed="',  isSubscribed ,'">',  isSubscribed ? 'Unsubscribe' : 'Subscribe' ,'</a></li>\n    <li class="sui-dropdown_entry"><a on-click="report_post" href="#">Report</a></li>\n    <li class="sui-dropdown_entry"><a on-click="translate_topic" href="#">Translate</a></li>\n\n     ');  if( adminVendorPages.length > 0 ) { ; __p.push('\n      <li class="divider"></li>\n\n      ');  _.each( adminVendorPages, function(vendorPage) { ; __p.push('\n      <li class="sui-dropdown_entry">\n        <a href="#" class="js-vendor-page-share" data-vendor_page_id="',  vendorPage.id ,'">Share to Vendor Page</a>\n      </li>\n      ');  }); ; __p.push('\n    ');  } ; __p.push('\n\n  </ul>\n</div>\n\n',  $UI.spice_button() ,'\n\n');  if(hasBestAnswer){ ; __p.push('\n  <div class="topic-answer-tag">\n    <a href="',  UrlHelpers.best_answer_link(bestAnswerId) ,'"><i class="sui-icon sui-icon-check sui-icon--white sui-icon--16"></i> View Best Answer</a>\n  </div>\n');  } ; __p.push('\n');}return __p.join('');};
}).call(this);
/*1.0*/

$UI.app.module("Discussions", function(Discussions, App, Backbone, Marionette, $, _){

  Discussions.Views.RootPostControls = Backbone.Marionette.ItemView.extend({
    template: JST['discussions/templates/root_post_controls'],
    initialize: function(params) {
      this.userModel = params.userModel;
      this.userModel.on( 'change', $.proxy( this.render, this ) );

      if (User.can_override_sentiment) {
        var postSentimentModel = new Discussions.Models.PostSentiment({ isRootPost: true });
        this.postSentimentView = new Discussions.Views.PostSentiment({ model: postSentimentModel, userId: this.userModel.get('id'), postId: this.model.get('root_post_id') });
      }

      $(this.el).on('click', '[on-click]', _.bind( function(event) {
        event.preventDefault();
        var onClickAction = $(event.target).attr('on-click');
        $(this.el).trigger( onClickAction, this.model.get('root_post_id') );
      }, this ));

      this.dynamicAdminActions = [];
      Discussions.vent.on( 'addRootPostAdminAction', _.bind( function(actionDef) {
        this.dynamicAdminActions.push( actionDef );
        this.render();
      }, this ));
    },
    events: {
      'click .js-vendor-page-share' : function(event) {
        event.preventDefault();
        var vendorPageId = $(event.target).data('vendor_page_id');

        $.ajax({ url: '/api/vendor_events',
                 data: { topic_id: this.model.get('id'), vendor_page_id: vendorPageId },
                 type: 'POST',
                 dataType: 'text' })
        .fail( UIHelpers.showUnhandledError )
        .done( function(data) {
          var json = {};
          try { json = jQuery.parseJSON(data); } catch(err) {}
          $UI.growl({ caption: json.message || 'Success', type: 'success' });
        });
      },
      'click [data-dynamic-action-index]' : function(event) {
        var actionDef = this.dynamicAdminActions[ $(event.target).attr('data-dynamic-action-index') ];
        if( actionDef ) {
          return actionDef.callback.call(null, event);
        }
      }
    },
    socialSharePath: function(siteName) {
      return SocialHelpers.sharePath( siteName, this.subject, window.location.href );
    },
    isAuthor: function() {
      return this.model.get('author_id') === this.userModel.get('id');
    },
    isGuest: function() {
      return this.userModel.get('kind') === 'guest';
    },
    isSuperuser: function() {
      return this.userModel.get('kind') === 'superuser';
    },
    isGroupAdmin: function() {
      return this.userModel.get('group_admin');
    },
    hasAbility: function(name) {
      // User.abilities is set in topic_controller
      if(User.abilities) {
        return User.abilities[name];
      }
      else {
        return User.kind == 'admin';
      }
    },
    canSetTopicType: function() {
      return this.hasAbility('set topic type') || (this.isAuthor() && this.hasAbility("manage contests"));
    },
    templateHelpers: function() {
      return {
        socialSharePath: this.socialSharePath,
        isAuthor: this.isAuthor(),
        isAdmin: this.userModel.get('kind') === 'admin',
        isSpiceuser: this.userModel.get('kind') === 'spiceuser',
        isModerator: this.isGroupAdmin() || this.isSuperuser(),
        isGroupAdmin: this.userModel.get('group_admin'),
        isSuperuser: this.isSuperuser(),
        isSubscribed: this.userModel.get('subscribed_to_topic'),
        adminVendorPages: this.userModel.get('admin_vendor_pages') || [],
        isDeleted: this.model.get('deleted'),
        isSpotlight: this.model.get('spotlight'),
        isLocked: this.model.get('locked'),
        canDelete: this.userModel.get('can_delete_root'),
        canUndelete: this.hasAbility('undelete posts'),
        canLock: this.hasAbility('lock topic'),
        canReassign: this.userModel.get('can_reassign'),
        canChangeModeration: this.model.get('can_change_moderation'),
        taggingEnabled: this.model.get('tagging_enabled'),
        ipLookupPath: Discussions.post_ip_lookup_path(this.model.get('ip')),
        rootPostModerated: this.model.get('moderation_status') === 'Root Post in Moderation',
        canApprove: this.hasAbility('approve posts'),
        canToggleNeedsAnswer: this.isAuthor() || this.isGroupAdmin() || this.hasAbility('toggle whether a topic needs an answer'),
        canEditAnyPost: this.hasAbility('edit posts'),
        canMarkSpotlight: this.hasAbility("mark spotlight on IT"),
        canSetTopicType: this.canSetTopicType(),
        hasBestAnswer: this.model.get('has_best_answer'),
        bestAnswerId: this.model.get('answered_post_id'),
        dynamicAdminActions: this.dynamicAdminActions
      };
    },
    onRender: function() {
      $(this.el).find('.sui-spicebttn').spicebutton({
        spicecount: this.model.get('ranking'),
        spicedstate: this.userModel.get('spices') && this.userModel.get('spices').Topic && (this.userModel.get('spices').Topic[this.model.get('id')] || 0),
        user_can_downspice: true,
        user_can_spice: (CurrentUser.permissionClass != 'guest' && this.model.get('author_id') != this.userModel.get('id'))
      })
      .on( 'spiced', $.proxy( this.spiceButtonClicked, this ) );
      if (this.userModel.get('can_override_sentiment')) {
        // Add sentiment dropdown view to the layout flow
        this.$('.actions-dropdown').after(this.postSentimentView.render().$el);
      }
    },
    spiceButtonClicked: function( event, spiceButton, upNotDown ) {
      if(this.userModel.get('kind') === 'guest') {
        JoinAndLogin.showJoin();
        return;
      }

      if (this.isAuthor()) return;

      // The response is actually a script to update the page but we ignore that by using 'text'
      // Still get proper error handling as long as the server responds with an appropriate HTTP Status
      $.ajax({ url: '/ranking/rank',
               type: 'POST',
               data: { 'class': 'Topic', id: this.model.get('id'), value: (upNotDown ? 1 : -1) },
               dataType: 'text' })
      .fail( UIHelpers.showUnhandledError )
      .done( _.bind(function (data) {

        var data = $.parseJSON(data);
        SPICE.ranking(data);

        var oldCount = this.model.get('ranking');
        this.model.set('ranking', upNotDown ? oldCount + 1 : oldCount - 1);
        this.userModel.get('spices').Topic[this.model.get('id')] = upNotDown ? 1 : 0;
      }, this));
    }
  });

});

jQuery('a[data-best_answer_id]').click(function(e) {
  var id = $(this).data('best_answer_id');
  // Check if the best answer is on the current page
  if ($(".post[data-id='" + id +"']").length > 0) {
    e.preventDefault();
    $('html, body').animate({
        scrollTop: $(".post[data-id='" + id +"']").offset().top - 50
      }, 2000);
  }
});
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["discussions/templates/root_post_footer_controls"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('');  if( !hideReply ) { ; __p.push('\n<a class="sui-bttn sui-bttn--small" data-reply="true" href="javascript:void(0)" size="small">Reply</a>\n');  } ; __p.push('\n<a class="sui-bttn sui-bttn--small foobar" data-action="subscribe" href="javascript:void(0)">\n  <i class="sui-icon sui-icon-email sui-icon--gray sui-icon--16 "></i><span>',(''+ (isSubscribed ? 'Unsubscribe' : 'Subscribe') ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'</span>\n</a>\n');}return __p.join('');};
}).call(this);
/*1.0*/

$UI.app.module("Discussions", function(Discussions, App, Backbone, Marionette, $, _){

  Discussions.Views.RootPostFooterControls = Backbone.Marionette.ItemView.extend({
    template: JST['discussions/templates/root_post_footer_controls'],

    initialize: function(params) {
      this.userModel = params.userModel;
      this.userModel.on( 'change', $.proxy( this.render, this ) ); // For subscription changes
      this.hideReply = params.hideReply;
    },

    events: {
      'click [data-reply]': function() {
        this.$el.trigger('reply_post', this.model.get('root_post_id'));
      },

      'click [data-action="subscribe"]': function() {
        this.$el.trigger('subscribe_topic');
      }
    },

    templateHelpers: function() {
      return {
        isSubscribed: this.userModel.get('subscribed_to_topic'),
        hideReply: this.hideReply
      }
    }

  }); // Discussions.Views.RootPostFooterControls

});
/*1.0*/

$UI.app.module("Discussions", function(Discussions, App, Backbone, Marionette, $, _){

  Discussions.Views.Topic = Backbone.Marionette.Layout.extend({
    regions: {
      rootPostControls: 'header .js-root-post-controls',
      rootPostFooterControls: '[data-placeholder="root-post-footer-controls"]',
      repliesFooterControls: '[data-placeholder="replies-footer-controls"]',
      posts: '.posts-wrapper',
      curatedItemEditor: '.js-curated-item-editor',
      replyForm: '.js-reply-form'
    },
    events: {

      'click [data-action="show-invite-friend-modal"]': function(event) {
        event.preventDefault();

        if( this.userModel.isGuest() ) {
          JoinAndLogin.showJoin();
        }
        else {
          Discussions.Views.InviteFriendModal.showModal({ model: this.model });
          GoogleAnalytics.trackEvent("Topic", "Invite a Friend link");
        }
      },

      'edit_post': function(event, postId) {
        window.location.href = Discussions.edit_post_path(postId);
      },

      'mute_post': function(event, postId) {
        $.post( Discussions.mute_post_path(postId) )
        .fail( UIHelpers.showUnhandledError )
        .done( _.bind(function() { this.getReply(postId).mute(); }, this) );
      },

      'unmute_post': function(event, postId) {
        $.post( Discussions.unmute_post_path(postId) )
        .fail( UIHelpers.showUnhandledError )
        .done( _.bind(function() { this.getReply(postId).unmute(); }, this) );
      },

      'delete_post': function(event, postId) {
        var deleteLevel = (postId == this.model.get('root_post_id')) ? 'Topic' : 'Post';

        var isAuthor = false;

        if(deleteLevel === 'Topic') {
          isAuthor = $('.post[data-post-id="' + postId + '"]').hasClass('my-post');
        } else {
          isAuthor = $('.post[data-id=' + postId + ']').hasClass('my-post');
        }

        if(isAuthor) {
          // if YOU wrote the post the modal is not necessary
          if( confirm('Are you sure you want to delete this ' + deleteLevel + '?') ) {
            $.ajax(Discussions.delete_post_path(postId), { type: 'DELETE' })
            .done(function(data) {
              window.location.href = data.redirect_to;
            });
          }
        } else {
          // retrieve HTML for delete post modal and show it!
          $.get(Discussions.delete_modal_path(postId), function(html) {
            $('#delete_post_overlay').remove();
            $('body').append(html);
            $('#delete_post_overlay').sui_modal('show');
          });
        }
      },

      'undelete_post': function(event, postId) {
        if(!confirm('Are you sure you want to undelete this post?')) { return false; }

        var deleteLevel = (postId == this.model.get('root_post_id')) ? 'Topic' : 'Post';
        //$.ajax(Discussions.undelete_post_path(postId), {type: 'POST'})
        var params = {};
        if(deleteLevel === 'Topic') { params.recursive = true }
        $.post(Discussions.undelete_post_path(postId), params, function(data) {
          window.location.href = data.redirect_to;
        });
      },

      'approve_post': function(event, postId) {
        $.post('/topic/approve_post/' + postId)
        .done(function() { window.location.reload(); });
      },

      'report_post' : function(event, postId) {
        if( this.userModel.isGuest() ) {
          JoinAndLogin.showJoin();
        }
        else {
          $.ajax({ url: '/spam_reports/new', data: { item_id: postId, item_type: 'Post' }, dataType: 'script' })
          .fail( UIHelpers.showUnhandledError );
       }
      },

      'reply_post' : function(event, postId) {
        TopicReply.showForm(postId);
        GoogleAnalytics.trackEvent('Topic', 'click', 'Reply To Post');
      },

      'mark_best_answer_post' : function(event, postId) {
        $.ajax({
          url: '/posts/mark_best_answer',
          data: { id: postId },
          dataType: 'text',
          type: 'POST',
          success: function(data) {
            window.location.href = '/topic/post/' + postId;
          },
          error: function() {
            UIHelpers.showUnhandledError;
          }
        });
      },

      'unmark_best_answer_post' : function(event, postId) {
        $.ajax({
          url: '/posts/unmark_best_answer',
          data: { id: postId },
          dataType: 'text',
          type: 'POST',
          success: function(data) {
            window.location.href = '/topic/post/' + postId;
          },
          error: function() {
            UIHelpers.showUnhandledError;
          }
        });
      },

      'mark_helpful_post' : function(event, postId) {
        $.ajax({
          url: '/posts/mark_helpful',
          data: { id: postId },
          dataType: 'text',
          type: 'POST',
          success: function(data) {
            window.location.href = '/topic/post/' + postId;
          },
          error: function() {
            UIHelpers.showUnhandledError;
          }
        });
      },

      'unmark_helpful_post' : function(event, postId) {
        $.ajax({
          url: '/posts/unmark_helpful',
          data: { id: postId },
          dataType: 'text',
          type: 'POST',
          success: function(data) {
            window.location.href = '/topic/post/' + postId;
          },
          error: function() {
            UIHelpers.showUnhandledError;
          }
        });
      },

      'subscribe_topic' : function(event) {
        if( this.userModel.isGuest() ) {
          JoinAndLogin.showJoin();
        }
        else {
          var subscribed = this.userModel.get('subscribed_to_topic');
          var subscribeUrl = subscribed ? Discussions.unsubscribe_path() : Discussions.subscribe_path();

          $.post( subscribeUrl, { id: this.model.get('id') })
          .fail( UIHelpers.showUnhandledError )
          .done( _.bind( function() {
            this.userModel.set('subscribed_to_topic', !subscribed);
            $UI.growl({ caption: "You've been " + (subscribed ? 'unsubscribed' : 'subscribed'), type: 'success' });
          }, this ));
        }
      },

      'toggle_needs_answer' : function() {
        var needsAnswer = this.model.get('needs_answer');
        var topicId = this.model.get('id');
        window.location.href = needsAnswer ? Discussions.no_answer_needed_path(topicId) : Discussions.answer_needed_path(topicId);
      },

      'all_voters_modal' : function(event, postId) {
        Discussions.Views.VotersModal.showModal({ postId: postId });
      },

      'translate_topic .js-root-post-controls' : function() {
        GoogleAnalytics.trackEvent("Topic", "Translate in menu");
        $.ajax({ url: "/topic/translate/" + this.model.get('id'), data: { 'referer': "/topic/" + this.model.get('id') } })
        .success(function(data) {
          $('#topic').append(data.partial);
          $('#translate_overlay').sui_modal('show');
        })
        .fail( UIHelpers.showUnhandledError );
      },

      'block' : function(event, postId) {
        var modal = $('#block_ip_modal')
        modal.find('input[name="ip"]').val(this.model.get('ip'));
        modal.sui_modal('show');
      },

      'admin_events' : function(event, postId) {
        window.location = Discussions.admin_events_path(postId);
      },

      'lock' : function(event, postId) {
        var topicId = this.model.get('id');
        window.location = Discussions.lock_topic_path(topicId);
      },

      'unlock' : function(event, postId) {
        var topicId = this.model.get('id');
        window.location = Discussions.unlock_topic_path(topicId);
      },

      'reassign' : function(event, postId) {
        var modal = $('#reassign_topic_dialog');
        modal.sui_modal('show');
      },

      'toggle_spotlight' : function(event, postId) {
        var topicId = this.model.get('id');

        // TODO: don't use a GET for this :\
        window.location = Discussions.toggle_spotlight_path(topicId);
      },

      'users_report' : function(event, postId) {
        var topicId = this.model.get('id');
        window.location = Discussions.users_report_path(topicId);
      },

      'toggle_tagging' : function(event, postId) {
        var topicId = this.model.get('id');
        var action = this.model.get('tagging_enabled') ? 'disable' : 'enable'
        window.location = '/topic/' + action + '_tagging/' + topicId;
      },

      'mute_author': function(event, authorId) {
        // on a reply
        if($(event.target).closest('.post').length) {
          var postId = $(event.target).closest('.post').data('id');
        }
        // on root post
        else {
          var postId = $(event.target).closest('.topic-meta').data('id');
        }

        $.post( Discussions.mute_author_path(authorId, postId) )
        .fail( UIHelpers.showUnhandledError )
        .done( _.bind(function() {
          var author_posts = this.getRepliesByAuthor(authorId);

          _.each(author_posts, function(post) {
            post.authorMute();
          });
        }, this) );
      },

      'unmute_author': function(event, authorId) {
        $.ajax({ url: Discussions.unmute_author_path(authorId), type: 'DELETE' })
        .fail( UIHelpers.showUnhandledError )
        .done(
          _.bind(function() {
            var author_posts = this.getRepliesByAuthor(authorId);

            _.each(author_posts, function(post) {
              post.authorUnmute();
            });
         }, this) );
      },

      'set_topic_type': function(event, postId) {
        var $topicTypeForm = $('#set_topic_type');
        var _this = this;
        if($topicTypeForm.length) {
          _this.topicTypeControl.clearErrors();
          $topicTypeForm.sui_modal('show');
        } else {
          var topicId = this.model.get('id');
          $.get('/topic/topic_type_form/' + topicId)
          .done(function(data) {
            $('#topic').append(data.partial);
            $('#set_topic_type').sui_modal('show');

            var $topicTypeForm = $('.topic-type-form')
            $topicTypeForm.json_form();
            _this.topicTypeControl = new TopicType($("select[name='topic_type[name]']"));
            $topicTypeForm.find("[data-button-type='submit']").click(function(event) {
              if(!_this.topicTypeControl.checkTopicTypeData()) {
                return false;
              }
              else {
                return true;
              }
            });
            $topicTypeForm.on('ajax:success', function(_, data) {
              $UI.growl({ caption: data.message, type: 'success' });
              $('#set_topic_type').sui_modal('hide');
            });
            $topicTypeForm.on('ajax:failure', function() {
              $UI.growl({ caption: "Uh oh, something went wrong! We were unable to save the topic type", type: 'error' });
            });
          });
        }
      }

    },

    // given post DOM, create new Post views
    initPosts: function() {
      this.postsData = jQuery.parseJSON( $('[data-config="postsData"]').text() );

      this.posts = [];
      _.each( this.postsData, _.bind( function(post) {
        var $postEl = $(this.el).find('.post[data-id="' + post.id + '"]' ).not('.hidden');
        if( $postEl.length ) {
          this.posts.push(new Discussions.Views.Post({ el: $postEl,
                                                       model: new Discussions.Models.Post(post),
                                                       topicModel: this.model,
                                                       userModel: this.userModel }));
        }
      }, this ));
    },

    lightboxPostImages: function (post) {
      _.map(post.find('img[data-id]'), function(el) {
        $el = $(el);
        if(!$UI.useMobile) {
          $el.wrap('<div><a href="' + $el.attr('src') + '" rel="lightbox" class="topic-img-lightbox"></a></div>');
        }
        else {
          $el.wrap('<div><a href="' + $el.attr('src') + '"></a></div>');
        }
      });
    },

    addMediaEmbeds: function () {
      // Endpoint for SlideShare's oEmbed API return
      // ('callback=?' is needed to make call JSONP to not be subject to same origin policy)
      var SLIDESHARE_OEMBED = 'https://www.slideshare.net/api/oembed/2?callback=?';

      var youtube_regex = 'https?:\\/\\/(?:www\\.)?(?:youtube.com\\/watch\\?v=|youtu.be)\\/?([\\w-]+)'; // Detects YouTube urls
      var vimeo_regex = 'https?:\\/\\/(?:www\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/([^\\/]*)\\/videos\\/|album\\/(\\d+)\\/video\\/|originals\\/(?:\\w+\\/)?|)(\\d+)'; // Detects Vimeo urls
      var slideshare_regex = 'https?:\\/\\/(?:www\\.)?slideshare.net\\/([\\w_]+)\\/([\\w-]+)'; // Detects Slideshare urls

      var medias = {
        // Different media objects configurations
        youtube: {
          regex: youtube_regex,
          match_regex: new RegExp(youtube_regex, 'g'),  // Global matches ignore capture groups
          insert_embed: function (el, url) {
            var iframe = '<p><iframe width="100%" height="473" src="https://www.youtube-nocookie.com/embed/<%= id %>?rel=0" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></p>';

            var template = _.template(iframe, { id: url.match(this.regex)[1] });
            el.after(template);
          }
        },
        vimeo: {
          regex: vimeo_regex,
          match_regex: new RegExp(vimeo_regex, 'g'),
          insert_embed: function (el, url) {
            var iframe = '<p><iframe width="100%" height="354" src="https://player.vimeo.com/video/<%= id %>" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></p>';

            var template = _.template(iframe, { id: url.match(this.regex)[3] });
            el.after(template);
          }
        },
        slideShare: {
          regex: slideshare_regex,
          match_regex: new RegExp(slideshare_regex, 'g'),
          insert_embed: function (el, url) {
            $.ajax({
              url: SLIDESHARE_OEMBED,
              dataType: 'json',
              data: { url: url, format: 'json' }
            }).done(function (data) {
              if (!data.slideshow_id) return;

              var iframe = '<p><iframe src="//www.slideshare.net/slideshow/embed_code/<%= id %>" width="100%" height="510" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></p>';

              var template = _.template(iframe, { id: data.slideshow_id })
              el.after(template);
            });
          }
        }
      };

      var elems = this.$el.find('.post-body, .root-post').children().not('blockquote');
      _.each(elems, function(el) {
        el = $(el);
        _.each(medias, function(media) {
          var matches = el.text().match(media.match_regex);
          _.each(matches, function(url) {
            media.insert_embed(el, url);
          });
        });
      });

    },

    /*------------------------------------------------------------*/
    // Muting
    /*------------------------------------------------------------*/
    hideMutedAuthorsPosts: function() {
      var visible_reply_posts = _.filter( this.postsData, function(post) { return !post.hidden; } );
      var author_ids = _.map( visible_reply_posts, function (post) { return post.user_id; } );

      // Save promise to be used later to handle all AJAX data coming back, TODO: Make this generic
      this.hideMutePostsRequest = $.getJSON(Discussions.muted_authors_path(), { author_ids: author_ids });
    },

    getRepliesByAuthor: function(authorId) {
      return _.filter(this.posts, function(post) { return post.model.get('user_id') == authorId; });
    },

    getReply: function(postId) {
      return _.find(this.posts, function(post) { return post.model.get('id') == postId; });
    },
    /*------------------------------------------------------------*/

    loadHiddenPosts: function() {
      var hidden_posts = $('.post.hidden');
      if(!hidden_posts.length) { return false; } // skip the rest if we don't have any

      var ids = _.map(hidden_posts, function(post) {
        var $post = $(post);
        if($post.hasClass('root-post')) {
          return $post.attr('data-post-id');
        } else {
          return $post.attr('data-id');
        }
      });

      var params = {
        topic_id: this.model.get('id'),
        post_ids: ids,
        render_html: true
      };

      // Save promise to be used later to handle all AJAX data coming back, TODO: Make this generic
      this.showHiddenPostsRequest = $.getJSON(Discussions.posts_index_path(), params);
    },

    handlePageLoadRequests: function () {
      var self = this;
      $.when(this.showHiddenPostsRequest, this.hideMutePostsRequest).always(function (postsResponse, authorsResponse) {
        var posts = _.first(postsResponse);
        var author_ids = _.first(authorsResponse);

        // Show hidden posts
        _.each(posts, function(html, id) {
          var $postEl = $('.post[data-id="'+id+'"], .post[data-post-id="'+id+'"]');
          $postEl.html(html);
          $postEl.removeClass('hidden').addClass('admin-hidden');
          $postEl.find('[data-popup-url]').pjaxPopover(); // Trigger pjax popover, since it didn't get initialized on page load
        });
        if( posts && _.keys(posts).length ) {
          self.initPosts();
        }

        // Hide muted authors
        _.each(author_ids, function (author_id) {
          var author_posts = self.getRepliesByAuthor(author_id);

          _.each(author_posts, function(post) {
            post.authorMute({ hide: true });
          });
        });

        self.jumpToPost();
      });
    },

    jumpToPost: function() {
      var POST_HASH_PREFIX = '#entry-';

      // Return if post jump is not necessary or has already happened
      if ( !_(location.hash).startsWith(POST_HASH_PREFIX) || this.hasJumpedToPost ) { return; }

      var post_id = _.trim(location.hash, POST_HASH_PREFIX);
      var post = $('.post[data-post-id=' + post_id + '], .post[data-id=' + post_id + ']');

      var jump_post;

      if (post.is('.muted')) {
        var previousHiddenAndMuted = post.prevUntil('.post:not(.muted):not(.hidden)').andSelf();
        jump_post =  previousHiddenAndMuted.length ? previousHiddenAndMuted.first('.muted') : post;
      } else {
        jump_post = post;
      }

      $('html, body').animate({ scrollTop: jump_post.offset().top - 116 }, 800); // 116px offset was determined padding for sticky bar
    },

    initialize: function(params) {
      this.model = params.topicModel;
      this.userModel = params.userModel;

      this.rootPostControls.show( new Discussions.Views.RootPostControls({ model: this.model,
                                                                           userModel: this.userModel }) );
      this.rootPostFooterControls.show( new Discussions.Views.RootPostFooterControls({ model: this.model,
                                                                                       userModel: this.userModel }) );
      this.repliesFooterControls.show( new Discussions.Views.RootPostFooterControls({ model: this.model,
                                                                                      userModel: this.userModel,
                                                                                      hideReply: true }) );
      this.initPosts();

      this.replyForm.attachView( new Discussions.Views.ReplyForm({ el: $(this.el).find(this.replyForm.el),
                                                                   model: this.userModel }) );

      /* We really need a root post view... */
      var rootPost = $(this.el).find('.root-post');
      Discussions.tagsCollapse( 4, rootPost );
      rootPost.addClass( this.model.get('author_id') == User.id ? 'my-post' : 'their-post');
      // Lightbox enable root post inline images
      this.lightboxPostImages(rootPost);

      this.addMediaEmbeds();

      // Guests cannot have a mute or view hidden posts
      // If the User is a guest, do not make these requests
      if (typeof User !== "undefined" && User.kind !== "guest") {
        this.hideMutedAuthorsPosts();
        this.loadHiddenPosts();
      }

      // Initialize the Read These Next...
      $('.js-read-next-footer').read_these_next({
        itemId: this.model.get('id'),
        source: 'topic'
      });

      this.handlePageLoadRequests();

      if( window.location.href.match('scroll_to_reply=true') ) {
        TopicReply.showForm( this.model.get('root_post_id') );
      }

      if( $('[data-de-register-card]').length ) {
        GoogleAnalytics.trackEvent('Topic', 'show', 'German Registration Card', 0, true);
        $('[data-de-register-card]').click(function() {
          GoogleAnalytics.trackEvent('Topic', 'click', 'German Registration Card');
        });
      }
    }

  }); // Discussions.Views.Topic = Backbone.Marionette.Layout.extend({
});
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["discussions/templates/voters"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div class="voter">\n  <img src="',  avatar ,'" class="voter-avatar" data-voter-id="',  id ,'">\n  <div class="voter-info">\n    <a class="profile_link--',  kind ,'" href="',  url ,'" data-voter-id="',  id ,'">',  name ,'</a>\n    ',  rank ,'\n  </div>\n</div>\n');}return __p.join('');};
}).call(this);
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["discussions/templates/voters-modal"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div class="sui-modal_content sui-modal_content--overflow sui-modal_content--small" data-modal-el="content" role="dialog">\n  <button class="sui-modal_close sui-icon sui-icon-close-circular sui-icon--24 sui-icon--blue" data-dismiss="modal"></button>\n  <div class="sui-modal_header">Users who spiced this post</div>\n  <div class="sui-modal_body"></div>\n</div>\n');}return __p.join('');};
}).call(this);
/*1.0*/



$UI.app.module("Discussions", function(Discussions, App, Backbone, Marionette, $, _) {
  Discussions.Views.VotersModal = Backbone.Marionette.Layout.extend({
    template: JST['discussions/templates/voters-modal'],
    id: 'post_voters_modal',
    className: 'sui-modal_overlay sui-u-fadeable u-faded-in',
    attributes: {
      'data-modal-el': "overlay"
    },
    regions: {
      votersRegion: '.sui-modal_body'
    },
    initialize: function(params) {
      this.postId = params.postId;
      $('body').append(this.$el);
    },
    onRender: function() {
      var voters = new Discussions.Collections.Voters();
      voters.postId = this.postId;
      voters.fetch({
        reset: true,
        success: _.bind( function() {
          var votersView = new Discussions.Views.Voters({ collection: voters })
          this.votersRegion.show(votersView);
          this.$el.sui_modal({ destroyOnHide: true });
        }, this )
      });
    }
  });
  Discussions.Views.VotersModal.showModal = function(params) {
    this.modal = new Discussions.Views.VotersModal(params);
    this.modal.render();
    this.modal.$el.on( 'sui_modal:hidden', _.bind( function() {
      this.modal.$el.remove();
      this.modal = null;
    }, this ) );
  };

  Discussions.Models.Voter = Backbone.Model.extend({});

  Discussions.Collections.Voters = Backbone.Collection.extend({
    postId: 0,
    model: Discussions.Models.Voter,
    url: function() {
      return '/posts/all_voters/' + this.postId;
    }
  });

  Discussions.Views.Voter  = Marionette.ItemView.extend({
    template: JST['discussions/templates/voters']
  });

  Discussions.Views.Voters = Marionette.CollectionView.extend({
    itemView: Discussions.Views.Voter
  });
});
/*1.0*/
(function($) {
  window.Draft = {
    saveInterval: null,
    latestValue: '',

    /*
    *   Put old draft in editor and call setUpAutosave
    */
    initilizeDraft: function(id, draftable_type, draftable_id, saved_draft) {
      var _this = this;
      $UI.app.vent.on('wysiwyg:ready', function() {
        if(saved_draft) {
          if(draftable_type === "Topic") {
            if(draftable_id == -1) {
              GoogleAnalytics.trackEvent("Topic", "Draft Retrieved", "New Topic");
            }
            else {
              GoogleAnalytics.trackEvent("Topic", "Draft Retrieved", "Reply");
            }
          }
          var e = jQuery('#' + id).data('wysihtml5');
          e.editor.setValue(saved_draft);
        }
        _this.saveInterval = false;
        _this.latestValue = saved_draft;
        Draft.setUpAutosave(id, draftable_type, draftable_id);
      });
    },
    /*
    *   Save draft
    */
    saveDraft: function(id, draftable_type, draftable_id) {
      var _this = this;
      var e = jQuery('#' + id).data('wysihtml5');
      var text = e.editor.getValue();

      if(text === this.latestValue) {
        // No change since last save - assume inactive
        // Clear save interval if one exists
        Draft.deactivateAutosave(false);
      }
      else {
        jQuery.ajax({
          type: "POST",
          url: "/drafts",
          dataType: "json",
          data: {
            draftable_type: draftable_type,
            draftable_id: draftable_id,
            text: text,
            username: User.name
          }
        })
        .done(function(data, textStatus, jqXHR) {
          _this.latestValue = text;
          if(jqXHR.status == 200) {
            jQuery("#draft-saved-info").html("Draft saved");
            window.setTimeout(function() {
              jQuery("#draft-saved-info").html("");
            }, 2000);
          }
        })
        .fail(function() {
          Draft.deactivateAutosave(false);
        });
      }
    },
    /*
    *   Set up autosave events
    */
    setUpAutosave: function(id, draftable_type, draftable_id) {
      var _this = this;
      var editor= jQuery('#' + id).data('wysihtml5').editor;

      // Clicking outside of text editor area - Clear autosave
      jQuery(document).on('mousedown', function(event) {
        var target = jQuery(event.target);
        if (!(target.closest(jQuery('#' + id).parent()).length
              || target.closest(".bootstrap-wysihtml5-code-modal").length
              || target.closest("#wysiwyg-modals").length
              || target.closest(".wysiwyg-image-box").length)) {
          if(_this.saveInterval) {
            Draft.saveDraft(id, draftable_type, draftable_id);
          }
        }
      });
      // Mousedown inside text editor area - Activate autosave
      jQuery('.wysihtml5-sandbox').contents().find('body').on('mousedown keydown', function(event) {
        Draft.activateAutosave(id, draftable_type, draftable_id);
      });
      jQuery('#' + id).parent().on('click', function(event) {
        Draft.activateAutosave(id, draftable_type, draftable_id);
      });
      jQuery(".wysiwyg-image-box #wysiwyg-modals, .bootstrap-wysihtml5-code-modal").on('click keydown', function(event) {
        Draft.activateAutosave(id, draftable_type, draftable_id);
      });
    },
    /*
    *   Set autosave interval
    */
    activateAutosave: function(id, draftable_type, draftable_id) {
      if(!this.saveInterval) {
        this.saveInterval = window.setInterval("Draft.saveDraft(\'" + id + "\', \'" + draftable_type + "\', " + draftable_id + ")", 10000);
      }
    },
    /*
    *   Clear autosave interval
    */
    deactivateAutosave: function(save_draft) {
      if(this.saveInterval) {
        window.clearInterval(this.saveInterval);
        this.saveInterval = false;
      }
    }
  };

  var draftConfig = $('script[data-init="topicDraft"]');
  if( draftConfig.length ) {
    var draftConfig = JSON.parse( draftConfig.text() );
    Draft.initilizeDraft( "post_text", "Topic", draftConfig.topic_id, draftConfig.saved_draft );
  }

})(jQuery);
/*1.0*/
// Moved from TopicHelper#invite_form_callback_js which put this on the page
// Moved from _post_form.html.erb (and modified to use JS instead of Ruby
// for testing @user.guest? and added check for form existence
jQuery(function($) {
  'use strict';

  /*
   * Handle button enabling/disabling on form submission!
   * TODO: handle this in backbone? Dunno if that makes enough sense.
   */
  var replyForm = $('.reply-form');
  var form = replyForm.find('#new_post');
  var form_error = form.find('.additional-reply-fields .sui-alert');
  var submit_button = form.find('button[type="submit"]');

  if( !form.length ) {
    return;
  }

  if( CurrentUser.guest() ) {
    form.ajaxFormUnbind();

    form.on('submit', function(event) {
      event.preventDefault();
      Topic.setupGuestState('#{escape_javascript(post.topic.subject)}');
      return false;
    });
  }
  else {
    form.on('submit', function(event) {
      submit_button.attr('disabled', true);
    });
  }

  form.on('ajax:error', function(event, jqXHR) {
    if (jqXHR.status == 0 || jqXHR.status >= 500) {
      // Handle server errors, don't enable button and show error
      form_error.text("Well, that didn't work as expected. Contact support if this happens again.").addClass('error').show();
      submit_button.attr('disabled', true);
      return;
    }

    if (jqXHR.status == 400) {
      // Validation failed
      var response_errors = $.parseJSON(jqXHR.responseText).errors;

      // Custom error handling for attachment errors
      if ("post_attachment" in response_errors) {
        var wysi_editor = $('#post_text').data('wysihtml5');

        // There was a validation error with the attachment, show error in editor
        wysi_editor.showError(response_errors.post_attachment);
        TopicReply.showForm();
        setTimeout(function () {
          wysi_editor.hideError();
        }, 5000);
      }
    }

    // Otherwise enable submit button and let them attempt again
    submit_button.attr('disabled', false);
  });
});
/*1.0*/




jQuery(function($) {
  if( window.TopicConfig ) {
    // For setup in _form_prompt.html.erb
    if( window.TopicConfig.allow_prompt !== undefined ) {
      Topic.allowPrompt = window.TopicConfig.allow_prompt;
    }
    if( window.TopicConfig.call_check_leaving ) {
      Topic.checkLeaving();
    }
  }
});

var RichTextEditor;
var PostAttachment;
var TopicReply = {
  scrollTo: function(elem, duration, after) {
    if(!after) {
      after = function() {};
    }

    if(!(elem instanceof jQuery)) {
      elem = jQuery('#' + elem);
    }

    if(!elem.length) {
      elem = jQuery('#bottom_message');
    }

    if(!elem.length) {
      elem = jQuery('.locked_topic_message');
    }

    var offset = elem.offset().top - 150;
    jQuery('html, body').animate({
      scrollTop: offset
    }, duration, after);
  },

  loadEditor: _.once(function(callback){
    var editorConfigElement = $('script[data-wysihtml]'),
        editorConfig;

    if(editorConfigElement.length === 0) {
      return;
    }

    editorConfig = JSON.parse(editorConfigElement.text());

    $.getScript(editorConfig.lazyLoadJs).done(function() {
      $('<link>')
        .appendTo('head')
        .attr({
          type: 'text/css',
          rel: 'stylesheet'
        })
        .attr('href', editorConfig.lazyLoadCss);
    });

    if (_.isFunction(callback)) {
      callback();
    }
  }),

  showForm: function(post_id, topicSubject, scrollSpeed, scrollCallback) {
    var scrollToTarget,
        wysiToolbar,
        topicReply,
        scrollTarget;

    scrollSpeed = scrollSpeed || 2000;

    if(jQuery('#postform')) {
      if(post_id){
        jQuery('#original_post_id').val(post_id);
      }

      scrollToTarget = function() {
        RichTextEditor.focus('post_text');
        RichTextEditor.resetDirty('post_text');

        if (typeof(scrollCallback) == 'function') {
          scrollCallback();
        } else {
          $('.reply-form').addClass('expanded');
        }
      }

      wysiToolbar = $('#post_text-wysihtml5-toolbar');
      if(wysiToolbar.length > 0) {
        topicReply = this;
        scrollTarget = wysiToolbar.is(':visible') ? wysiToolbar: $('#postform');

        if(!_.has($('#post_text').data(), 'wysihtml5')) {
          this.loadEditor(function(){
            topicReply.scrollTo(scrollTarget, scrollSpeed, scrollToTarget);
          });
        } else {
          this.scrollTo(scrollTarget, scrollSpeed, scrollToTarget);
        }
      }
      else {
        this.scrollTo($('#postform'), scrollSpeed);
      }
    } else {
      this.scrollTo(jQuery('#bottom_message'), scrollSpeed);
    }

    if( CurrentUser.guest() ) {
      GoogleAnalytics.trackEvent('Join', 'Guest Started Post', topicSubject);
    }

    if( User.kind == 'marketer' ) {
      jQuery.ajax({
        url: '/posts/send_google_events_for_post/0'
      });
    }
  },
  showErrors: function(errorFields) {
    if (errorFields.text) {
      jQuery("#postform div.post_body p.error").show().html("Text " + errorFields.text);
    } else {
      jQuery("#postform div.post_body p.error").html("");
    }

    if (errorFields.attachment) {
      jQuery("#post_attachment_error").show().html(errorFields.attachment);
      jQuery("#post_attachment_attached_file")[0].clear();
    } else {
      jQuery("#post_attachment_error").html("");
    }

    Form.Element.enable("post_form_submit");
  },
};

var NewTopic = {
  quote_original_post:function(e){
    var original_post_id = jQuery('#original_post_id').val();
    if(original_post_id){
      jQuery('#quote_original_post_indicator').fadeIn();

      jQuery.get('/posts/quote/' + original_post_id)
        .done(function(data) {
          var editor = jQuery('#post_text').data('wysihtml5').editor;
          var range = editor.composer.selection.getRange();
          if(range) {
            var line_text = range.startContainer.textContent;
            if(line_text && ! _.isEmpty( _.strip(line_text) )) {
              data = '<br>' + data;
            }
          }

          setTimeout( $.proxy( RichTextEditor.insertAtCursor, this, 'post_text', data ), 0 );
        })
        .fail(function(data) {
          alert('There was an error while fetching the quote.\n' +
                'Please contact Spiceworks if you continue to see this error.\n\n' +
                'Sorry for the inconvenience.');
        })
        .always(function(data) {
          jQuery('#quote_original_post_indicator').fadeOut();
        });
    }
  },
  seeMoreGroups:function(){
    jQuery('#see_more_groups').html('<em class="highlight">Loading...</em>');
  }
};

Topic = window.Topic || {};
_.extend( Topic, {
  allowPrompt: false,
  checkLeaving:function() {
    // It seems that Event.observe doesn't work in all browsers for the beforeunload event
    window.addEventListener("beforeunload", function (e) {
      if(RichTextEditor.isDirty('post_text') && Topic.allowPrompt) {
        var confirmationMessage = "You will lose any unsaved work if you continue.";

        (e || window.event).returnValue = confirmationMessage;     //Gecko + IE
        return confirmationMessage;                                //Webkit, Safari, Chrome etc.
      }
    });
  },
  promptWhenCancel:function(redirect) {
    Topic.allowPrompt = false;
    if(!RichTextEditor.isDirty('post_text') || confirm("Are you sure you want to navigate away from this page?\n\nYou will lose any unsaved work if you continue.\n\nPress OK to continue, or Cancel to stay on the current page.")) {
      document.location = redirect;
    }
    return false;
  },
  showDeleteForm: function(post_id) {
    jQuery('#delete_post_overlay').remove();
    jQuery.ajax({
      url: "/topic/show_delete_form/"+post_id,
      success: function(data) {
        jQuery('#delete_' + post_id).html(data.partial);
        jQuery('#delete_post_overlay').sui_modal({show: true, destroyOnHide: true});
      }
    });
  },
  initDeleteForm: function(post_id) {
    var form_id = '#delete_form_' + post_id;
    var button_id = '#' + post_id + '_delete_button';
    var status_id = '#' + post_id + '_delete_status';

    jQuery(form_id).on('submit', function() {
      jQuery(status_id).html('');
      jQuery(button_id).button('loading');
    });
    jQuery(form_id).on('ajax:success', function(e, data) {
      if(data.redirect) {
        window.location = data.redirect;
      }
      else {
        location.reload();
      }
    });
    jQuery(form_id).on('ajax:error', function(e, xhr, status, error) {
      jQuery(button_id).button('reset');
      var message = "";
      if(error == 'Internal Server Error') {
        message = 'Sorry, server error. Please try again later.';
      }
      else {
        message = jQuery.parseJSON(xhr.responseText).error;
      }
      jQuery(status_id).html(message);
    });

    var select_id = '#reason_template_' + post_id;
    jQuery(select_id).on('change', function() {
      jQuery(form_id + ' textarea[name=reason]').val(jQuery(select_id).val());
      jQuery(form_id + ' #deletion_reason_id').val(jQuery(select_id + " option:selected").attr("id"));
    });
  },
  setupGuestState: function(topicSubject) {
        var form = jQuery('form#new_post');

        Join.guestState({
          'text': escape(jQuery('#post_text').val()),
          'parent_id': jQuery('#post_parent_id').val(),
          'topic_id': jQuery('#post_topic_id').val(),
          'tags': jQuery('#post_tags').val(),
          'enable_notify': form.find('input[name="enable_notify"]').is(':checked'),
          'join_group': form.find('input[name="join_group"]').is(':checked'),
          'content_type': 'Post'
        });

        JoinAndLogin.showJoin({ message: 'Sign up for free to publish your post!' });

        if( CurrentUser.guest() ) {
            GoogleAnalytics.trackEvent('Join', 'Guest Submitted Post', topicSubject);
        }

        return false;
  }
});

var SPICE = window.SPICE || {};
SPICE.AnchorAdjustment = SPICE.AnchorAdjustment || {};
SPICE.AnchorAdjustment.checkForAnchor = function() {

  setTimeout(function() {
    var urlHash = window.location.hash;
    if(urlHash)
    {
      var targetAnchor = jQuery(urlHash);
      if(targetAnchor)
      {
        if(targetAnchor.offset())
        {
          var targetTop = Number(targetAnchor.offset().top) - 150; //Floating header height, not always visible, so we can't detect height
          if(targetTop)
          {
            window.scrollTo(0,targetTop);
          }
        }
      }
    }
  }, 100);

}

jQuery(function($) {
  //This will properly update the root post item to use image icons instead of text in the dropdown
  var elem = $('#topic').find('.sentiment-dropdown');
  var c = $.trim($(elem).text());
  $(elem).html('<img src="/assets/community/sentiments/sentiment_' + c + '.png">');

  //TODO: Make the links map to static for cdn lookup
  $('.sentiment-dropdown-positive').html('<img src="/assets/community/sentiments/sentiment_positive.png"> Positive');
  $('.sentiment-dropdown-neutral').html('<img src="/assets/community/sentiments/sentiment_neutral.png"> Neutral');
  $('.sentiment-dropdown-negative').html('<img src="/assets/community/sentiments/sentiment_negative.png"> Negative');

  //should work without this item below, but doesn't due to the data-remote true options: http://css-tricks.com/dangers-stopping-event-propagation/
  $('#topic').on('click','.sui-dropdown-menu .sentiment-dropdown-option',function(event){
    var selected = $(event.target).closest('.sui-dropdown-menu').find('a[data-selected="true"]');
    selected.attr('data-selected',false);

    var ct = '';
    var el = $(event.target);
    if(el.text() == ''){
      ct = $.trim(el.parent().text().toLowerCase());
      el.parent().attr('data-selected',true);
    }
    else{
      ct = $.trim(el.text().toLowerCase());
      el.attr('data-selected',true);
    }

    var elemt = el.closest('.sui-dropdown').find('.sentiment-dropdown');
    elemt.html('<img src="/assets/community/sentiments/sentiment_' + ct + '.png">');
  });

  /*
   * Collapse quote pyramids and insert a button for expanding them
   */
  $('.post_body').each(function() {
    var post = $(this);

    // need blockquotes, skip otherwise!
    if(post.find('blockquote blockquote').length) {
      var parent_quote = post.find('blockquote:first');
      var child_quotes = parent_quote.find('blockquote');
      child_quotes.hide();

      $('<div class="expand-quotes">+ expand</div>').appendTo(parent_quote);
      post.find('.expand-quotes').click(function(event) {
        var el = $(event.target);
        el.parent().find('blockquote').slideDown();
        el.hide();
      });
    }
  });

  //Anchor Adjustment
  SPICE.AnchorAdjustment.checkForAnchor();

  $(".save-draft-button").on('click',function(event){
    RichTextEditor.saveDraft("post_text");
  });

  // Functionality for onboarding#introduce_yourself for users from feed-ember
  $(document).ready(function() {
    var queryParams = document.location.search.replace(/(^\?)/,'').split("&").map(function(n){return n = n.split("="),this[n[0]] = n[1],this}.bind({}))[0];

    if(queryParams && queryParams.replyTo){
      var postId = parseInt(queryParams.replyTo) || null;
      var callback = postId ? setTimeout(function(){ $('a.quote-button').click(); }, 1500) : null;

      TopicReply.showForm(postId, null, 1000, callback);
    }
  });
  // End onboarding#introduce_yourself
});
/*1.0*/
jQuery(document).ready(function(){

  if( window.User && window.User.id ) {
    jQuery("a[data-ar-link-id]").each(function(){
      var id = jQuery(this).attr("data-ar-link-id");
      if(jQuery("#ar_modal").length == 0){
        var inner_modal =
          '<div class="ar_modal small" id="ar_main">'+
            '<div id="ar_center">'+
              '<img alt="Loading" src="/assets/community/lightbox/loading.gif" />'+
              '<h2>Connecting to Spiceworks</h2>'+
            '</div>'+
          '</div>';
        var modal_html =
          '<div class="modal hide" data-backdrop="true" data-isdraggable="false" data-keyboard="true" id="ar_modal">'+
            '<div class="modal-body">'+
              inner_modal+
            '</div>'+
          '</div>';
        jQuery(this).before(modal_html);
      }
      jQuery(this).click(function(e){
        e.preventDefault();
        var modal = jQuery("#ar_modal").modal().find(".modal-body");
        modal.load("/app_redirects/"+id+"/redirect/?status=show", function(){
          var arm = jQuery("#ar_modal").addClass("update_host");
          var left = (jQuery(window).width()/2) - (arm.width()/2);
          var top = (jQuery(window).height()/2) - (arm.height()/2);
          arm.css({'top':top+'px', 'left':left+'px'});
        });
      });
    });
  }
  else {
    jQuery("a[data-ar-link-id]").each(function(){
      var id = jQuery(this).attr("data-ar-link-id");
      jQuery(this).click(function(event){
        event.preventDefault();
        JoinAndLogin.showLogin();
      });
    });
    function app_redirect(){
      return false;
    }
  }

});
/*1.0*/
/*!
 * jQuery UI Touch Punch 0.2.3
 *
 * Copyright 2011–2014, Dave Furfero
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Depends:
 *  jquery.ui.widget.js
 *  jquery.ui.mouse.js
 */

!function(a){function f(a,b){if(!(a.originalEvent.touches.length>1)){a.preventDefault();var c=a.originalEvent.changedTouches[0],d=document.createEvent("MouseEvents");d.initMouseEvent(b,!0,!0,window,1,c.screenX,c.screenY,c.clientX,c.clientY,!1,!1,!1,!1,0,null),a.target.dispatchEvent(d)}}if(a.support.touch="ontouchend"in document,a.support.touch){var e,b=a.ui.mouse.prototype,c=b._mouseInit,d=b._mouseDestroy;b._touchStart=function(a){var b=this;!e&&b._mouseCapture(a.originalEvent.changedTouches[0])&&(e=!0,b._touchMoved=!1,f(a,"mouseover"),f(a,"mousemove"),f(a,"mousedown"))},b._touchMove=function(a){e&&(this._touchMoved=!0,f(a,"mousemove"))},b._touchEnd=function(a){e&&(f(a,"mouseup"),f(a,"mouseout"),this._touchMoved||f(a,"click"),e=!1)},b._mouseInit=function(){var b=this;b.element.bind({touchstart:a.proxy(b,"_touchStart"),touchmove:a.proxy(b,"_touchMove"),touchend:a.proxy(b,"_touchEnd")}),c.call(b)},b._mouseDestroy=function(){var b=this;b.element.unbind({touchstart:a.proxy(b,"_touchStart"),touchmove:a.proxy(b,"_touchMove"),touchend:a.proxy(b,"_touchEnd")}),d.call(b)}}}(jQuery);
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["discussions/templates/poll_choice"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<input id=\'poll_choices__id\' name=\'poll_choices[][id]\' type=\'hidden\' value=\'-1\' class=\'hidden\'>\n<input id=\'poll_choices__name\' name=\'poll_choices[][name]\' placeholder=\'Poll option\' type=\'text\' value=\'\' class=\'text\' maxlength=\'100\'>\n<i class=\'sui-icon sui-icon-close sui-icon--gray sui-icon--16\' data-action=\'remove-poll-choice-js\'></i>\n</div>\n');}return __p.join('');};
}).call(this);
/*1.0*/



(function($) {
  window.TopicPolls = {
    initPollForm: function() {
      var addChoice = function(){
        var choiceRow = ["<div class='poll-choice-add'>"];
        if($('[data-checkbox-options] [data-input="randomized"]').is(":checked")) {
          choiceRow.push("<i class='icon-drag icon-light'></i>");
        }
        else {
          choiceRow.push("<i class='sui-icon sui-icon-drag sui-icon--16 enabled'></i>");
        }
        var html = JST['discussions/templates/poll_choice']()
        choiceRow.push (html)
        choiceRow = choiceRow.join("");
        $('[data-poll-choice-control="add-rows"]').append(choiceRow);
      };
      // add default number of poll choices
      var numDefaultChoices = 2;
      if ( $("[data-choice-id]").length == 0 ){
        for(i = 0; i < numDefaultChoices; i++){
          addChoice();
        }
      }
      $(".topic-poll-option").on("click", "[data-action='add-topic-poll-js']", function(event) {
        event.preventDefault();
        $("[data-action='add-topic-poll-js']").hide();
        $(".topic-add-poll-controls").slideDown(500);
        $("input#has_poll").val("true");
      });

      $(document).on("change", "[data-forum-poll-enabled=true] input", function() {
        if($(".topic-poll-option").is(".hidden")) {
          $("[data-action='add-topic-poll-js']").show();
          $(".topic-poll-option").removeClass("hidden");
        }
      });

      $(document).on("change", "[data-forum-poll-enabled=false] input", function() {
        if(!$(".topic-poll-option").is(".hidden")) {
          $(".topic-add-poll-controls").slideUp(500, function() {
            $(".topic-poll-option").addClass("hidden");
            $("input#has_poll").val("false");
          });
        }
      });

      $("#topic-edit-poll-form").on("ajax:error", function(event, data) {
        try{
          var jsonMsg = JSON.parse(data.responseText)["errors"];
        }
        catch(e){
          var jsonMsg = "Could not save poll";
        }

        $(".poll-edit-error-msg").html(jsonMsg);
        window.setTimeout(function() {
          $(".poll-edit-error-msg").html("");
        }, 5000);
      });

      $(".topic-poll-option").on("click", "[data-action='remove-topic-poll-js']", function(event) {
        event.preventDefault();
        if($(event.target).data("oldPoll")) {
          if(!confirm("Are you sure you want to remove this poll from this topic?")) {
            return false;
          }
        }

        $(".topic-add-poll-controls").slideUp(500, function() {
          $("[data-action='add-topic-poll-js']").show();
        });
        $("input#has_poll").val("false");
      });

      $(".topic-poll-option").on("click", "[data-action='remove-poll-choice-js']", function(event) {
        $(this).closest(".poll-choice-add").remove();
      });

      $(".poll-choices-add-rows").sortable({
        handle: ".sui-icon-drag.enabled",
        axis: "y",
        items: ".poll-choice-add",
        containment: 'parent'
      });

      $(".topic-poll-option").on("change", "input#poll_allow_multi_votes", function(event) {
        if($(this).is(":checked")) {
          $(".poll-max-votes-input").slideDown(500);
        }
        else {
          $(".poll-max-votes-input").slideUp(500);
        }
      });

      $(".topic-poll-option").on("click", "[data-action='add-poll-choice-js']", function(event) {
        event.preventDefault();
        addChoice();
      });

      $(".topic-poll-option").on("click", "[data-action='remove-old-choice-js']", function(event) {
        if(confirm("Are you sure you want to remove this option? This will remove all votes for this option.")) {
          var $wrapper = $(this).closest(".poll-choice-add");
          var choiceId = $wrapper.data("choiceId");
          $(".merge-target-select option[value='" + choiceId + "']").remove();
          $wrapper.remove();
        }
      });

      $(".topic-poll-option").on("change", "input#randomized", function(event) {
        if($(this).is(":checked")) {
          $(".poll-choice-add .sui-icon-drag").removeClass("enabled");
        }
        else {
          $(".poll-choice-add .sui-icon-drag").addClass("enabled");
        }
      });

     $(".topic-poll-option").on("click", "[data-action='merge-option']", function(event) {
        event.preventDefault();
        var $wrapper = $(event.currentTarget).closest(".poll-choice-add");
        var choiceId = $wrapper.data("choiceId");
        $(".merge-target-select option[value='" + choiceId + "']").prop("selected", false).prop('disabled', true);
        $(".choices-select-list select").clone().insertAfter($wrapper.find(".merge-controls label"));
        $wrapper.find(".merge-controls select option[value='" + choiceId + "']").remove();
        $wrapper.find(".edit-choice-controls").fadeOut(300, function() {
          $wrapper.find(".merge-controls").fadeIn(300);
        });
      });

     $(".topic-poll-option").on("click", "[data-action='undo-merge']", function(event) {
        event.preventDefault();
        var $wrapper = $(event.currentTarget).closest(".poll-choice-add");
        var choiceId = $wrapper.data("choiceId");
        $(".merge-target-select option[value='" + choiceId + "']").prop('disabled', false);
        $wrapper.find(".merge-controls").fadeOut(300, function() {
          $wrapper.find(".edit-choice-controls").fadeIn(300);
          $wrapper.find(".merge-controls select").remove();
        });
      });
    },

    initPollShow: function() {
      $(".topic-poll-wrapper").on("click", ".change-view-link", function(event) {
        event.preventDefault();
        $.ajax({
          url: $(this).attr("data-post-target"),
          type: "POST"
        })
        .done(function(data, status, jqXHR) {
          $(".topic-poll-wrapper").fadeOut(500, function() {
            $(".topic-poll-wrapper").html(data.partial);
            $(".topic-poll-wrapper").fadeIn(500, function() {
              TopicPolls.initPollVoteSubmit();
            });
          });
        });
      });

      $(".topic-poll-wrapper").on("click", "[data-action='add-option-by-user']", function(event) {
        event.preventDefault();
        if(User && User.kind == "guest") {
          TopicPolls.setPollOptionGuestState();
          JoinAndLogin.showLogin({ message: "Please login to add new option to the poll." });
          return false;
        }

        if($("input#add_user_option").val().length > 0) {
          $.ajax({
            url: $(this).attr("href"),
            type: "POST",
            dataType: "json",
            data: {"choice_name": $("input#add_user_option").val()}
          })
          .done(function(data, status, jqXHR) {
            if(data.partial) {
              $(".add-choice-control").removeClass("error");
              $(".add-choice-error").slideUp(500).html("");

              $(".choices-for-voting").append(data.partial);
              $(".poll-choices-controls .poll-choices-add-rows").html(data.editPartial);

              if($(".topic-poll").data("maxVotes")) {
                var maxVote = parseInt($(".topic-poll").data("maxVotes"));
                var limitReached = $(".topic-poll").find(".poll-choice input:checked").size() >= maxVote;
              }
              else {
                var limitReached = false;
              }
              if(!limitReached) {
                $(".poll-choice:last-child input[name='choices[]']").prop('checked', true);
              }
              TopicPolls.setOptionsDisabled();


              $("input#add_user_option").val("");
            }
          })
          .fail(function(data, status, jqXHR) {
            $(".add-choice-control").addClass("error");
            try {
              $(".add-choice-error").html(JSON.parse(data.responseText).errors);
            }
            catch(e){
              $(".add-choice-error").html("Could not add option. Try reloading the page.");
            }
            $(".add-choice-error").slideDown(500);
            window.setTimeout(function() {
              $(".add-choice-error").slideUp(500).html("");
            }, 5000)
          });
        }
      });

      $(".topic-poll-wrapper").on("click", "[data-action='show-voters-modal']", function(event) {
        event.preventDefault();
        $.ajax({
          url: $(this).attr("href"),
          type: "GET"
        }).done(function(data, status, jqXHR) {
          $("#poll_choice_voters .sui-modal_body").html(data.partial);
          $("#poll_choice_voters").sui_modal("show");
        });
      });

      TopicPolls.initPollVoteSubmit();
    },

    initPollPopup: function() {
      $(".topic-listing-poll-marker").on("tooltip:shown", function(event) {
        TopicPolls.animateBars( $(event.currentTarget).data('pjaxPopover').tip() );
      });


      $(".topic-listing-poll-marker").on("tooltip:hidden", function(event) {
        $(event.currentTarget).data('pjaxPopover').tip().find('.poll-result-bar').hide();
      });
    },

    popupOptionSubmit: function(event) {
      event.preventDefault();
      var targetLink = $(event.target).closest("a");
      var targetVal = $(event.target).closest(".add-choice-control").find("input#add_user_option").val()
      window.location = targetLink.attr("href") + "?choice_name=" + encodeURIComponent(targetVal);
    },

    setOptionsDisabled: function(topicPoll) {
      if(!topicPoll) {
        var topicPoll = $(".topic-poll");
      }
      if(topicPoll.data("maxVotes")) {
        var maxVote = parseInt(topicPoll.data("maxVotes"));
        var limitReached = topicPoll.find(".poll-choice input:checked").size() >= maxVote;
        topicPoll.find(".poll-choice input:checkbox").not(":checked").attr("disabled", limitReached);
      }
    },

    checkPollVotesLimit: function(event) {
      var topicPoll = $(event.target).closest(".topic-poll");
      TopicPolls.setOptionsDisabled(topicPoll);
    },

    setEnterDefaultAction: function(event) {
      var topicPoll = $(event.target).closest(".topic-poll");
      if(!topicPoll) {
        var topicPoll = $(".topic-poll");
      }
      topicPoll.find("input#add_user_option").keypress(function (e) {
        e.stopPropagation();
        var key = e.which;
        if(key == 13)  // enter key
        {
          topicPoll.find("[data-action='add-option-by-user']").click();
          return false;
        }
      });
      $(event.target).prop("onfocus",null).off("focus");
    },

    initPollVoteSubmit: function() {
      $("#poll-voting-form").json_form();
      $("#poll-voting-form .add-submit-vote-bttn").on("click", function(event) {
        if(User && User.kind == "guest") {
          TopicPolls.setPollVotesGuestState();
          JoinAndLogin.showLogin({ message: "Please login to submit your vote." });
          return false;
        }
        else if( $(" input#add_user_option").length && $("input#add_user_option").val().length > 0 ) {
          if(!confirm("New option '" + $(" input#add_user_option").val() + "' will be discarded. Proceed?")) {
            return false;
          }
        }
        else if($(".topic-poll .poll-choice input[name='choices[]']:checked").length <= 0) {
          $(".vote-error-message").html("You must submit at least one vote.");
          window.setTimeout(function() {
            $(".vote-error-message").html("");
          }, 5000);
          return false;
        }
        else {
          $(".vote-error-message").html("");
          return true;
        }
      });
      $("#poll-voting-form").on("ajax:success", function(event, data) {
        $(".topic-poll-wrapper").fadeOut(500, function() {
          $(".topic-poll-wrapper").html(data.partial);
          $(".topic-poll-wrapper").fadeIn(500, function() {
            TopicPolls.initPollVoteSubmit();
          });
        });
      });

      $("#poll-voting-form").on("ajax:error", function(event, data) {
        try{
          var jsonMsg = JSON.parse(data.responseText);
        }
        catch(e){
          var jsonMsg = {"login_require": false, "errors": "Could not submit vote."};
        }
        if(jsonMsg["login_require"]) {
          TopicPolls.setPollVotesGuestState();
          JoinAndLogin.showLogin({ message: "Please login to submit your vote." });
        }
        else {
          $(".vote-error-message").html(jsonMsg["errors"]);
          window.setTimeout(function() {
            $(".vote-error-message").html("");
          }, 5000);
        }
      });
    },

    initPollResultBars: function() {
      window.setTimeout(function() {
        TopicPolls.animateBars();
      }, 1000);
    },

    animateBars: function(pollElem) {
      if (pollElem) {
        var resultBars = pollElem.find(".poll-result-bar");
      }
      else {
        var resultBars = $(".poll-choices-listing .poll-result-bar");
      }
      if(resultBars.is(':hidden')) {
        var time = 800;
        var maxVote = $(resultBars[0]).data("votesCount");
        var maxLength = resultBars.parent().width();
        resultBars.each(function(index) {
          var votesCount = $(this).data("votesCount");
          var barLength = TopicPolls.calculateBarlength(votesCount, maxVote, maxLength);
          $(this).css("width", barLength + "px");
          $(this).animate({width: "toggle"}, time);
          time += 100;
        });
      }
    },

    calculateBarlength: function(votesCount, maxVote, maxLength) {
      if(maxVote <= 0) {
        return 0;
      }
      else if(votesCount == maxVote) {
        return maxLength;
      }
      else {
        return (maxLength / maxVote) * votesCount;
      }
    },

    initTopicsListing: function() {
      $( document ).ready(function() {
        if($(".topic-listing-poll-marker").length > 0) {
          $('[data-popup-url]').pjaxPopover();
          TopicPolls.initPollPopup();
        }
      });
    },

    setPollVotesGuestState: function() {
      var topicId = $("article").data("id");
      var votesList = $(".topic-poll .poll-choice input:checked").map(function() {
        return $(this).val();
      }).get();
      if(votesList.length > 0) {
        Join.guestState({
          'topic_id': topicId,
          'votes': votesList,
          'content_type': 'PollVote'
        });
      }
    },

    setPollOptionGuestState: function() {
      var topicId = $("article").data("id");
      if($("input#add_user_option").val().length > 0) {
        Join.guestState({
          'topic_id': topicId,
          'option_name': $("input#add_user_option").val(),
          'content_type': 'PollChoice'
        });
      }
    }
  }

  $(function() {
    if( window.TopicPollsConfig ) {
      var config = window.TopicPollsConfig;

      if( config.init_poll_form ) {
        TopicPolls.initPollForm();
      }

      if( config.set_options_disabled ) {
        TopicPolls.setOptionsDisabled();
      }

      if( config.init_poll_show ) {
        TopicPolls.initPollShow();
      }

      if( config.init_poll_result_bars ) {
        TopicPolls.initPollResultBars();
      }

      TopicPolls.initTopicsListing();
    }
  });

})(jQuery);
/*1.0*/
(function($) {
  $( function() {
    var $postText = $('#post_text');

    // Only try to load if not already loaded
    if( $postText.length && !$.fn.wysihtml ) {
      var postTextTop = $postText.offset().top;

      var loadEditorIfVisible = _.throttle( function() {
        var windowThreshold = $(window).height(), // Load when editor is within 1 screen/page of current view
            editorTop = postTextTop - windowThreshold;

        if( $(window).scrollTop() >= editorTop ) {
          $(window).off( 'scroll.topicEditorLazyLoad' );
          TopicReply.loadEditor();
        }
      }, 100 );

      $(window).on( 'scroll.topicEditorLazyLoad', loadEditorIfVisible );
      loadEditorIfVisible(); // In case the editor is visible on page load
    }
  });
})(jQuery);
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["forum-popup-template"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div class="forum-popup" data-',(''+ forumType ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'-id=',(''+ popupId ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'>\n  <div class="forum-info">\n    <div class="forum-name">\n      ',(''+ name ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'\n    </div>\n    ');  if(notForum) { ; __p.push('\n      <div class="forum-followers">\n        ',(''+ numFollows ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),' ',  (numFollows == 1) ? "Follower" : "Followers" ,'\n      </div>\n    ');  } ; __p.push('\n  </div>\n  ');  if(!guest && notForum) { ; __p.push('\n    <div class="forum-following">\n      <div class="sui-bttn sui-bttn--small" data-action="follow-toggle" title="Unfollow">\n        ');  if(following) { ; __p.push('\n          Following\n        ');  } else { ; __p.push('\n          Follow\n        ');  } ; __p.push('\n      </div>\n    </div>\n  ');  } ; __p.push('\n</div>\n');}return __p.join('');};
}).call(this);
/*1.0*/

(function($) {
  $(document).ready(function() {
    var $popupLink = $("[data-forum-popup]");
    $popupLink.each(function() {
      $(this).data("popupHandler", new ForumPopup($(this)));
    });
  });

  ForumPopup = function($element) {
    this.init($element);
  }

  ForumPopup.prototype = {
    init: function($element) {
      this.$forumLink = $element;
      this.forumType = $element.data("forumPopup");
      this.popupId = $element.data("groupId");

      this.$forumLink.hover(_.once($.proxy(this.initPopup, this)));
    },
    dataPath: function() {
      return "/api/v1/" + this.forumType + "/" + this.popupId + "/summary";
    },
    notForum: function() {
      return this.forumType !== "forums";
    },
    initPopup: function() {
      if(this.notForum()) {
        $.get(this.dataPath())
        .done($.proxy(this.popupFetched, this));
      }
      else {
        this.attachPopup();
      }
    },
    popupFetched: function(response) {
      var data = response.data.attributes;
      this.attachPopup(data.followers, data.viewer.is_following);
    },
    attachPopup: function(followers, following) {
      if(!this.notForum()) {
        followers = 0;
        following = false;
      }
      this.following = following;
      this.popupTemplate = JST['forum-popup-template'];
      this.$forumLink.after(this.popupTemplate({
        forumType: this.forumType,
        popupId: this.popupId,
        name: this.$forumLink.text(),
        numFollows: followers,
        following: following,
        notForum: this.notForum(),
        guest: User.kind === "guest",
      }));
      this.$popup = $("[data-" + this.forumType + "-id=" + this.popupId + "]");
      if(User.kind !== "guest" && this.notForum()) {
        this.$followBttn = this.$popup.find("[data-action='follow-toggle']");
        this.toggleTooltip();
        this.$followBttn.click($.proxy(this.toggleFollow, this));
      }
    },
    toggleTooltip: function() {
      if(this.following) {
        this.$followBttn.sui_tooltip('enable');
      }
      else {
        this.$followBttn.sui_tooltip('hide').sui_tooltip('disable');
      }
    },
    toggleFollowPath: function() {
      if(this.forumType === "vendor_pages") {
        return "/api/vendor_pages/toggle?vendor_page_id=" + this.popupId;
      }
      else {
        if(this.following) {
          return "/group/" + this.popupId + "/leave?no_response=true";
        }
        else {
          return "/group/" + this.popupId + "/join?no_response=true";
        }
      }
    },
    toggleFollow: function(event) {
      event.preventDefault();
      $.post(this.toggleFollowPath())
      .done($.proxy(this.toggleButton, this))
      .fail(UIHelpers.showUnhandledError);
    },
    toggleButton: function() {
      this.following = !this.following;

      if(this.following) {
        $UI.growl({type: "success", caption: "You're now following " + this.$forumLink.text()});
        this.$followBttn.text("Following");
      }
      else {
        $UI.growl({type: "success", caption: "You've unfollowed " + this.$forumLink.text()});
        this.$followBttn.text("Follow");
      }
      this.toggleTooltip();
    },
  }
})(jQuery);
/*1.0*/
//------------------------------------------------------------
// Post Paths
//------------------------------------------------------------
Discussions.post_path             = function(postId)   { return '/posts/' + postId; };
Discussions.edit_post_path        = function(postId)   { return '/posts/' + postId + '/edit'; };
Discussions.mute_post_path        = function(postId)   { return '/api/posts/' + postId + '/mute'; };
Discussions.unmute_post_path      = function(postId)   { return '/api/posts/' + postId + '/unmute'; };
Discussions.delete_post_path      = function(postId)   { return '/api/posts/' + postId; };
Discussions.undelete_post_path    = function(postId)   { return '/api/posts/' + postId + '/undelete'; };
Discussions.report_post_path      = function(postId)   { return '/spam_reports/new?item_type=Post&item_id=' + postId; };
Discussions.delete_modal_path     = function(postId)   { return '/posts/delete_modal/' + postId; };
Discussions.admin_events_path     = function(postId)   { return '/admin_event/target/Post/' + postId; };
Discussions.posts_index_path      = function()         { return '/api/posts'; };
Discussions.post_ip_lookup_path   = function(ipAddress) { return '/admin/ip_lookup?ip=' + ipAddress; };

//------------------------------------------------------------
// Topic Paths
//------------------------------------------------------------
Discussions.no_answer_needed_path = function(topicId)  { return '/topic/no_answer_needed/' + topicId; };
Discussions.answer_needed_path    = function(topicId)  { return '/topic/answer_needed/' + topicId; };
Discussions.stick_topic_path      = function(topicId)  { return '/topic/stick_topic/' + topicId; };
Discussions.unstick_topic_path    = function(topicId)  { return '/topic/unstick_topic/' + topicId; };
Discussions.toggle_spotlight_path = function(topicId)  { return '/topic/change_spotlight/' + topicId; };
Discussions.users_report_path     = function(topicId)  { return '/topic/conversation_report/' + topicId; };
Discussions.lock_topic_path       = function(topicId)  { return '/topic/lock/' + topicId; };
Discussions.unlock_topic_path     = function(topicId)  { return '/topic/unlock/' + topicId; };
Discussions.forums_for_move_path  = function(topicId) { return '/topic/forums_for_move/' + topicId; };
Discussions.vendor_pages_for_move_path  = function(topicId) { return '/topic/vendor_pages_for_move/' + topicId; };
Discussions.change_moderation_path = function(topicId) { return '/topic/change_moderation/' + topicId; };
Discussions.add_employee_moderation_path = function(topicId) {return '/topic/add_moderation_for_employees/' + topicId; };
Discussions.remove_employee_moderation_path = function(topicId) {return '/topic/remove_moderation_for_employees/' + topicId; };
Discussions.crop_image_path = function(topicId) { return '/topic_images/' + topicId + '/crop'; }
Discussions.subscribe_path = function() { return '/topic/subscribe/'; }
Discussions.unsubscribe_path = function() { return '/topic/unsubscribe'; }

Discussions.forums_for_tagging_path  = function() { return '/topic/forums_for_tagging/'; };
Discussions.forum_path = function(forum) { return '/forum/' + forum.id; };
Discussions.update_forums_path = function(topicId) { return '/topic/update_forums/' + topicId; };
Discussions.ip_lookup_admin_path = function(ipAddr) { return '/admin/ip_lookup?ip=' + ipAddr; };
Discussions.invite_friend_path = function() { return '/join/invite_user'; };

//------------------------------------------------------------
// Muting Paths
//------------------------------------------------------------
Discussions.mute_author_path    = function(authorId, postId) { return '/user_mutes/mute?muted_id=' + authorId + "&mute_location=topic&mute_location_url=/posts/" + postId; };
Discussions.unmute_author_path    = function(authorId) { return '/user_mutes/unmute?muted_id=' + authorId; };
Discussions.muted_authors_path    = function()         { return '/user_mutes/muted_authors_for_topic'; };

//------------------------------------------------------------
// Group Paths
//------------------------------------------------------------
Discussions.group_can_sticky_topic_path    = function(groupId) { return '/group/' + groupId + '/can_sticky_topic'; };

//------------------------------------------------------------
// Notes Paths
//------------------------------------------------------------
Discussions.notes_path = function(topicId, noteType) { return "/topic_notes?note_type=" + noteType + "&topic_id=" + topicId; }
Discussions.note_path = function(noteId) { return "/topic_notes/" + noteId; }

//------------------------------------------------------------
// Random Other Paths
//------------------------------------------------------------
Discussions.spread_spiceworks_path = function() { return '/spread-spiceworks'; }
;
/*1.0*/
$UI.app.module('People', function(People, App, Backbone, Marionette, $, _) {

  Discussions.Models.User = Backbone.Model.extend({

    defaults: {
      subscribed_to_topic: false,
      subscribe_on_reply: false
    },

    isGuest: function() {
      return this.get('kind') === 'guest';
    },

    hasAbility: function(ability) { // 'ability' means the special Community 'Abilities'
      return (this.get('abilities') || {})[ability];
    },
    // Be sure to use `hasAdminPermission` for any checks in `discussions-admin` b/c `hasAnyAdminPermissions`
    // uses the same logic & is used in deciding whether or not to load `discussions-admin`
    hasAdminPermission: function( permission ) { // Separate from hasAbility b/c not all permissions use those yet
      return Discussions.Models.User.adminPermissions[permission](this);
    },
    hasAnyAdminPermissions: function() {
      var _this = this;
      return _.find( _.values( Discussions.Models.User.adminPermissions ), function(predicateFunc) {
        return predicateFunc(_this);
      });
    }
  });

  Discussions.Models.User.adminPermissions = {
    viewTopicActivity: function(userModel) { return userModel.hasAbility('view topic activity'); },
    changeModeration: function(userModel) { return userModel.get('can_change_moderation'); },
    changeEmployeeModeration: function(userModel) { return userModel.get('kind') === 'admin'; },
    seeEmployeeModerationMessage: function() { return CurrentUser.employee(); },
    makeTopicSticky: function(userModel) { 
      return userModel.hasAbility('sticky topics') || userModel.get('group_admin');
     },
    editFeaturedImage: function(userModel) { return userModel.hasAbility('manage curated items'); },
    moveTopic: function(userModel) { 
      return userModel.hasAbility('move topic') || userModel.get('group_admin');
    },
    tagMultiForums: function(userModel) {
      return userModel.get('can_update_forum_tags');
    },
    seeAuthorHost: function(userModel) { return userModel.get('kind') === 'admin'; },
    manageContests: function(userModel) { return userModel.get('can_manage_contests'); },
    viewNotes: function(userModel) { return userModel.get('can_view_notes'); },
    viewTopicSubscriptions: function(userModel) { return userModel.hasAbility('view topic subscriptions'); },
    viewTopicReads: function(userModel) { return userModel.hasAbility('view topic reads'); }
  };
});
/*1.0*/
Discussions.Models.Topic  = Backbone.Model.extend({
  defaults: {
    needs_answer: false
  }
});
/*1.0*/
Discussions.Models.Post   = Backbone.Model.extend({
    defaults: {
      is_helpful_post: false,
      is_answer: false
    }
});
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["daily_challenge/explanation"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div class=\'challenge_question-explanation challenge_question\'>\n\n  <div class=\'challenge_question\'>\n    ');  if (correct) { ; __p.push('\n      <div class=\'answer-heading correct\'>\n        <img src=\'',(''+ UrlHelpers.asset_path("community/quiz/circle-check.svg") ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'\' class=\'answer-icon\'/>\n        Correct!\n      </div>\n    ');  } else { ; __p.push('\n      <div class=\'answer-heading incorrect\'>\n        <img src="',(''+ UrlHelpers.asset_path('community/quiz/icon-incorrect.png') ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'" class=\'answer-icon\'/>\n        Incorrect\n      </div>\n    ');  } ; __p.push('\n    <div class=\'challenge_question-title\'>\n      ',(''+ title ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'\n    </div>\n\n    <div class=\'sui-bttn-group challenge_question-choices\' data-toggle=\'buttons-radio\'>\n      <div class=\'challenge-question_choice-row\'>\n      <button class=\'sui-bttn challenge_question-choice correct explanation\' href=\'javascript:void(0)\'>\n        <img alt="Checkmark" class="challenge-question_choice-icon"\n             src="',(''+ UrlHelpers.asset_path('community/quiz/checkmark.png') ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'"\n             srcset="',(''+ UrlHelpers.asset_path('community/quiz/checkmark.png') ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),' 1x,\n                     ',(''+ UrlHelpers.asset_path('community/quiz/checkmark@2x.png') ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),' 2x">\n        ',(''+ correctChoice.choice ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'\n      </button>\n      ');  if (!correct) { ; __p.push('\n        <button class=\'sui-bttn challenge_question-choice incorrect explanation\' href=\'javascript:void(0)\'>\n          <span class="challenge-question_choice-icon incorrect">✕</span>\n          ',(''+ choice.choice ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'\n        </button>\n      ');  } ; __p.push('\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\'explanation-text\'>\n    <div class=\'explanation-heading\'>Explanation</div>\n    <div class=\'explanation-content\'>\n      ',  explanation ,'\n    </div>\n    ');  if (averageCorrect > 0 ) { ; __p.push('\n      <div class="circle-graph">\n        <div class="circle-graph_active-border">\n          <div class="circle-graph_circle">\n            <span class="circle-graph_percent-numeral" >0%</span>\n            <span class=\'circle-graph_percent-message\'>of IT pros got</span>\n            <span class=\'circle-graph_percent-message\'>this right</span>\n          </div>\n        </div>\n      </div>\n    ');  } ; __p.push('\n    ');  if (source) { ; __p.push('\n    <div class=\'source-heading\'>Source</div>\n    <div class=\'source-content\'>\n      ',  LinkHelpers.external_link_to(null, source) ,'\n    </div>\n    ');  } ; __p.push('\n    <div class=\'next-button-container\'>\n      <a class=\'sui-bttn sui-bttn--primary challenge_question-submit next-question\' href=\'javascript:void(0)\'>\n        ');  if (typeof(lastQuestion) != 'undefined' && lastQuestion == true) { ; __p.push('\n          Finish quiz\n        ');  } else if (correct) { ; __p.push('\n          On to the next one!\n        ');  } else { ; __p.push('\n          Next question, please.\n        ');  } ; __p.push('\n      </a>\n    </div>\n  </div>\n</div>\n');}return __p.join('');};
}).call(this);
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["daily_challenge/overview"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div class=\'challenge_question-overview\'>\n\n  <div class=\'overview-message\'>\n    <div class=\'overview-header\'><strong>',(''+ overviewIntro ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'</strong> You got ',(''+ correct ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),' correct.</div>\n    <div class=\'overview-info\'>\n      Want to sharpen your IT skills? Start the Daily Challenge! With a new question each day you can build your streak,\n      land on the monthly leaderboard, and compete with fellow pros; all while leveling-up your\n      IT know-how.\n    </div>\n    <div class=\'overview_button-message\'>Sign up to get in the game!</div>\n\n    <div class=\'daily-challenge_join_form\'>\n    </div>\n  </div>\n\n  <div class=\'daily-challenge_leaderboard\'>\n    <div class=\'leaderboard_container\'>\n      <ul>\n        <li class=\'leaderboard_header\'>Daily Challenge Leaderboard</li>\n        ');  _.each(leaderboard, function(row, i) { ; __p.push('\n          <li class=\'leaderboard_user-rank\'>\n            <div class=\'leaderboard_rank\'> ',(''+ row.attributes.user_rank ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),' </div>\n\n            <img class=\'leaderboard_avatar\'\n                 src=\'',(''+ UrlHelpers.avatar_path(row.attributes.user_info.avatars.medium.url) ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'\' />\n\n            ');  if (row.attributes.user_rank == 1) { ; __p.push('\n              <img class="crown" src="',(''+ UrlHelpers.asset_path('community/quiz/crown.svg') ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'">\n            ');  } ; __p.push('\n\n            <a class="user profile_link--user profile_link leaderboard_name"\n               data-author-id="',(''+ row.attributes.user_info.id ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'"\n               data-popup-url="/profile/popup/',(''+ row.attributes.user_info.name ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'"\n               href="/profile/show/',(''+ row.attributes.user_info.name ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'">\n               ',(''+ row.attributes.user_info.name ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'\n            </a>\n\n            <div class=\'leaderboard_question-counts\'>\n              <span class=\'correct\'> ',(''+ row.attributes.questions_correct ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),' </span> /\n              ');  totalQuestions = row.attributes.questions_correct + row.attributes.questions_incorrect ; __p.push('\n              ',(''+  totalQuestions ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'\n            </div>\n          </li>\n        ');  }); ; __p.push('\n      </ul>\n\n    </div>\n\n  </div>\n\n\n</div>\n');}return __p.join('');};
}).call(this);
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["daily_challenge/progress"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('');  for (var i = 0; i < numQuestions - 1; i++) { ; __p.push('\n  <div class=\'daily-challenge-progress_bubble\' data-position=',(''+ i ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'>\n    <div class=\'daily-challenge-progress_inner-bubble\' data-position=',(''+ i ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'></div>\n  </div>\n  <div class=\'daily-challenge-progress_divider\'></div>\n');  } ; __p.push('\n\n<div class=\'daily-challenge-progress_bubble\' data-position=',(''+ (numQuestions - 1) ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'>\n  <div class=\'daily-challenge-progress_inner-bubble\' data-position=',(''+ (numQuestions - 1) ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'></div>\n</div>\n');}return __p.join('');};
}).call(this);
/*1.0*/
(function() { this.JST || (this.JST = {}); this.JST["daily_challenge/question"] = function(obj){var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('<div class=\'challenge_question\'>\n\n  <div class=\'challenge_question-title\'>\n    <div class=\'challenge_question-group-container\'>\n      <a href="',(''+ '/group/' + groupId ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'" class=\'challenge_question-group-link\' target=\'_blank\'>',(''+ groupName ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'</a>\n    </div>\n    ',(''+ title ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'\n  </div>\n\n  <div class=\'challenge-question_error\' style=\'display: none;\'></div>\n\n  <div class=\'challenge_question-choices\'>\n\n    ');  _.each(choices, function(choice, i){  ; __p.push('\n      ');  if (i%2 == 0) { ; __p.push('\n        <div class=\'challenge-question_choice-row\'>\n      ');  } ; __p.push('\n      <button class=\'sui-bttn challenge_question-choice\' data-id=\'',(''+ choice.id ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'\' href=\'javascript:void(0)\'>\n        ',(''+ choice.choice ).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;'),'\n      </button>\n      ');  if (i%2 == 1) { ; __p.push('\n        </div>\n      ');  } ; __p.push('\n    ');  }); ; __p.push('\n\n  </div>\n  <div class=\'challenge-question_submit-container\'>\n    <a class=\'sui-bttn sui-bttn--primary challenge_question-submit\' href=\'javascript:void(0)\'>\n      Submit\n    </a>\n  </div>\n\n</div>\n');}return __p.join('');};
}).call(this);
/*1.0*/
var EmailOnlyJoin = {
  init: function(){
    jQuery('.email-only-join_form').json_form();

    jQuery('body').on('click', '.email-only-join_form [data-button-type="submit"]', function(event){
      if (jQuery('.email-only-join .extra-step_form #g-recaptcha').length !== 0) {
        event.preventDefault();
        EmailOnlyJoin.showExtraStep('captcha');
      }
    });

    jQuery('body').on('ajax:success', '.email-only-join_form', function(){
      if (jQuery('.email-only-join_form [name="registration[two_step]"]').val() === '1') {
        EmailOnlyJoin.showExtraStep('twoStep');
      }
    });
  },
  showExtraStep: function(type){
    var $joinForm = jQuery('.email-only-join_form'),
        $extraStep = jQuery('.email-only-join_extra-step'),
        $cancelButton = $extraStep.find('.form-cancel-button'),
        $actionButton = $extraStep.find('.form-action-button');

    $joinForm.hide();
    $extraStep.show();

    if(type === "captcha"){
      $captcha = $extraStep.find('#g-recaptcha');
      grecaptcha.render($captcha.get(0), {"sitekey": $captcha.data('sitekey')});
      $actionButton.text('Submit');
    }

    $cancelButton.click(function(event) {
      event.preventDefault();
      $joinForm.show();
      $extraStep.hide();
    });

    $actionButton.click(function(event){
      event.preventDefault();
      $actionButton.addClass('disabled');
      $actionButton.text('Loading...');

      if(type === 'captcha'){
        var captchaResp = $extraStep.find("textarea[name='g-recaptcha-response']");
        $joinForm.append(captchaResp);
      }
      if (type === 'twoStep' || jQuery('.email-only-join .extra-step_form .two-step.container').length !== 0){
        $joinForm.find('[name="registration[two_step]"]').val(0);
        $joinForm.find('[name="registration[two_step_agree]"]').val(1);
      }

      $joinForm.submit();
    });

    jQuery('body').on('ajax:error', '.email-only-join_form', function(){
      $joinForm.show();
      $extraStep.hide();
    });
  },
};
/*1.0*/




jQuery(document).ready(function(){
  jQuery("[data-action='show-daily-challenge']").on("click", function(event) {
    event.preventDefault();
    jQuery("[data-action='show-daily-challenge']").button('loading');
    if (DailyChallenge.questions.length === 0) {
      DailyChallenge.loadQuestions();
    }
    else {
      DailyChallenge.finishLoading();
    }
  });

  jQuery('body').on('click', '.email-only-join_form [data-button-type="submit"]', function(event){
    if (jQuery('.email-only-join_form [name="registration[two_step]"]').val() === '0'){
      GoogleAnalytics.trackEvent('Daily Challenge Guest ' + DailyChallenge.analyticsCategory, 'click', 'Register Button');
    }
  });

  jQuery('body').on('click', ".challenge_question-choice", function(){
    DailyChallenge.selectChoice(jQuery(this).attr('data-id'));
  });

  if ( jQuery('.daily-challenge--no-modal').length != 0 ) {
    DailyChallenge.loadQuestions();
  }

  jQuery('body').on('click', '.challenge-footer_start-quiz', function(){
    if (jQuery('.intro-question_question-choice.active').length > 0){
      DailyChallenge.loadQuestions();
    }
  });
  jQuery('body').on('click', '.intro-question_question-choice', function(){
    jQuery('.challenge-footer_start-quiz').addClass('is-active').removeClass('disabled');
  });

  jQuery('body').on('click', '.challenge-footer_start-quiz.is-active', function(){
    GoogleAnalytics.trackEvent('Daily Challenge Guest ' + DailyChallenge.analyticsCategory, 'click', 'Start Quiz Footer')
    GoogleAnalytics.trackEvent('Daily Challenge Guest ' + DailyChallenge.analyticsCategory, 'click', 'Submit Question 1');
  });

  DailyChallenge.initAnalytics();

});

var DailyChallenge = {
  questions: [],
  included: [],
  numAnswered: 0,
  currentQuestion: {},
  numCorrect: 0,
  questionOverride: false,
  analyticsCategory: '',
  overviewRendered: false,
  initAnalytics: function(){
     category = jQuery('.daily-challenge-container').attr('data-analytics-category');
     if (typeof(category) != 'undefined'){
       DailyChallenge.analyticsCategory = category;
     }
   },
  closeModal: function(){
    jQuery('.daily-challenge-modal').sui_modal('hide');
    if (DailyChallenge.analyticsCategory == 'Topic Footer') {
      JoinFooter.hideFooter();
    }
  },
  startModal: function(){
    jQuery('.daily-challenge-modal').sui_modal('show');
  },
  loadQuestions: function(){
    var questionsUrl = '/api/v1/questions/logged_out_questions';
    jQuery.ajax({
      url: questionsUrl,
      type: 'GET'
    })
    .done(function(data){
      JoinFooter.hideFooter();
      jQuery('.challenge-footer').css('z-index', '-1'); // Hide footer & don't let it reappear on resize
      DailyChallenge.questions = data.data;
      DailyChallenge.included = data.included;
      DailyChallenge.finishLoading();
    })
  },
  loadLeaderboard: function(){
    var leaderboardUrl = '/api/v1/questions/leaderboard';
    jQuery.ajax({
      url: leaderboardUrl,
      type: 'GET'
    })
    .done(function(data){
      DailyChallenge.leaderboard = data.data;
    })

  },
  finishLoading: function(){
    // check for overriding question
    if (jQuery('.challenge-question_question-override').length > 0){
      var question_json = JSON.parse(jQuery('.challenge-question_question-override').html());
      DailyChallenge.questionOverride = question_json;
    }

    DailyChallengeProgressBar.init();
    DailyChallenge.showNextQuestion();
    DailyChallenge.startModal();

    DailyChallenge.loadLeaderboard();
    jQuery("[data-action='show-daily-challenge']").button('reset');

    // Clear previous answered question if necessary
    jQuery('.challenge_question-choices .challenge_question-choice.active').removeClass('active');

    jQuery('body').on('click', '.challenge_question-submit:not(.next-question)', function(){
      var choice_id = jQuery('.challenge_question-choices .challenge_question-choice.active').attr('data-id');

      if (typeof(choice_id) == 'undefined') {
        jQuery('.challenge-question_error').html('Please select an answer.').show();
        return;
      }
      GoogleAnalytics.trackEvent('Daily Challenge Guest ' + DailyChallenge.analyticsCategory, 'click', 'Submit Question ' + (DailyChallenge.numAnswered + 1));
      DailyChallenge.answerQuestion();
    });
    jQuery('body').on('click', '.challenge_question-submit.next-question', function(){
      DailyChallenge.showNextQuestion();
    });
    jQuery('body').on('click', '.daily-challenge-modal_close-modal', function(){
      DailyChallenge.closeModal();
    });
    jQuery('body').on('sui_modal:hidden', '.daily-challenge-modal', function() {
      DailyChallenge.closeModal();
    })
    jQuery('.daily-challenge_spinner').hide();
    jQuery('.daily-challenge--no-modal').show();
  },
  answerQuestion: function(){
    var choice_id = jQuery('.challenge_question-choices .challenge_question-choice.active').attr('data-id');

    var choice = {};
    _.each(DailyChallenge.currentQuestion.choices, function(value, key, list){
      if(value.id === choice_id){
        choice = value;
      }
    });


    DailyChallenge.currentQuestion.correct = DailyChallenge.currentQuestion.correctChoice.id === choice.id;
    DailyChallenge.currentQuestion.choice = choice;
    DailyChallengeProgressBar.answer(DailyChallenge.currentQuestion.correct, DailyChallenge.numAnswered);

    DailyChallenge.numAnswered += 1;
    if (DailyChallenge.currentQuestion.correct) {
      DailyChallenge.numCorrect += 1;
    }

    if (DailyChallenge.numAnswered == DailyChallenge.questions.length) {
      DailyChallenge.currentQuestion.lastQuestion = true;
    }

    var html = JST['daily_challenge/explanation'](DailyChallenge.currentQuestion);
    jQuery('.daily-challenge-content').html(html);
    jQuery('.explanation-content a').attr('target', '_blank');
    DailyChallengeCircleChart.fill(DailyChallenge.currentQuestion.averageCorrect);
  },
  showNextQuestion: function(){
    if (DailyChallenge.questions.length == DailyChallenge.numAnswered) {
      GoogleAnalytics.trackEvent('Daily Challenge Guest ' + DailyChallenge.analyticsCategory, 'click', 'Show Overview');
      DailyChallenge.showOverview();
      return;
    }
    else {
      GoogleAnalytics.trackEvent('Daily Challenge Guest ' + DailyChallenge.analyticsCategory, 'click', 'Load Question ' + (DailyChallenge.numAnswered + 1));
    }
    if (DailyChallenge.questionOverride) {
      var question = DailyChallenge.questionOverride.data;
      DailyChallenge.included = DailyChallenge.included.concat(DailyChallenge.questionOverride.included);
    }
    else {
      var question = DailyChallenge.questions[DailyChallenge.numAnswered];
    }
    var relationships = question.relationships
    var attributes = question.attributes
    var title = attributes.title;
    var explanation = attributes.explanation;
    var source = attributes.source;
    var correctChoiceId = relationships.correct_choice.data.id;
    var averageCorrect = attributes.average_correct;
    var correctAnswers = attributes.correct_answers;
    var incorrectAnswers = attributes.incorrect_answers;
    var groupId = relationships.group.data.id;
    var groupName = "";
    var choiceIds = relationships.question_choices.data.map(function(obj){return obj.id});
    var choices = []

    for(var i = 0; i < DailyChallenge.included.length; i++){
      if (choices.length == choiceIds.length && groupName != ""){
        break;
      }
      obj = DailyChallenge.included[i];
      if (obj.type == 'question_choice' && choiceIds.indexOf(obj.id) >= 0){
        choices.push({id: obj.id, choice: obj.attributes.choice});
        if (obj.id === correctChoiceId){
          var correctChoice = {id: obj.id, choice: obj.attributes.choice};
        }
      }
      else if (obj.type == 'group' && obj.id == groupId){
        groupName = obj.attributes.name;
      }
    }

    DailyChallenge.currentQuestion = {
      title: title,
      explanation: explanation,
      source: source,
      averageCorrect: averageCorrect,
      correctAnswers: correctAnswers,
      incorrectAnswers: incorrectAnswers,
      choices: choices,
      groupName: groupName,
      groupId: groupId,
      correctChoice: correctChoice,
    };
    if (DailyChallenge.questionOverride) {
      DailyChallenge.questionOverride = false;
      // passing true skips the rendering of the html and executes all other setup
      DailyChallenge.renderQuestion(true);
      return DailyChallenge.answerQuestion();
    }
    else {
      DailyChallenge.renderQuestion();
    }
  },
  renderQuestion: function(skipDisplay){
    var skipDisplay = (typeof skipDisplay !== 'undefined') ?  skipDisplay : false;

    if (!skipDisplay){
      var html = JST['daily_challenge/question'](DailyChallenge.currentQuestion);
      jQuery('.daily-challenge-content').html(html);
    }
    DailyChallengeProgressBar.nextQuestion(DailyChallenge.numAnswered);
  },
  showOverview: function(){
    // resdisplay the overview if we have rendered it already
    if(DailyChallenge.overviewRendered){
      return
    }
    var correct = DailyChallenge.numCorrect
    var params = {correct: correct};
    var overviewIntro = "";
    var joinMessageIntro = "Want to grow your IT knowledge?";
    var joinMessage = "Begin the Spiceworks Daily Challenge and sharpen your IT skills.";
    switch(correct) {
      case 0:
        overviewIntro = 'Dang it!';
        break;
      case 1:
        overviewIntro = 'Eeek!';
        break;
      case 2:
        overviewIntro = 'Nice try!';
        break;
      case 3:
        overviewIntro = 'Not bad!';
        break;
      case 4:
        overviewIntro = 'Nice work!';
        joinMessageIntro = 'Want to continue playing?';
        joinMessage = 'Begin the Spiceworks Daily Challenge and test your IT wits.'
        break;
      case 5:
        overviewIntro = 'Whoa!';
        joinMessageIntro = 'Want to see how you stack up?';
        joinMessage = 'Begin the Spiceworks Daily Challenge and test your IT wits.'
    }
    params.overviewIntro = overviewIntro;
    params.joinMessageIntro = joinMessageIntro;
    params.joinMessage = joinMessage;
    params.leaderboard = DailyChallenge.leaderboard;

    var html = JST['daily_challenge/overview'](params);

    DailyChallengeProgressBar.nextQuestion(DailyChallenge.numAnswered);

    jQuery('.daily-challenge-content').html(html);
    jQuery('[data-popup-url]').pjaxPopover();

    // Load in the join form
    $joinContainer = jQuery('.daily-challenge_join-container');
    if ($joinContainer.length > 0) {
      var joinForm = $joinContainer.html();
      jQuery('.daily-challenge-content .daily-challenge_join_form').html(joinForm);
      $joinContainer.remove();
      EmailOnlyJoin.init();
    }
    DailyChallenge.overviewRendered = true;
  },
  selectChoice: function(id){
    jQuery('.challenge_question-choice').removeClass('active');
    jQuery('.challenge_question-choice[data-id=' + id + ']').addClass('active');
  },
  resetChallenge: function(){
    DailyChallenge.numAnswered = 0;
    DailyChallenge.currentQuestion = {};
    DailyChallenge.numCorrect = 0;
  }
};

var DailyChallengeProgressBar = {
  init: function(){
    if ( jQuery('.daily-challenge-progress_bubble').length != 0){
      return;
    }
    var progress = JST['daily_challenge/progress']({numQuestions: DailyChallenge.questions.length});
    jQuery('.daily-challenge-progress').append(progress);
    var position = DailyChallenge.numAnswered;
    jQuery('.daily-challenge-progress_bubble[data-position=' + position + ']').toggleClass('is-active');
    jQuery('.daily-challenge-progress_inner-bubble[data-position=' + position + ']').toggleClass('is-active');
  },
  answer: function(correct, position){
    var newClass;
    if (correct){
      newClass = 'is-correct';
    }
    else {
      newClass = 'is-incorrect';
    }
    jQuery('.daily-challenge-progress_bubble[data-position=' + position + ']').toggleClass(newClass);
    jQuery('.daily-challenge-progress_inner-bubble[data-position=' + position + ']').toggleClass(newClass);
  },
  nextQuestion: function(position){
    jQuery('.daily-challenge-progress_bubble.is-active').toggleClass('is-active');
    jQuery('.daily-challenge-progress_inner-bubble.is-active').toggleClass('is-active');
    jQuery('.daily-challenge-progress_bubble[data-position=' + position + ']').toggleClass('is-active');
    jQuery('.daily-challenge-progress_inner-bubble[data-position=' + position + ']').toggleClass('is-active');
  },
};

var DailyChallengeCircleChart = {
  circlePercent: 0,
  fill: function(percent){
    DailyChallengeCircleChart.circlePercent = percent;
    DailyChallengeCircleChart.increment(0);
  },
  increment: function(percent){
    var ordinalSuffixOf = function(i) {
        var j = i % 10
        var k = i % 100;
        if (j == 1 && k != 11) {
            return "st";
        }
        if (j == 2 && k != 12) {
            return "nd";
        }
        if (j == 3 && k != 13) {
            return "rd";
        }
        return "th";
    }
    if(percent > DailyChallengeCircleChart.circlePercent){
      return;
    }
    percent = Math.round(percent)
    var degrees = (percent/100)*360;
    var activeBorder = jQuery(".circle-graph_active-border");
    var suffix = jQuery('.circle-graph_percent-numeral').attr('data-suffix');
    var text = ''
    if (suffix == 'ordinal'){
      text = percent + ordinalSuffixOf(percent);
    }
    else {
      text = percent + '%'
    }
    jQuery(".circle-graph_percent-numeral").html(text);
    if (degrees<=180){
      activeBorder.css('background-image','linear-gradient(' + (90+degrees) + 'deg, transparent 50%, #e2e2e2 50%),linear-gradient(90deg, #e2e2e2 50%, transparent 50%)');
    }
    else{
      activeBorder.css('background-image','linear-gradient(' + (degrees-90) + 'deg, transparent 50%, #f58220 50%),linear-gradient(90deg, #e2e2e2 50%, transparent 50%)');
    }
    setTimeout(function(){
      DailyChallengeCircleChart.increment(percent + 1);
    }, 10);
  },
}
;
/*1.0*/
(function() {
  const IOS_UA = "Spiceworks Feed iOS";
  const ANDROID_UA = "Spiceworks Feed Android";

  const APP_TYPE_IOS =  'ios';
  const APP_TYPE_ANDROID =  'android';
  const APP_TYPE_WEB =  'web';
 
  window.mobileApp = window.mobileApp || {};
  window.mobileApp.MobileMessenger = MobileMessenger;

  var _validMessages = {
    // Default messages are the messages that were included before we implemented checks
    // for backwards compatibility
    default: [
      'userId',
      'groupId',
      'showLogin',
      'viewImage',
    ],
    // Extra messages are messages which may not be implemented in un-updated apps
    extra: [
      'flagPost',
      'replyPost',
      'spiceUp',
      'spiceDown',
      'spiceRemoval'
    ]
  };
      
  function MobileMessenger() {
    if(navigator.userAgent.indexOf(IOS_UA) >= 0) {
      this._app = APP_TYPE_IOS;
    } else if(navigator.userAgent.indexOf(ANDROID_UA) >= 0) {
      this._app = APP_TYPE_ANDROID;
    } else {
      this._app = APP_TYPE_WEB;
    }
  }

  MobileMessenger.prototype.hasMessage = function(name) {
    if( _validMessages.default.indexOf(name) >= 0 ) {
      return true;
    } else if( _validMessages.extra.indexOf(name) >= 0 ) {
      switch( this._app ) {
        case APP_TYPE_IOS:
          return this._hasIosMessage(name);
        case APP_TYPE_ANDROID:
          return this._hasAndroidMessage(name);
        default:
          return false;
      };
    }
    return false;
  }

  MobileMessenger.prototype.sendMessage = function(name, value) {
    if( this.hasMessage(name) ) {
      switch( this._app ) {
        case APP_TYPE_IOS:
          return this._sendIosMessage(name, value);
        case APP_TYPE_ANDROID:
          return this._sendAndroidMessage(name, value);
        default:
          return false;
      };
    }
  }
  MobileMessenger.prototype._hasIosMessage = function(name) {
    if( !window.webkit || !webkit.messageHandlers ) {
      return false;
    }
    return !!webkit.messageHandlers[name];
  }

  MobileMessenger.prototype._sendIosMessage = function(name, value) {
    if( this._hasIosMessage(name) ) {
      webkit.messageHandlers[name].postMessage(value);
      return true;
    } 
    return false;
  }

  MobileMessenger.prototype._hasAndroidMessage = function(name) {
    if( !window.Android || !Android.hasMessage ) { return false; }
    return Android.hasMessage(name);
  }

  MobileMessenger.prototype._sendAndroidMessage = function(name, value) {
    if( !window.Android || !Android.postMessage ) { return false; }
    Android.postMessage(name, value); 
    return true;
  }
})();
/*1.0*/

(function($, _) {
  var mobileMessenger = new window.mobileApp.MobileMessenger();
  window.mobileApp = window.mobileApp || {};
  window.mobileApp = _.extend(window.mobileApp, {
    categoryClick: categoryClick,
    authorClick: authorClick,
    viewImageEvent: viewImageEvent,
    getUserFromPostId: getUserFromPostId,
    postSpiced: postSpiced
  });

  function categoryClick (e) {
    e.preventDefault();
    var groupId = $(this).data('group-id').toString();
    mobileMessenger.sendMessage('groupId', groupId);
  }

  function authorClick (e) {
    e.preventDefault();
    var postId = $(this).closest('[data-id]').data('id').toString(),
      userId = getUserFromPostId(postId);

    if( userId ) {
      mobileMessenger.sendMessage('userId', userId);
    }
  }

  function viewImageEvent (e) {
    e.preventDefault();
    var imgUrl = $(e.currentTarget).find('img').attr('src');
    if( !/^http[s]?:\/\//.test(imgUrl) ) {
      imgUrl = location.protocol + imgUrl;
    }
    mobileMessenger.sendMessage('viewImage', imgUrl);
  }

  function getUserFromPostId (postId) {
    if( !window.CommentUserIds ) {
      return false;
    }
    return window.CommentUserIds[postId];
  }

  function postSpiced (e, spiceBttn, direction) {
      spicedState = spiceBttn.options.spicedstate,
      mobileMessengerNames = {
        '1': 'spiceUp',
        '0': 'spiceRemoval',
        '-1': 'spiceDown'
      },
      mobileMessengerName = mobileMessengerNames[String(SpicedState.toInt(spicedState))];

    mobileMessenger.sendMessage(mobileMessengerName, JSON.stringify({
      postId: this.postId, spiceScore: spiceBttn.options.spicecount
    }));
  }
})(jQuery, _);
/*1.0*/



(function($, $UI) {
  var mobileMessenger = new window.mobileApp.MobileMessenger();
  window.mobileApp = window.mobileApp || {};
  window.mobileApp = _.extend(window.mobileApp, {
    disablePopovers: disablePopovers,
    overrideJoinAndLogin: overrideJoinAndLogin,
    overrideDiscussionsBackbone: overrideDiscussionsBackbone,
    overrideHowTosBackbone: overrideHowTosBackbone
  });

  /*******************************************************************************
   * Override functions
   ******************************************************************************/
  function disablePopovers() {
    $('[data-popup-url]').each(function(e, i) {
      var popover = $(this).data('pjaxPopover');
      if(popover) {
        popover.enabled = false;
        $(this).data('pjaxPopover', popover);
      }
    });
  }

  function overrideJoinAndLogin() {
    if(JoinAndLogin && JoinAndLogin.show) {
      JoinAndLogin.show = function() {
        mobileMessenger.sendMessage('showLogin', 'true');
      }
    }
  }

  function overrideDiscussionsBackbone() {
    // Override Discussion backbone components so we can fire mobile app events
    if($UI.app.Discussions) {
      $UI.app.module("Discussions", overrideDiscussions);
    }
  }

  function overrideDiscussions(Discussions) {
    var events = Discussions.Views.Topic.prototype.events,

      initialize = Discussions.Views.Topic.prototype.initialize,
      topic = Discussions.Views.Topic.extend({
        initialize: function(params) {
          initialize.bind(this)(params);
          if( mobileMessenger.hasMessage('replyPost') ) {
            $('#postform form').hide();
          }
        },
        events: updateDiscussionEvents(events),
        lightboxPostImages: function (post) {
          _.each(post.find("img[data-id]"), wrapLightboxImages);
        }
      }),

      post = Discussions.Views.Post.extend({
        lightboxImages: function() {
          var post = this.$el;
          _.each(post.find('img[data-id]'), wrapLightboxImages);
        },
      }),

      rootPostControls = Discussions.Views.RootPostControls.extend({
        onRender: _addSpicedEvent(Discussions.Views.RootPostControls.prototype.onRender)
      }),

      postControls = Discussions.Views.PostControls.extend({
        onRender: _addSpicedEvent(Discussions.Views.PostControls.prototype.onRender)
      }),
      
      voter = Discussions.Views.Voter.extend({
        onRender: function() {
          $(this.el).find('[data-voter-id]').click(function(e) {
            e.preventDefault();
            mobileMessenger.sendMessage('userId', $(this).data('voterId'));
          });
        }
      });

    JST["backbone/tags/templates/flyout_user"] = _overrideUserTagTemplate;
    Discussions.Views.RootPostControls = rootPostControls;
    Discussions.Views.PostControls = postControls;
    Discussions.Views.Topic = topic;
    Discussions.Views.Post = post;
    Discussions.Views.Voter = voter;
    Discussions.Views.Voters = Marionette.CollectionView.extend({
      itemView: voter
    });

      
    function _overrideUserTagTemplate(options) {
      var userHash = TagUserIds[options.tag_id]
      mobileMessenger.sendMessage('userId', userHash)
    }

    function _addSpicedEvent(_super) {
      return function() {
        var postId = this.model.attributes.id;

        _super.bind(this)();
        $(this.el).find('.sui-spicebttn, .sui-spicelink').on('spiced', 
          mobileApp.postSpiced.bind({ postId: postId })
        );
      }
    }
  }

  function overrideHowTosBackbone () {
    // Override the HowTo backbone components so we can fire mobile app events
    if($UI.app.HowTos) {
      $UI.app.module("HowTos", overrideHowTos);
    }
  }

  function overrideHowTos(HowTos) {
    var events = HowTos.Views.Header.prototype.events,
      header = HowTos.Views.Header.extend({
        events: updateHowToEvents(events),
        categoriesClick: categoriesClick,
        authorClick: authorClick
      }),
      comment = HowTos.Views.Comment.extend({ 
        events: updateCommentsEvents,
        userClick: authorClick
      });

    HowTos.Views.Header = header;
    HowTos.Views.Comments = HowTos.Views.Comments.extend({ 
      itemView: comment
    });
  }

  /*******************************************************************************
   * Helper functions
   ******************************************************************************/

  function updateHowToEvents (events) {
    var events = events || HowTos.Views.Header.prototype.events || {};
    events['click .categories a'] = 'categoriesClick';
    events['click .author a'] = 'authorClick';
    events['click .avatar'] = 'authorClick';
    return events;
  }

  function updateDiscussionEvents (events) {
    var events = events || Discussions.Views.Topic.prototype.events || {};
    if( mobileMessenger.hasMessage('flagPost') ) {
      events['report_post'] = function (e, postId) {
        e.preventDefault();
        mobileMessenger.sendMessage('flagPost', postId);
      }
    }
    if( mobileMessenger.hasMessage('replyPost') ) {
      events['reply_post'] = function (e, postId) {
        e.preventDefault();
        mobileMessenger.sendMessage('replyPost', postId);
      }
    }
    return events;
  }

  function wrapLightboxImages(el) {
    var $el = $(el);
    $el.wrap('<a href="' + $el.attr('src') + '"></a>');
    $el.parents('a').click(window.mobileApp.viewImageEvent);
  }

  function updateCommentsEvents() {
    var events = HowTos.Views.Comment.prototype.events;
    events['click .author a'] = 'userClick';
    events['click div.avatar'] = 'userClick';
    return events;
  }

  function categoriesClick (e) {
    e.preventDefault();
    var groupId = $(e.currentTarget).data('groupId'.toString());
    mobileMessenger.sendMessage('groupId', groupId);
  }

  function authorClick(e) {
    e.preventDefault();
    mobileMessenger.sendMessage('userId', this.model.attributes.user.obfuscated_id);
  }

})(jQuery, $UI);

/*1.0*/


(function($) {
  if( ["Spiceworks Feed iOS",  "Spiceworks Feed Android"].indexOf(navigator.userAgent) < 0 ) {
    return;
  }

  window.mobileApp.overrideDiscussionsBackbone();
  window.mobileApp.overrideHowTosBackbone();

  $(document).ready(function() {
    var messenger = new window.mobileApp.MobileMessenger();
    // Override the show function to fire a message to the mobile app instead
    window.mobileApp.disablePopovers();
    window.mobileApp.overrideJoinAndLogin();

    $('[data-group-id]').click(window.mobileApp.categoryClick);
    $('[data-author-id] a, a[data-author-id]').click(window.mobileApp.authorClick);
    $('a[rel="lightbox"]').click(window.mobileApp.viewImageEvent);

    if( messenger.hasMessage('replyPost') ) {
      $('[data-reply][data-post_id]').off('click').click(function() {
        messenger.sendMessage('replyPost', $(this).data('post_id'));
      });
    }

  });

})(jQuery);
/*1.0*/
 // Used for the android feed mobile app banner, block banner on every page except '/my-feed/' and '/topic/'
 window.addEventListener('beforeinstallprompt', function(e) {
  if (!window.location.pathname.includes('/my-feed/') && !window.location.pathname.includes('/topic/')) {
    e.preventDefault();
  }
  return false;
});
/*1.0*/
(function($, $UI) {
  window.dynamicAdsBehavior = {
  init: function(){
    if(!$UI.useMobile) {
      this.slot2and8Setup();
      this.slot1Setup();
    }
  },
  teardown: false,
  slotTeardownWithTimeout: function($slot){
    if (this.teardown){
      return;
    }
    this.teardown = true;
    var _this = this;
    setTimeout(function(){
      _this.slotTeardown($slot);
    }, window.stickyAdTimeout * 1000);
  },
  slotTeardown: function($slot){
    this.teardown = true;
    $(window).off('scroll.stickyads');
    var slotHeight = $slot.outerHeight(true);
    $slot.on('animationend', function(){
      $slot.removeClass('affix');
    });
    $slot.addClass('animate');
    jQuery('.topic-header').removeClass('affix--noborder');
  },
  slot1Setup: function(){
    var $slot1 = jQuery('.slot-1-background');
    var $slot1_wrapper = jQuery('.slot-1-wrapper');
    this.teardown = false;
    var _this = this;

    if ($slot1.length === 0 ){
      return;
    }

    $(window).on('scroll.stickyads', function(){
      $slot1_wrapper.css({height: $slot1.outerHeight(true)});
      var top = $slot1_wrapper.offset().top;
      var y = $(window).scrollTop();
      var headerOffset = 0 ;
      var $header = jQuery('.topic-header.affix');
      var navoffset = 0;

      // It's possible for setup to complete before gekko loads
      if (!$slot1_wrapper.is(':visible')){
        _this.slotTeardown($slot1);
      }

      if ($header.length === 0){
        $header = jQuery('.navaffix');
        navoffset = $header.outerHeight();
      }

      if ($header.length !== 0){
        headerOffset = 46;
      }

      if ( y >= top - navoffset) {
        $slot1.addClass('affix');
        $slot1.css({top: headerOffset});
        $header.addClass('affix--noborder');

        _this.slotTeardownWithTimeout($slot1);
      }
      else {
        $slot1.removeClass('affix');
        $slot1.css({top: headerOffset});
        $header.removeClass('affix--noborder');
      }
    });
  },

  slot2and8Setup: function() {
    var $slot2 = $('#slot_2');
    var $slot8 = $('.slot-8-background');
    var $wrapper = $('.slot-8-wrapper');
    this.teardown = false;
    _this = this;

    if( $slot2.length && $slot8.length ) {
      $(window).on('scroll.stickyads', function(){
        var bottom = $wrapper.offset().top + $('#slot_8').height() - $(window).height(),
          top = $slot2.offset().top + $slot2.height(),
          y = $(window).scrollTop();

        if( y >= top && y < bottom ){
          $slot8.addClass('affix');
          _this.slotTeardownWithTimeout($slot8);
        }
        else if( y >= bottom || y < top ){
          $slot8.removeClass('affix');
        }
      });
    }
  }
}})(jQuery, $UI);
/*1.0*/
var MobileCollapse = {
  init: function($elementToCollapse, collapseHeight) {
    var $expandButton = jQuery('.bttn--mobile-root-post-expand');

    if($elementToCollapse.height() > collapseHeight || $elementToCollapse.hasClass('post-content-collapsed') ){
      $elementToCollapse.addClass('post-content-collapsed');
      $elementToCollapse.addClass('post-content-collapsed--gradient');
      $expandButton.css('display', 'block');
      $expandButton.addClass('is-collapsed');
    } 

    $expandButton.on('click', function(){
      $expandButton.toggleClass('is-collapsed');

      // get current height
      currentHeight = $elementToCollapse.height();

      // get true height
      trueHeight = $elementToCollapse.css('maxHeight', 'none').css('height', 'auto').height();

      if(currentHeight == trueHeight){
        $elementToCollapse.addClass('post-content-collapsed--gradient');
      } else {
        $elementToCollapse.removeClass('post-content-collapsed--gradient');
      }

      // reset height and revert to original if current and true are equal
      $elementToCollapse.css('height', currentHeight).animate({
        height: (currentHeight == trueHeight ? collapseHeight : trueHeight)
      }, 'slow');

      if(currentHeight == trueHeight){
        jQuery('html, body').animate({
          scrollTop: $elementToCollapse.offset().top + collapseHeight
        }, 'slow');
      }
    });
  }
};
/*1.0*/
(function($) {
  $(document).ready(function() {

    var event_meta = $(".upcoming-event--register").data('ga-meta');
    if(event_meta){
      GoogleAnalytics.trackEvent('Upcoming Event Card', 'show', event_meta, 0, true);
    }

    $('.upcoming-event--register').click(function(){
      GoogleAnalytics.trackEvent('Upcoming Event Card', 'click', event_meta);
    });

  });
})(jQuery);
/*1.0*/
(function($) {
  $(document).ready(function() {
    $("[data-subscription-bttn='snap']").each(function() {
      $(this).data("bttnHandler", new ContentSubBttn($(this)));
    });
  });

  ContentSubBttn = function($element) {
    this.init($element);
  };

  ContentSubBttn.template = _.template("<a class='sui-bttn' data-action='subscribe-content' href='<%- subscription_path %>'>\
    <i class='sui-icon sui-icon-email sui-icon--gray sui-icon--16 '></i>\
    <span class='bttn-text'><%- subscribed ? 'Unsubscribe from Snap!' : 'Subscribe to Snap!' %></span>\
  </a>");

  ContentSubBttn.prototype = {
    init: function($element) {
      this.$wrapper = $element;
      if(this.$wrapper.find("[data-action='subscribe-content']").length > 0) {
        this.subscribed = this.$wrapper.data("subscribed");
        this.bindBttnEvents();
      }
      else {
        this.$wrapper.empty();
        this.subscribed = false;
        if(User.kind !== "guest") {
          this.getSubscriptionData();
        }
        else {
          this.initBttnTemplate();
        }
      }
    },
    getSubscriptionData: function() {
      var _this = this;
      $.get("/api/v2/subscriptions/snap")
      .done(function(data) {
        _this.subscribed = data.subscribed;
      })
      .always(function() {
        _this.initBttnTemplate();
      });
    },
    initBttnTemplate: function() {
      this.$wrapper.append(ContentSubBttn.template({
        subscribed: this.subscribed,
        subscription_path: User.kind !== "guest" ? "/profile/toggle_snap_subscription" : "#",
      }));
      this.bindBttnEvents();
    },
    bindBttnEvents: function() {
      this.$subBttn = this.$wrapper.find("[data-action='subscribe-content']");
      if(User.kind !== "guest") {
        this.$subBttnText = this.$subBttn.find(".bttn-text");
        this.$subBttn.click( $.proxy( this.subscribe, this ) );
      }
      else {
        this.$subBttn.click(function(event) {
          event.preventDefault();
          JoinAndLogin.showLogin();
        });
      }
    },
    subscribe: function(event) {
      event.preventDefault();
      var _this = this;
      $.post($(event.currentTarget).attr("href"))
      .done(function(data, status, jqXHR) {
        $UI.growl({type: "success", caption: data.message});
        _this.subscribed = !_this.subscribed;
        _this.toggleBttnState();
      })
      .fail(function(data, status, jqXHR) {
        try {
          var errorData = JSON.parse(data.responseText);
          $UI.growl({type: "error", caption: errorData.error});
        }
        catch(e) {
          UIHelpers.showUnhandledError();
        }
      });
    },
    toggleBttnState: function() {
      if(this.subscribed) {
        this.$subBttnText.text("Unsubscribe from Snap!");
      }
      else {
        this.$subBttnText.text("Subscribe to Snap!");
      }
    }
  };
})(jQuery);
/*1.0*/
(function($) {
  $(document).ready(function() {
    var $notice = $("[data-unverified-notice]");
    if($notice.length > 0) {
      $notice.each(function() {
        $(this).data("noticeHandler", new UnverifiedNotice($(this)));
      });
    }
  });

  UnverifiedNotice = function($element) {
    this.init($element);
  }

  UnverifiedNotice.prototype = {
    init: function($element) {
      this.$noticeWrapper = $element;
      this.noticeType = this.$noticeWrapper.data("unverified-notice");
      this.$resendEmail = this.$noticeWrapper.find("[data-action='resend-email']");
      this.$noticeDismiss = this.$noticeWrapper.find("[data-notice-dismiss]");

      this.handleEmailResend();
      this.handlePopupDismiss();

      if(this.noticeType === "reply-form") {
        this.$replyField = $("[data-field='reply-text']");
        this.handlePopupShow();
      }
    },
    handleEmailResend: function() {
      this.$resendEmail.off("click");
      this.$resendEmail.click(function(event) {
        event.preventDefault();
        var resendUrl = event.currentTarget.href;
        $.get(resendUrl)
        .success(function(data) {
          if(data.verified) {
            $UI.growl({
              caption: "Your email address has been verified",
              type: "success"
            });
            setTimeout(function() {
              window.location = "/";
            }, 2000);
          }
          else {
            $UI.growl({
              caption: "New verification email has sent",
              type: "success"
            });
          }
        })
        .fail(function(data, status, jqXHR) {
          try {
            var errorData = JSON.parse(data.responseText);
            window.location = errorData.redirect_to;
          }
          catch(e) {
            window.location = resendUrl;
          }
        });
      });
    },
    handlePopupShow: function() {
      var _this = this;
      this.$replyField.focus(function(event) {
        _this.showPopup();
      })
    },
    handlePopupDismiss: function() {
      var _this = this;
      this.$noticeDismiss.click(function(event) {
        event.preventDefault();
        _this.hidePopup()
      });
    },
    showPopup: function() {
      var $notice = this.$noticeWrapper;
      if($notice.is(".hidden")) {
        $notice.css("top", "").css("bottom", "");
        $notice.removeClass("hidden");
        $notice.animate({top: "-=70"}, 300, function() {
          $notice.animate({top: "+=20"}, 150);
        });
      }
    },
    hidePopup: function() {
      if(this.noticeType === "reply-form") {
        this.$noticeWrapper.addClass("hidden");
      }
      else {
        this.$noticeWrapper.fadeOut(300);
      }
    }
  }
})(jQuery);
